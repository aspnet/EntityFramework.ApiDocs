<Type Name="PropertyMapping" FullName="System.Data.Entity.Core.Mapping.PropertyMapping">
  <TypeSignature Language="C#" Value="public abstract class PropertyMapping : System.Data.Entity.Core.Mapping.MappingItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyMapping extends System.Data.Entity.Core.Mapping.MappingItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Mapping.PropertyMapping" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyMapping&#xA;Inherits MappingItem" />
  <TypeSignature Language="F#" Value="type PropertyMapping = class&#xA;    inherit MappingItem" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Mapping.MappingItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Mapping metadata for all types of property mappings.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            For Example if conceptually you could represent the CS MSL file as following
            --Mapping
            --EntityContainerMapping ( CNorthwind--&gt;SNorthwind )
            --EntitySetMapping
            --EntityTypeMapping
            --MappingFragment
            --EntityKey
            --ScalarPropertyMap
            --ScalarPropertyMap
            --EntityTypeMapping
            --MappingFragment
            --EntityKey
            --ScalarPropertyMap
            --ComplexPropertyMap
            --ScalarPropertyMap
            --ScalarPropertyMap
            --ScalarPropertyMap
            --AssociationSetMapping
            --AssociationTypeMapping
            --MappingFragment
            --EndPropertyMap
            --ScalarPropertyMap
            --ScalarPropertyMap
            --EndPropertyMap
            --ScalarPropertyMap
            This class represents the metadata for all property map elements in the
            above example. This includes the scalar property maps, complex property maps
            and end property maps.
            </example>
  </Docs>
  <Members>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Metadata.Edm.EdmProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EdmProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.PropertyMapping.Property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Property As EdmProperty" />
      <MemberSignature Language="F#" Value="member this.Property : System.Data.Entity.Core.Metadata.Edm.EdmProperty" Usage="System.Data.Entity.Core.Mapping.PropertyMapping.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716:IdentifiersShouldNotMatchKeywords", MessageId="Property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EdmProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an EdmProperty that specifies the mapped property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>