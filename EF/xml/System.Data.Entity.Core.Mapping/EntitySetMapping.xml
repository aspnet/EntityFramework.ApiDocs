<Type Name="EntitySetMapping" FullName="System.Data.Entity.Core.Mapping.EntitySetMapping">
  <TypeSignature Language="C#" Value="public class EntitySetMapping : System.Data.Entity.Core.Mapping.EntitySetBaseMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntitySetMapping extends System.Data.Entity.Core.Mapping.EntitySetBaseMapping" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Mapping.EntitySetMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class EntitySetMapping&#xA;Inherits EntitySetBaseMapping" />
  <TypeSignature Language="F#" Value="type EntitySetMapping = class&#xA;    inherit EntitySetBaseMapping" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Mapping.EntitySetBaseMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the Mapping metadata for an EntitySet in CS space.
            </summary>
    <remarks>To be added.</remarks>
    <example>
            For Example if conceptually you could represent the CS MSL file as following
            --Mapping
            --EntityContainerMapping ( CNorthwind--&gt;SNorthwind )
            --EntitySetMapping
            --EntityTypeMapping
            --MappingFragment
            --EntityTypeMapping
            --MappingFragment
            --AssociationSetMapping
            --AssociationTypeMapping
            --MappingFragment
            This class represents the metadata for the EntitySetMapping elements in the
            above example. And it is possible to access the EntityTypeMaps underneath it.
            </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntitySetMapping (System.Data.Entity.Core.Metadata.Edm.EntitySet entitySet, System.Data.Entity.Core.Mapping.EntityContainerMapping containerMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.EntitySet entitySet, class System.Data.Entity.Core.Mapping.EntityContainerMapping containerMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntitySetMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntitySet,System.Data.Entity.Core.Mapping.EntityContainerMapping)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Mapping.EntitySetMapping : System.Data.Entity.Core.Metadata.Edm.EntitySet * System.Data.Entity.Core.Mapping.EntityContainerMapping -&gt; System.Data.Entity.Core.Mapping.EntitySetMapping" Usage="new System.Data.Entity.Core.Mapping.EntitySetMapping (entitySet, containerMapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Entity.Core.Metadata.Edm.EntitySet" />
        <Parameter Name="containerMapping" Type="System.Data.Entity.Core.Mapping.EntityContainerMapping" />
      </Parameters>
      <Docs>
        <param name="entitySet">The entity set to be mapped.</param>
        <param name="containerMapping">The parent container mapping.</param>
        <summary>
            Initialiazes a new EntitySetMapping instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModificationFunctionMapping">
      <MemberSignature Language="C#" Value="public void AddModificationFunctionMapping (System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping modificationFunctionMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddModificationFunctionMapping(class System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping modificationFunctionMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntitySetMapping.AddModificationFunctionMapping(System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddModificationFunctionMapping (modificationFunctionMapping As EntityTypeModificationFunctionMapping)" />
      <MemberSignature Language="F#" Value="member this.AddModificationFunctionMapping : System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping -&gt; unit" Usage="entitySetMapping.AddModificationFunctionMapping modificationFunctionMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationFunctionMapping" Type="System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping" />
      </Parameters>
      <Docs>
        <param name="modificationFunctionMapping">The function mapping to add.</param>
        <summary>
            Adds a function mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeMapping">
      <MemberSignature Language="C#" Value="public void AddTypeMapping (System.Data.Entity.Core.Mapping.EntityTypeMapping typeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeMapping(class System.Data.Entity.Core.Mapping.EntityTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntitySetMapping.AddTypeMapping(System.Data.Entity.Core.Mapping.EntityTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeMapping (typeMapping As EntityTypeMapping)" />
      <MemberSignature Language="F#" Value="member this.AddTypeMapping : System.Data.Entity.Core.Mapping.EntityTypeMapping -&gt; unit" Usage="entitySetMapping.AddTypeMapping typeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="System.Data.Entity.Core.Mapping.EntityTypeMapping" />
      </Parameters>
      <Docs>
        <param name="typeMapping">The type mapping to add.</param>
        <summary>
            Adds a type mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.EntitySet EntitySet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EntitySet EntitySet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntitySetMapping.EntitySet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySet As EntitySet" />
      <MemberSignature Language="F#" Value="member this.EntitySet : System.Data.Entity.Core.Metadata.Edm.EntitySet" Usage="System.Data.Entity.Core.Mapping.EntitySetMapping.EntitySet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the entity set that is mapped.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeMappings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeMapping&gt; EntityTypeMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Mapping.EntityTypeMapping&gt; EntityTypeMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntitySetMapping.EntityTypeMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeMappings As ReadOnlyCollection(Of EntityTypeMapping)" />
      <MemberSignature Language="F#" Value="member this.EntityTypeMappings : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeMapping&gt;" Usage="System.Data.Entity.Core.Mapping.EntitySetMapping.EntityTypeMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the contained entity type mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationFunctionMappings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping&gt; ModificationFunctionMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping&gt; ModificationFunctionMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntitySetMapping.ModificationFunctionMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModificationFunctionMappings As ReadOnlyCollection(Of EntityTypeModificationFunctionMapping)" />
      <MemberSignature Language="F#" Value="member this.ModificationFunctionMappings : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping&gt;" Usage="System.Data.Entity.Core.Mapping.EntitySetMapping.ModificationFunctionMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the corresponding function mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveModificationFunctionMapping">
      <MemberSignature Language="C#" Value="public void RemoveModificationFunctionMapping (System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping modificationFunctionMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveModificationFunctionMapping(class System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping modificationFunctionMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntitySetMapping.RemoveModificationFunctionMapping(System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveModificationFunctionMapping (modificationFunctionMapping As EntityTypeModificationFunctionMapping)" />
      <MemberSignature Language="F#" Value="member this.RemoveModificationFunctionMapping : System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping -&gt; unit" Usage="entitySetMapping.RemoveModificationFunctionMapping modificationFunctionMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationFunctionMapping" Type="System.Data.Entity.Core.Mapping.EntityTypeModificationFunctionMapping" />
      </Parameters>
      <Docs>
        <param name="modificationFunctionMapping">The function mapping to remove.</param>
        <summary>
            Removes a function mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTypeMapping">
      <MemberSignature Language="C#" Value="public void RemoveTypeMapping (System.Data.Entity.Core.Mapping.EntityTypeMapping typeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveTypeMapping(class System.Data.Entity.Core.Mapping.EntityTypeMapping typeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntitySetMapping.RemoveTypeMapping(System.Data.Entity.Core.Mapping.EntityTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveTypeMapping (typeMapping As EntityTypeMapping)" />
      <MemberSignature Language="F#" Value="member this.RemoveTypeMapping : System.Data.Entity.Core.Mapping.EntityTypeMapping -&gt; unit" Usage="entitySetMapping.RemoveTypeMapping typeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapping" Type="System.Data.Entity.Core.Mapping.EntityTypeMapping" />
      </Parameters>
      <Docs>
        <param name="typeMapping">The type mapping to remove.</param>
        <summary>
            Removes a type mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>