<Type Name="SpatialEdmFunctions" FullName="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions">
  <TypeSignature Language="C#" Value="public static class SpatialEdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SpatialEdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module SpatialEdmFunctions" />
  <TypeSignature Language="F#" Value="type SpatialEdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides an API to construct <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />s that invoke spatial related canonical EDM functions, and, where appropriate, allows that API to be accessed as extension methods on the expression type itself.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Area">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Area (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Area(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Area (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Area : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Area spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial surface value for which the area should be calculated.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Area' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the area of spatialValue or null if spatialValue is not a surface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsBinary (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsBinary (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member AsBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsBinary spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial value from which the well known binary representation should be produced.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AsBinary' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Binary.
            </summary>
        <returns>A new DbFunctionExpression that returns the well known binary representation of spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsGml">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsGml (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsGml(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsGml (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member AsGml : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsGml spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Gml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial value from which the Geography Markup Language (GML) representation should be produced.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AsGml' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.String.
            </summary>
        <returns>A new DbFunctionExpression that returns the Geography Markup Language (GML) representation of spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsText (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression AsText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsText (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member AsText : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.AsText spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial value from which the well known text representation should be produced.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AsText' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.String.
            </summary>
        <returns>A new DbFunctionExpression that returns the well known text representation of spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Centroid">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Centroid (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Centroid(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Centroid (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Centroid : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Centroid geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Standard bame", MessageId="Centroid")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry surface value from which the centroid should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Centroid' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns either the centroid point of geometryValue (which may not be on the surface itself) or null if geometryValue is not a surface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CoordinateSystemId">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression CoordinateSystemId (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression CoordinateSystemId(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CoordinateSystemId (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member CoordinateSystemId : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.CoordinateSystemId spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the value from which the coordinate system id (SRID) should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CoordinateSystemId' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Int32.
            </summary>
        <returns>A new DbFunctionExpression that returns the integer SRID value from spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Distance (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Distance(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distance (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Distance : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Distance (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value from which the distance from spatialValue1 should be measured.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Distance' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type.  The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns the distance between the closest points in spatialValue1 and spatialValue1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Elevation (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Elevation(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Elevation (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Elevation : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Elevation spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial point value from which the elevation (Z co-ordinate) value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Elevation' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the elevation value of spatialValue or null if spatialValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPoint">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression EndPoint (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression EndPoint(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndPoint (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member EndPoint : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.EndPoint spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial curve value from which the end point should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type is the same as that of spatialValue.
            </summary>
        <returns>A new DbFunctionExpression that returns either the end point of spatialValue or null if spatialValue is not a curve.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExteriorRing">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression ExteriorRing (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression ExteriorRing(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ExteriorRing (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member ExteriorRing : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.ExteriorRing geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">The geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ExteriorRing' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns either the exterior ring of the polygon geometryValue or null if geometryValue is not a polygon.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyCollectionFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyCollectionFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyCollectionWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyCollectionFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyCollectionWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyCollectionFromBinary (geographyCollectionWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyCollectionFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromBinary (geographyCollectionWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyCollectionWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geographyCollectionWellKnownBinaryValue">An expression that provides the well known binary representation of the geography collection value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography collection value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyCollectionFromBinary' function with the specified arguments. geographyCollectionWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography collection value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyCollectionFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyCollectionFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyCollectionWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyCollectionFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyCollectionWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyCollectionFromText (geographyCollectionWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyCollectionFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyCollectionFromText (geographyCollectionWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyCollectionWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geographyCollectionWellKnownText">An expression that provides the well known text representation of the geography collection value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography collection value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyCollectionFromText' function with the specified arguments. geographyCollectionWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography collection value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromBinary (wellKnownBinaryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary wellKnownBinaryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownBinaryValue">An expression that provides the well known binary representation of the geography value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromBinary' function with the specified argument, which must have a binary result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified binary value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromBinary (wellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromBinary (wellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownBinaryValue">An expression that provides the well known binary representation of the geography value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromBinary' function with the specified arguments. wellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromGml">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromGml (System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromGml(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromGml (geographyMarkup As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromGml : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml geographyMarkup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Gml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyMarkup" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geographyMarkup">An expression that provides the Geography Markup Language (GML) representation of the geography value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromGml' function with the specified argument, which must have a string result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified value with the default coordinate system id (SRID) of the underlying provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromGml">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromGml (System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyMarkup, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromGml(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyMarkup, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromGml (geographyMarkup As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromGml : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromGml (geographyMarkup, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Gml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyMarkup" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geographyMarkup">An expression that provides the Geography Markup Language (GML) representation of the geography value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromGml' function with the specified arguments. geographyMarkup must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromText (wellKnownText As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText wellKnownText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownText">An expression that provides the well known text representation of the geography value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromText' function with the specified argument, which must have a string result type. The result type of the expression is Edm.Geography. Its value has the default coordinate system id (SRID) of the underlying provider.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyFromText (wellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyFromText (wellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownText">An expression that provides the well known text representation of the geography value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyFromText' function with the specified arguments. wellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyLineFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyLineFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyLineFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyLineFromBinary (lineWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyLineFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromBinary (lineWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="lineWellKnownBinaryValue">An expression that provides the well known binary representation of the geography line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyLineFromBinary' function with the specified arguments. lineWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyLineFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyLineFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyLineFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyLineFromText (lineWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyLineFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyLineFromText (lineWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="lineWellKnownText">An expression that provides the well known text representation of the geography line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyLineFromText' function with the specified arguments. lineWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiLineFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiLineFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiLineFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiLineFromBinary (multiLineWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiLineFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromBinary (multiLineWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiLine")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiLine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiLineWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiLineWellKnownBinaryValue">An expression that provides the well known binary representation of the geography multi-line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiLineFromBinary' function with the specified arguments. multiLineWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiLineFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiLineFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiLineFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiLineFromText (multiLineWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiLineFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiLineFromText (multiLineWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiLine")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiLine")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiLineWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiLineWellKnownText">An expression that provides the well known text representation of the geography multi-line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiLineFromText' function with the specified arguments. multiLineWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiPointFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPointFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPointFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiPointFromBinary (multiPointWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiPointFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromBinary (multiPointWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiPoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPointWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPointWellKnownBinaryValue">An expression that provides the well known binary representation of the geography multi-point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiPointFromBinary' function with the specified arguments. multiPointWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiPointFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPointFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPointFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiPointFromText (multiPointWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiPointFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPointFromText (multiPointWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPointWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPointWellKnownText">An expression that provides the well known text representation of the geography multi-point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiPointFromText' function with the specified arguments. multiPointWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiPolygonFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPolygonFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPolygonFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiPolygonFromBinary (multiPolygonWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiPolygonFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromBinary (multiPolygonWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPolygonWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPolygonWellKnownBinaryValue">An expression that provides the well known binary representation of the geography multi-polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiPolygonFromBinary' function with the specified arguments. multiPolygonWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyMultiPolygonFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPolygonFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyMultiPolygonFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyMultiPolygonFromText (multiPolygonWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyMultiPolygonFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyMultiPolygonFromText (multiPolygonWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPolygonWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPolygonWellKnownText">An expression that provides the well known text representation of the geography multi-polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography multi-polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyMultiPolygonFromText' function with the specified arguments. multiPolygonWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography multi-polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyPointFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPointFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPointFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyPointFromBinary (pointWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyPointFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromBinary (pointWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="pointWellKnownBinaryValue">An expression that provides the well known binary representation of the geography point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography point value's coordinate systempointWellKnownBinaryValue.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyPointFromBinary' function with the specified arguments. pointWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyPointFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPointFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPointFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyPointFromText (pointWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyPointFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPointFromText (pointWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="pointWellKnownText">An expression that provides the well-known text representation of the geography point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography point value's coordinate systempointWellKnownTextValue.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyPointFromText' function with the specified arguments.
            </summary>
        <returns>The canonical 'GeographyPointFromText' function.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyPolygonFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPolygonFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPolygonFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyPolygonFromBinary (polygonWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyPolygonFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromBinary (polygonWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polygonWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="polygonWellKnownBinaryValue">An expression that provides the well known binary representation of the geography polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyPolygonFromBinary' function with the specified arguments. polygonWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeographyPolygonFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPolygonFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeographyPolygonFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeographyPolygonFromText (polygonWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeographyPolygonFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeographyPolygonFromText (polygonWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polygonWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="polygonWellKnownText">An expression that provides the well known text representation of the geography polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geography polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeographyPolygonFromText' function with the specified arguments. polygonWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geography.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geography polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryCollectionFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryCollectionFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryCollectionWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryCollectionFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryCollectionWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryCollectionFromBinary (geometryCollectionWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryCollectionFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromBinary (geometryCollectionWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryCollectionWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryCollectionWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry collection value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry collection value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryCollectionFromBinary' function with the specified arguments. geometryCollectionWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry collection value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryCollectionFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryCollectionFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryCollectionWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryCollectionFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryCollectionWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryCollectionFromText (geometryCollectionWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryCollectionFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryCollectionFromText (geometryCollectionWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryCollectionWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryCollectionWellKnownText">An expression that provides the well known text representation of the geometry collection value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry collection value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryCollectionFromText' function with the specified arguments. geometryCollectionWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry collection value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromBinary (wellKnownBinaryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary wellKnownBinaryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownBinaryValue">An expression that provides the well known binary representation of the geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromBinary' function with the specified argument, which must have a binary result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified binary value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromBinary (wellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromBinary (wellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownBinaryValue">An expression that provides the well known binary representation of the geometry value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromBinary' function with the specified arguments. wellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromGml">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromGml (System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromGml(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromGml (geometryMarkup As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromGml : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml geometryMarkup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Abbreviation more meaningful than what it stands for", MessageId="Gml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryMarkup" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryMarkup">An expression that provides the Geography Markup Language (GML) representation of the geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromGml' function with the specified argument, which must have a string result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified value with the default coordinate system id (SRID) of the underlying provider.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromGml">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromGml (System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryMarkup, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromGml(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryMarkup, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromGml (geometryMarkup As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromGml : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromGml (geometryMarkup, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Abbreviation more meaningful than what it stands for", MessageId="Gml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryMarkup" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryMarkup">An expression that provides the Geography Markup Language (GML) representation of the geometry value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromGml' function with the specified arguments. geometryMarkup must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromText (wellKnownText As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText wellKnownText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownText">An expression that provides the well known text representation of the geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromText' function with the specified argument, which must have a string result type. The result type of the expression is Edm.Geometry. Its value has the default coordinate system id (SRID) of the underlying provider.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression wellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryFromText (wellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryFromText (wellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="wellKnownText">An expression that provides the well known text representation of the geometry value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryFromText' function with the specified arguments. wellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryLineFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryLineFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryLineFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryLineFromBinary (lineWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryLineFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromBinary (lineWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="lineWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryLineFromBinary' function with the specified arguments. lineWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryLineFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryLineFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryLineFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression lineWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryLineFromText (lineWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryLineFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryLineFromText (lineWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="lineWellKnownText">An expression that provides the well known text representation of the geometry line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryLineFromText' function with the specified arguments. lineWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiLineFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiLineFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiLineFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiLineFromBinary (multiLineWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiLineFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromBinary (multiLineWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiLine")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiLine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiLineWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiLineWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry multi-line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiLineFromBinary' function with the specified arguments. multiLineWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiLineFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiLineFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiLineFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiLineWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiLineFromText (multiLineWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiLineFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiLineFromText (multiLineWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiLine")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiLine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiLineWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiLineWellKnownText">An expression that provides the well known text representation of the geometry multi-line value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-line value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiLineFromText' function with the specified arguments. multiLineWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-line value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiPointFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPointFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPointFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiPointFromBinary (multiPointWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiPointFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromBinary (multiPointWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiPoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPointWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPointWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry multi-point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiPointFromBinary' function with the specified arguments. multiPointWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiPointFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPointFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPointFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPointWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiPointFromText (multiPointWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiPointFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPointFromText (multiPointWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="MultiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification="Match OGC, EDM", MessageId="multiPoint")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPointWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPointWellKnownText">An expression that provides the well known text representation of the geometry multi-point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiPointFromText' function with the specified arguments. multiPointWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiPolygonFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPolygonFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPolygonFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiPolygonFromBinary (multiPolygonWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiPolygonFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromBinary (multiPolygonWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPolygonWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPolygonWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry multi-polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiPolygonFromBinary' function with the specified arguments. multiPolygonWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryMultiPolygonFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPolygonFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryMultiPolygonFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression multiPolygonWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryMultiPolygonFromText (multiPolygonWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryMultiPolygonFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryMultiPolygonFromText (multiPolygonWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="Multi")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", Justification="Match OGC, EDM", MessageId="multi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiPolygonWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="multiPolygonWellKnownText">An expression that provides the well known text representation of the geometry multi-polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry multi-polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryMultiPolygonFromText' function with the specified arguments. multiPolygonWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry multi-polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryPointFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPointFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPointFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryPointFromBinary (pointWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryPointFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromBinary (pointWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="pointWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryPointFromBinary' function with the specified arguments. pointWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryPointFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPointFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPointFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression pointWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryPointFromText (pointWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryPointFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPointFromText (pointWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="pointWellKnownText">An expression that provides the well known text representation of the geometry point value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry point value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryPointFromText' function with the specified arguments. pointWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry point value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryPolygonFromBinary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPolygonFromBinary (System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownBinaryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPolygonFromBinary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownBinaryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromBinary(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryPolygonFromBinary (polygonWellKnownBinaryValue As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryPolygonFromBinary : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromBinary (polygonWellKnownBinaryValue, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polygonWellKnownBinaryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="polygonWellKnownBinaryValue">An expression that provides the well known binary representation of the geometry polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryPolygonFromBinary' function with the specified arguments. polygonWellKnownBinaryValue must have a binary result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeometryPolygonFromText">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPolygonFromText (System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownText, System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression GeometryPolygonFromText(class System.Data.Entity.Core.Common.CommandTrees.DbExpression polygonWellKnownText, class System.Data.Entity.Core.Common.CommandTrees.DbExpression coordinateSystemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromText(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeometryPolygonFromText (polygonWellKnownText As DbExpression, coordinateSystemId As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member GeometryPolygonFromText : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.GeometryPolygonFromText (polygonWellKnownText, coordinateSystemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="polygonWellKnownText" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="coordinateSystemId" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="polygonWellKnownText">An expression that provides the well known text representation of the geometry polygon value.</param>
        <param name="coordinateSystemId">An expression that provides the coordinate system id (SRID) of the geometry polygon value's coordinate system.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GeometryPolygonFromText' function with the specified arguments. polygonWellKnownText must have a string result type, while coordinateSystemId must have an integer numeric result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a new geometry polygon value based on the specified values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteriorRingAt">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression InteriorRingAt (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression InteriorRingAt(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InteriorRingAt (geometryValue As DbExpression, indexValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member InteriorRingAt : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingAt (geometryValue, indexValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="indexValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue">The geometry value.</param>
        <param name="indexValue">An expression that specifies the position of the interior ring to be retrieved from within the polygon.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'InteriorRingAt' function with the specified arguments. The first argument must have an Edm.Geometry result type. The second argument must have an integer numeric result types. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns either the interior ring at position indexValue in geometryValue or null if geometryValue is not a polygon.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteriorRingCount">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression InteriorRingCount (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression InteriorRingCount(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InteriorRingCount (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member InteriorRingCount : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.InteriorRingCount geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">The geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'InteriorRingCount' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Int32.
            </summary>
        <returns>A new DbFunctionExpression that returns either the number of interior rings in the polygon geometryValue or null if geometryValue is not a polygon.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosedSpatial">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsClosedSpatial (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsClosedSpatial(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClosedSpatial (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member IsClosedSpatial : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsClosedSpatial spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial curve value from which the IsClosedSpatial value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IsClosedSpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns either a Boolean value indicating whether spatialValue is closed, or null if spatialValue is not a curve.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptySpatial">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsEmptySpatial (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsEmptySpatial(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmptySpatial (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member IsEmptySpatial : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsEmptySpatial spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial value from which the IsEmptySpatial value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IsEmptySpatial' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether spatialValue is empty.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRing">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsRing (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsRing(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsRing (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member IsRing : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsRing geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry curve value from which the IsRing value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IsRing' function with the specified argument, which must have an Edm.Geometry result type. The result type is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns either a Boolean value indicating whether geometryValue is a ring (both closed and simple), or null if geometryValue is not a curve.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSimpleGeometry">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsSimpleGeometry (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsSimpleGeometry(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsSimpleGeometry (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member IsSimpleGeometry : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsSimpleGeometry geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">The geometry value.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IsSimpleGeometry' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue is a simple geometry.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidGeometry">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsValidGeometry (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression IsValidGeometry(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsValidGeometry (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member IsValidGeometry : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.IsValidGeometry geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry value which should be tested for spatial validity.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IsValidGeometry' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue is valid.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Latitude">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Latitude (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Latitude(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Latitude (geographyValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Latitude : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Latitude geographyValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geographyValue">An expression that specifies the geography point value from which the Latitude value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Latitude' function with the specified argument, which must have an Edm.Geography result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the Latitude value of geographyValue or null if geographyValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Longitude">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Longitude (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Longitude(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geographyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Longitude (geographyValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Longitude : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Longitude geographyValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geographyValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geographyValue">An expression that specifies the geography point value from which the Longitude value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Longitude' function with the specified argument, which must have an Edm.Geography result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the Longitude value of geographyValue or null if geographyValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Measure (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression Measure(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Measure (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member Measure : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.Measure spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial point value from which the Measure (M) co-ordinate value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Measure' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the Measure of spatialValue or null if spatialValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointAt">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointAt (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointAt(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PointAt (spatialValue As DbExpression, indexValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member PointAt : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointAt (spatialValue, indexValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="indexValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial line string value.</param>
        <param name="indexValue">An expression that specifies the position of the point to be retrieved from within the line string.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'PointAt' function with the specified arguments. The first argument must have an Edm.Geography or Edm.Geometry result type. The second argument must have an integer numeric result type. The result type of the expression is the same as that of spatialValue.
            </summary>
        <returns>A new DbFunctionExpression that returns either the point at position indexValue in spatialValue or null if spatialValue is not a line string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointCount (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointCount(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PointCount (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member PointCount : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointCount spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial line string value from which the number of points should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'PointCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Int32.
            </summary>
        <returns>A new DbFunctionExpression that returns either the number of points in spatialValue or null if spatialValue is not a line string.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointOnSurface">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointOnSurface (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression PointOnSurface(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function PointOnSurface (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member PointOnSurface : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.PointOnSurface geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry surface value from which the point should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'PointOnSurface' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns either a point guaranteed to be on the surface geometryValue or null if geometryValue is not a surface.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialBoundary">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialBoundary (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialBoundary(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialBoundary (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialBoundary : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBoundary geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry value from which the SpatialBoundary value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialBoundary' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns the boundary for geometryValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialBuffer">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialBuffer (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression distance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialBuffer(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression distance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialBuffer (spatialValue As DbExpression, distance As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialBuffer : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialBuffer (spatialValue, distance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="distance" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial value.</param>
        <param name="distance">An expression that specifies the buffer distance.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialBuffer' function with the specified arguments, which must have a Edm.Geography or Edm.Geometry and Edm.Double result types. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns a geometry value representing all points less than or equal to distance from spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialContains">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialContains (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialContains(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialContains (geometryValue1 As DbExpression, geometryValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialContains : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialContains (geometryValue1, geometryValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialContains' function with the specified arguments, which must each have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 spatially contains geometryValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialConvexHull">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialConvexHull (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialConvexHull(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialConvexHull (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialConvexHull : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialConvexHull geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry value from which the convex hull value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialConvexHull' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns the convex hull for geometryValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialCrosses">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialCrosses (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialCrosses(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialCrosses (geometryValue1 As DbExpression, geometryValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialCrosses : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialCrosses (geometryValue1, geometryValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialCrosses' function with the specified arguments, which must each have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 crosses geometryValue2 intersect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialDifference">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDifference (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDifference(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialDifference (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialDifference : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDifference (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value for which the difference with spatialValue1 should be computed.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is the same as the type of spatialValue1 and spatialValue2.
            </summary>
        <returns>A new DbFunctionExpression that returns the geometry value representing the difference of spatialValue2 with spatialValue1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialDimension">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDimension (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDimension(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialDimension (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialDimension : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDimension spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the value from which the Dimension value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialDimension' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Int32.
            </summary>
        <returns>A new DbFunctionExpression that returns the Dimension value from spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialDisjoint">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDisjoint (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialDisjoint(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialDisjoint (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialDisjoint : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialDisjoint (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value that should be compared with spatialValue1 for disjointness.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialDisjoint' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether spatialValue1 and spatialValue2 are spatially disjoint.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialElementAt">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialElementAt (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialElementAt(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue, class System.Data.Entity.Core.Common.CommandTrees.DbExpression indexValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialElementAt (spatialValue As DbExpression, indexValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialElementAt : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementAt (spatialValue, indexValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="indexValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the geography or geometry collection value.</param>
        <param name="indexValue">An expression that specifies the position of the element to be retrieved from within the geometry or geography collection.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialElementAt' function with the specified arguments. The first argument must have an Edm.Geography or Edm.Geometry result type. The second argument must have an integer numeric result type. The result type of the expression is the same as that of spatialValue.
            </summary>
        <returns>A new DbFunctionExpression that returns either the collection element at position indexValue in spatialValue or null if spatialValue is not a collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialElementCount">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialElementCount (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialElementCount(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialElementCount (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialElementCount : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialElementCount spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the geography or geometry collection value from which the number of elements should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialElementCount' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Int32.
            </summary>
        <returns>A new DbFunctionExpression that returns either the number of elements in spatialValue or null if spatialValue is not a collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialEnvelope">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialEnvelope (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialEnvelope(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialEnvelope (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialEnvelope : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEnvelope geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the value from which the Envelope value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialEnvelope' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Geometry.
            </summary>
        <returns>A new DbFunctionExpression that returns the minimum bounding box for geometryValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialEquals">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialEquals (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialEquals(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialEquals (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialEquals : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialEquals (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value that should be compared with spatialValue1 for equality.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialEquals' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether spatialValue1 and spatialValue2 are equal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialIntersection">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialIntersection (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialIntersection(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialIntersection (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialIntersection : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersection (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value for which the intersection with spatialValue1 should be computed.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialIntersection' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is the same as the type of spatialValue1 and spatialValue2.
            </summary>
        <returns>A new DbFunctionExpression that returns the spatial value representing the intersection of spatialValue1 and spatialValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialIntersects">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialIntersects (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialIntersects(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialIntersects (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialIntersects : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialIntersects (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value that should be compared with spatialValue1 for intersection.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialIntersects' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether spatialValue1 and spatialValue2 intersect.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialLength">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialLength (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialLength(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialLength (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialLength : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialLength spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial curve value from which the length should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialLength' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the length of spatialValue or null if spatialValue is not a curve.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialOverlaps">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialOverlaps (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialOverlaps(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialOverlaps (geometryValue1 As DbExpression, geometryValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialOverlaps : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialOverlaps (geometryValue1, geometryValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialOverlaps' function with the specified arguments, which must each have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 spatially overlaps geometryValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialRelate">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialRelate (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2, System.Data.Entity.Core.Common.CommandTrees.DbExpression intersectionPatternMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialRelate(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2, class System.Data.Entity.Core.Common.CommandTrees.DbExpression intersectionPatternMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialRelate (geometryValue1 As DbExpression, geometryValue2 As DbExpression, intersectionPatternMatrix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialRelate : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialRelate (geometryValue1, geometryValue2, intersectionPatternMatrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
        <Parameter Name="intersectionPatternMatrix" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <param name="intersectionPatternMatrix">An expression that specifies the text representation of the Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern used to compare geometryValue1 and geometryValue2.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialRelate' function with the specified arguments, which must have Edm.Geometry and string result types. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 is spatially related to geometryValue2 according to the spatial relationship designated by intersectionPatternMatrix.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialSymmetricDifference">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialSymmetricDifference (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialSymmetricDifference(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialSymmetricDifference (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialSymmetricDifference : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialSymmetricDifference (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value for which the symmetric difference with spatialValue1 should be computed.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialSymmetricDifference' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is the same as the type of spatialValue1 and spatialValue2.
            </summary>
        <returns>A new DbFunctionExpression that returns the geometry value representing the symmetric difference of spatialValue2 with spatialValue1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialTouches">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialTouches (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialTouches(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialTouches (geometryValue1 As DbExpression, geometryValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialTouches : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTouches (geometryValue1, geometryValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialTouches' function with the specified arguments, which must each have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 touches geometryValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialTypeName">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialTypeName (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialTypeName(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialTypeName (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialTypeName : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialTypeName spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the value from which the Geometry Type name should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialTypeName' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type of the expression is Edm.String.
            </summary>
        <returns>A new DbFunctionExpression that returns the string Geometry Type name from spatialValue.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialUnion">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialUnion (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialUnion(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialUnion (spatialValue1 As DbExpression, spatialValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialUnion : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialUnion (spatialValue1, spatialValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="spatialValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="spatialValue1">An expression that specifies the first spatial value.</param>
        <param name="spatialValue2">An expression that specifies the spatial value for which the union with spatialValue1 should be computed.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialUnion' function with the specified arguments, which must each have an Edm.Geography or Edm.Geometry result type. The result type of spatialValue1 must match the result type of spatialValue2. The result type of the expression is the same as the type of spatialValue1 and spatialValue2.
            </summary>
        <returns>A new DbFunctionExpression that returns the spatial value representing the union of spatialValue1 and spatialValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpatialWithin">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialWithin (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression SpatialWithin(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue1, class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin(System.Data.Entity.Core.Common.CommandTrees.DbExpression,System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SpatialWithin (geometryValue1 As DbExpression, geometryValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member SpatialWithin : System.Data.Entity.Core.Common.CommandTrees.DbExpression * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.SpatialWithin (geometryValue1, geometryValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue1" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="geometryValue2" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="geometryValue1">An expression that specifies the first geometry value.</param>
        <param name="geometryValue2">An expression that specifies the geometry value that should be compared with geometryValue1.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'SpatialWithin' function with the specified arguments, which must each have an Edm.Geometry result type. The result type of the expression is Edm.Boolean.
            </summary>
        <returns>A new DbFunctionExpression that returns a Boolean value indicating whether geometryValue1 is spatially within geometryValue2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartPoint">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression StartPoint (this System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression StartPoint(class System.Data.Entity.Core.Common.CommandTrees.DbExpression spatialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartPoint (spatialValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member StartPoint : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.StartPoint spatialValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spatialValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="spatialValue">An expression that specifies the spatial curve value from which the start point should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartPoint' function with the specified argument, which must have an Edm.Geography or Edm.Geometry result type. The result type is the same as that of spatialValue.
            </summary>
        <returns>A new DbFunctionExpression that returns either the start point of spatialValue or null if spatialValue is not a curve.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XCoordinate">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression XCoordinate (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression XCoordinate(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XCoordinate (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member XCoordinate : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.XCoordinate geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry point value from which the X co-ordinate value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'XCoordinate' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the X co-ordinate value of geometryValue or null if geometryValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YCoordinate">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression YCoordinate (this System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression YCoordinate(class System.Data.Entity.Core.Common.CommandTrees.DbExpression geometryValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function YCoordinate (geometryValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="F#" Value="static member YCoordinate : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder.Spatial.SpatialEdmFunctions.YCoordinate geometryValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometryValue" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="geometryValue">An expression that specifies the geometry point value from which the Y co-ordinate value should be retrieved.</param>
        <summary>
            Creates a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'YCoordinate' function with the specified argument, which must have an Edm.Geometry result type. The result type of the expression is Edm.Double.
            </summary>
        <returns>A new DbFunctionExpression that returns either the Y co-ordinate value of geometryValue or null if geometryValue is not a point.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>