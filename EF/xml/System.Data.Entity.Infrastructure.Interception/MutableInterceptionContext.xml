<Type Name="MutableInterceptionContext" FullName="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext">
  <TypeSignature Language="C#" Value="public abstract class MutableInterceptionContext : System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MutableInterceptionContext extends System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MutableInterceptionContext&#xA;Inherits DbInterceptionContext" />
  <TypeSignature Language="F#" Value="type MutableInterceptionContext = class&#xA;    inherit DbInterceptionContext" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents contextual information associated with calls that don't return any results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MutableInterceptionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a new <see cref="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" /> with no state.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MutableInterceptionContext (System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (copyFrom As DbInterceptionContext)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext : System.Data.Entity.Infrastructure.Interception.DbInterceptionContext -&gt; System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" Usage="new System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext copyFrom" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copyFrom" Type="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
      </Parameters>
      <Docs>
        <param name="copyFrom">The context from which to copy state.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" /> by copying immutable state from the given
            interception context. Also see <see cref="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.Clone" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsAsync">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext AsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext AsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.AsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AsAsync () As MutableInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.AsAsync : unit -&gt; System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" Usage="mutableInterceptionContext.AsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" /> that contains all the contextual information in this
            interception context together with the <see cref="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.IsAsync" /> flag set to true.
            </summary>
        <returns>A new interception context associated with the async flag set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mutableInterceptionContext.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If this property is set before the operation has executed, then execution of the operation will
            be suppressed and the set exception will be thrown instead. Otherwise, if the operation fails, then
            this property will be set to the exception that was thrown. In either case, interceptors that run
            after the operation can change this property to change the exception that will be thrown, or set this
            property to null to cause no exception to be thrown at all.
            </summary>
        <value>To be added.</value>
        <remarks>
            When an operation fails both this property and the <see cref="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.OriginalException" /> property are set
            to the exception that was thrown. However, the this property can be set or changed by
            interceptors, while the <see cref="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.OriginalException" /> property will always represent
            the original exception thrown.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUserState">
      <MemberSignature Language="C#" Value="public object FindUserState (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindUserState(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.FindUserState(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindUserState (key As String) As Object" />
      <MemberSignature Language="F#" Value="member this.FindUserState : string -&gt; obj" Usage="mutableInterceptionContext.FindUserState key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A key used to identify the user state.</param>
        <summary>
            Gets a value containing arbitrary user-specified state information associated with the operation.
            </summary>
        <returns>The user state set, or null if none was found for the given key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mutableInterceptionContext.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="mutableInterceptionContext.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsExecutionSuppressed">
      <MemberSignature Language="C#" Value="public bool IsExecutionSuppressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExecutionSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.IsExecutionSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExecutionSuppressed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsExecutionSuppressed : bool" Usage="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.IsExecutionSuppressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When true, this flag indicates that the execution of the operation has been suppressed by
            one of the interceptors. This can be done before the operation has executed by calling
            <see cref="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.SuppressExecution" /> or by setting an <see cref="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Exception" /> to be thrown
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalException">
      <MemberSignature Language="C#" Value="public Exception OriginalException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception OriginalException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.OriginalException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalException As Exception" />
      <MemberSignature Language="F#" Value="member this.OriginalException : Exception" Usage="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.OriginalException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If execution of the operation fails, then this property will contain the exception that was
            thrown. If the operation was suppressed or did not fail, then this property will always be null.
            </summary>
        <value>To be added.</value>
        <remarks>
            When an operation fails both this property and the <see cref="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Exception" /> property are set
            to the exception that was thrown. However, the <see cref="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.Exception" /> property can be set or
            changed by interceptors, while this property will always represent the original exception thrown.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserState">
      <MemberSignature Language="C#" Value="public void SetUserState (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUserState(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.SetUserState(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserState (key As String, value As Object)" />
      <MemberSignature Language="F#" Value="member this.SetUserState : string * obj -&gt; unit" Usage="mutableInterceptionContext.SetUserState (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">A key used to identify the user state.</param>
        <param name="value">The state to set.</param>
        <summary>
            Sets a value containing arbitrary user-specified state information associated with the operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExecution">
      <MemberSignature Language="C#" Value="public void SuppressExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuppressExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.SuppressExecution" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuppressExecution ()" />
      <MemberSignature Language="F#" Value="member this.SuppressExecution : unit -&gt; unit" Usage="mutableInterceptionContext.SuppressExecution " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Prevents the operation from being executed if called before the operation has executed.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            Thrown if this method is called after the operation has already executed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="TaskStatus">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskStatus TaskStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskStatus TaskStatus" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.TaskStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskStatus As TaskStatus" />
      <MemberSignature Language="F#" Value="member this.TaskStatus : System.Threading.Tasks.TaskStatus" Usage="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.TaskStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set to the status of the <see cref="T:System.Threading.Tasks.Task" /> after an async operation has finished. Not used for
            synchronous operations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mutableInterceptionContext.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UserState">
      <MemberSignature Language="C#" Value="public object UserState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserState" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.UserState" />
      <MemberSignature Language="VB.NET" Value="Public Property UserState As Object" />
      <MemberSignature Language="F#" Value="member this.UserState : obj with get, set" Usage="System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.UserState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Not safe when multiple interceptors are in use. Use SetUserState and FindUserState instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value containing arbitrary user-specified state information associated with the operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDbContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext WithDbContext (System.Data.Entity.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext WithDbContext(class System.Data.Entity.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.WithDbContext(System.Data.Entity.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDbContext (context As DbContext) As MutableInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.WithDbContext : System.Data.Entity.DbContext -&gt; System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" Usage="mutableInterceptionContext.WithDbContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.DbContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithObjectContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext WithObjectContext (System.Data.Entity.Core.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext WithObjectContext(class System.Data.Entity.Core.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext.WithObjectContext(System.Data.Entity.Core.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithObjectContext (context As ObjectContext) As MutableInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.WithObjectContext : System.Data.Entity.Core.Objects.ObjectContext -&gt; System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" Usage="mutableInterceptionContext.WithObjectContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.Core.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>