<Type Name="ForeignKeyDiscoveryConvention" FullName="System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention">
  <TypeSignature Language="C#" Value="public abstract class ForeignKeyDiscoveryConvention : System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention&lt;System.Data.Entity.Core.Metadata.Edm.AssociationType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ForeignKeyDiscoveryConvention extends System.Object implements class System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1&lt;class System.Data.Entity.Core.Metadata.Edm.AssociationType&gt;, class System.Data.Entity.ModelConfiguration.Conventions.IConvention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ForeignKeyDiscoveryConvention&#xA;Implements IConceptualModelConvention(Of AssociationType)" />
  <TypeSignature Language="F#" Value="type ForeignKeyDiscoveryConvention = class&#xA;    interface IConceptualModelConvention&lt;AssociationType&gt;&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention&lt;System.Data.Entity.Core.Metadata.Edm.AssociationType&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for conventions that discover foreign key properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ForeignKeyDiscoveryConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (System.Data.Entity.Core.Metadata.Edm.AssociationType item, System.Data.Entity.Infrastructure.DbModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class System.Data.Entity.Core.Metadata.Edm.AssociationType item, class System.Data.Entity.Infrastructure.DbModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Infrastructure.DbModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Apply (item As AssociationType, model As DbModel)" />
      <MemberSignature Language="F#" Value="abstract member Apply : System.Data.Entity.Core.Metadata.Edm.AssociationType * System.Data.Entity.Infrastructure.DbModel -&gt; unit&#xA;override this.Apply : System.Data.Entity.Core.Metadata.Edm.AssociationType * System.Data.Entity.Infrastructure.DbModel -&gt; unit" Usage="foreignKeyDiscoveryConvention.Apply (item, model)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1.Apply(`0,System.Data.Entity.Infrastructure.DbModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Data.Entity.Core.Metadata.Edm.AssociationType" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="model" Type="System.Data.Entity.Infrastructure.DbModel" Index="1" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MatchDependentKeyProperty">
      <MemberSignature Language="C#" Value="protected abstract bool MatchDependentKeyProperty (System.Data.Entity.Core.Metadata.Edm.AssociationType associationType, System.Data.Entity.Core.Metadata.Edm.AssociationEndMember dependentAssociationEnd, System.Data.Entity.Core.Metadata.Edm.EdmProperty dependentProperty, System.Data.Entity.Core.Metadata.Edm.EntityType principalEntityType, System.Data.Entity.Core.Metadata.Edm.EdmProperty principalKeyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MatchDependentKeyProperty(class System.Data.Entity.Core.Metadata.Edm.AssociationType associationType, class System.Data.Entity.Core.Metadata.Edm.AssociationEndMember dependentAssociationEnd, class System.Data.Entity.Core.Metadata.Edm.EdmProperty dependentProperty, class System.Data.Entity.Core.Metadata.Edm.EntityType principalEntityType, class System.Data.Entity.Core.Metadata.Edm.EdmProperty principalKeyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.MatchDependentKeyProperty(System.Data.Entity.Core.Metadata.Edm.AssociationType,System.Data.Entity.Core.Metadata.Edm.AssociationEndMember,System.Data.Entity.Core.Metadata.Edm.EdmProperty,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Data.Entity.Core.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="F#" Value="abstract member MatchDependentKeyProperty : System.Data.Entity.Core.Metadata.Edm.AssociationType * System.Data.Entity.Core.Metadata.Edm.AssociationEndMember * System.Data.Entity.Core.Metadata.Edm.EdmProperty * System.Data.Entity.Core.Metadata.Edm.EntityType * System.Data.Entity.Core.Metadata.Edm.EdmProperty -&gt; bool" Usage="foreignKeyDiscoveryConvention.MatchDependentKeyProperty (associationType, dependentAssociationEnd, dependentProperty, principalEntityType, principalKeyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="associationType" Type="System.Data.Entity.Core.Metadata.Edm.AssociationType" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="dependentAssociationEnd" Type="System.Data.Entity.Core.Metadata.Edm.AssociationEndMember" Index="1" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="dependentProperty" Type="System.Data.Entity.Core.Metadata.Edm.EdmProperty" Index="2" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="principalEntityType" Type="System.Data.Entity.Core.Metadata.Edm.EntityType" Index="3" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="principalKeyProperty" Type="System.Data.Entity.Core.Metadata.Edm.EdmProperty" Index="4" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="associationType"> The association type being configured. </param>
        <param name="dependentAssociationEnd"> The dependent end. </param>
        <param name="dependentProperty"> The candidate property on the dependent end. </param>
        <param name="principalEntityType"> The principal end entity type. </param>
        <param name="principalKeyProperty"> A key property on the principal end that is a candidate target for the foreign key. </param>
        <summary>
            When overridden returns <c>true</c> if <paramref name="dependentProperty" /> should be part of the foreign key.
            </summary>
        <returns>true if dependentProperty should be a part of the foreign key; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMultipleAssociations">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsMultipleAssociations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMultipleAssociations" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.SupportsMultipleAssociations" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsMultipleAssociations As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsMultipleAssociations : bool" Usage="System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyDiscoveryConvention.SupportsMultipleAssociations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns <c>true</c> if the convention supports pairs of entity types that have multiple associations defined between them.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>