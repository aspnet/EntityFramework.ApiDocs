<Type Name="ColumnTypeCasingConvention" FullName="System.Data.Entity.ModelConfiguration.Conventions.ColumnTypeCasingConvention">
  <TypeSignature Language="C#" Value="public sealed class ColumnTypeCasingConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnTypeCasingConvention extends System.Object implements class System.Data.Entity.ModelConfiguration.Conventions.IConvention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnTypeCasingConvention" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnTypeCasingConvention" />
  <TypeSignature Language="F#" Value="type ColumnTypeCasingConvention = class&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                Convention to convert any data types that were explicitly specified, via data annotations or <see cref="T:System.Data.Entity.DbModelBuilder" /> API, 
                to be lower case. The default SqlClient provider is case sensitive and requires data types to be lower case. This convention
                allows the <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute" /> and <see cref="T:System.Data.Entity.DbModelBuilder" /> API to be case insensitive.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members />
</Type>