<Type Name="ConfigurationRegistrar" FullName="System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar">
  <TypeSignature Language="C#" Value="public class ConfigurationRegistrar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationRegistrar extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationRegistrar" />
  <TypeSignature Language="F#" Value="type ConfigurationRegistrar = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Allows derived configuration classes for entities and complex types to be registered with a
            <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>
            Derived configuration classes are created by deriving from <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityTypeConfiguration`1" />
            or <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ComplexTypeConfiguration" /> and using a type to be included in the model as the generic
            parameter.
            Configuration can be performed without creating derived configuration classes via the Entity and ComplexType
            methods on <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;TComplexType&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar Add&lt;TComplexType&gt; (System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration&lt;TComplexType&gt; complexTypeConfiguration) where TComplexType : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar Add&lt;class TComplexType&gt;(class System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1&lt;!!TComplexType&gt; complexTypeConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add(Of TComplexType As Class) (complexTypeConfiguration As ComplexTypeConfiguration(Of TComplexType)) As ConfigurationRegistrar" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration&lt;'ComplexType (requires 'ComplexType : null)&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar (requires 'ComplexType : null)&#xA;override this.Add : System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration&lt;'ComplexType (requires 'ComplexType : null)&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar (requires 'ComplexType : null)" Usage="configurationRegistrar.Add complexTypeConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TComplexType">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="complexTypeConfiguration" Type="System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration&lt;TComplexType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TComplexType"> The complex type being configured. </typeparam>
        <param name="complexTypeConfiguration"> The complex type configuration to be added </param>
        <summary>
            Adds an <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ComplexTypeConfiguration" /> to the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            Only one <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ComplexTypeConfiguration" /> can be added for each type in a model.
            </summary>
        <returns> The same ConfigurationRegistrar instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;TEntityType&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar Add&lt;TEntityType&gt; (System.Data.Entity.ModelConfiguration.EntityTypeConfiguration&lt;TEntityType&gt; entityTypeConfiguration) where TEntityType : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar Add&lt;class TEntityType&gt;(class System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1&lt;!!TEntityType&gt; entityTypeConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add(Of TEntityType As Class) (entityTypeConfiguration As EntityTypeConfiguration(Of TEntityType)) As ConfigurationRegistrar" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration&lt;'EntityType (requires 'EntityType : null)&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar (requires 'EntityType : null)&#xA;override this.Add : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration&lt;'EntityType (requires 'EntityType : null)&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar (requires 'EntityType : null)" Usage="configurationRegistrar.Add entityTypeConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntityType">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="entityTypeConfiguration" Type="System.Data.Entity.ModelConfiguration.EntityTypeConfiguration&lt;TEntityType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntityType"> The entity type being configured. </typeparam>
        <param name="entityTypeConfiguration"> The entity type configuration to be added. </param>
        <summary>
            Adds an <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityTypeConfiguration`1" /> to the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            Only one <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityTypeConfiguration`1" /> can be added for each type in a model.
            </summary>
        <returns> The same ConfigurationRegistrar instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFromAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar AddFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar AddFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.AddFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="F#" Value="abstract member AddFromAssembly : System.Reflection.Assembly -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar&#xA;override this.AddFromAssembly : System.Reflection.Assembly -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" Usage="configurationRegistrar.AddFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly containing model configurations to add.</param>
        <summary>
            Discovers all types that inherit from <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityTypeConfiguration`1" /> or
            <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ComplexTypeConfiguration" /> in the given assembly and adds an instance
            of each discovered type to this registrar.
            </summary>
        <returns>The same ConfigurationRegistrar instance so that multiple calls can be chained.</returns>
        <remarks>
            Note that only types that are abstract or generic type definitions are skipped. Every
            type that is discovered and added must provide a parameterless constructor.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="configurationRegistrar.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="configurationRegistrar.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="configurationRegistrar.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="configurationRegistrar.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>