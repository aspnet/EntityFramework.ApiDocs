<Type Name="EntityMappingConfiguration&lt;TEntityType&gt;" FullName="System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt;">
  <TypeSignature Language="C#" Value="public class EntityMappingConfiguration&lt;TEntityType&gt; where TEntityType : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityMappingConfiguration`1&lt;class TEntityType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityMappingConfiguration(Of TEntityType)" />
  <TypeSignature Language="F#" Value="type EntityMappingConfiguration&lt;'EntityType (requires 'EntityType : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntityType"> The entity type to be mapped. </typeparam>
    <summary>
            Configures the table and column mapping for an entity type or a sub-set of properties from an entity type.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityMappingConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityMappingConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityMappingConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="entityMappingConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTableAnnotation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt; HasTableAnnotation (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1&lt;!TEntityType&gt; HasTableAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.HasTableAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasTableAnnotation (name As String, value As Object) As EntityMappingConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.HasTableAnnotation : string * obj -&gt; System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="entityMappingConfiguration.HasTableAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="name">The annotation name, which must be a valid C#/EDM identifier.</param>
        <param name="value">The annotation value, which may be a string or some other type that
            can be serialized with an <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
        <summary>
            Sets an annotation in the model for the table to which this entity is mapped. The annotation
            value can later be used when processing the table such as when creating migrations.
            </summary>
        <returns>The same configuration instance so that multiple calls can be chained.</returns>
        <remarks>
            It will likely be necessary to register a <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> if the type of
            the annotation value is anything other than a string. Passing a null value clears any annotation with
            the given name on the column that had been previously set.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapInheritedProperties">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt; MapInheritedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1&lt;!TEntityType&gt; MapInheritedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.MapInheritedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function MapInheritedProperties () As EntityMappingConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.MapInheritedProperties : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="entityMappingConfiguration.MapInheritedProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Re-maps all properties inherited from base types.
            When configuring a derived type to be mapped to a separate table this will cause all properties to
            be included in the table rather than just the non-inherited properties. This is known as
            Table per Concrete Type (TPC) mapping.
            </summary>
        <returns> The same configuration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties&lt;TObject&gt;">
      <MemberSignature Language="C#" Value="public void Properties&lt;TObject&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,TObject&gt;&gt; propertiesExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Properties&lt;TObject&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, !!TObject&gt;&gt; propertiesExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Properties``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Properties(Of TObject) (propertiesExpression As Expression(Of Func(Of TEntityType, TObject)))" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, 'Object&gt;&gt; -&gt; unit" Usage="entityMappingConfiguration.Properties propertiesExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TObject" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertiesExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,TObject&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TObject"> An anonymous type including the properties to be mapped. </typeparam>
        <param name="propertiesExpression"> A lambda expression to an anonymous type that contains the properties to be mapped. C#: t =&gt; new { t.Id, t.Property1, t.Property2 } VB.Net: Function(t) New With { p.Id, t.Property1, t.Property2 } </param>
        <summary>
            Configures the properties that will be included in this mapping fragment.
            If this method is not called then all properties that have not yet been
            included in a mapping fragment will be configured.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,byte[]&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, unsigned int8[]&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Byte()))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, byte[]&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Byte[]&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.byte[]" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,System.Data.Entity.Spatial.DbGeography&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, class System.Data.Entity.Spatial.DbGeography&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeography}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, DbGeography))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, System.Data.Entity.Spatial.DbGeography&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Data.Entity.Spatial.DbGeography&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:DbGeography" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,System.Data.Entity.Spatial.DbGeometry&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, class System.Data.Entity.Spatial.DbGeometry&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Entity.Spatial.DbGeometry}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, DbGeometry))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, System.Data.Entity.Spatial.DbGeometry&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Data.Entity.Spatial.DbGeometry&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:DbGeometry" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,DateTime&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.DateTime&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, DateTime))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, DateTime&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.DateTime&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.DateTime" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,DateTimeOffset&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.DateTimeOffset&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, DateTimeOffset))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, DateTimeOffset&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.DateTimeOffset&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.DateTimeOffset" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,decimal&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Decimal&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Decimal))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, decimal&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Decimal&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.decimal" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,Nullable&lt;DateTime&gt;&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Nullable(Of DateTime)))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, Nullable&lt;DateTime&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Nullable&lt;System.DateTime&gt;&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.DateTime?" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,Nullable&lt;DateTimeOffset&gt;&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Nullable(Of DateTimeOffset)))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, Nullable&lt;DateTimeOffset&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Nullable&lt;System.DateTimeOffset&gt;&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.DateTimeOffset?" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,Nullable&lt;decimal&gt;&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Nullable(Of Decimal)))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, Nullable&lt;decimal&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.decimal?" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,Nullable&lt;TimeSpan&gt;&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, Nullable(Of TimeSpan)))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, Nullable&lt;TimeSpan&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Nullable&lt;System.TimeSpan&gt;&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.TimeSpan?" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,string&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, string&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, String))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, string&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.String&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.String" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,TimeSpan&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.TimeSpan&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyExpression As Expression(Of Func(Of TEntityType, TimeSpan))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, TimeSpan&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.TimeSpan&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.TimeSpan" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,Nullable&lt;T&gt;&gt;&gt; propertyExpression) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property&lt;struct .ctor (class System.ValueType) T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, valuetype System.Nullable`1&lt;!!T&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property(Of T As Structure) (propertyExpression As Expression(Of Func(Of TEntityType, Nullable(Of T)))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, Nullable&lt;'T&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration (requires 'T : struct)" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,System.Nullable&lt;T&gt;&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of the property being configured. </typeparam>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.struct?" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,T&gt;&gt; propertyExpression) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration Property&lt;struct .ctor (class System.ValueType) T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, !!T&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property(Of T As Structure) (propertyExpression As Expression(Of Func(Of TEntityType, T))) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, 'T&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration (requires 'T : struct)" Usage="entityMappingConfiguration.Property propertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,T&gt;&gt;" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <typeparam name="T"> The type of the property being configured. </typeparam>
        <param name="propertyExpression"> A lambda expression representing the property to be configured. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures a <see cref="T:System.struct" /> property that is included in this mapping fragment.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Requires">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration Requires (string discriminator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration Requires(string discriminator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Requires (discriminator As String) As ValueConditionConfiguration" />
      <MemberSignature Language="F#" Value="member this.Requires : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration" Usage="entityMappingConfiguration.Requires discriminator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discriminator" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="discriminator"> The name of the discriminator column. </param>
        <summary>
            Configures the discriminator column used to differentiate between types in an inheritance hierarchy.
            </summary>
        <returns> A configuration object to further configure the discriminator column and values. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Requires&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration Requires&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntityType,TProperty&gt;&gt; property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration Requires&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntityType, !!TProperty&gt;&gt; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Requires(Of TProperty) (property As Expression(Of Func(Of TEntityType, TProperty))) As NotNullConditionConfiguration" />
      <MemberSignature Language="F#" Value="member this.Requires : System.Linq.Expressions.Expression&lt;Func&lt;'EntityType, 'Property&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration" Usage="entityMappingConfiguration.Requires property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-6.2.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntityType,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property being used to discriminate between types. </typeparam>
        <param name="property"> A lambda expression representing the property being used to discriminate between types. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the discriminator condition used to differentiate between types in an inheritance hierarchy.
            </summary>
        <returns> A configuration object to further configure the discriminator condition. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="entityMappingConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt; ToTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1&lt;!TEntityType&gt; ToTable(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTable (tableName As String) As EntityMappingConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.ToTable : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="entityMappingConfiguration.ToTable tableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="tableName"> Name of the table. </param>
        <summary>
            Configures the table name to be mapped to.
            </summary>
        <returns> The same configuration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt; ToTable (string tableName, string schemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1&lt;!TEntityType&gt; ToTable(string tableName, string schemaName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTable (tableName As String, schemaName As String) As EntityMappingConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.ToTable : string * string -&gt; System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="entityMappingConfiguration.ToTable (tableName, schemaName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" Index="0" FrameworkAlternate="entity-framework-6.2.0" />
        <Parameter Name="schemaName" Type="System.String" Index="1" FrameworkAlternate="entity-framework-6.2.0" />
      </Parameters>
      <Docs>
        <param name="tableName"> Name of the table. </param>
        <param name="schemaName"> Schema of the table. </param>
        <summary>
            Configures the table name and schema to be mapped to.
            </summary>
        <returns> The same configuration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>