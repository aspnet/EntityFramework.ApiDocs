<Type Name="GearsOfWarQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class GearsOfWarQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt; where TFixture : GearsOfWarQueryFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit GearsOfWarQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.QueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class GearsOfWarQueryTestBase(Of TFixture)&#xA;Inherits QueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type GearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit QueryTestBase&lt;'Fixture (requires 'Fixture :&gt; GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : GearsOfWarQueryFixtureBasegcnew()public ref class GearsOfWarQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::QueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GearsOfWarQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; GearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; GearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" GearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_with_optional_navigation_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void All_with_optional_navigation_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_with_optional_navigation_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.All_with_optional_navigation_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_with_optional_navigation_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member All_with_optional_navigation_is_translated_to_sql : unit -&gt; unit&#xA;override this.All_with_optional_navigation_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.All_with_optional_navigation_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_with_optional_navigation_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql : unit -&gt; unit&#xA;override this.Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_with_optional_navigation_as_subquery_predicate_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitwise_projects_values_in_select">
      <MemberSignature Language="C#" Value="public virtual void Bitwise_projects_values_in_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bitwise_projects_values_in_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Bitwise_projects_values_in_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Bitwise_projects_values_in_select ()" />
      <MemberSignature Language="F#" Value="abstract member Bitwise_projects_values_in_select : unit -&gt; unit&#xA;override this.Bitwise_projects_values_in_select : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Bitwise_projects_values_in_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Bitwise_projects_values_in_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Bitwise_projects_values_in_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Bitwise_projects_values_in_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert">
      <MemberSignature Language="C#" Value="public virtual void Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert ()" />
      <MemberSignature Language="F#" Value="abstract member Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert : unit -&gt; unit&#xA;override this.Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Cast_result_operator_on_subquery_is_properly_lifted_to_a_convert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="protected virtual void ClearLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ClearLog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearLog ()" />
      <MemberSignature Language="F#" Value="abstract member ClearLog : unit -&gt; unit&#xA;override this.ClearLog : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ClearLog " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ClearLog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_method_on_collection_navigation_in_additional_from_clause">
      <MemberSignature Language="C#" Value="public virtual void Client_method_on_collection_navigation_in_additional_from_clause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_method_on_collection_navigation_in_additional_from_clause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_method_on_collection_navigation_in_additional_from_clause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_method_on_collection_navigation_in_additional_from_clause ()" />
      <MemberSignature Language="F#" Value="abstract member Client_method_on_collection_navigation_in_additional_from_clause : unit -&gt; unit&#xA;override this.Client_method_on_collection_navigation_in_additional_from_clause : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_method_on_collection_navigation_in_additional_from_clause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_additional_from_clause();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_additional_from_clause();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_method_on_collection_navigation_in_additional_from_clause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_method_on_collection_navigation_in_order_by">
      <MemberSignature Language="C#" Value="public virtual void Client_method_on_collection_navigation_in_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_method_on_collection_navigation_in_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_method_on_collection_navigation_in_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_method_on_collection_navigation_in_order_by ()" />
      <MemberSignature Language="F#" Value="abstract member Client_method_on_collection_navigation_in_order_by : unit -&gt; unit&#xA;override this.Client_method_on_collection_navigation_in_order_by : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_method_on_collection_navigation_in_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_order_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_order_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_method_on_collection_navigation_in_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_method_on_collection_navigation_in_outer_join_key">
      <MemberSignature Language="C#" Value="public virtual void Client_method_on_collection_navigation_in_outer_join_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_method_on_collection_navigation_in_outer_join_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_method_on_collection_navigation_in_outer_join_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_method_on_collection_navigation_in_outer_join_key ()" />
      <MemberSignature Language="F#" Value="abstract member Client_method_on_collection_navigation_in_outer_join_key : unit -&gt; unit&#xA;override this.Client_method_on_collection_navigation_in_outer_join_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_method_on_collection_navigation_in_outer_join_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_outer_join_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_outer_join_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_method_on_collection_navigation_in_outer_join_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_method_on_collection_navigation_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Client_method_on_collection_navigation_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_method_on_collection_navigation_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_method_on_collection_navigation_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_method_on_collection_navigation_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Client_method_on_collection_navigation_in_predicate : unit -&gt; unit&#xA;override this.Client_method_on_collection_navigation_in_predicate : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_method_on_collection_navigation_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_method_on_collection_navigation_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property">
      <MemberSignature Language="C#" Value="public virtual void Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property ()" />
      <MemberSignature Language="F#" Value="abstract member Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property : unit -&gt; unit&#xA;override this.Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_method_on_collection_navigation_in_predicate_accessed_by_ef_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_side_equality_with_parameter_works_with_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual void Client_side_equality_with_parameter_works_with_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_side_equality_with_parameter_works_with_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Client_side_equality_with_parameter_works_with_optional_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_side_equality_with_parameter_works_with_optional_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Client_side_equality_with_parameter_works_with_optional_navigations : unit -&gt; unit&#xA;override this.Client_side_equality_with_parameter_works_with_optional_navigations : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Client_side_equality_with_parameter_works_with_optional_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_side_equality_with_parameter_works_with_optional_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_side_equality_with_parameter_works_with_optional_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_side_equality_with_parameter_works_with_optional_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Coalesce_operator_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Coalesce_operator_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Coalesce_operator_in_predicate : unit -&gt; unit&#xA;override this.Coalesce_operator_in_predicate : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Coalesce_operator_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Coalesce_operator_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Coalesce_operator_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Coalesce_operator_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_predicate_with_other_conditions">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_predicate_with_other_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_predicate_with_other_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Coalesce_operator_in_predicate_with_other_conditions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Coalesce_operator_in_predicate_with_other_conditions ()" />
      <MemberSignature Language="F#" Value="abstract member Coalesce_operator_in_predicate_with_other_conditions : unit -&gt; unit&#xA;override this.Coalesce_operator_in_predicate_with_other_conditions : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Coalesce_operator_in_predicate_with_other_conditions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Coalesce_operator_in_predicate_with_other_conditions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Coalesce_operator_in_predicate_with_other_conditions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Coalesce_operator_in_predicate_with_other_conditions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coalesce_operator_in_projection_with_other_conditions">
      <MemberSignature Language="C#" Value="public virtual void Coalesce_operator_in_projection_with_other_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Coalesce_operator_in_projection_with_other_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Coalesce_operator_in_projection_with_other_conditions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Coalesce_operator_in_projection_with_other_conditions ()" />
      <MemberSignature Language="F#" Value="abstract member Coalesce_operator_in_projection_with_other_conditions : unit -&gt; unit&#xA;override this.Coalesce_operator_in_projection_with_other_conditions : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Coalesce_operator_in_projection_with_other_conditions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Coalesce_operator_in_projection_with_other_conditions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Coalesce_operator_in_projection_with_other_conditions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Coalesce_operator_in_projection_with_other_conditions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_navigation_access_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Collection_navigation_access_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_navigation_access_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Collection_navigation_access_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Collection_navigation_access_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Collection_navigation_access_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Collection_navigation_access_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Collection_navigation_access_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Collection_navigation_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Collection_navigation_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Collection_navigation_access_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany">
      <MemberSignature Language="C#" Value="public virtual void Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany ()" />
      <MemberSignature Language="F#" Value="abstract member Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany : unit -&gt; unit&#xA;override this.Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Collection_navigation_access_on_derived_entity_using_cast_in_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_with_inheritance_and_join_include_joined">
      <MemberSignature Language="C#" Value="public virtual void Collection_with_inheritance_and_join_include_joined ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_with_inheritance_and_join_include_joined() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Collection_with_inheritance_and_join_include_joined" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Collection_with_inheritance_and_join_include_joined ()" />
      <MemberSignature Language="F#" Value="abstract member Collection_with_inheritance_and_join_include_joined : unit -&gt; unit&#xA;override this.Collection_with_inheritance_and_join_include_joined : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Collection_with_inheritance_and_join_include_joined " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Collection_with_inheritance_and_join_include_joined();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Collection_with_inheritance_and_join_include_joined();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Collection_with_inheritance_and_join_include_joined();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection_with_inheritance_and_join_include_source">
      <MemberSignature Language="C#" Value="public virtual void Collection_with_inheritance_and_join_include_source ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Collection_with_inheritance_and_join_include_source() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Collection_with_inheritance_and_join_include_source" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Collection_with_inheritance_and_join_include_source ()" />
      <MemberSignature Language="F#" Value="abstract member Collection_with_inheritance_and_join_include_source : unit -&gt; unit&#xA;override this.Collection_with_inheritance_and_join_include_source : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Collection_with_inheritance_and_join_include_source " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Collection_with_inheritance_and_join_include_source();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Collection_with_inheritance_and_join_include_source();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Collection_with_inheritance_and_join_include_source();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_entities_using_Equals_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Comparing_entities_using_Equals_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_entities_using_Equals_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Comparing_entities_using_Equals_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_entities_using_Equals_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_entities_using_Equals_inheritance : unit -&gt; unit&#xA;override this.Comparing_entities_using_Equals_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Comparing_entities_using_Equals_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_entities_using_Equals_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_entities_using_Equals_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_entities_using_Equals_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8375")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_two_collection_navigations_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Comparing_two_collection_navigations_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_two_collection_navigations_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Comparing_two_collection_navigations_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_two_collection_navigations_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_two_collection_navigations_composite_key : unit -&gt; unit&#xA;override this.Comparing_two_collection_navigations_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Comparing_two_collection_navigations_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_two_collection_navigations_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_two_collection_navigations_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_two_collection_navigations_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_two_collection_navigations_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Comparing_two_collection_navigations_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_two_collection_navigations_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Comparing_two_collection_navigations_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_two_collection_navigations_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_two_collection_navigations_inheritance : unit -&gt; unit&#xA;override this.Comparing_two_collection_navigations_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Comparing_two_collection_navigations_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_two_collection_navigations_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_two_collection_navigations_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_two_collection_navigations_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_predicate_with_AndAlso_and_nullable_bool_property">
      <MemberSignature Language="C#" Value="public virtual void Complex_predicate_with_AndAlso_and_nullable_bool_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_predicate_with_AndAlso_and_nullable_bool_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Complex_predicate_with_AndAlso_and_nullable_bool_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_predicate_with_AndAlso_and_nullable_bool_property ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_predicate_with_AndAlso_and_nullable_bool_property : unit -&gt; unit&#xA;override this.Complex_predicate_with_AndAlso_and_nullable_bool_property : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Complex_predicate_with_AndAlso_and_nullable_bool_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_predicate_with_AndAlso_and_nullable_bool_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_predicate_with_AndAlso_and_nullable_bool_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_predicate_with_AndAlso_and_nullable_bool_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_anonymous_with_count">
      <MemberSignature Language="C#" Value="public virtual void Concat_anonymous_with_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_anonymous_with_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_anonymous_with_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_anonymous_with_count ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_anonymous_with_count : unit -&gt; unit&#xA;override this.Concat_anonymous_with_count : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_anonymous_with_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_anonymous_with_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_anonymous_with_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_anonymous_with_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_scalars_with_count">
      <MemberSignature Language="C#" Value="public virtual void Concat_scalars_with_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_scalars_with_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_scalars_with_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_scalars_with_count ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_scalars_with_count : unit -&gt; unit&#xA;override this.Concat_scalars_with_count : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_scalars_with_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_scalars_with_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_scalars_with_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_scalars_with_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_with_collection_navigations">
      <MemberSignature Language="C#" Value="public virtual void Concat_with_collection_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_with_collection_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_with_collection_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_with_collection_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_with_collection_navigations : unit -&gt; unit&#xA;override this.Concat_with_collection_navigations : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_with_collection_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_with_collection_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_with_collection_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_with_collection_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_with_count">
      <MemberSignature Language="C#" Value="public virtual void Concat_with_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_with_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_with_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_with_count ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_with_count : unit -&gt; unit&#xA;override this.Concat_with_count : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_with_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_with_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_with_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_with_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_with_groupings">
      <MemberSignature Language="C#" Value="public virtual void Concat_with_groupings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_with_groupings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_with_groupings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_with_groupings ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_with_groupings : unit -&gt; unit&#xA;override this.Concat_with_groupings : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_with_groupings " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_with_groupings();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_with_groupings();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_with_groupings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_with_scalar_projection">
      <MemberSignature Language="C#" Value="public virtual void Concat_with_scalar_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_with_scalar_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Concat_with_scalar_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_with_scalar_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_with_scalar_projection : unit -&gt; unit&#xA;override this.Concat_with_scalar_projection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Concat_with_scalar_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_with_scalar_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_with_scalar_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_with_scalar_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #9007")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_on_nullable_array_produces_correct_sql">
      <MemberSignature Language="C#" Value="public virtual void Contains_on_nullable_array_produces_correct_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_on_nullable_array_produces_correct_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Contains_on_nullable_array_produces_correct_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_on_nullable_array_produces_correct_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_on_nullable_array_produces_correct_sql : unit -&gt; unit&#xA;override this.Contains_on_nullable_array_produces_correct_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Contains_on_nullable_array_produces_correct_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_on_nullable_array_produces_correct_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_on_nullable_array_produces_correct_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_on_nullable_array_produces_correct_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_nullable_guid_list_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_nullable_guid_list_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_nullable_guid_list_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Contains_with_local_nullable_guid_list_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_nullable_guid_list_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_nullable_guid_list_closure : unit -&gt; unit&#xA;override this.Contains_with_local_nullable_guid_list_closure : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Contains_with_local_nullable_guid_list_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_nullable_guid_list_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_nullable_guid_list_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_nullable_guid_list_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collection_with_top_level_Count">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collection_with_top_level_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collection_with_top_level_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collection_with_top_level_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collection_with_top_level_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collection_with_top_level_Count : unit -&gt; unit&#xA;override this.Correlated_collection_with_top_level_Count : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collection_with_top_level_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collection_with_top_level_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collection_with_top_level_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collection_with_top_level_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collection_with_top_level_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collection_with_top_level_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collection_with_top_level_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collection_with_top_level_FirstOrDefault : unit -&gt; unit&#xA;override this.Correlated_collection_with_top_level_FirstOrDefault : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collection_with_top_level_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collection_with_top_level_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collection_with_top_level_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collection_with_top_level_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collection_with_top_level_Last_with_order_by_on_inner">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collection_with_top_level_Last_with_order_by_on_inner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collection_with_top_level_Last_with_order_by_on_inner() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collection_with_top_level_Last_with_order_by_on_inner" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collection_with_top_level_Last_with_order_by_on_inner ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collection_with_top_level_Last_with_order_by_on_inner : unit -&gt; unit&#xA;override this.Correlated_collection_with_top_level_Last_with_order_by_on_inner : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collection_with_top_level_Last_with_order_by_on_inner " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Last_with_order_by_on_inner();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Last_with_order_by_on_inner();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collection_with_top_level_Last_with_order_by_on_inner();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collection_with_top_level_Last_with_orderby_on_outer">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collection_with_top_level_Last_with_orderby_on_outer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collection_with_top_level_Last_with_orderby_on_outer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collection_with_top_level_Last_with_orderby_on_outer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collection_with_top_level_Last_with_orderby_on_outer ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collection_with_top_level_Last_with_orderby_on_outer : unit -&gt; unit&#xA;override this.Correlated_collection_with_top_level_Last_with_orderby_on_outer : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collection_with_top_level_Last_with_orderby_on_outer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Last_with_orderby_on_outer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collection_with_top_level_Last_with_orderby_on_outer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collection_with_top_level_Last_with_orderby_on_outer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projecting_constant">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projecting_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projecting_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projecting_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projecting_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projecting_constant : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projecting_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projecting_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projecting_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projecting_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projecting_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projecting_single_property">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projecting_single_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projecting_single_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projecting_single_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projecting_single_property ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projecting_single_property : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projecting_single_property : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projecting_single_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projecting_single_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projecting_single_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projecting_single_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projection_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projection_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projection_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_composite_key : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projection_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projection_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projection_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projection_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projection_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_explicit_to_array">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projection_explicit_to_array ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projection_explicit_to_array() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_explicit_to_array" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projection_explicit_to_array ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_explicit_to_array : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projection_explicit_to_array : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projection_explicit_to_array " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projection_explicit_to_array();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projection_explicit_to_array();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projection_explicit_to_array();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_explicit_to_list">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projection_explicit_to_list ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projection_explicit_to_list() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_explicit_to_list" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projection_explicit_to_list ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_explicit_to_list : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projection_explicit_to_list : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projection_explicit_to_list " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projection_explicit_to_list();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projection_explicit_to_list();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projection_explicit_to_list();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_ordered">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_basic_projection_ordered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_basic_projection_ordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_ordered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_basic_projection_ordered ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_ordered : unit -&gt; unit&#xA;override this.Correlated_collections_basic_projection_ordered : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_basic_projection_ordered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_basic_projection_ordered();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_basic_projection_ordered();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_basic_projection_ordered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_complex_scenario1">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_complex_scenario1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_complex_scenario1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_complex_scenario1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_complex_scenario1 ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_complex_scenario1 : unit -&gt; unit&#xA;override this.Correlated_collections_complex_scenario1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_complex_scenario1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_complex_scenario1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_complex_scenario1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_complex_scenario1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_complex_scenario2">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_complex_scenario2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_complex_scenario2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_complex_scenario2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_complex_scenario2 ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_complex_scenario2 : unit -&gt; unit&#xA;override this.Correlated_collections_complex_scenario2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_complex_scenario2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_complex_scenario2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_complex_scenario2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_complex_scenario2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_deeply_nested_left_join">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_deeply_nested_left_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_deeply_nested_left_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_deeply_nested_left_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_deeply_nested_left_join ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_deeply_nested_left_join : unit -&gt; unit&#xA;override this.Correlated_collections_deeply_nested_left_join : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_deeply_nested_left_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_deeply_nested_left_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_deeply_nested_left_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_deeply_nested_left_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_different_collections_projected">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_different_collections_projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_different_collections_projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_different_collections_projected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_different_collections_projected ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_different_collections_projected : unit -&gt; unit&#xA;override this.Correlated_collections_different_collections_projected : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_different_collections_projected " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_different_collections_projected();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_different_collections_projected();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_different_collections_projected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join : unit -&gt; unit&#xA;override this.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_inner_subquery_predicate_references_outer_qsre">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_inner_subquery_predicate_references_outer_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_inner_subquery_predicate_references_outer_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_inner_subquery_predicate_references_outer_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_inner_subquery_predicate_references_outer_qsre ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_inner_subquery_predicate_references_outer_qsre : unit -&gt; unit&#xA;override this.Correlated_collections_inner_subquery_predicate_references_outer_qsre : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_inner_subquery_predicate_references_outer_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_inner_subquery_predicate_references_outer_qsre();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_inner_subquery_predicate_references_outer_qsre();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_inner_subquery_predicate_references_outer_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_inner_subquery_selector_references_outer_qsre">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_inner_subquery_selector_references_outer_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_inner_subquery_selector_references_outer_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_inner_subquery_selector_references_outer_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_inner_subquery_selector_references_outer_qsre ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_inner_subquery_selector_references_outer_qsre : unit -&gt; unit&#xA;override this.Correlated_collections_inner_subquery_selector_references_outer_qsre : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_inner_subquery_selector_references_outer_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_inner_subquery_selector_references_outer_qsre();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_inner_subquery_selector_references_outer_qsre();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_inner_subquery_selector_references_outer_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_left_join_with_self_reference">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_left_join_with_self_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_left_join_with_self_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_left_join_with_self_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_left_join_with_self_reference ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_left_join_with_self_reference : unit -&gt; unit&#xA;override this.Correlated_collections_left_join_with_self_reference : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_left_join_with_self_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_left_join_with_self_reference();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_left_join_with_self_reference();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_left_join_with_self_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_multiple_nested_complex_collections">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_multiple_nested_complex_collections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_multiple_nested_complex_collections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_multiple_nested_complex_collections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_multiple_nested_complex_collections ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_multiple_nested_complex_collections : unit -&gt; unit&#xA;override this.Correlated_collections_multiple_nested_complex_collections : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_multiple_nested_complex_collections " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_multiple_nested_complex_collections();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_multiple_nested_complex_collections();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_multiple_nested_complex_collections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_naked_navigation_with_ToArray">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_naked_navigation_with_ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_naked_navigation_with_ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_naked_navigation_with_ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_naked_navigation_with_ToArray ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_naked_navigation_with_ToArray : unit -&gt; unit&#xA;override this.Correlated_collections_naked_navigation_with_ToArray : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_naked_navigation_with_ToArray " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_naked_navigation_with_ToArray();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_naked_navigation_with_ToArray();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_naked_navigation_with_ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_naked_navigation_with_ToList">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_naked_navigation_with_ToList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_naked_navigation_with_ToList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_naked_navigation_with_ToList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_naked_navigation_with_ToList ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_naked_navigation_with_ToList : unit -&gt; unit&#xA;override this.Correlated_collections_naked_navigation_with_ToList : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_naked_navigation_with_ToList " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_naked_navigation_with_ToList();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_naked_navigation_with_ToList();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_naked_navigation_with_ToList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested : unit -&gt; unit&#xA;override this.Correlated_collections_nested : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up : unit -&gt; unit&#xA;override this.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up : unit -&gt; unit&#xA;override this.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_mixed_streaming_with_buffer1">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested_mixed_streaming_with_buffer1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested_mixed_streaming_with_buffer1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested_mixed_streaming_with_buffer1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested_mixed_streaming_with_buffer1 ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_mixed_streaming_with_buffer1 : unit -&gt; unit&#xA;override this.Correlated_collections_nested_mixed_streaming_with_buffer1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested_mixed_streaming_with_buffer1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested_mixed_streaming_with_buffer1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested_mixed_streaming_with_buffer1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested_mixed_streaming_with_buffer1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_mixed_streaming_with_buffer2">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested_mixed_streaming_with_buffer2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested_mixed_streaming_with_buffer2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested_mixed_streaming_with_buffer2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested_mixed_streaming_with_buffer2 ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_mixed_streaming_with_buffer2 : unit -&gt; unit&#xA;override this.Correlated_collections_nested_mixed_streaming_with_buffer2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested_mixed_streaming_with_buffer2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested_mixed_streaming_with_buffer2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested_mixed_streaming_with_buffer2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested_mixed_streaming_with_buffer2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_with_custom_ordering">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_nested_with_custom_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_nested_with_custom_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_nested_with_custom_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_nested_with_custom_ordering ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_with_custom_ordering : unit -&gt; unit&#xA;override this.Correlated_collections_nested_with_custom_ordering : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_nested_with_custom_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_nested_with_custom_ordering();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_nested_with_custom_ordering();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_nested_with_custom_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_left_join_with_null_value">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_on_left_join_with_null_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_on_left_join_with_null_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_on_left_join_with_null_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_on_left_join_with_null_value ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_left_join_with_null_value : unit -&gt; unit&#xA;override this.Correlated_collections_on_left_join_with_null_value : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_on_left_join_with_null_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_on_left_join_with_null_value();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_on_left_join_with_null_value();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_on_left_join_with_null_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_left_join_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_on_left_join_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_on_left_join_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_on_left_join_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_on_left_join_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_left_join_with_predicate : unit -&gt; unit&#xA;override this.Correlated_collections_on_left_join_with_predicate : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_on_left_join_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_on_left_join_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_on_left_join_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_on_left_join_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_select_many">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_on_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_on_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_on_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_on_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_select_many : unit -&gt; unit&#xA;override this.Correlated_collections_on_select_many : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_on_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_on_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_on_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_on_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_project_anonymous_collection_result">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_project_anonymous_collection_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_project_anonymous_collection_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_project_anonymous_collection_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_project_anonymous_collection_result ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_project_anonymous_collection_result : unit -&gt; unit&#xA;override this.Correlated_collections_project_anonymous_collection_result : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_project_anonymous_collection_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_project_anonymous_collection_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_project_anonymous_collection_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_project_anonymous_collection_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_projection_of_collection_thru_navigation">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_projection_of_collection_thru_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_projection_of_collection_thru_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_projection_of_collection_thru_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_projection_of_collection_thru_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_projection_of_collection_thru_navigation : unit -&gt; unit&#xA;override this.Correlated_collections_projection_of_collection_thru_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_projection_of_collection_thru_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_projection_of_collection_thru_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_projection_of_collection_thru_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_projection_of_collection_thru_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_same_collection_projected_multiple_times">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_same_collection_projected_multiple_times ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_same_collection_projected_multiple_times() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_same_collection_projected_multiple_times" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_same_collection_projected_multiple_times ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_same_collection_projected_multiple_times : unit -&gt; unit&#xA;override this.Correlated_collections_same_collection_projected_multiple_times : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_same_collection_projected_multiple_times " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_same_collection_projected_multiple_times();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_same_collection_projected_multiple_times();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_same_collection_projected_multiple_times();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_similar_collection_projected_multiple_times">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_similar_collection_projected_multiple_times ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_similar_collection_projected_multiple_times() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_similar_collection_projected_multiple_times" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_similar_collection_projected_multiple_times ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_similar_collection_projected_multiple_times : unit -&gt; unit&#xA;override this.Correlated_collections_similar_collection_projected_multiple_times : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_similar_collection_projected_multiple_times " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_similar_collection_projected_multiple_times();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_similar_collection_projected_multiple_times();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_similar_collection_projected_multiple_times();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_with_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_with_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_with_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_with_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Distinct : unit -&gt; unit&#xA;override this.Correlated_collections_with_Distinct : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_with_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_with_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_with_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_with_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_with_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_with_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_with_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_with_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_FirstOrDefault : unit -&gt; unit&#xA;override this.Correlated_collections_with_FirstOrDefault : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_with_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_with_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_with_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_with_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Skip">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_with_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_with_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_with_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_with_Skip ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Skip : unit -&gt; unit&#xA;override this.Correlated_collections_with_Skip : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_with_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_with_Skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_with_Skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_with_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Take">
      <MemberSignature Language="C#" Value="public virtual void Correlated_collections_with_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_collections_with_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Correlated_collections_with_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_collections_with_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Take : unit -&gt; unit&#xA;override this.Correlated_collections_with_Take : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Correlated_collections_with_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_collections_with_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_collections_with_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_collections_with_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_optional_navigation_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void Count_with_optional_navigation_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_with_optional_navigation_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Count_with_optional_navigation_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_with_optional_navigation_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Count_with_optional_navigation_is_translated_to_sql : unit -&gt; unit&#xA;override this.Count_with_optional_navigation_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Count_with_optional_navigation_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_with_optional_navigation_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_unflattened_groupjoin_is_evaluated_on_client">
      <MemberSignature Language="C#" Value="public virtual void Count_with_unflattened_groupjoin_is_evaluated_on_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_with_unflattened_groupjoin_is_evaluated_on_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Count_with_unflattened_groupjoin_is_evaluated_on_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_with_unflattened_groupjoin_is_evaluated_on_client ()" />
      <MemberSignature Language="F#" Value="abstract member Count_with_unflattened_groupjoin_is_evaluated_on_client : unit -&gt; unit&#xA;override this.Count_with_unflattened_groupjoin_is_evaluated_on_client : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Count_with_unflattened_groupjoin_is_evaluated_on_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As GearsOfWarContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext" Usage="gearsOfWarQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::GearsOfWarModel::GearsOfWarContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::GearsOfWarModel::GearsOfWarContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddDays">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddDays ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddDays() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddDays" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddDays ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddDays : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddDays : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddDays " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddDays();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddDays();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddDays();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddHours">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddHours ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddHours() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddHours" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddHours ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddHours : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddHours : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddHours " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddHours();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddHours();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddHours();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddMilliseconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddMilliseconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddMilliseconds ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddMilliseconds : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddMilliseconds : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddMilliseconds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMilliseconds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMilliseconds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddMilliseconds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddMinutes">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddMinutes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddMinutes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddMinutes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddMinutes ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddMinutes : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddMinutes : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddMinutes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMinutes();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMinutes();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddMinutes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddMonths">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddMonths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddMonths() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddMonths" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddMonths ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddMonths : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddMonths : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddMonths " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMonths();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddMonths();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddMonths();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddSeconds">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddSeconds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddSeconds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddSeconds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddSeconds ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddSeconds : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddSeconds : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddSeconds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddSeconds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddSeconds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddSeconds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset_DateAdd_AddYears">
      <MemberSignature Language="C#" Value="public virtual void DateTimeOffset_DateAdd_AddYears ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTimeOffset_DateAdd_AddYears() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.DateTimeOffset_DateAdd_AddYears" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTimeOffset_DateAdd_AddYears ()" />
      <MemberSignature Language="F#" Value="abstract member DateTimeOffset_DateAdd_AddYears : unit -&gt; unit&#xA;override this.DateTimeOffset_DateAdd_AddYears : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.DateTimeOffset_DateAdd_AddYears " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddYears();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTimeOffset_DateAdd_AddYears();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTimeOffset_DateAdd_AddYears();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_on_subquery_doesnt_get_lifted">
      <MemberSignature Language="C#" Value="public virtual void Distinct_on_subquery_doesnt_get_lifted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_on_subquery_doesnt_get_lifted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Distinct_on_subquery_doesnt_get_lifted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_on_subquery_doesnt_get_lifted ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_on_subquery_doesnt_get_lifted : unit -&gt; unit&#xA;override this.Distinct_on_subquery_doesnt_get_lifted : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Distinct_on_subquery_doesnt_get_lifted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_on_subquery_doesnt_get_lifted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_on_subquery_doesnt_get_lifted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_on_subquery_doesnt_get_lifted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_with_optional_navigation_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void Distinct_with_optional_navigation_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_with_optional_navigation_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Distinct_with_optional_navigation_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_with_optional_navigation_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_with_optional_navigation_is_translated_to_sql : unit -&gt; unit&#xA;override this.Distinct_with_optional_navigation_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Distinct_with_optional_navigation_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_with_optional_navigation_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_with_unflattened_groupjoin_is_evaluated_on_client">
      <MemberSignature Language="C#" Value="public virtual void Distinct_with_unflattened_groupjoin_is_evaluated_on_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_with_unflattened_groupjoin_is_evaluated_on_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Distinct_with_unflattened_groupjoin_is_evaluated_on_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_with_unflattened_groupjoin_is_evaluated_on_client ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_with_unflattened_groupjoin_is_evaluated_on_client : unit -&gt; unit&#xA;override this.Distinct_with_unflattened_groupjoin_is_evaluated_on_client : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Distinct_with_unflattened_groupjoin_is_evaluated_on_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_with_unflattened_groupjoin_is_evaluated_on_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_empty">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Entity_equality_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_empty ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_empty : unit -&gt; unit&#xA;override this.Entity_equality_empty : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Entity_equality_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_empty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_empty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum_ToString_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Enum_ToString_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enum_ToString_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Enum_ToString_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Enum_ToString_is_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Enum_ToString_is_client_eval : unit -&gt; unit&#xA;override this.Enum_ToString_is_client_eval : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Enum_ToString_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Enum_ToString_is_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Enum_ToString_is_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Enum_ToString_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter_on_subquery_projecting_one_value_type_from_empty_collection">
      <MemberSignature Language="C#" Value="public virtual void Filter_on_subquery_projecting_one_value_type_from_empty_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Filter_on_subquery_projecting_one_value_type_from_empty_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Filter_on_subquery_projecting_one_value_type_from_empty_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Filter_on_subquery_projecting_one_value_type_from_empty_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Filter_on_subquery_projecting_one_value_type_from_empty_collection : unit -&gt; unit&#xA;override this.Filter_on_subquery_projecting_one_value_type_from_empty_collection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Filter_on_subquery_projecting_one_value_type_from_empty_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Filter_on_subquery_projecting_one_value_type_from_empty_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Filter_on_subquery_projecting_one_value_type_from_empty_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Filter_on_subquery_projecting_one_value_type_from_empty_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql : unit -&gt; unit&#xA;override this.FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void FirstOrDefault_with_manually_created_groupjoin_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_Composite_Key">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_Composite_Key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_Composite_Key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.GroupJoin_Composite_Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_Composite_Key ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_Composite_Key : unit -&gt; unit&#xA;override this.GroupJoin_Composite_Key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.GroupJoin_Composite_Key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_Composite_Key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_Composite_Key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_Composite_Key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; unit&#xA;override this.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_base_navigation_on_derived_entity">
      <MemberSignature Language="C#" Value="public virtual void Include_base_navigation_on_derived_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_base_navigation_on_derived_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_base_navigation_on_derived_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_base_navigation_on_derived_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Include_base_navigation_on_derived_entity : unit -&gt; unit&#xA;override this.Include_base_navigation_on_derived_entity : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_base_navigation_on_derived_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_base_navigation_on_derived_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_base_navigation_on_derived_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_base_navigation_on_derived_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_and_invalid_navigation_using_string_throws">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_and_invalid_navigation_using_string_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_and_invalid_navigation_using_string_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_collection_and_invalid_navigation_using_string_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_and_invalid_navigation_using_string_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_and_invalid_navigation_using_string_throws : unit -&gt; unit&#xA;override this.Include_collection_and_invalid_navigation_using_string_throws : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_collection_and_invalid_navigation_using_string_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_and_invalid_navigation_using_string_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_and_invalid_navigation_using_string_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_and_invalid_navigation_using_string_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_group_by_reference">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_group_by_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_group_by_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_collection_group_by_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_group_by_reference ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_group_by_reference : unit -&gt; unit&#xA;override this.Include_collection_group_by_reference : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_collection_group_by_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_group_by_reference();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_group_by_reference();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_group_by_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="Issue #10974")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_lambda">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_on_derived_type_using_lambda ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_on_derived_type_using_lambda() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_lambda" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_on_derived_type_using_lambda ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_lambda : unit -&gt; unit&#xA;override this.Include_collection_on_derived_type_using_lambda : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_collection_on_derived_type_using_lambda " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_lambda();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_lambda();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_on_derived_type_using_lambda();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_lambda_with_soft_cast">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_on_derived_type_using_lambda_with_soft_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_on_derived_type_using_lambda_with_soft_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_lambda_with_soft_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_on_derived_type_using_lambda_with_soft_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_lambda_with_soft_cast : unit -&gt; unit&#xA;override this.Include_collection_on_derived_type_using_lambda_with_soft_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_collection_on_derived_type_using_lambda_with_soft_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_string">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_on_derived_type_using_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_on_derived_type_using_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_on_derived_type_using_string ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_string : unit -&gt; unit&#xA;override this.Include_collection_on_derived_type_using_string : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_collection_on_derived_type_using_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_on_derived_type_using_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_on_derived_type_using_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_circular ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_circular() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_circular" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_circular ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_circular : unit -&gt; unit&#xA;override this.Include_multiple_circular : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_circular " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_circular();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_circular();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_circular();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular_with_filter">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_circular_with_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_circular_with_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_circular_with_filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_circular_with_filter ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_circular_with_filter : unit -&gt; unit&#xA;override this.Include_multiple_circular_with_filter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_circular_with_filter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_circular_with_filter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_circular_with_filter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_circular_with_filter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_include_then_include">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_include_then_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_include_then_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_include_then_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_include_then_include ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_include_then_include : unit -&gt; unit&#xA;override this.Include_multiple_include_then_include : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_include_then_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_include_then_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_include_then_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_include_then_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_one_to_one_and_one_to_many ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_many : unit -&gt; unit&#xA;override this.Include_multiple_one_to_one_and_one_to_many : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_one_to_one_and_one_to_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many_self_reference">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_many_self_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_many_self_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_many_self_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_one_to_one_and_one_to_many_self_reference ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_many_self_reference : unit -&gt; unit&#xA;override this.Include_multiple_one_to_one_and_one_to_many_self_reference : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_many_self_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_many_self_reference();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_many_self_reference();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_one_to_one_and_one_to_many_self_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_and_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_and_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_one_and_one_to_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_one_to_one_and_one_to_one_and_one_to_many ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_one_and_one_to_many : unit -&gt; unit&#xA;override this.Include_multiple_one_to_one_and_one_to_one_and_one_to_many : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_one_and_one_to_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_one_and_one_to_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_one_to_one_and_one_to_one_and_one_to_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_one_to_one_and_one_to_one_and_one_to_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_optional_and_one_to_one_required">
      <MemberSignature Language="C#" Value="public virtual void Include_multiple_one_to_one_optional_and_one_to_one_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_multiple_one_to_one_optional_and_one_to_one_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_multiple_one_to_one_optional_and_one_to_one_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_multiple_one_to_one_optional_and_one_to_one_required ()" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_optional_and_one_to_one_required : unit -&gt; unit&#xA;override this.Include_multiple_one_to_one_optional_and_one_to_one_required : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_multiple_one_to_one_optional_and_one_to_one_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_multiple_one_to_one_optional_and_one_to_one_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_multiple_one_to_one_optional_and_one_to_one_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_multiple_one_to_one_optional_and_one_to_one_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual void Include_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_navigation_on_derived_type ()" />
      <MemberSignature Language="F#" Value="abstract member Include_navigation_on_derived_type : unit -&gt; unit&#xA;override this.Include_navigation_on_derived_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_navigation_on_derived_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_navigation_on_derived_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_entity_using_OfType">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_entity_using_OfType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_entity_using_OfType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_entity_using_OfType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_entity_using_OfType ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_entity_using_OfType : unit -&gt; unit&#xA;override this.Include_on_derived_entity_using_OfType : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_entity_using_OfType " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_entity_using_OfType();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_entity_using_OfType();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_entity_using_OfType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_entity_using_subquery_with_cast">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_entity_using_subquery_with_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_entity_using_subquery_with_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_entity_using_subquery_with_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_entity_using_subquery_with_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_entity_using_subquery_with_cast : unit -&gt; unit&#xA;override this.Include_on_derived_entity_using_subquery_with_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_entity_using_subquery_with_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_entity_using_subquery_with_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_entity_using_subquery_with_cast_AsNoTracking">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_entity_using_subquery_with_cast_AsNoTracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_entity_using_subquery_with_cast_AsNoTracking() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_entity_using_subquery_with_cast_AsNoTracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_entity_using_subquery_with_cast_AsNoTracking ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_entity_using_subquery_with_cast_AsNoTracking : unit -&gt; unit&#xA;override this.Include_on_derived_entity_using_subquery_with_cast_AsNoTracking : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_entity_using_subquery_with_cast_AsNoTracking " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast_AsNoTracking();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast_AsNoTracking();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_entity_using_subquery_with_cast_AsNoTracking();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity : unit -&gt; unit&#xA;override this.Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_entity_using_subquery_with_cast_cross_product_base_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_multi_level">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_multi_level ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_multi_level : unit -&gt; unit&#xA;override this.Include_on_derived_multi_level : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_multi_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_multi_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_type_with_order_by_and_paging">
      <MemberSignature Language="C#" Value="public virtual void Include_on_derived_type_with_order_by_and_paging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_derived_type_with_order_by_and_paging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_derived_type_with_order_by_and_paging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_derived_type_with_order_by_and_paging ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_type_with_order_by_and_paging : unit -&gt; unit&#xA;override this.Include_on_derived_type_with_order_by_and_paging : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_derived_type_with_order_by_and_paging " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_derived_type_with_order_by_and_paging();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_derived_type_with_order_by_and_paging();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_derived_type_with_order_by_and_paging();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_coalesce_result3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_complex_projection_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #9256")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_conditional_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result">
      <MemberSignature Language="C#" Value="public virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result ()" />
      <MemberSignature Language="F#" Value="abstract member Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result : unit -&gt; unit&#xA;override this.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_on_GroupJoin_SelectMany_DefaultIfEmpty_with_inheritance_and_coalesce_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_lambda ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_lambda() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_lambda ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_lambda : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_lambda();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda_with_soft_cast">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_lambda_with_soft_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_lambda_with_soft_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda_with_soft_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_lambda_with_soft_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda_with_soft_cast : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_lambda_with_soft_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda_with_soft_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda_with_tracking">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_lambda_with_tracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_lambda_with_tracking() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda_with_tracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_lambda_with_tracking ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda_with_tracking : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_lambda_with_tracking : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda_with_tracking " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda_with_tracking();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_lambda_with_tracking();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_lambda_with_tracking();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_string ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_string : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string_nested1">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_string_nested1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_string_nested1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string_nested1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_string_nested1 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string_nested1 : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_string_nested1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string_nested1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string_nested1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string_nested1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_string_nested1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string_nested2">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_on_derived_type_using_string_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_on_derived_type_using_string_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_on_derived_type_using_string_nested2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string_nested2 : unit -&gt; unit&#xA;override this.Include_reference_on_derived_type_using_string_nested2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string_nested2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_on_derived_type_using_string_nested2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_on_derived_type_using_string_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_using_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Include_using_alternate_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_using_alternate_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_using_alternate_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_using_alternate_key ()" />
      <MemberSignature Language="F#" Value="abstract member Include_using_alternate_key : unit -&gt; unit&#xA;override this.Include_using_alternate_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_using_alternate_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_using_alternate_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_using_alternate_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_using_alternate_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_where_list_contains_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_where_list_contains_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_where_list_contains_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_where_list_contains_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_where_list_contains_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_where_list_contains_navigation : unit -&gt; unit&#xA;override this.Include_where_list_contains_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_where_list_contains_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_where_list_contains_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_where_list_contains_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_where_list_contains_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_where_list_contains_navigation2">
      <MemberSignature Language="C#" Value="public virtual void Include_where_list_contains_navigation2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_where_list_contains_navigation2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_where_list_contains_navigation2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_where_list_contains_navigation2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_where_list_contains_navigation2 : unit -&gt; unit&#xA;override this.Include_where_list_contains_navigation2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_where_list_contains_navigation2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_where_list_contains_navigation2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_where_list_contains_navigation2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_where_list_contains_navigation2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_concat">
      <MemberSignature Language="C#" Value="public virtual void Include_with_concat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_concat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_concat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_concat ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_concat : unit -&gt; unit&#xA;override this.Include_with_concat : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_concat " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_concat();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_concat();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_concat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_and_last">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_and_last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_and_last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_and_last" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_and_last ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_and_last : unit -&gt; unit&#xA;override this.Include_with_group_by_and_last : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_and_last " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_and_last();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_and_last();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_and_last();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_distinct">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_distinct : unit -&gt; unit&#xA;override this.Include_with_group_by_distinct : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_on_entity_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_on_entity_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_on_entity_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_navigation : unit -&gt; unit&#xA;override this.Include_with_group_by_on_entity_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_on_entity_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_on_entity_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_on_entity_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_on_entity_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_navigation_with_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_on_entity_navigation_with_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_on_entity_navigation_with_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_navigation_with_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_on_entity_navigation_with_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_navigation_with_inheritance : unit -&gt; unit&#xA;override this.Include_with_group_by_on_entity_navigation_with_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_on_entity_navigation_with_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_on_entity_navigation_with_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_on_entity_navigation_with_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_on_entity_navigation_with_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_qsre">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_on_entity_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_on_entity_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_on_entity_qsre ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_qsre : unit -&gt; unit&#xA;override this.Include_with_group_by_on_entity_qsre : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_on_entity_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_on_entity_qsre();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_on_entity_qsre();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_on_entity_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_qsre_with_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_on_entity_qsre_with_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_on_entity_qsre_with_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_qsre_with_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_on_entity_qsre_with_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_qsre_with_composite_key : unit -&gt; unit&#xA;override this.Include_with_group_by_on_entity_qsre_with_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_on_entity_qsre_with_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_on_entity_qsre_with_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_on_entity_qsre_with_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_on_entity_qsre_with_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_order_by_take">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_order_by_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_order_by_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_order_by_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_order_by_take ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_order_by_take : unit -&gt; unit&#xA;override this.Include_with_group_by_order_by_take : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_order_by_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_order_by_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_order_by_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_order_by_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_with_composite_group_key">
      <MemberSignature Language="C#" Value="public virtual void Include_with_group_by_with_composite_group_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_group_by_with_composite_group_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_group_by_with_composite_group_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_group_by_with_composite_group_key ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_with_composite_group_key : unit -&gt; unit&#xA;override this.Include_with_group_by_with_composite_group_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_group_by_with_composite_group_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_group_by_with_composite_group_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_group_by_with_composite_group_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_group_by_with_composite_group_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_and_inheritance1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_and_inheritance1 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_and_inheritance1 : unit -&gt; unit&#xA;override this.Include_with_join_and_inheritance1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_and_inheritance1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_and_inheritance1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_and_inheritance1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_and_inheritance1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_and_inheritance2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_and_inheritance2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_and_inheritance2 : unit -&gt; unit&#xA;override this.Include_with_join_and_inheritance2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_and_inheritance2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_and_inheritance2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_and_inheritance2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_and_inheritance2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_and_inheritance3">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_and_inheritance3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_and_inheritance3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_and_inheritance3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_and_inheritance3 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_and_inheritance3 : unit -&gt; unit&#xA;override this.Include_with_join_and_inheritance3 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_and_inheritance3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_and_inheritance3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_and_inheritance3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_and_inheritance3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_collection1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_collection1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_collection1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_collection1 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_collection1 : unit -&gt; unit&#xA;override this.Include_with_join_collection1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_collection1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_collection1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_collection1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_collection1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_collection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_collection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_collection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_collection2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_collection2 : unit -&gt; unit&#xA;override this.Include_with_join_collection2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_collection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_collection2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_collection2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_collection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_multi_level">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_multi_level ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_multi_level : unit -&gt; unit&#xA;override this.Include_with_join_multi_level : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_multi_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_multi_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference1">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_reference1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_reference1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_reference1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_reference1 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_reference1 : unit -&gt; unit&#xA;override this.Include_with_join_reference1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_reference1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_reference1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_reference1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_reference1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference2">
      <MemberSignature Language="C#" Value="public virtual void Include_with_join_reference2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_join_reference2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_join_reference2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_join_reference2 ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_reference2 : unit -&gt; unit&#xA;override this.Include_with_join_reference2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_join_reference2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_join_reference2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_join_reference2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_join_reference2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_nested_navigation_in_order_by">
      <MemberSignature Language="C#" Value="public virtual void Include_with_nested_navigation_in_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_nested_navigation_in_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Include_with_nested_navigation_in_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_nested_navigation_in_order_by ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_nested_navigation_in_order_by : unit -&gt; unit&#xA;override this.Include_with_nested_navigation_in_order_by : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Include_with_nested_navigation_in_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_nested_navigation_in_order_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_nested_navigation_in_order_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_nested_navigation_in_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_navigation_translated_to_subquery_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_composite_key : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_navigation_translated_to_subquery_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_composite_key : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inheritance : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_navigation">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_inner_key_is_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_inner_key_is_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_inner_key_is_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_navigation : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_inner_key_is_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_nested_navigation">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_inner_key_is_nested_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_inner_key_is_nested_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_nested_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_inner_key_is_nested_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_nested_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_outer_key_is_navigation">
      <MemberSignature Language="C#" Value="public virtual void Join_on_entity_qsre_keys_outer_key_is_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_on_entity_qsre_keys_outer_key_is_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_outer_key_is_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_on_entity_qsre_keys_outer_key_is_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_outer_key_is_navigation : unit -&gt; unit&#xA;override this.Join_on_entity_qsre_keys_outer_key_is_navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_on_entity_qsre_keys_outer_key_is_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_outer_key_is_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_on_entity_qsre_keys_outer_key_is_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_on_entity_qsre_keys_outer_key_is_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_condition_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_condition_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_condition_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_predicate_condition_equals_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_predicate_condition_equals_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Join_predicate_condition_equals_condition : unit -&gt; unit&#xA;override this.Join_predicate_condition_equals_condition : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_predicate_condition_equals_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_predicate_condition_equals_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_predicate_condition_equals_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_predicate_condition_equals_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_value">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_predicate_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_predicate_value ()" />
      <MemberSignature Language="F#" Value="abstract member Join_predicate_value : unit -&gt; unit&#xA;override this.Join_predicate_value : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_predicate_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_predicate_value();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_predicate_value();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_predicate_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_predicate_value_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Join_predicate_value_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_predicate_value_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_predicate_value_equals_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_predicate_value_equals_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Join_predicate_value_equals_condition : unit -&gt; unit&#xA;override this.Join_predicate_value_equals_condition : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_predicate_value_equals_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_predicate_value_equals_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_predicate_value_equals_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_predicate_value_equals_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_with_complex_key_selector">
      <MemberSignature Language="C#" Value="public virtual void Join_with_complex_key_selector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_with_complex_key_selector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Join_with_complex_key_selector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_with_complex_key_selector ()" />
      <MemberSignature Language="F#" Value="abstract member Join_with_complex_key_selector : unit -&gt; unit&#xA;override this.Join_with_complex_key_selector : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Join_with_complex_key_selector " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_with_complex_key_selector();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_with_complex_key_selector();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_with_complex_key_selector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_condition_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_condition_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_condition_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Left_join_predicate_condition_equals_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Left_join_predicate_condition_equals_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Left_join_predicate_condition_equals_condition : unit -&gt; unit&#xA;override this.Left_join_predicate_condition_equals_condition : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Left_join_predicate_condition_equals_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Left_join_predicate_condition_equals_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Left_join_predicate_condition_equals_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Left_join_predicate_condition_equals_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_value">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Left_join_predicate_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Left_join_predicate_value ()" />
      <MemberSignature Language="F#" Value="abstract member Left_join_predicate_value : unit -&gt; unit&#xA;override this.Left_join_predicate_value : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Left_join_predicate_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Left_join_predicate_value();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Left_join_predicate_value();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Left_join_predicate_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left_join_predicate_value_equals_condition">
      <MemberSignature Language="C#" Value="public virtual void Left_join_predicate_value_equals_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Left_join_predicate_value_equals_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Left_join_predicate_value_equals_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Left_join_predicate_value_equals_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Left_join_predicate_value_equals_condition : unit -&gt; unit&#xA;override this.Left_join_predicate_value_equals_condition : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Left_join_predicate_value_equals_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Left_join_predicate_value_equals_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Left_join_predicate_value_equals_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Left_join_predicate_value_equals_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member_access_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Member_access_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Member_access_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Member_access_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Member_access_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Member_access_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Member_access_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Member_access_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Member_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Member_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Member_access_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member_access_on_derived_entity_using_cast_and_let">
      <MemberSignature Language="C#" Value="public virtual void Member_access_on_derived_entity_using_cast_and_let ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Member_access_on_derived_entity_using_cast_and_let() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Member_access_on_derived_entity_using_cast_and_let" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Member_access_on_derived_entity_using_cast_and_let ()" />
      <MemberSignature Language="F#" Value="abstract member Member_access_on_derived_entity_using_cast_and_let : unit -&gt; unit&#xA;override this.Member_access_on_derived_entity_using_cast_and_let : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Member_access_on_derived_entity_using_cast_and_let " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Member_access_on_derived_entity_using_cast_and_let();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Member_access_on_derived_entity_using_cast_and_let();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Member_access_on_derived_entity_using_cast_and_let();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member_access_on_derived_materialized_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Member_access_on_derived_materialized_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Member_access_on_derived_materialized_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Member_access_on_derived_materialized_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Member_access_on_derived_materialized_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Member_access_on_derived_materialized_entity_using_cast : unit -&gt; unit&#xA;override this.Member_access_on_derived_materialized_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Member_access_on_derived_materialized_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Member_access_on_derived_materialized_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Member_access_on_derived_materialized_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Member_access_on_derived_materialized_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_derived_included_on_one_method">
      <MemberSignature Language="C#" Value="public virtual void Multiple_derived_included_on_one_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_derived_included_on_one_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Multiple_derived_included_on_one_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_derived_included_on_one_method ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_derived_included_on_one_method : unit -&gt; unit&#xA;override this.Multiple_derived_included_on_one_method : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Multiple_derived_included_on_one_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_derived_included_on_one_method();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_derived_included_on_one_method();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_derived_included_on_one_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include : unit -&gt; unit&#xA;override this.Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_order_bys_are_properly_lifted_from_subquery_created_by_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_access_fk_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Navigation_access_fk_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_access_fk_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Navigation_access_fk_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_access_fk_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_access_fk_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Navigation_access_fk_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Navigation_access_fk_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_access_fk_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_access_fk_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_access_fk_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_access_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Navigation_access_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_access_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Navigation_access_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_access_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_access_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Navigation_access_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Navigation_access_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_access_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_access_on_derived_materialized_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Navigation_access_on_derived_materialized_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_access_on_derived_materialized_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Navigation_access_on_derived_materialized_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_access_on_derived_materialized_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_access_on_derived_materialized_entity_using_cast : unit -&gt; unit&#xA;override this.Navigation_access_on_derived_materialized_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Navigation_access_on_derived_materialized_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_access_on_derived_materialized_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_access_on_derived_materialized_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_access_on_derived_materialized_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_access_via_EFProperty_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Navigation_access_via_EFProperty_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_access_via_EFProperty_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Navigation_access_via_EFProperty_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_access_via_EFProperty_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_access_via_EFProperty_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Navigation_access_via_EFProperty_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Navigation_access_via_EFProperty_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_access_via_EFProperty_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_access_via_EFProperty_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_access_via_EFProperty_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_accessed_twice_outside_and_inside_subquery">
      <MemberSignature Language="C#" Value="public virtual void Navigation_accessed_twice_outside_and_inside_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_accessed_twice_outside_and_inside_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Navigation_accessed_twice_outside_and_inside_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_accessed_twice_outside_and_inside_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_accessed_twice_outside_and_inside_subquery : unit -&gt; unit&#xA;override this.Navigation_accessed_twice_outside_and_inside_subquery : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Navigation_accessed_twice_outside_and_inside_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_accessed_twice_outside_and_inside_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_accessed_twice_outside_and_inside_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_accessed_twice_outside_and_inside_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negated_bool_ternary_inside_anonymous_type_in_projection">
      <MemberSignature Language="C#" Value="public virtual void Negated_bool_ternary_inside_anonymous_type_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Negated_bool_ternary_inside_anonymous_type_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Negated_bool_ternary_inside_anonymous_type_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Negated_bool_ternary_inside_anonymous_type_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Negated_bool_ternary_inside_anonymous_type_in_projection : unit -&gt; unit&#xA;override this.Negated_bool_ternary_inside_anonymous_type_in_projection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Negated_bool_ternary_inside_anonymous_type_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Negated_bool_ternary_inside_anonymous_type_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Negated_bool_ternary_inside_anonymous_type_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Negated_bool_ternary_inside_anonymous_type_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client">
      <MemberSignature Language="C#" Value="public virtual void Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client ()" />
      <MemberSignature Language="F#" Value="abstract member Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client : unit -&gt; unit&#xA;override this.Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_flattened_GroupJoin_with_result_operator_evaluates_on_the_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_parameter_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_parameter_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_parameter_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_parameter_is_used_for_non_unicode_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_parameter_is_used_for_non_unicode_column ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_parameter_is_used_for_non_unicode_column : unit -&gt; unit&#xA;override this.Non_unicode_parameter_is_used_for_non_unicode_column : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_parameter_is_used_for_non_unicode_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_parameter_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_parameter_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_parameter_is_used_for_non_unicode_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literal_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literal_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literal_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literal_is_used_for_non_unicode_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literal_is_used_for_non_unicode_column ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literal_is_used_for_non_unicode_column : unit -&gt; unit&#xA;override this.Non_unicode_string_literal_is_used_for_non_unicode_column : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literal_is_used_for_non_unicode_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literal_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literal_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literal_is_used_for_non_unicode_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literal_is_used_for_non_unicode_column_right">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literal_is_used_for_non_unicode_column_right ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literal_is_used_for_non_unicode_column_right() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literal_is_used_for_non_unicode_column_right" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literal_is_used_for_non_unicode_column_right ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literal_is_used_for_non_unicode_column_right : unit -&gt; unit&#xA;override this.Non_unicode_string_literal_is_used_for_non_unicode_column_right : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literal_is_used_for_non_unicode_column_right " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literal_is_used_for_non_unicode_column_right();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literal_is_used_for_non_unicode_column_right();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literal_is_used_for_non_unicode_column_right();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column : unit -&gt; unit&#xA;override this.Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literals_in_contains_is_used_for_non_unicode_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery : unit -&gt; unit&#xA;override this.Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat : unit -&gt; unit&#xA;override this.Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_concat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="Test does not pass. See issue#4978")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains : unit -&gt; unit&#xA;override this.Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery : unit -&gt; unit&#xA;override this.Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Non_unicode_string_literals_is_used_for_non_unicode_column_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization1">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization1 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization1 : unit -&gt; unit&#xA;override this.Null_propagation_optimization1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization2">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization2 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization2 : unit -&gt; unit&#xA;override this.Null_propagation_optimization2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization3">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization3 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization3 : unit -&gt; unit&#xA;override this.Null_propagation_optimization3 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization4">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization4 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization4 : unit -&gt; unit&#xA;override this.Null_propagation_optimization4 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization5">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization5 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization5 : unit -&gt; unit&#xA;override this.Null_propagation_optimization5 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_propagation_optimization6">
      <MemberSignature Language="C#" Value="public virtual void Null_propagation_optimization6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_propagation_optimization6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_propagation_optimization6" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_propagation_optimization6 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_propagation_optimization6 : unit -&gt; unit&#xA;override this.Null_propagation_optimization6 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_propagation_optimization6 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_propagation_optimization6();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_propagation_optimization6();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_propagation_optimization6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied">
      <MemberSignature Language="C#" Value="public virtual void Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied ()" />
      <MemberSignature Language="F#" Value="abstract member Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied : unit -&gt; unit&#xA;override this.Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_semantics_on_nullable_bool_from_inner_join_subuery_is_fully_applied();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied">
      <MemberSignature Language="C#" Value="public virtual void Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied ()" />
      <MemberSignature Language="F#" Value="abstract member Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied : unit -&gt; unit&#xA;override this.Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_semantics_on_nullable_bool_from_left_join_subuery_is_fully_applied();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_Navigation_Null_Coalesce_To_Clr_Type">
      <MemberSignature Language="C#" Value="public virtual void Optional_Navigation_Null_Coalesce_To_Clr_Type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_Navigation_Null_Coalesce_To_Clr_Type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_Navigation_Null_Coalesce_To_Clr_Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_Navigation_Null_Coalesce_To_Clr_Type ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_Navigation_Null_Coalesce_To_Clr_Type : unit -&gt; unit&#xA;override this.Optional_Navigation_Null_Coalesce_To_Clr_Type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_Navigation_Null_Coalesce_To_Clr_Type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_Navigation_Null_Coalesce_To_Clr_Type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_Navigation_Null_Coalesce_To_Clr_Type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_Navigation_Null_Coalesce_To_Clr_Type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_all">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_all ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_all() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_all" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_all ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_all : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_all : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_all " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_all();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_all();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_all();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_array_initializers">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_array_initializers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_array_initializers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_array_initializers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_array_initializers ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_array_initializers : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_array_initializers : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_array_initializers " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_array_initializers();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_array_initializers();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_array_initializers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_binary_and_expression">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_binary_and_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_binary_and_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_binary_and_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_binary_and_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_binary_and_expression : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_binary_and_expression : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_binary_and_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_binary_and_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_binary_and_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_binary_and_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_binary_expression : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_binary_expression : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_conditional_expression">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_conditional_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_conditional_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_conditional_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_conditional_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_conditional_expression : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_conditional_expression : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_conditional_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_conditional_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_conditional_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_conditional_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_contains">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_contains ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_contains : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_contains : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_DTOs">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_DTOs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_DTOs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_DTOs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_DTOs ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_DTOs : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_DTOs : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_DTOs " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_DTOs();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_DTOs();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_DTOs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_groupby">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_groupby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_groupby ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_groupby : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_groupby : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_groupby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_groupby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_groupby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_groupby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_list_initializers">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_list_initializers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_list_initializers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_list_initializers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_list_initializers ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_list_initializers : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_list_initializers : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_list_initializers " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_list_initializers();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_list_initializers();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_list_initializers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_orderby">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_orderby : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_orderby : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_predicate : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_predicate : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_predicate_negated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_predicate_negated ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_predicate_negated : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_predicate_negated : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_predicate_negated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_predicate_negated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated_complex1">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated_complex1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_predicate_negated_complex1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_predicate_negated_complex1 ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_predicate_negated_complex1 : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_predicate_negated_complex1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_predicate_negated_complex1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #9254")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate_negated_complex2">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate_negated_complex2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_predicate_negated_complex2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_predicate_negated_complex2 ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_predicate_negated_complex2 : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_predicate_negated_complex2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_predicate_negated_complex2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_predicate_negated_complex2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #9254")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_predicate2">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_predicate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_predicate2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_predicate2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_predicate2 ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_predicate2 : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_predicate2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_predicate2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_predicate2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_predicate2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_projection">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_projection : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_projection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_projection_into_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_projection_into_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_projection_into_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_projection_into_anonymous_type : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_projection_into_anonymous_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_projection_into_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_projection_into_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_skip">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_skip ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_skip : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_skip : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_type_compensation_works_with_take">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_type_compensation_works_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_type_compensation_works_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_type_compensation_works_with_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_type_compensation_works_with_take ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_type_compensation_works_with_take : unit -&gt; unit&#xA;override this.Optional_navigation_type_compensation_works_with_take : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_type_compensation_works_with_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_type_compensation_works_with_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_type_compensation_works_with_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_with_collection_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_with_collection_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_with_collection_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Optional_navigation_with_collection_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_with_collection_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_with_collection_composite_key : unit -&gt; unit&#xA;override this.Optional_navigation_with_collection_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Optional_navigation_with_collection_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_with_collection_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_with_collection_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_with_collection_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_entity_qsre">
      <MemberSignature Language="C#" Value="public virtual void Order_by_entity_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_entity_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_entity_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_entity_qsre ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_entity_qsre : unit -&gt; unit&#xA;override this.Order_by_entity_qsre : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_entity_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_entity_qsre();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_entity_qsre();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_entity_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_entity_qsre_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Order_by_entity_qsre_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_entity_qsre_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_entity_qsre_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_entity_qsre_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_entity_qsre_composite_key : unit -&gt; unit&#xA;override this.Order_by_entity_qsre_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_entity_qsre_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_entity_qsre_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_entity_qsre_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_entity_qsre_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_entity_qsre_with_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Order_by_entity_qsre_with_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_entity_qsre_with_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_entity_qsre_with_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_entity_qsre_with_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_entity_qsre_with_inheritance : unit -&gt; unit&#xA;override this.Order_by_entity_qsre_with_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_entity_qsre_with_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_entity_qsre_with_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_entity_qsre_with_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_entity_qsre_with_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_entity_qsre_with_other_orderbys">
      <MemberSignature Language="C#" Value="public virtual void Order_by_entity_qsre_with_other_orderbys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_entity_qsre_with_other_orderbys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_entity_qsre_with_other_orderbys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_entity_qsre_with_other_orderbys ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_entity_qsre_with_other_orderbys : unit -&gt; unit&#xA;override this.Order_by_entity_qsre_with_other_orderbys : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_entity_qsre_with_other_orderbys " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_entity_qsre_with_other_orderbys();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_entity_qsre_with_other_orderbys();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_entity_qsre_with_other_orderbys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_is_properly_lifted_from_subquery_created_by_include">
      <MemberSignature Language="C#" Value="public virtual void Order_by_is_properly_lifted_from_subquery_created_by_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_is_properly_lifted_from_subquery_created_by_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_is_properly_lifted_from_subquery_created_by_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_is_properly_lifted_from_subquery_created_by_include ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit&#xA;override this.Order_by_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_is_properly_lifted_from_subquery_created_by_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query">
      <MemberSignature Language="C#" Value="public virtual void Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query : unit -&gt; unit&#xA;override this.Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_is_properly_lifted_from_subquery_with_same_order_by_in_the_outer_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_then_by_is_properly_lifted_from_subquery_created_by_include">
      <MemberSignature Language="C#" Value="public virtual void Order_by_then_by_is_properly_lifted_from_subquery_created_by_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_then_by_is_properly_lifted_from_subquery_created_by_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Order_by_then_by_is_properly_lifted_from_subquery_created_by_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_then_by_is_properly_lifted_from_subquery_created_by_include ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_then_by_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit&#xA;override this.Order_by_then_by_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Order_by_then_by_is_properly_lifted_from_subquery_created_by_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_then_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_then_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_then_by_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used">
      <MemberSignature Language="C#" Value="public virtual void Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used ()" />
      <MemberSignature Language="F#" Value="abstract member Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used : unit -&gt; unit&#xA;override this.Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Orderby_added_for_client_side_GroupJoin_composite_dependent_to_principal_LOJ_when_incomplete_key_is_used();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_group_join_key">
      <MemberSignature Language="C#" Value="public virtual void Outer_parameter_in_group_join_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outer_parameter_in_group_join_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Outer_parameter_in_group_join_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Outer_parameter_in_group_join_key ()" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_group_join_key : unit -&gt; unit&#xA;override this.Outer_parameter_in_group_join_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Outer_parameter_in_group_join_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Outer_parameter_in_group_join_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Outer_parameter_in_group_join_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Outer_parameter_in_group_join_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_group_join_with_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Outer_parameter_in_group_join_with_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outer_parameter_in_group_join_with_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Outer_parameter_in_group_join_with_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Outer_parameter_in_group_join_with_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_group_join_with_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Outer_parameter_in_group_join_with_DefaultIfEmpty : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Outer_parameter_in_group_join_with_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Outer_parameter_in_group_join_with_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Outer_parameter_in_group_join_with_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Outer_parameter_in_group_join_with_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_join_key">
      <MemberSignature Language="C#" Value="public virtual void Outer_parameter_in_join_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outer_parameter_in_join_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Outer_parameter_in_join_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Outer_parameter_in_join_key ()" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_join_key : unit -&gt; unit&#xA;override this.Outer_parameter_in_join_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Outer_parameter_in_join_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Outer_parameter_in_join_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Outer_parameter_in_join_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Outer_parameter_in_join_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_join_key_inner_and_outer">
      <MemberSignature Language="C#" Value="public virtual void Outer_parameter_in_join_key_inner_and_outer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outer_parameter_in_join_key_inner_and_outer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Outer_parameter_in_join_key_inner_and_outer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Outer_parameter_in_join_key_inner_and_outer ()" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_join_key_inner_and_outer : unit -&gt; unit&#xA;override this.Outer_parameter_in_join_key_inner_and_outer : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Outer_parameter_in_join_key_inner_and_outer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Outer_parameter_in_join_key_inner_and_outer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Outer_parameter_in_join_key_inner_and_outer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Outer_parameter_in_join_key_inner_and_outer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_with_inheritance1">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_with_inheritance1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_with_inheritance1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Project_collection_navigation_with_inheritance1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_with_inheritance1 ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_with_inheritance1 : unit -&gt; unit&#xA;override this.Project_collection_navigation_with_inheritance1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Project_collection_navigation_with_inheritance1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_with_inheritance1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_with_inheritance2">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_with_inheritance2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_with_inheritance2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Project_collection_navigation_with_inheritance2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_with_inheritance2 ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_with_inheritance2 : unit -&gt; unit&#xA;override this.Project_collection_navigation_with_inheritance2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Project_collection_navigation_with_inheritance2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_with_inheritance2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_with_inheritance3">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_with_inheritance3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_with_inheritance3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Project_collection_navigation_with_inheritance3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_with_inheritance3 ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_with_inheritance3 : unit -&gt; unit&#xA;override this.Project_collection_navigation_with_inheritance3 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Project_collection_navigation_with_inheritance3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_with_inheritance3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_with_inheritance3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_one_value_type_from_empty_collection">
      <MemberSignature Language="C#" Value="public virtual void Project_one_value_type_from_empty_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_one_value_type_from_empty_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Project_one_value_type_from_empty_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_one_value_type_from_empty_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Project_one_value_type_from_empty_collection : unit -&gt; unit&#xA;override this.Project_one_value_type_from_empty_collection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Project_one_value_type_from_empty_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_one_value_type_from_empty_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_one_value_type_from_empty_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_one_value_type_from_empty_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projecting_nullable_bool_in_conditional_works">
      <MemberSignature Language="C#" Value="public virtual void Projecting_nullable_bool_in_conditional_works ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projecting_nullable_bool_in_conditional_works() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Projecting_nullable_bool_in_conditional_works" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projecting_nullable_bool_in_conditional_works ()" />
      <MemberSignature Language="F#" Value="abstract member Projecting_nullable_bool_in_conditional_works : unit -&gt; unit&#xA;override this.Projecting_nullable_bool_in_conditional_works : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Projecting_nullable_bool_in_conditional_works " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projecting_nullable_bool_in_conditional_works();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projecting_nullable_bool_in_conditional_works();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projecting_nullable_bool_in_conditional_works();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property_access_on_derived_entity_using_cast">
      <MemberSignature Language="C#" Value="public virtual void Property_access_on_derived_entity_using_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Property_access_on_derived_entity_using_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Property_access_on_derived_entity_using_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Property_access_on_derived_entity_using_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Property_access_on_derived_entity_using_cast : unit -&gt; unit&#xA;override this.Property_access_on_derived_entity_using_cast : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Property_access_on_derived_entity_using_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Property_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Property_access_on_derived_entity_using_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Property_access_on_derived_entity_using_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_coalesce_with_anonymous_types">
      <MemberSignature Language="C#" Value="public virtual void Select_coalesce_with_anonymous_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_coalesce_with_anonymous_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_coalesce_with_anonymous_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_coalesce_with_anonymous_types ()" />
      <MemberSignature Language="F#" Value="abstract member Select_coalesce_with_anonymous_types : unit -&gt; unit&#xA;override this.Select_coalesce_with_anonymous_types : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_coalesce_with_anonymous_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_coalesce_with_anonymous_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_coalesce_with_anonymous_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_coalesce_with_anonymous_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_comparison_with_null">
      <MemberSignature Language="C#" Value="public virtual void Select_comparison_with_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_comparison_with_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_comparison_with_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_comparison_with_null ()" />
      <MemberSignature Language="F#" Value="abstract member Select_comparison_with_null : unit -&gt; unit&#xA;override this.Select_comparison_with_null : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_comparison_with_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_comparison_with_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_comparison_with_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_comparison_with_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_conditional_with_anonymous_type_and_null_constant">
      <MemberSignature Language="C#" Value="public virtual void Select_conditional_with_anonymous_type_and_null_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_conditional_with_anonymous_type_and_null_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_conditional_with_anonymous_type_and_null_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_conditional_with_anonymous_type_and_null_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Select_conditional_with_anonymous_type_and_null_constant : unit -&gt; unit&#xA;override this.Select_conditional_with_anonymous_type_and_null_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_conditional_with_anonymous_type_and_null_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_conditional_with_anonymous_type_and_null_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_conditional_with_anonymous_type_and_null_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_conditional_with_anonymous_type_and_null_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_conditional_with_anonymous_types">
      <MemberSignature Language="C#" Value="public virtual void Select_conditional_with_anonymous_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_conditional_with_anonymous_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_conditional_with_anonymous_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_conditional_with_anonymous_types ()" />
      <MemberSignature Language="F#" Value="abstract member Select_conditional_with_anonymous_types : unit -&gt; unit&#xA;override this.Select_conditional_with_anonymous_types : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_conditional_with_anonymous_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_conditional_with_anonymous_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_conditional_with_anonymous_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_conditional_with_anonymous_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_correlated_filtered_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_filtered_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_filtered_collection : unit -&gt; unit&#xA;override this.Select_correlated_filtered_collection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_correlated_filtered_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_filtered_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_filtered_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_filtered_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection_with_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection_with_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection_with_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_correlated_filtered_collection_with_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_filtered_collection_with_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_filtered_collection_with_composite_key : unit -&gt; unit&#xA;override this.Select_correlated_filtered_collection_with_composite_key : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_correlated_filtered_collection_with_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_filtered_collection_with_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_filtered_collection_with_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_filtered_collection_with_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_filtered_collection_works_with_caching">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_filtered_collection_works_with_caching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_filtered_collection_works_with_caching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_correlated_filtered_collection_works_with_caching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_filtered_collection_works_with_caching ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_filtered_collection_works_with_caching : unit -&gt; unit&#xA;override this.Select_correlated_filtered_collection_works_with_caching : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_correlated_filtered_collection_works_with_caching " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_filtered_collection_works_with_caching();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_filtered_collection_works_with_caching();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_filtered_collection_works_with_caching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_enum_has_flag">
      <MemberSignature Language="C#" Value="public virtual void Select_enum_has_flag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_enum_has_flag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_enum_has_flag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_enum_has_flag ()" />
      <MemberSignature Language="F#" Value="abstract member Select_enum_has_flag : unit -&gt; unit&#xA;override this.Select_enum_has_flag : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_enum_has_flag " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_enum_has_flag();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_enum_has_flag();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_enum_has_flag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_inverted_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_inverted_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_inverted_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_inverted_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_inverted_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Select_inverted_boolean : unit -&gt; unit&#xA;override this.Select_inverted_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_inverted_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_inverted_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_inverted_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_inverted_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_length_of_string_property">
      <MemberSignature Language="C#" Value="public virtual void Select_length_of_string_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_length_of_string_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_length_of_string_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_length_of_string_property ()" />
      <MemberSignature Language="F#" Value="abstract member Select_length_of_string_property : unit -&gt; unit&#xA;override this.Select_length_of_string_property : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_length_of_string_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_length_of_string_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_length_of_string_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_length_of_string_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_conditions">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_multiple_conditions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_multiple_conditions ()" />
      <MemberSignature Language="F#" Value="abstract member Select_multiple_conditions : unit -&gt; unit&#xA;override this.Select_multiple_conditions : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_multiple_conditions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_multiple_conditions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_multiple_conditions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_multiple_conditions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_navigation_with_concat_and_count">
      <MemberSignature Language="C#" Value="public virtual void Select_navigation_with_concat_and_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_navigation_with_concat_and_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_navigation_with_concat_and_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_navigation_with_concat_and_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_navigation_with_concat_and_count : unit -&gt; unit&#xA;override this.Select_navigation_with_concat_and_count : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_navigation_with_concat_and_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_navigation_with_concat_and_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_navigation_with_concat_and_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_navigation_with_concat_and_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_ternary_operations">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_ternary_operations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_ternary_operations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_nested_ternary_operations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_ternary_operations ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_ternary_operations : unit -&gt; unit&#xA;override this.Select_nested_ternary_operations : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_nested_ternary_operations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_ternary_operations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_ternary_operations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_ternary_operations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_conditional_with_inheritance">
      <MemberSignature Language="C#" Value="public virtual void Select_null_conditional_with_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_conditional_with_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_conditional_with_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_conditional_with_inheritance ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_conditional_with_inheritance : unit -&gt; unit&#xA;override this.Select_null_conditional_with_inheritance : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_conditional_with_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_conditional_with_inheritance();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_conditional_with_inheritance();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_conditional_with_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_conditional_with_inheritance_negative">
      <MemberSignature Language="C#" Value="public virtual void Select_null_conditional_with_inheritance_negative ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_conditional_with_inheritance_negative() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_conditional_with_inheritance_negative" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_conditional_with_inheritance_negative ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_conditional_with_inheritance_negative : unit -&gt; unit&#xA;override this.Select_null_conditional_with_inheritance_negative : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_conditional_with_inheritance_negative " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_conditional_with_inheritance_negative();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_conditional_with_inheritance_negative();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_conditional_with_inheritance_negative();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative1">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative1 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative1 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative1 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative2">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative2 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative3">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative3 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative3 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative3 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative4">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative4 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative4 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative4 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative5">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative5 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative5 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative5 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative6">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative6" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative6 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative6 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative6 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative6 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative6();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative6();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative7">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative7() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative7" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative7 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative7 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative7 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative7 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative7();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative7();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_negative8">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_negative8 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_negative8() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_negative8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_negative8 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_negative8 : unit -&gt; unit&#xA;override this.Select_null_propagation_negative8 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_negative8 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_negative8();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_negative8();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_negative8();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_optimization7">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_optimization7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_optimization7() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_optimization7" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_optimization7 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_optimization7 : unit -&gt; unit&#xA;override this.Select_null_propagation_optimization7 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_optimization7 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_optimization7();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_optimization7();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_optimization7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_optimization8">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_optimization8 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_optimization8() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_optimization8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_optimization8 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_optimization8 : unit -&gt; unit&#xA;override this.Select_null_propagation_optimization8 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_optimization8 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_optimization8();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_optimization8();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_optimization8();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #9201")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_optimization9">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_optimization9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_optimization9() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_optimization9" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_optimization9 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_optimization9 : unit -&gt; unit&#xA;override this.Select_null_propagation_optimization9 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_optimization9 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_optimization9();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_optimization9();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_optimization9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_works_for_multiple_navigations_with_composite_keys">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_works_for_multiple_navigations_with_composite_keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_works_for_multiple_navigations_with_composite_keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_works_for_multiple_navigations_with_composite_keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_works_for_multiple_navigations_with_composite_keys ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_works_for_multiple_navigations_with_composite_keys : unit -&gt; unit&#xA;override this.Select_null_propagation_works_for_multiple_navigations_with_composite_keys : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_works_for_multiple_navigations_with_composite_keys " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_works_for_multiple_navigations_with_composite_keys();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_works_for_multiple_navigations_with_composite_keys();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_works_for_multiple_navigations_with_composite_keys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_propagation_works_for_navigations_with_composite_keys">
      <MemberSignature Language="C#" Value="public virtual void Select_null_propagation_works_for_navigations_with_composite_keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_propagation_works_for_navigations_with_composite_keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_null_propagation_works_for_navigations_with_composite_keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_propagation_works_for_navigations_with_composite_keys ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_propagation_works_for_navigations_with_composite_keys : unit -&gt; unit&#xA;override this.Select_null_propagation_works_for_navigations_with_composite_keys : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_null_propagation_works_for_navigations_with_composite_keys " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_propagation_works_for_navigations_with_composite_keys();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_propagation_works_for_navigations_with_composite_keys();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_propagation_works_for_navigations_with_composite_keys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_required_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual void Select_required_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_required_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_required_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_required_navigation_on_derived_type ()" />
      <MemberSignature Language="F#" Value="abstract member Select_required_navigation_on_derived_type : unit -&gt; unit&#xA;override this.Select_required_navigation_on_derived_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_required_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_required_navigation_on_derived_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_required_navigation_on_derived_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_required_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Singleton_Navigation_With_Member_Access">
      <MemberSignature Language="C#" Value="public virtual void Select_Singleton_Navigation_With_Member_Access ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Singleton_Navigation_With_Member_Access() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Singleton_Navigation_With_Member_Access" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Singleton_Navigation_With_Member_Access ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Singleton_Navigation_With_Member_Access : unit -&gt; unit&#xA;override this.Select_Singleton_Navigation_With_Member_Access : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Singleton_Navigation_With_Member_Access " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Singleton_Navigation_With_Member_Access();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Singleton_Navigation_With_Member_Access();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Singleton_Navigation_With_Member_Access();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_distinct_firstordefault">
      <MemberSignature Language="C#" Value="public virtual void Select_subquery_distinct_firstordefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_subquery_distinct_firstordefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_subquery_distinct_firstordefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_subquery_distinct_firstordefault ()" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_distinct_firstordefault : unit -&gt; unit&#xA;override this.Select_subquery_distinct_firstordefault : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_subquery_distinct_firstordefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_subquery_distinct_firstordefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_subquery_distinct_firstordefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_subquery_distinct_firstordefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_multiple_conditions">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_multiple_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_multiple_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_ternary_operation_multiple_conditions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_ternary_operation_multiple_conditions ()" />
      <MemberSignature Language="F#" Value="abstract member Select_ternary_operation_multiple_conditions : unit -&gt; unit&#xA;override this.Select_ternary_operation_multiple_conditions : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_ternary_operation_multiple_conditions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_ternary_operation_multiple_conditions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_ternary_operation_multiple_conditions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_ternary_operation_multiple_conditions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_multiple_conditions_2">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_multiple_conditions_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_multiple_conditions_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_ternary_operation_multiple_conditions_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_ternary_operation_multiple_conditions_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_ternary_operation_multiple_conditions_2 : unit -&gt; unit&#xA;override this.Select_ternary_operation_multiple_conditions_2 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_ternary_operation_multiple_conditions_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_ternary_operation_multiple_conditions_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_ternary_operation_multiple_conditions_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_ternary_operation_multiple_conditions_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_ternary_operation_with_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_ternary_operation_with_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Select_ternary_operation_with_boolean : unit -&gt; unit&#xA;override this.Select_ternary_operation_with_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_ternary_operation_with_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_ternary_operation_with_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_ternary_operation_with_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_ternary_operation_with_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_has_value_not_null">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_has_value_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_has_value_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_ternary_operation_with_has_value_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_ternary_operation_with_has_value_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Select_ternary_operation_with_has_value_not_null : unit -&gt; unit&#xA;override this.Select_ternary_operation_with_has_value_not_null : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_ternary_operation_with_has_value_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_ternary_operation_with_has_value_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_ternary_operation_with_has_value_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_ternary_operation_with_has_value_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_ternary_operation_with_inverted_boolean">
      <MemberSignature Language="C#" Value="public virtual void Select_ternary_operation_with_inverted_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_ternary_operation_with_inverted_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_ternary_operation_with_inverted_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_ternary_operation_with_inverted_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Select_ternary_operation_with_inverted_boolean : unit -&gt; unit&#xA;override this.Select_ternary_operation_with_inverted_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_ternary_operation_with_inverted_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_ternary_operation_with_inverted_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_ternary_operation_with_inverted_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_ternary_operation_with_inverted_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation : unit -&gt; unit&#xA;override this.Select_Where_Navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Client">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Client ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Client : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Client : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Equals_Navigation">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Equals_Navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Equals_Navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Equals_Navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Equals_Navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Equals_Navigation : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Equals_Navigation : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Equals_Navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Equals_Navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Equals_Navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Equals_Navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Included">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Included ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Included() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Included" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Included ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Included : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Included : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Included " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Included();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Included();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Included();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Null">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Null ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Null : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Null : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Null_Reverse">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Null_Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Null_Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Null_Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Null_Reverse ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Null_Reverse : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Null_Reverse : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Null_Reverse " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Null_Reverse();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Null_Reverse();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Null_Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Scalar_Equals_Navigation_Scalar">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Scalar_Equals_Navigation_Scalar ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Scalar_Equals_Navigation_Scalar : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected : unit -&gt; unit&#xA;override this.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Navigation_Scalar_Equals_Navigation_Scalar_Projected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton_Navigation_With_Member_Access">
      <MemberSignature Language="C#" Value="public virtual void Singleton_Navigation_With_Member_Access ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Singleton_Navigation_With_Member_Access() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Singleton_Navigation_With_Member_Access" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Singleton_Navigation_With_Member_Access ()" />
      <MemberSignature Language="F#" Value="abstract member Singleton_Navigation_With_Member_Access : unit -&gt; unit&#xA;override this.Singleton_Navigation_With_Member_Access : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Singleton_Navigation_With_Member_Access " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Singleton_Navigation_With_Member_Access();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Singleton_Navigation_With_Member_Access();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Singleton_Navigation_With_Member_Access();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Streaming_correlated_collection_issue_11403">
      <MemberSignature Language="C#" Value="public virtual void Streaming_correlated_collection_issue_11403 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Streaming_correlated_collection_issue_11403() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Streaming_correlated_collection_issue_11403" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Streaming_correlated_collection_issue_11403 ()" />
      <MemberSignature Language="F#" Value="abstract member Streaming_correlated_collection_issue_11403 : unit -&gt; unit&#xA;override this.Streaming_correlated_collection_issue_11403 : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Streaming_correlated_collection_issue_11403 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Streaming_correlated_collection_issue_11403();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Streaming_correlated_collection_issue_11403();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Streaming_correlated_collection_issue_11403();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_based_Include_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual void String_based_Include_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_based_Include_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.String_based_Include_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_based_Include_navigation_on_derived_type ()" />
      <MemberSignature Language="F#" Value="abstract member String_based_Include_navigation_on_derived_type : unit -&gt; unit&#xA;override this.String_based_Include_navigation_on_derived_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.String_based_Include_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_based_Include_navigation_on_derived_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_based_Include_navigation_on_derived_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_based_Include_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_containing_join_gets_lifted_clashing_names">
      <MemberSignature Language="C#" Value="public virtual void Subquery_containing_join_gets_lifted_clashing_names ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_containing_join_gets_lifted_clashing_names() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_containing_join_gets_lifted_clashing_names" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_containing_join_gets_lifted_clashing_names ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_containing_join_gets_lifted_clashing_names : unit -&gt; unit&#xA;override this.Subquery_containing_join_gets_lifted_clashing_names : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_containing_join_gets_lifted_clashing_names " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_containing_join_gets_lifted_clashing_names();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_containing_join_gets_lifted_clashing_names();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_containing_join_gets_lifted_clashing_names();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_containing_join_projecting_main_from_clause_gets_lifted">
      <MemberSignature Language="C#" Value="public virtual void Subquery_containing_join_projecting_main_from_clause_gets_lifted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_containing_join_projecting_main_from_clause_gets_lifted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_containing_join_projecting_main_from_clause_gets_lifted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_containing_join_projecting_main_from_clause_gets_lifted ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_containing_join_projecting_main_from_clause_gets_lifted : unit -&gt; unit&#xA;override this.Subquery_containing_join_projecting_main_from_clause_gets_lifted : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_containing_join_projecting_main_from_clause_gets_lifted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_containing_join_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_containing_join_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_containing_join_projecting_main_from_clause_gets_lifted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_containing_left_join_projecting_main_from_clause_gets_lifted">
      <MemberSignature Language="C#" Value="public virtual void Subquery_containing_left_join_projecting_main_from_clause_gets_lifted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_containing_left_join_projecting_main_from_clause_gets_lifted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_containing_left_join_projecting_main_from_clause_gets_lifted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_containing_left_join_projecting_main_from_clause_gets_lifted ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_containing_left_join_projecting_main_from_clause_gets_lifted : unit -&gt; unit&#xA;override this.Subquery_containing_left_join_projecting_main_from_clause_gets_lifted : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_containing_left_join_projecting_main_from_clause_gets_lifted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_containing_left_join_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_containing_left_join_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_containing_left_join_projecting_main_from_clause_gets_lifted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted">
      <MemberSignature Language="C#" Value="public virtual void Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted : unit -&gt; unit&#xA;override this.Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_containing_SelectMany_projecting_main_from_clause_gets_lifted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_created_by_include_gets_lifted_nested">
      <MemberSignature Language="C#" Value="public virtual void Subquery_created_by_include_gets_lifted_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_created_by_include_gets_lifted_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_created_by_include_gets_lifted_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_created_by_include_gets_lifted_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_created_by_include_gets_lifted_nested : unit -&gt; unit&#xA;override this.Subquery_created_by_include_gets_lifted_nested : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_created_by_include_gets_lifted_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_created_by_include_gets_lifted_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_created_by_include_gets_lifted_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_created_by_include_gets_lifted_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_is_lifted_from_main_from_clause_of_SelectMany">
      <MemberSignature Language="C#" Value="public virtual void Subquery_is_lifted_from_main_from_clause_of_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_is_lifted_from_main_from_clause_of_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_is_lifted_from_main_from_clause_of_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_is_lifted_from_main_from_clause_of_SelectMany ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_is_lifted_from_main_from_clause_of_SelectMany : unit -&gt; unit&#xA;override this.Subquery_is_lifted_from_main_from_clause_of_SelectMany : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_is_lifted_from_main_from_clause_of_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_is_lifted_from_main_from_clause_of_SelectMany();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_is_lifted_from_main_from_clause_of_SelectMany();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_is_lifted_from_main_from_clause_of_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_is_not_lifted_from_additional_from_clause">
      <MemberSignature Language="C#" Value="public virtual void Subquery_is_not_lifted_from_additional_from_clause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_is_not_lifted_from_additional_from_clause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_is_not_lifted_from_additional_from_clause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_is_not_lifted_from_additional_from_clause ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_is_not_lifted_from_additional_from_clause : unit -&gt; unit&#xA;override this.Subquery_is_not_lifted_from_additional_from_clause : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_is_not_lifted_from_additional_from_clause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_is_not_lifted_from_additional_from_clause();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_is_not_lifted_from_additional_from_clause();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_is_not_lifted_from_additional_from_clause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_with_result_operator_is_not_lifted">
      <MemberSignature Language="C#" Value="public virtual void Subquery_with_result_operator_is_not_lifted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_with_result_operator_is_not_lifted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Subquery_with_result_operator_is_not_lifted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_with_result_operator_is_not_lifted ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_with_result_operator_is_not_lifted : unit -&gt; unit&#xA;override this.Subquery_with_result_operator_is_not_lifted : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Subquery_with_result_operator_is_not_lifted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_with_result_operator_is_not_lifted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_with_result_operator_is_not_lifted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_with_result_operator_is_not_lifted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_optional_navigation_is_translated_to_sql">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_optional_navigation_is_translated_to_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_optional_navigation_is_translated_to_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Sum_with_optional_navigation_is_translated_to_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_optional_navigation_is_translated_to_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_optional_navigation_is_translated_to_sql : unit -&gt; unit&#xA;override this.Sum_with_optional_navigation_is_translated_to_sql : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Sum_with_optional_navigation_is_translated_to_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_optional_navigation_is_translated_to_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_optional_navigation_is_translated_to_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_base_reference">
      <MemberSignature Language="C#" Value="public virtual void ThenInclude_collection_on_derived_after_base_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ThenInclude_collection_on_derived_after_base_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_base_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ThenInclude_collection_on_derived_after_base_reference ()" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_base_reference : unit -&gt; unit&#xA;override this.ThenInclude_collection_on_derived_after_base_reference : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_base_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_base_reference();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_base_reference();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ThenInclude_collection_on_derived_after_base_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_derived_collection">
      <MemberSignature Language="C#" Value="public virtual void ThenInclude_collection_on_derived_after_derived_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ThenInclude_collection_on_derived_after_derived_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_derived_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ThenInclude_collection_on_derived_after_derived_collection ()" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_derived_collection : unit -&gt; unit&#xA;override this.ThenInclude_collection_on_derived_after_derived_collection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_derived_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_derived_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_derived_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ThenInclude_collection_on_derived_after_derived_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_derived_reference">
      <MemberSignature Language="C#" Value="public virtual void ThenInclude_collection_on_derived_after_derived_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ThenInclude_collection_on_derived_after_derived_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_derived_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ThenInclude_collection_on_derived_after_derived_reference ()" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_derived_reference : unit -&gt; unit&#xA;override this.ThenInclude_collection_on_derived_after_derived_reference : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_derived_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_derived_reference();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ThenInclude_collection_on_derived_after_derived_reference();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ThenInclude_collection_on_derived_after_derived_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_reference_on_derived_after_derived_collection">
      <MemberSignature Language="C#" Value="public virtual void ThenInclude_reference_on_derived_after_derived_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ThenInclude_reference_on_derived_after_derived_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ThenInclude_reference_on_derived_after_derived_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ThenInclude_reference_on_derived_after_derived_collection ()" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_reference_on_derived_after_derived_collection : unit -&gt; unit&#xA;override this.ThenInclude_reference_on_derived_after_derived_collection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ThenInclude_reference_on_derived_after_derived_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ThenInclude_reference_on_derived_after_derived_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ThenInclude_reference_on_derived_after_derived_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ThenInclude_reference_on_derived_after_derived_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString_guid_property_projection">
      <MemberSignature Language="C#" Value="public virtual void ToString_guid_property_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToString_guid_property_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.ToString_guid_property_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ToString_guid_property_projection ()" />
      <MemberSignature Language="F#" Value="abstract member ToString_guid_property_projection : unit -&gt; unit&#xA;override this.ToString_guid_property_projection : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.ToString_guid_property_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ToString_guid_property_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ToString_guid_property_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ToString_guid_property_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_with_collection_navigations">
      <MemberSignature Language="C#" Value="public virtual void Union_with_collection_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Union_with_collection_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Union_with_collection_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Union_with_collection_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Union_with_collection_navigations : unit -&gt; unit&#xA;override this.Union_with_collection_navigations : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Union_with_collection_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Union_with_collection_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Union_with_collection_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Union_with_collection_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property">
      <MemberSignature Language="C#" Value="public virtual void Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property ()" />
      <MemberSignature Language="F#" Value="abstract member Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property : unit -&gt; unit&#xA;override this.Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Unnecessary_include_doesnt_get_added_complex_when_projecting_EF_Property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking">
      <MemberSignature Language="C#" Value="public virtual void Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking ()" />
      <MemberSignature Language="F#" Value="abstract member Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking : unit -&gt; unit&#xA;override this.Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_and_order_by_are_properly_lifted_from_subquery_created_by_tracking();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_any_subquery_without_collision">
      <MemberSignature Language="C#" Value="public virtual void Where_any_subquery_without_collision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_any_subquery_without_collision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_any_subquery_without_collision" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_any_subquery_without_collision ()" />
      <MemberSignature Language="F#" Value="abstract member Where_any_subquery_without_collision : unit -&gt; unit&#xA;override this.Where_any_subquery_without_collision : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_any_subquery_without_collision " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_any_subquery_without_collision();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_any_subquery_without_collision();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_any_subquery_without_collision();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_enum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_enum ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_enum : unit -&gt; unit&#xA;override this.Where_bitwise_and_enum : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_enum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_enum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_enum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_enum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_integral">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_integral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_integral() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_integral" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_integral ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_integral : unit -&gt; unit&#xA;override this.Where_bitwise_and_integral : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_integral " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_integral();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_integral();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_integral();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_nullable_enum_with_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_nullable_enum_with_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_nullable_enum_with_constant : unit -&gt; unit&#xA;override this.Where_bitwise_and_nullable_enum_with_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_nullable_enum_with_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_nullable_enum_with_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_nullable_enum_with_non_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_nullable_enum_with_non_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_nullable_enum_with_non_nullable_parameter : unit -&gt; unit&#xA;override this.Where_bitwise_and_nullable_enum_with_non_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_nullable_enum_with_non_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_nullable_enum_with_non_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_null_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_null_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_null_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_nullable_enum_with_null_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_nullable_enum_with_null_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_nullable_enum_with_null_constant : unit -&gt; unit&#xA;override this.Where_bitwise_and_nullable_enum_with_null_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_nullable_enum_with_null_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_null_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_null_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_nullable_enum_with_null_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_nullable_enum_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_nullable_enum_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_nullable_enum_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_and_nullable_enum_with_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_nullable_enum_with_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_nullable_enum_with_nullable_parameter : unit -&gt; unit&#xA;override this.Where_bitwise_and_nullable_enum_with_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_and_nullable_enum_with_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_nullable_enum_with_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_nullable_enum_with_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_or_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_or_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_bitwise_or_enum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_or_enum ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or_enum : unit -&gt; unit&#xA;override this.Where_bitwise_or_enum : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_bitwise_or_enum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_or_enum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_or_enum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_or_enum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_coalesce_with_anonymous_types">
      <MemberSignature Language="C#" Value="public virtual void Where_coalesce_with_anonymous_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_coalesce_with_anonymous_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_coalesce_with_anonymous_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_coalesce_with_anonymous_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_coalesce_with_anonymous_types : unit -&gt; unit&#xA;override this.Where_coalesce_with_anonymous_types : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_coalesce_with_anonymous_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_coalesce_with_anonymous_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_coalesce_with_anonymous_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_coalesce_with_anonymous_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_anonymous_types">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_anonymous_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_anonymous_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_compare_anonymous_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_anonymous_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_anonymous_types : unit -&gt; unit&#xA;override this.Where_compare_anonymous_types : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_compare_anonymous_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_anonymous_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_anonymous_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_anonymous_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8421")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_anonymous_types_with_uncorrelated_members">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_anonymous_types_with_uncorrelated_members ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_anonymous_types_with_uncorrelated_members() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_compare_anonymous_types_with_uncorrelated_members" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_anonymous_types_with_uncorrelated_members ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_anonymous_types_with_uncorrelated_members : unit -&gt; unit&#xA;override this.Where_compare_anonymous_types_with_uncorrelated_members : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_compare_anonymous_types_with_uncorrelated_members " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_anonymous_types_with_uncorrelated_members();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_anonymous_types_with_uncorrelated_members();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_anonymous_types_with_uncorrelated_members();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_conditional_with_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Where_conditional_with_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_conditional_with_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_conditional_with_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_conditional_with_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_conditional_with_anonymous_type : unit -&gt; unit&#xA;override this.Where_conditional_with_anonymous_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_conditional_with_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_conditional_with_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_conditional_with_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_conditional_with_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_count_subquery_without_collision">
      <MemberSignature Language="C#" Value="public virtual void Where_count_subquery_without_collision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_count_subquery_without_collision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_count_subquery_without_collision" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_count_subquery_without_collision ()" />
      <MemberSignature Language="F#" Value="abstract member Where_count_subquery_without_collision : unit -&gt; unit&#xA;override this.Where_count_subquery_without_collision : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_count_subquery_without_collision " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_count_subquery_without_collision();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_count_subquery_without_collision();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_count_subquery_without_collision();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_date_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_date_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_date_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_date_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_date_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_date_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_date_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_date_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_date_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_date_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_date_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_day_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_day_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_day_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_day_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_day_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_day_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_day_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_day_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_day_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_day_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_day_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_dayofyear_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_dayofyear_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_dayofyear_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_dayofyear_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_dayofyear_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_dayofyear_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_dayofyear_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_dayofyear_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_dayofyear_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_dayofyear_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_dayofyear_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_hour_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_hour_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_hour_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_hour_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_hour_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_hour_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_hour_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_hour_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_hour_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_hour_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_hour_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_millisecond_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_millisecond_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_millisecond_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_millisecond_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_millisecond_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_millisecond_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_millisecond_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_millisecond_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_millisecond_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_millisecond_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_millisecond_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_minute_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_minute_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_minute_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_minute_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_minute_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_minute_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_minute_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_minute_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_minute_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_minute_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_minute_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_month_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_month_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_month_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_month_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_month_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_month_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_month_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_month_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_month_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_month_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_month_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_now">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_now ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_now() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_now" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_now ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_now : unit -&gt; unit&#xA;override this.Where_datetimeoffset_now : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_now " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_now();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_now();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_now();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_second_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_second_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_second_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_second_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_second_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_second_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_second_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_second_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_second_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_second_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_second_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_utcnow">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_utcnow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_utcnow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_utcnow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_utcnow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_utcnow : unit -&gt; unit&#xA;override this.Where_datetimeoffset_utcnow : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_utcnow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_utcnow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_utcnow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_utcnow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetimeoffset_year_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetimeoffset_year_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetimeoffset_year_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_datetimeoffset_year_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetimeoffset_year_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetimeoffset_year_component : unit -&gt; unit&#xA;override this.Where_datetimeoffset_year_component : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_datetimeoffset_year_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetimeoffset_year_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetimeoffset_year_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetimeoffset_year_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum">
      <MemberSignature Language="C#" Value="public virtual void Where_enum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_enum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_enum ()" />
      <MemberSignature Language="F#" Value="abstract member Where_enum : unit -&gt; unit&#xA;override this.Where_enum : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_enum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_enum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_enum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_enum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_enum_has_flag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_enum_has_flag ()" />
      <MemberSignature Language="F#" Value="abstract member Where_enum_has_flag : unit -&gt; unit&#xA;override this.Where_enum_has_flag : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_enum_has_flag " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_enum_has_flag();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_enum_has_flag();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_enum_has_flag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag_subquery">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_enum_has_flag_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_enum_has_flag_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Where_enum_has_flag_subquery : unit -&gt; unit&#xA;override this.Where_enum_has_flag_subquery : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_enum_has_flag_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_enum_has_flag_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_enum_has_flag_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_enum_has_flag_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag_subquery_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag_subquery_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag_subquery_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_enum_has_flag_subquery_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_enum_has_flag_subquery_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Where_enum_has_flag_subquery_client_eval : unit -&gt; unit&#xA;override this.Where_enum_has_flag_subquery_client_eval : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_enum_has_flag_subquery_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_enum_has_flag_subquery_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_enum_has_flag_subquery_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_enum_has_flag_subquery_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_enum_has_flag_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_enum_has_flag_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_enum_has_flag_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_enum_has_flag_with_non_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_enum_has_flag_with_non_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_enum_has_flag_with_non_nullable_parameter : unit -&gt; unit&#xA;override this.Where_enum_has_flag_with_non_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_enum_has_flag_with_non_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_enum_has_flag_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_enum_has_flag_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_enum_has_flag_with_non_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_has_flag_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_has_flag_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_has_flag_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_has_flag_with_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_has_flag_with_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_has_flag_with_nullable_parameter : unit -&gt; unit&#xA;override this.Where_has_flag_with_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_has_flag_with_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_has_flag_with_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_has_flag_with_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_has_flag_with_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_is_properly_lifted_from_subquery_created_by_include">
      <MemberSignature Language="C#" Value="public virtual void Where_is_properly_lifted_from_subquery_created_by_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_is_properly_lifted_from_subquery_created_by_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_is_properly_lifted_from_subquery_created_by_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_is_properly_lifted_from_subquery_created_by_include ()" />
      <MemberSignature Language="F#" Value="abstract member Where_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit&#xA;override this.Where_is_properly_lifted_from_subquery_created_by_include : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_is_properly_lifted_from_subquery_created_by_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_is_properly_lifted_from_subquery_created_by_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_member_access_on_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Where_member_access_on_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_member_access_on_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_member_access_on_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_member_access_on_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_member_access_on_anonymous_type : unit -&gt; unit&#xA;override this.Where_member_access_on_anonymous_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_member_access_on_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_member_access_on_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_member_access_on_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_member_access_on_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_nullable_enum_with_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nullable_enum_with_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nullable_enum_with_constant : unit -&gt; unit&#xA;override this.Where_nullable_enum_with_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_nullable_enum_with_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nullable_enum_with_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nullable_enum_with_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nullable_enum_with_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_non_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_non_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_non_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_nullable_enum_with_non_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nullable_enum_with_non_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nullable_enum_with_non_nullable_parameter : unit -&gt; unit&#xA;override this.Where_nullable_enum_with_non_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_nullable_enum_with_non_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nullable_enum_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nullable_enum_with_non_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nullable_enum_with_non_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_null_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_null_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_null_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_nullable_enum_with_null_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nullable_enum_with_null_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nullable_enum_with_null_constant : unit -&gt; unit&#xA;override this.Where_nullable_enum_with_null_constant : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_nullable_enum_with_null_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nullable_enum_with_null_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nullable_enum_with_null_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nullable_enum_with_null_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nullable_enum_with_nullable_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_nullable_enum_with_nullable_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nullable_enum_with_nullable_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_nullable_enum_with_nullable_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nullable_enum_with_nullable_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nullable_enum_with_nullable_parameter : unit -&gt; unit&#xA;override this.Where_nullable_enum_with_nullable_parameter : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_nullable_enum_with_nullable_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nullable_enum_with_nullable_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nullable_enum_with_nullable_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nullable_enum_with_nullable_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_required_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual void Where_required_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_required_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_required_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_required_navigation_on_derived_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_required_navigation_on_derived_type : unit -&gt; unit&#xA;override this.Where_required_navigation_on_derived_type : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_required_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_required_navigation_on_derived_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_required_navigation_on_derived_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_required_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_boolean : unit -&gt; unit&#xA;override this.Where_subquery_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_concat_firstordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_concat_firstordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_concat_firstordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_concat_firstordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_concat_firstordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_concat_firstordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_concat_firstordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_concat_firstordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_concat_firstordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_concat_firstordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_concat_firstordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_concat_order_by_firstordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_concat_order_by_firstordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_concat_order_by_firstordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_concat_order_by_firstordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_concat_order_by_firstordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_concat_order_by_firstordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_concat_order_by_firstordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_concat_order_by_firstordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_concat_order_by_firstordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_concat_order_by_firstordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_concat_order_by_firstordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_first_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_first_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_first_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_first_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_first_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_first_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_first_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_first_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_first_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_first_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_first_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_firstordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_firstordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_firstordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_firstordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_firstordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_firstordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_firstordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_firstordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_firstordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_firstordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_firstordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_last_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_last_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_last_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_last_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_last_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_last_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_last_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_last_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_last_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_last_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_last_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8582")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_lastordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_lastordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_lastordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_lastordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_lastordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_lastordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_lastordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_lastordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_lastordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_lastordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_lastordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8582")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_orderby_firstordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_orderby_firstordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_orderby_firstordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_orderby_firstordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_orderby_firstordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_orderby_firstordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_orderby_firstordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_orderby_firstordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_orderby_firstordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_orderby_firstordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_orderby_firstordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_distinct_singleordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_distinct_singleordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_distinct_singleordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_distinct_singleordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_distinct_singleordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_distinct_singleordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_distinct_singleordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_distinct_singleordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_distinct_singleordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_distinct_singleordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_distinct_singleordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_union_firstordefault_boolean">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_union_firstordefault_boolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_union_firstordefault_boolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryTestBase`1.Where_subquery_union_firstordefault_boolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_union_firstordefault_boolean ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_union_firstordefault_boolean : unit -&gt; unit&#xA;override this.Where_subquery_union_firstordefault_boolean : unit -&gt; unit" Usage="gearsOfWarQueryTestBase.Where_subquery_union_firstordefault_boolean " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_union_firstordefault_boolean();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_union_firstordefault_boolean();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_union_firstordefault_boolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>