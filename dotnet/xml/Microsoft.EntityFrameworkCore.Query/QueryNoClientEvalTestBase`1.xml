<Type Name="QueryNoClientEvalTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class QueryNoClientEvalTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit QueryNoClientEvalTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class QueryNoClientEvalTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type QueryNoClientEvalTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryRelationalFixture&lt;NoopModelCustomizer ^&gt;gcnew()public ref class QueryNoClientEvalTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QueryNoClientEvalTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; QueryNoClientEvalTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; QueryNoClientEvalTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" QueryNoClientEvalTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="queryNoClientEvalTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Doesnt_throw_when_from_sql_not_composed">
      <MemberSignature Language="C#" Value="public virtual void Doesnt_throw_when_from_sql_not_composed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Doesnt_throw_when_from_sql_not_composed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Doesnt_throw_when_from_sql_not_composed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Doesnt_throw_when_from_sql_not_composed ()" />
      <MemberSignature Language="F#" Value="abstract member Doesnt_throw_when_from_sql_not_composed : unit -&gt; unit&#xA;override this.Doesnt_throw_when_from_sql_not_composed : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Doesnt_throw_when_from_sql_not_composed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Doesnt_throw_when_from_sql_not_composed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Doesnt_throw_when_from_sql_not_composed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Doesnt_throw_when_from_sql_not_composed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_all">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_all ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_all() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_all" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_all ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_all : unit -&gt; unit&#xA;override this.Throws_when_all : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_all " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_all();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_all();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_all();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_first">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_first ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_first : unit -&gt; unit&#xA;override this.Throws_when_first : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_first();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_first();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_first_or_default">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_first_or_default ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_first_or_default() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_first_or_default" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_first_or_default ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_first_or_default : unit -&gt; unit&#xA;override this.Throws_when_first_or_default : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_first_or_default " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_first_or_default();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_first_or_default();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_first_or_default();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_from_sql_composed">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_from_sql_composed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_from_sql_composed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_from_sql_composed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_from_sql_composed ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_from_sql_composed : unit -&gt; unit&#xA;override this.Throws_when_from_sql_composed : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_from_sql_composed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_from_sql_composed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_from_sql_composed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_from_sql_composed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_group_by">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_group_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_group_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_group_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_group_by ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_group_by : unit -&gt; unit&#xA;override this.Throws_when_group_by : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_group_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_group_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_group_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_group_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_group_join">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_group_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_group_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_group_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_group_join ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_group_join : unit -&gt; unit&#xA;override this.Throws_when_group_join : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_group_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_group_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_group_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_group_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_join">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_join ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_join : unit -&gt; unit&#xA;override this.Throws_when_join : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_orderby">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_orderby : unit -&gt; unit&#xA;override this.Throws_when_orderby : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_orderby_multiple">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_orderby_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_orderby_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_orderby_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_orderby_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_orderby_multiple : unit -&gt; unit&#xA;override this.Throws_when_orderby_multiple : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_orderby_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_orderby_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_orderby_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_orderby_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_select_many">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_select_many : unit -&gt; unit&#xA;override this.Throws_when_select_many : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_single">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_single ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_single : unit -&gt; unit&#xA;override this.Throws_when_single : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_single_or_default">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_single_or_default ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_single_or_default() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_single_or_default" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_single_or_default ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_single_or_default : unit -&gt; unit&#xA;override this.Throws_when_single_or_default : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_single_or_default " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_single_or_default();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_single_or_default();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_single_or_default();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_subquery_main_from_clause">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_subquery_main_from_clause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_subquery_main_from_clause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_subquery_main_from_clause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_subquery_main_from_clause ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_subquery_main_from_clause : unit -&gt; unit&#xA;override this.Throws_when_subquery_main_from_clause : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_subquery_main_from_clause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_subquery_main_from_clause();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_subquery_main_from_clause();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_subquery_main_from_clause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_where">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_where ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_where : unit -&gt; unit&#xA;override this.Throws_when_where : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_when_where_subquery_correlated">
      <MemberSignature Language="C#" Value="public virtual void Throws_when_where_subquery_correlated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_when_where_subquery_correlated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryNoClientEvalTestBase`1.Throws_when_where_subquery_correlated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_when_where_subquery_correlated ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_when_where_subquery_correlated : unit -&gt; unit&#xA;override this.Throws_when_where_subquery_correlated : unit -&gt; unit" Usage="queryNoClientEvalTestBase.Throws_when_where_subquery_correlated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_when_where_subquery_correlated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_when_where_subquery_correlated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_when_where_subquery_correlated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>