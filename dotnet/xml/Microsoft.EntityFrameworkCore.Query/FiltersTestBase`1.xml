<Type Name="FiltersTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.FiltersTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class FiltersTestBase&lt;TFixture&gt; : IDisposable, Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NorthwindFiltersCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FiltersTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt;) TFixture&gt; extends System.Object implements class System.IDisposable, class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FiltersTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture), IDisposable" />
  <TypeSignature Language="F#" Value="type FiltersTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NorthwindFiltersCustomizer ^&gt;gcnew()public ref class FiltersTestBase abstract : IDisposable, Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FiltersTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.FiltersTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.FiltersTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.FiltersTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FiltersTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; FiltersTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" FiltersTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_eval">
      <MemberSignature Language="C#" Value="public virtual void Client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Client_eval : unit -&gt; unit&#xA;override this.Client_eval : unit -&gt; unit" Usage="filtersTestBase.Client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compiled_query">
      <MemberSignature Language="C#" Value="public virtual void Compiled_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Compiled_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Compiled_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Compiled_query ()" />
      <MemberSignature Language="F#" Value="abstract member Compiled_query : unit -&gt; unit&#xA;override this.Compiled_query : unit -&gt; unit" Usage="filtersTestBase.Compiled_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Compiled_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Compiled_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Compiled_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_query">
      <MemberSignature Language="C#" Value="public virtual void Count_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Count_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_query ()" />
      <MemberSignature Language="F#" Value="abstract member Count_query : unit -&gt; unit&#xA;override this.Count_query : unit -&gt; unit" Usage="filtersTestBase.Count_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="filtersTestBase.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual void Find ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Find() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Find" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Find ()" />
      <MemberSignature Language="F#" Value="abstract member Find : unit -&gt; unit&#xA;override this.Find : unit -&gt; unit" Usage="filtersTestBase.Find " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Find();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Find();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Find();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.Query.FiltersTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.Query.NorthwindFiltersCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_query">
      <MemberSignature Language="C#" Value="public virtual void Include_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Include_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_query ()" />
      <MemberSignature Language="F#" Value="abstract member Include_query : unit -&gt; unit&#xA;override this.Include_query : unit -&gt; unit" Usage="filtersTestBase.Include_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_query_opt_out">
      <MemberSignature Language="C#" Value="public virtual void Include_query_opt_out ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_query_opt_out() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Include_query_opt_out" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_query_opt_out ()" />
      <MemberSignature Language="F#" Value="abstract member Include_query_opt_out : unit -&gt; unit&#xA;override this.Include_query_opt_out : unit -&gt; unit" Usage="filtersTestBase.Include_query_opt_out " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_query_opt_out();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_query_opt_out();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_query_opt_out();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Included_many_to_one_query">
      <MemberSignature Language="C#" Value="public virtual void Included_many_to_one_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Included_many_to_one_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Included_many_to_one_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Included_many_to_one_query ()" />
      <MemberSignature Language="F#" Value="abstract member Included_many_to_one_query : unit -&gt; unit&#xA;override this.Included_many_to_one_query : unit -&gt; unit" Usage="filtersTestBase.Included_many_to_one_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Included_many_to_one_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Included_many_to_one_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Included_many_to_one_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Included_one_to_many_query_with_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Included_one_to_many_query_with_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Included_one_to_many_query_with_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Included_one_to_many_query_with_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Included_one_to_many_query_with_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Included_one_to_many_query_with_client_eval : unit -&gt; unit&#xA;override this.Included_one_to_many_query_with_client_eval : unit -&gt; unit" Usage="filtersTestBase.Included_one_to_many_query_with_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Included_one_to_many_query_with_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Included_one_to_many_query_with_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Included_one_to_many_query_with_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Materialized_query">
      <MemberSignature Language="C#" Value="public virtual void Materialized_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Materialized_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Materialized_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Materialized_query ()" />
      <MemberSignature Language="F#" Value="abstract member Materialized_query : unit -&gt; unit&#xA;override this.Materialized_query : unit -&gt; unit" Usage="filtersTestBase.Materialized_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Materialized_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Materialized_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Materialized_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Materialized_query_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Materialized_query_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Materialized_query_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Materialized_query_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Materialized_query_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Materialized_query_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Materialized_query_async : unit -&gt; System.Threading.Tasks.Task" Usage="filtersTestBase.Materialized_query_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Materialized_query_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1/&lt;Materialized_query_async&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Materialized_query_parameter">
      <MemberSignature Language="C#" Value="public virtual void Materialized_query_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Materialized_query_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Materialized_query_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Materialized_query_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Materialized_query_parameter : unit -&gt; unit&#xA;override this.Materialized_query_parameter : unit -&gt; unit" Usage="filtersTestBase.Materialized_query_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Materialized_query_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Materialized_query_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Materialized_query_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Materialized_query_parameter_new_context">
      <MemberSignature Language="C#" Value="public virtual void Materialized_query_parameter_new_context ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Materialized_query_parameter_new_context() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Materialized_query_parameter_new_context" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Materialized_query_parameter_new_context ()" />
      <MemberSignature Language="F#" Value="abstract member Materialized_query_parameter_new_context : unit -&gt; unit&#xA;override this.Materialized_query_parameter_new_context : unit -&gt; unit" Usage="filtersTestBase.Materialized_query_parameter_new_context " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Materialized_query_parameter_new_context();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Materialized_query_parameter_new_context();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Materialized_query_parameter_new_context();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navs_query">
      <MemberSignature Language="C#" Value="public virtual void Navs_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navs_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Navs_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navs_query ()" />
      <MemberSignature Language="F#" Value="abstract member Navs_query : unit -&gt; unit&#xA;override this.Navs_query : unit -&gt; unit" Usage="filtersTestBase.Navs_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navs_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navs_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navs_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_query">
      <MemberSignature Language="C#" Value="public virtual void Projection_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Projection_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_query ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_query : unit -&gt; unit&#xA;override this.Projection_query : unit -&gt; unit" Usage="filtersTestBase.Projection_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_query_parameter">
      <MemberSignature Language="C#" Value="public virtual void Projection_query_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_query_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.FiltersTestBase`1.Projection_query_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_query_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_query_parameter : unit -&gt; unit&#xA;override this.Projection_query_parameter : unit -&gt; unit" Usage="filtersTestBase.Projection_query_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_query_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_query_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_query_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>