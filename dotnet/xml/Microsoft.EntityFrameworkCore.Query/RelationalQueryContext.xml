<Type Name="RelationalQueryContext" FullName="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext">
  <TypeSignature Language="C#" Value="public class RelationalQueryContext : Microsoft.EntityFrameworkCore.Query.QueryContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalQueryContext extends Microsoft.EntityFrameworkCore.Query.QueryContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalQueryContext&#xA;Inherits QueryContext" />
  <TypeSignature Language="F#" Value="type RelationalQueryContext = class&#xA;    inherit QueryContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationalQueryContext : Microsoft::EntityFrameworkCore::Query::QueryContext" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RelationalQueryContext : Microsoft::EntityFrameworkCore::Query::QueryContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                The principal data structure used by a compiled relational query during execution.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryContext (Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies,System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryContextDependencies, queryBufferFactory As Func(Of IQueryBuffer), connection As IRelationalConnection, executionStrategyFactory As IExecutionStrategyFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext : Microsoft.EntityFrameworkCore.Query.QueryContextDependencies * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext (dependencies, queryBufferFactory, connection, executionStrategyFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationalQueryContext(Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ dependencies, Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ executionStrategyFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" />
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="queryBufferFactory">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryContext (Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryBufferFactory As Func(Of IQueryBuffer), connection As IRelationalConnection, stateManager As IStateManager, concurrencyDetector As IConcurrencyDetector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext : Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext (queryBufferFactory, connection, stateManager, concurrencyDetector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationalQueryContext(Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="queryBufferFactory">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryContext (Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class Microsoft.EntityFrameworkCore.Internal.LazyRef`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryBufferFactory As Func(Of IQueryBuffer), connection As IRelationalConnection, stateManager As LazyRef(Of IStateManager), concurrencyDetector As IConcurrencyDetector, executionStrategyFactory As IExecutionStrategyFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext : Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContext (queryBufferFactory, connection, stateManager, concurrencyDetector, executionStrategyFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelationalQueryContext(Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, Microsoft::EntityFrameworkCore::Internal::LazyRef&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ executionStrategyFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" />
      </Parameters>
      <Docs>
        <param name="queryBufferFactory">To be added.</param>
        <param name="connection">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIncludeScope">
      <MemberSignature Language="C#" Value="public virtual void BeginIncludeScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginIncludeScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.BeginIncludeScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginIncludeScope ()" />
      <MemberSignature Language="F#" Value="abstract member BeginIncludeScope : unit -&gt; unit&#xA;override this.BeginIncludeScope : unit -&gt; unit" Usage="relationalQueryContext.BeginIncludeScope " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginIncludeScope();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginIncludeScope();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginIncludeScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Begins an include scope.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Connection As IRelationalConnection" />
      <MemberSignature Language="F#" Value="member this.Connection : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ Connection { Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the active relational connection.
            </summary>
        <value>
                The connection.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeregisterValueBufferCursor">
      <MemberSignature Language="C#" Value="public virtual void DeregisterValueBufferCursor (Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeregisterValueBufferCursor(class Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.DeregisterValueBufferCursor(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeregisterValueBufferCursor (valueBufferCursor As IValueBufferCursor)" />
      <MemberSignature Language="F#" Value="abstract member DeregisterValueBufferCursor : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor -&gt; unit&#xA;override this.DeregisterValueBufferCursor : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor -&gt; unit" Usage="relationalQueryContext.DeregisterValueBufferCursor valueBufferCursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeregisterValueBufferCursor(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ valueBufferCursor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DeregisterValueBufferCursor(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ valueBufferCursor);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DeregisterValueBufferCursor(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor const &amp; valueBufferCursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBufferCursor" Type="Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor" />
      </Parameters>
      <Docs>
        <param name="valueBufferCursor"> The value buffer cursor. </param>
        <summary>
                Deregisters the value buffer cursor described by valueBufferCursor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIncludeScope">
      <MemberSignature Language="C#" Value="public virtual void EndIncludeScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndIncludeScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.EndIncludeScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndIncludeScope ()" />
      <MemberSignature Language="F#" Value="abstract member EndIncludeScope : unit -&gt; unit&#xA;override this.EndIncludeScope : unit -&gt; unit" Usage="relationalQueryContext.EndIncludeScope " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndIncludeScope();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void EndIncludeScope();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void EndIncludeScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Ends an include scope.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.ExecutionStrategyFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategyFactory : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.ExecutionStrategyFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ ExecutionStrategyFactory { Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ ExecutionStrategyFactory { Microsoft::EntityFrameworkCore::Storage::IExecutionStrategyFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The execution strategy factory.
            </summary>
        <value>
                The execution strategy factory.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludeValueBuffer">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.ValueBuffer GetIncludeValueBuffer (int queryIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer GetIncludeValueBuffer(int32 queryIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.GetIncludeValueBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIncludeValueBuffer (queryIndex As Integer) As ValueBuffer" />
      <MemberSignature Language="F#" Value="abstract member GetIncludeValueBuffer : int -&gt; Microsoft.EntityFrameworkCore.Storage.ValueBuffer&#xA;override this.GetIncludeValueBuffer : int -&gt; Microsoft.EntityFrameworkCore.Storage.ValueBuffer" Usage="relationalQueryContext.GetIncludeValueBuffer queryIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::ValueBuffer GetIncludeValueBuffer(int queryIndex);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Storage::ValueBuffer GetIncludeValueBuffer(int queryIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="queryIndex"> Zero-based index of the query. </param>
        <summary>
                Gets the include value buffer for a given query index.
            </summary>
        <returns>
                The include value buffer.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterValueBufferCursor">
      <MemberSignature Language="C#" Value="public virtual void RegisterValueBufferCursor (Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor, Nullable&lt;int&gt; queryIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterValueBufferCursor(class Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor, valuetype System.Nullable`1&lt;int32&gt; queryIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.RegisterValueBufferCursor(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterValueBufferCursor (valueBufferCursor As IValueBufferCursor, queryIndex As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member RegisterValueBufferCursor : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor * Nullable&lt;int&gt; -&gt; unit&#xA;override this.RegisterValueBufferCursor : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor * Nullable&lt;int&gt; -&gt; unit" Usage="relationalQueryContext.RegisterValueBufferCursor (valueBufferCursor, queryIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterValueBufferCursor(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ valueBufferCursor, Nullable&lt;int&gt; queryIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBufferCursor" Type="Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor" />
        <Parameter Name="queryIndex" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="valueBufferCursor"> The value buffer cursor. </param>
        <param name="queryIndex"> Zero-based index of the query. </param>
        <summary>
                Registers a value buffer cursor.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterValueBufferCursorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RegisterValueBufferCursorAsync (Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor, Nullable&lt;int&gt; queryIndex, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RegisterValueBufferCursorAsync(class Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor valueBufferCursor, valuetype System.Nullable`1&lt;int32&gt; queryIndex, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.RegisterValueBufferCursorAsync(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor,System.Nullable{System.Int32},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RegisterValueBufferCursorAsync : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.RegisterValueBufferCursorAsync : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor * Nullable&lt;int&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="relationalQueryContext.RegisterValueBufferCursorAsync (valueBufferCursor, queryIndex, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RegisterValueBufferCursorAsync(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ valueBufferCursor, Nullable&lt;int&gt; queryIndex, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext/&lt;RegisterValueBufferCursorAsync&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBufferCursor" Type="Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor" />
        <Parameter Name="queryIndex" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="valueBufferCursor"> The value buffer cursor. </param>
        <param name="queryIndex"> Zero-based index of the query. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Asynchronously registers a value buffer cursor.
            </summary>
        <returns>
                A Task.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Semaphore">
      <MemberSignature Language="C#" Value="public virtual System.Threading.SemaphoreSlim Semaphore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SemaphoreSlim Semaphore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Semaphore" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Semaphore As SemaphoreSlim" />
      <MemberSignature Language="F#" Value="member this.Semaphore : System.Threading.SemaphoreSlim" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::SemaphoreSlim ^ Semaphore { System::Threading::SemaphoreSlim ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SemaphoreSlim</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a semaphore used to serialize async queries.
            </summary>
        <value>
                The semaphore.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>