<Type Name="AsyncSimpleQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncSimpleQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncSimpleQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncSimpleQueryTestBase(Of TFixture)&#xA;Inherits AsyncQueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit AsyncQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class AsyncSimpleQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::AsyncQueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncSimpleQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncSimpleQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; AsyncSimpleQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" AsyncSimpleQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task All_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task All_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.All_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function All_top_level () As Task" />
      <MemberSignature Language="F#" Value="abstract member All_top_level : unit -&gt; System.Threading.Tasks.Task&#xA;override this.All_top_level : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.All_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ All_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;All_top_level&gt;d__44))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task All_top_level_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task All_top_level_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.All_top_level_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function All_top_level_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member All_top_level_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.All_top_level_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.All_top_level_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ All_top_level_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;All_top_level_subquery&gt;d__45))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Any_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Any_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Any_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Any_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Any_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Any_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Any_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Any_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Any_predicate&gt;d__43))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Any_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Any_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Any_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Any_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Any_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Any_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Any_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Any_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Any_simple&gt;d__40))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_on_nav_subquery_in_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_on_nav_subquery_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_on_nav_subquery_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_on_nav_subquery_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_on_nav_subquery_in_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_on_nav_subquery_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_on_nav_subquery_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_on_nav_subquery_in_projection&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_over_subquery_is_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_over_subquery_is_client_eval&gt;d__231))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_with_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_with_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_with_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_with_arg&gt;d__228))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_arg_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_with_arg_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_with_arg_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_with_arg_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_with_arg_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_with_arg_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_with_arg_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_with_arg_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_with_arg_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_with_arg_expression&gt;d__229))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_with_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_with_binary_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_with_binary_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_with_binary_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_with_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_with_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_with_binary_expression&gt;d__227))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_with_coalesce () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_with_coalesce : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_with_coalesce : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_with_coalesce&gt;d__230))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Average_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Average_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Average_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Average_with_no_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Average_with_no_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Average_with_no_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Average_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Average_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Average_with_no_arg&gt;d__226))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast_results_to_object">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Cast_results_to_object ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Cast_results_to_object() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Cast_results_to_object" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cast_results_to_object () As Task" />
      <MemberSignature Language="F#" Value="abstract member Cast_results_to_object : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Cast_results_to_object : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Cast_results_to_object " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Cast_results_to_object();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Cast_results_to_object&gt;d__53))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalPredicate">
      <MemberSignature Language="C#" Value="protected static bool ClientEvalPredicate (Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ClientEvalPredicate(class Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ClientEvalPredicate(Microsoft.EntityFrameworkCore.TestModels.Northwind.Order)" />
      <MemberSignature Language="F#" Value="static member ClientEvalPredicate : Microsoft.EntityFrameworkCore.TestModels.Northwind.Order -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.ClientEvalPredicate order" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ClientEvalPredicate(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order ^ order);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool ClientEvalPredicate(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order const &amp; order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.EntityFrameworkCore.TestModels.Northwind.Order" />
      </Parameters>
      <Docs>
        <param name="order">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalPredicateStateless">
      <MemberSignature Language="C#" Value="public static bool ClientEvalPredicateStateless ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ClientEvalPredicateStateless() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ClientEvalPredicateStateless" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientEvalPredicateStateless () As Boolean" />
      <MemberSignature Language="F#" Value="static member ClientEvalPredicateStateless : unit -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.ClientEvalPredicateStateless " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ClientEvalPredicateStateless();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool ClientEvalPredicateStateless();" />
      <MemberSignature Language="C++ WINRT" Value=" static bool ClientEvalPredicateStateless();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalSelector">
      <MemberSignature Language="C#" Value="protected internal uint ClientEvalSelector (Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance unsigned int32 ClientEvalSelector(class Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ClientEvalSelector(Microsoft.EntityFrameworkCore.TestModels.Northwind.Order)" />
      <MemberSignature Language="F#" Value="member this.ClientEvalSelector : Microsoft.EntityFrameworkCore.TestModels.Northwind.Order -&gt; uint32" Usage="asyncSimpleQueryTestBase.ClientEvalSelector order" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::UInt32 ClientEvalSelector(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order ^ order);" />
      <MemberSignature Language="C++ WINRT" Value="unsigned int ClientEvalSelector(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order const &amp; order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.EntityFrameworkCore.TestModels.Northwind.Order" />
      </Parameters>
      <Docs>
        <param name="order">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_dbset">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concat_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concat_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Concat_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Concat_dbset () As Task" />
      <MemberSignature Language="F#" Value="abstract member Concat_dbset : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Concat_dbset : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Concat_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Concat_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Concat_dbset&gt;d__332))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concat_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concat_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Concat_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Concat_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Concat_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Concat_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Concat_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Concat_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Concat_nested&gt;d__334))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_non_entity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concat_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concat_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Concat_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Concat_non_entity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Concat_non_entity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Concat_non_entity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Concat_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Concat_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Concat_non_entity&gt;d__335))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Concat_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Concat_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Concat_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Concat_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Concat_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Concat_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Concat_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Concat_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Concat_simple&gt;d__333))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_top_level">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_top_level () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_top_level : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_top_level : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_top_level&gt;d__327))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_array_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_array_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_array_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_array_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_array_closure&gt;d__314))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_array_inline">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_array_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_array_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_array_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_array_inline () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_array_inline : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_array_inline : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_array_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_array_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_array_inline&gt;d__315))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_complex_predicate_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_complex_predicate_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_complex_predicate_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_complex_predicate_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_complex_predicate_and&gt;d__320))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_not_matching_ins1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_not_matching_ins1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_not_matching_ins1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_complex_predicate_not_matching_ins1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_not_matching_ins1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_complex_predicate_not_matching_ins1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_complex_predicate_not_matching_ins1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_complex_predicate_not_matching_ins1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_complex_predicate_not_matching_ins1&gt;d__322))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_not_matching_ins2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_not_matching_ins2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_not_matching_ins2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_complex_predicate_not_matching_ins2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_not_matching_ins2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_complex_predicate_not_matching_ins2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_complex_predicate_not_matching_ins2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_complex_predicate_not_matching_ins2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_complex_predicate_not_matching_ins2&gt;d__323))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_complex_predicate_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_complex_predicate_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_complex_predicate_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_complex_predicate_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_complex_predicate_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_complex_predicate_or&gt;d__321))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_empty_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_empty_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_empty_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_empty_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_empty_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_empty_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_empty_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_empty_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_empty_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_empty_closure&gt;d__325))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_empty_inline">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_empty_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_empty_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_empty_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_empty_inline () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_empty_inline : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_empty_inline : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_empty_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_empty_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_empty_inline&gt;d__326))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_false">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_false () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_false : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_false : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_false&gt;d__319))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_sql_injection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_collection_sql_injection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_collection_sql_injection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_collection_sql_injection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_collection_sql_injection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_sql_injection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_collection_sql_injection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_collection_sql_injection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_collection_sql_injection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_collection_sql_injection&gt;d__324))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_list_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_list_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_list_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_list_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_list_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_list_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_list_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_list_closure&gt;d__316))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_inline">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_list_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_list_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_list_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_list_inline () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_inline : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_list_inline : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_list_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_list_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_list_inline&gt;d__317))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_inline_closure_mix">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_local_list_inline_closure_mix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_local_list_inline_closure_mix() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_local_list_inline_closure_mix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_local_list_inline_closure_mix () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_inline_closure_mix : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_local_list_inline_closure_mix : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_local_list_inline_closure_mix " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_local_list_inline_closure_mix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_local_list_inline_closure_mix&gt;d__318))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_subquery&gt;d__313))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery_involving_join_binds_to_correct_table">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Contains_with_subquery_involving_join_binds_to_correct_table ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Contains_with_subquery_involving_join_binds_to_correct_table() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Contains_with_subquery_involving_join_binds_to_correct_table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains_with_subquery_involving_join_binds_to_correct_table () As Task" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery_involving_join_binds_to_correct_table : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Contains_with_subquery_involving_join_binds_to_correct_table : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Contains_with_subquery_involving_join_binds_to_correct_table " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Contains_with_subquery_involving_join_binds_to_correct_table();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Contains_with_subquery_involving_join_binds_to_correct_table&gt;d__364))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_no_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Count_with_no_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Count_with_no_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Count_with_no_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Count_with_no_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Count_with_no_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Count_with_no_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Count_with_no_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Count_with_no_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Count_with_no_predicate&gt;d__240))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_order_by">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Count_with_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Count_with_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Count_with_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Count_with_order_by () As Task" />
      <MemberSignature Language="F#" Value="abstract member Count_with_order_by : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Count_with_order_by : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Count_with_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Count_with_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Count_with_order_by&gt;d__242))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Count_with_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Count_with_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Count_with_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Count_with_predicate&gt;d__241))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="asyncSimpleQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Default_if_empty_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Default_if_empty_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Default_if_empty_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Default_if_empty_top_level () As Task" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Default_if_empty_top_level : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Default_if_empty_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Default_if_empty_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Default_if_empty_top_level&gt;d__194))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Default_if_empty_top_level_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Default_if_empty_top_level_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Default_if_empty_top_level_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Default_if_empty_top_level_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Default_if_empty_top_level_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Default_if_empty_top_level_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Default_if_empty_top_level_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Default_if_empty_top_level_arg&gt;d__195))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_positive">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Default_if_empty_top_level_positive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Default_if_empty_top_level_positive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Default_if_empty_top_level_positive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Default_if_empty_top_level_positive () As Task" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_positive : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Default_if_empty_top_level_positive : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Default_if_empty_top_level_positive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Default_if_empty_top_level_positive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Default_if_empty_top_level_positive&gt;d__196))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Default_if_empty_top_level_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Default_if_empty_top_level_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Default_if_empty_top_level_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Default_if_empty_top_level_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Default_if_empty_top_level_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Default_if_empty_top_level_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Default_if_empty_top_level_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Default_if_empty_top_level_projection&gt;d__197))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct&gt;d__259))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Count&gt;d__263))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_OrderBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_OrderBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_OrderBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_OrderBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_OrderBy&gt;d__262))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Scalar">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Scalar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Scalar () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Scalar : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Scalar : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Scalar " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Scalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Scalar&gt;d__260))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Skip">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Skip () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Skip : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Skip : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Skip&gt;d__30))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Skip_Take">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Skip_Take () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Skip_Take : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Skip_Take : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Skip_Take&gt;d__32))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Take">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Take () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Take : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Take : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Take&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Take_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_Take_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_Take_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Distinct_Take_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_Take_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Take_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_Take_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Distinct_Take_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_Take_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Distinct_Take_Count&gt;d__38))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_dbset">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Except_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Except_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Except_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Except_dbset () As Task" />
      <MemberSignature Language="F#" Value="abstract member Except_dbset : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Except_dbset : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Except_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Except_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Except_dbset&gt;d__336))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Except_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Except_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Except_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Except_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Except_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Except_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Except_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Except_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Except_nested&gt;d__338))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_non_entity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Except_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Except_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Except_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Except_non_entity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Except_non_entity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Except_non_entity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Except_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Except_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Except_non_entity&gt;d__339))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Except_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Except_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Except_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Except_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Except_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Except_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Except_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Except_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Except_simple&gt;d__337))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_client_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task First_client_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task First_client_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.First_client_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function First_client_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member First_client_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.First_client_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.First_client_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ First_client_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;First_client_predicate&gt;d__79))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task First_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task First_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.First_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function First_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member First_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.First_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.First_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ First_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;First_Predicate&gt;d__273))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FirstAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FirstAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.FirstAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FirstAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member FirstAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FirstAsync : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.FirstAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FirstAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;FirstAsync&gt;d__272))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FirstOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FirstOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;FirstOrDefault&gt;d__275))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FirstOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FirstOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.FirstOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FirstOrDefault_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FirstOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.FirstOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FirstOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;FirstOrDefault_Predicate&gt;d__276))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_tracking_after_dispose">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_tracking_after_dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_tracking_after_dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupBy_tracking_after_dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_tracking_after_dispose () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_tracking_after_dispose : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_tracking_after_dispose : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupBy_tracking_after_dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_tracking_after_dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupBy_tracking_after_dispose&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_employees_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_customers_employees_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_customers_employees_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_customers_employees_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_customers_employees_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_employees_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_customers_employees_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_customers_employees_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_customers_employees_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_customers_employees_shadow&gt;d__198))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_employees_subquery_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_customers_employees_subquery_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_customers_employees_subquery_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_customers_employees_subquery_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_employees_subquery_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_customers_employees_subquery_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_customers_employees_subquery_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_customers_employees_subquery_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_customers_employees_subquery_shadow&gt;d__199))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_orders">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_customers_orders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_customers_orders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_customers_orders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_customers_orders () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_orders : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_customers_orders : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_customers_orders " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_customers_orders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_customers_orders&gt;d__191))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_orders_count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_customers_orders_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_customers_orders_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_customers_orders_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_customers_orders_count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_orders_count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_customers_orders_count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_customers_orders_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_customers_orders_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_customers_orders_count&gt;d__192))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_DefaultIfEmpty () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_DefaultIfEmpty&gt;d__302))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_DefaultIfEmpty2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_DefaultIfEmpty2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_DefaultIfEmpty2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_DefaultIfEmpty2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_DefaultIfEmpty2&gt;d__303))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_DefaultIfEmpty3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_DefaultIfEmpty3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_DefaultIfEmpty3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_DefaultIfEmpty3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_DefaultIfEmpty3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_DefaultIfEmpty3&gt;d__304))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_projection&gt;d__301))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_simple&gt;d__299))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_simple3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_simple3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_simple3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_simple3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_simple3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_simple3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_simple3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_simple3&gt;d__300))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_tracking_groups">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_tracking_groups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_tracking_groups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_tracking_groups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_tracking_groups () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_tracking_groups : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_tracking_groups : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_tracking_groups " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_tracking_groups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_tracking_groups&gt;d__305))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_tracking_groups2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_tracking_groups2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_tracking_groups2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.GroupJoin_tracking_groups2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_tracking_groups2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_tracking_groups2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_tracking_groups2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.GroupJoin_tracking_groups2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_tracking_groups2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;GroupJoin_tracking_groups2&gt;d__306))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_dbset">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Intersect_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Intersect_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Intersect_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Intersect_dbset () As Task" />
      <MemberSignature Language="F#" Value="abstract member Intersect_dbset : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Intersect_dbset : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Intersect_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Intersect_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Intersect_dbset&gt;d__340))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Intersect_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Intersect_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Intersect_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Intersect_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Intersect_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Intersect_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Intersect_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Intersect_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Intersect_nested&gt;d__342))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_non_entity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Intersect_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Intersect_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Intersect_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Intersect_non_entity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Intersect_non_entity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Intersect_non_entity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Intersect_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Intersect_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Intersect_non_entity&gt;d__343))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Intersect_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Intersect_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Intersect_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Intersect_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Intersect_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Intersect_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Intersect_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Intersect_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Intersect_simple&gt;d__341))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_client_new_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_client_new_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_client_new_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_client_new_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_client_new_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_client_new_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_client_new_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_client_new_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_client_new_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_client_new_expression&gt;d__186))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_composite_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_composite_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_composite_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_composite_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_composite_key&gt;d__185))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_entities">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_entities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_entities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_entities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_entities () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_entities : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_entities : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_entities " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_entities();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_entities&gt;d__179))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_projection&gt;d__178))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_select">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_select () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_select : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_select : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_select&gt;d__181))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_with_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_with_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_with_subquery&gt;d__182))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_anonymous_property_method">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_with_subquery_anonymous_property_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_with_subquery_anonymous_property_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_with_subquery_anonymous_property_method () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_anonymous_property_method : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_with_subquery_anonymous_property_method : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_with_subquery_anonymous_property_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_with_subquery_anonymous_property_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_with_subquery_anonymous_property_method&gt;d__183))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_customers_orders_with_subquery_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_customers_orders_with_subquery_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_customers_orders_with_subquery_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_customers_orders_with_subquery_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_customers_orders_with_subquery_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_customers_orders_with_subquery_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_customers_orders_with_subquery_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_customers_orders_with_subquery_predicate&gt;d__184))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_OrderBy_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_OrderBy_Count&gt;d__189))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_same_collection_force_alias_uniquefication">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_same_collection_force_alias_uniquefication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_same_collection_force_alias_uniquefication() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_same_collection_force_alias_uniquefication" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_same_collection_force_alias_uniquefication () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_same_collection_force_alias_uniquefication : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_same_collection_force_alias_uniquefication : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_same_collection_force_alias_uniquefication " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_same_collection_force_alias_uniquefication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_same_collection_force_alias_uniquefication&gt;d__312))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_same_collection_multiple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_same_collection_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_same_collection_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_same_collection_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_same_collection_multiple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_same_collection_multiple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_same_collection_multiple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_same_collection_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_same_collection_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_same_collection_multiple&gt;d__311))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_select_many">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_select_many () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_select_many : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_select_many : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_select_many&gt;d__180))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_Where_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_Where_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_Where_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Join_Where_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_Where_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_Where_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_Where_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Join_Where_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_Where_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Join_Where_Count&gt;d__187))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Last" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Last () As Task" />
      <MemberSignature Language="F#" Value="abstract member Last : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Last : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Last " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Last();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Last&gt;d__278))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Last_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Last_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Last_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Last_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Last_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Last_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Last_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Last_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Last_Predicate&gt;d__280))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_when_no_order_by">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Last_when_no_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Last_when_no_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Last_when_no_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Last_when_no_order_by () As Task" />
      <MemberSignature Language="F#" Value="abstract member Last_when_no_order_by : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Last_when_no_order_by : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Last_when_no_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Last_when_no_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Last_when_no_order_by&gt;d__279))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LastOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LastOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.LastOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member LastOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.LastOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.LastOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ LastOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;LastOrDefault&gt;d__282))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LastOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LastOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.LastOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastOrDefault_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member LastOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.LastOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.LastOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ LastOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;LastOrDefault_Predicate&gt;d__283))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync_should_track_results">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LoadAsync_should_track_results ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync_should_track_results() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.LoadAsync_should_track_results" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadAsync_should_track_results () As Task" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync_should_track_results : unit -&gt; System.Threading.Tasks.Task&#xA;override this.LoadAsync_should_track_results : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.LoadAsync_should_track_results " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ LoadAsync_should_track_results();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;LoadAsync_should_track_results&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalMethod1">
      <MemberSignature Language="C#" Value="protected static string LocalMethod1 ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string LocalMethod1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.LocalMethod1" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function LocalMethod1 () As String" />
      <MemberSignature Language="F#" Value="static member LocalMethod1 : unit -&gt; string" Usage="Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LocalMethod1 " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ LocalMethod1();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; static Platform::String ^ LocalMethod1();" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LocalMethod1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalMethod2">
      <MemberSignature Language="C#" Value="protected static string LocalMethod2 ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string LocalMethod2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.LocalMethod2" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function LocalMethod2 () As String" />
      <MemberSignature Language="F#" Value="static member LocalMethod2 : unit -&gt; string" Usage="Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LocalMethod2 " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ LocalMethod2();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; static Platform::String ^ LocalMethod2();" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LocalMethod2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Max_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Max_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Max_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Max_over_subquery_is_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Max_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Max_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Max_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Max_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Max_over_subquery_is_client_eval&gt;d__239))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Max_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Max_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Max_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Max_with_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Max_with_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Max_with_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Max_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Max_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Max_with_arg&gt;d__237))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Max_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Max_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Max_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Max_with_coalesce () As Task" />
      <MemberSignature Language="F#" Value="abstract member Max_with_coalesce : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Max_with_coalesce : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Max_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Max_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Max_with_coalesce&gt;d__238))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Max_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Max_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Max_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Max_with_no_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Max_with_no_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Max_with_no_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Max_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Max_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Max_with_no_arg&gt;d__236))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Min_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Min_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Min_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Min_over_subquery_is_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Min_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Min_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Min_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Min_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Min_over_subquery_is_client_eval&gt;d__235))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Min_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Min_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Min_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Min_with_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Min_with_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Min_with_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Min_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Min_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Min_with_arg&gt;d__233))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Min_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Min_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Min_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Min_with_coalesce () As Task" />
      <MemberSignature Language="F#" Value="abstract member Min_with_coalesce : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Min_with_coalesce : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Min_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Min_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Min_with_coalesce&gt;d__234))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Min_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Min_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Min_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Min_with_no_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Min_with_no_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Min_with_no_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Min_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Min_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Min_with_no_arg&gt;d__232))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mixed_sync_async_in_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Mixed_sync_async_in_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Mixed_sync_async_in_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Mixed_sync_async_in_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Mixed_sync_async_in_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Mixed_sync_async_in_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Mixed_sync_async_in_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Mixed_sync_async_in_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Mixed_sync_async_in_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Mixed_sync_async_in_query_cache&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mixed_sync_async_query">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Mixed_sync_async_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Mixed_sync_async_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Mixed_sync_async_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Mixed_sync_async_query () As Task" />
      <MemberSignature Language="F#" Value="abstract member Mixed_sync_async_query : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Mixed_sync_async_query : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Mixed_sync_async_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Mixed_sync_async_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Mixed_sync_async_query&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_joins_Where_Order_Any">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Multiple_joins_Where_Order_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Multiple_joins_Where_Order_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Multiple_joins_Where_Order_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Multiple_joins_Where_Order_Any () As Task" />
      <MemberSignature Language="F#" Value="abstract member Multiple_joins_Where_Order_Any : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Multiple_joins_Where_Order_Any : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Multiple_joins_Where_Order_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Multiple_joins_Where_Order_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Multiple_joins_Where_Order_Any&gt;d__188))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy&gt;d__204))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_client_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_client_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_client_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_client_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_client_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_client_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_client_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_client_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_client_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_client_mixed&gt;d__205))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_correlated_subquery_lol">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_correlated_subquery_lol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_correlated_subquery_lol() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_correlated_subquery_lol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_correlated_subquery_lol () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_correlated_subquery_lol : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_correlated_subquery_lol : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_correlated_subquery_lol " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_correlated_subquery_lol();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_correlated_subquery_lol&gt;d__209))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Count_with_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Count_with_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Count_with_predicate&gt;d__245))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Count_with_predicate_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Count_with_predicate_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Count_with_predicate_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Count_with_predicate_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Count_with_predicate_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Count_with_predicate_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Count_with_predicate_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Count_with_predicate_client_eval&gt;d__251))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Count_with_predicate_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Count_with_predicate_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Count_with_predicate_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Count_with_predicate_client_eval_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Count_with_predicate_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Count_with_predicate_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Count_with_predicate_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Count_with_predicate_client_eval_mixed&gt;d__252))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Distinct&gt;d__261))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Join">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Join () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Join : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Join : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Join&gt;d__217))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_multiple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_multiple () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_multiple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_multiple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_multiple&gt;d__211))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_multiple_queries">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_multiple_queries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_multiple_queries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_multiple_queries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_multiple_queries () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_multiple_queries : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_multiple_queries : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_multiple_queries " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_multiple_queries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_multiple_queries&gt;d__206))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_scalar_primitive">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_scalar_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_scalar_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_scalar_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_scalar_primitive () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_scalar_primitive : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_scalar_primitive : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_scalar_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_scalar_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_scalar_primitive&gt;d__164))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Select">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Select () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Select : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Select : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Select&gt;d__210))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_SelectMany">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_SelectMany () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_SelectMany : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_SelectMany : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_SelectMany&gt;d__218))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_shadow&gt;d__207))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_CountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_CountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_CountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Skip_CountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_CountAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_CountAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_CountAsync : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Skip_CountAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_CountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Skip_CountAsync&gt;d__362))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_LongCountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_LongCountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_LongCountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Skip_LongCountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_LongCountAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_LongCountAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_LongCountAsync : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Skip_LongCountAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_LongCountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Skip_LongCountAsync&gt;d__363))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Take_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Take_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Take_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Take_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Take_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Take_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Take_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Take_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Take_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Take_Count&gt;d__41))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_ThenBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_ThenBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_ThenBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_ThenBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_ThenBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_ThenBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_ThenBy&gt;d__212))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy_Any">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_ThenBy_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_ThenBy_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_ThenBy_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_ThenBy_Any () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy_Any : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_ThenBy_Any : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_ThenBy_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_ThenBy_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_ThenBy_Any&gt;d__216))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_ThenBy_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_ThenBy_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_ThenBy_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_ThenBy_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_ThenBy_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_ThenBy_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_ThenBy_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_ThenBy_predicate&gt;d__208))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count&gt;d__244))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count_client_eval&gt;d__249))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count_client_eval_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count_client_eval_mixed&gt;d__250))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count_with_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count_with_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count_with_predicate&gt;d__246))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count_with_predicate_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count_with_predicate_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count_with_predicate_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count_with_predicate_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count_with_predicate_client_eval&gt;d__253))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Where_Count_with_predicate_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Where_Count_with_predicate_client_eval_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Where_Count_with_predicate_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderBy_Where_Count_with_predicate_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Where_Count_with_predicate_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderBy_Where_Count_with_predicate_client_eval_mixed&gt;d__254))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderByDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderByDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderByDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderByDescending () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderByDescending : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderByDescending " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderByDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderByDescending&gt;d__213))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending_ThenBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderByDescending_ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderByDescending_ThenBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderByDescending_ThenBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderByDescending_ThenBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending_ThenBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderByDescending_ThenBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderByDescending_ThenBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderByDescending_ThenBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderByDescending_ThenBy&gt;d__214))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending_ThenByDescending">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderByDescending_ThenByDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderByDescending_ThenByDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.OrderByDescending_ThenByDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderByDescending_ThenByDescending () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending_ThenByDescending : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderByDescending_ThenByDescending : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.OrderByDescending_ThenByDescending " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderByDescending_ThenByDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;OrderByDescending_ThenByDescending&gt;d__215))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_expressions">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projection_when_arithmetic_expressions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projection_when_arithmetic_expressions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Projection_when_arithmetic_expressions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projection_when_arithmetic_expressions () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_expressions : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projection_when_arithmetic_expressions : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Projection_when_arithmetic_expressions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projection_when_arithmetic_expressions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Projection_when_arithmetic_expressions&gt;d__47))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projection_when_arithmetic_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projection_when_arithmetic_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Projection_when_arithmetic_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projection_when_arithmetic_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projection_when_arithmetic_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Projection_when_arithmetic_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projection_when_arithmetic_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Projection_when_arithmetic_mixed&gt;d__48))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_mixed_subqueries">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projection_when_arithmetic_mixed_subqueries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projection_when_arithmetic_mixed_subqueries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Projection_when_arithmetic_mixed_subqueries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projection_when_arithmetic_mixed_subqueries () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_mixed_subqueries : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projection_when_arithmetic_mixed_subqueries : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Projection_when_arithmetic_mixed_subqueries " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projection_when_arithmetic_mixed_subqueries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Projection_when_arithmetic_mixed_subqueries&gt;d__49))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_client_evald_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projection_when_client_evald_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projection_when_client_evald_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Projection_when_client_evald_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projection_when_client_evald_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_client_evald_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projection_when_client_evald_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Projection_when_client_evald_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projection_when_client_evald_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Projection_when_client_evald_subquery&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_null_value">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projection_when_null_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projection_when_null_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Projection_when_null_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projection_when_null_value () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_null_value : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projection_when_null_value : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Projection_when_null_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projection_when_null_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Projection_when_null_value&gt;d__50))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_backed_by_database_view">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_backed_by_database_view ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_backed_by_database_view() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Query_backed_by_database_view" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_backed_by_database_view () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_backed_by_database_view : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_backed_by_database_view : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Query_backed_by_database_view " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_backed_by_database_view();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Query_backed_by_database_view&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Query_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Query_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Query_simple&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_where_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_where_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_where_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Query_where_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_where_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_where_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_where_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Query_where_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_where_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Query_where_simple&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_nav">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_with_nav ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_with_nav() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Query_with_nav" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_with_nav () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_with_nav : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_with_nav : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Query_with_nav " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_with_nav();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Query_with_nav&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_nested_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Queryable_nested_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Queryable_nested_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Queryable_nested_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Queryable_nested_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Queryable_nested_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Queryable_nested_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Queryable_nested_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Queryable_nested_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Queryable_nested_simple&gt;d__25))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Queryable_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Queryable_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Queryable_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Queryable_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Queryable_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Queryable_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Queryable_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Queryable_simple&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple_anonymous">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Queryable_simple_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Queryable_simple_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Queryable_simple_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Queryable_simple_anonymous () As Task" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple_anonymous : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Queryable_simple_anonymous : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Queryable_simple_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Queryable_simple_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Queryable_simple_anonymous&gt;d__24))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_conditional_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_conditional_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_conditional_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_conditional_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_conditional_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_conditional_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_conditional_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_conditional_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_conditional_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_conditional_expression&gt;d__140))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_empty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_empty () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_empty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_empty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_empty&gt;d__145))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_literal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_literal () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_literal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_literal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_literal&gt;d__146))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_nested&gt;d__144))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_one">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_one" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_one () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_one : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_one : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_one " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_one();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_one&gt;d__137))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_three">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_three ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_three() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_three" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_three () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_three : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_three : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_three " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_three();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_three&gt;d__139))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_two">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_two ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_two() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_two" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_two () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_two : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_two : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_two " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_two();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_two&gt;d__138))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_with_object">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_anonymous_with_object ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_anonymous_with_object() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_anonymous_with_object" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_anonymous_with_object () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_with_object : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_anonymous_with_object : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_anonymous_with_object " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_anonymous_with_object();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_anonymous_with_object&gt;d__143))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_and&gt;d__352))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_and_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_and_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_and_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_and_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_and_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_and_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_and_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_and_or&gt;d__353))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_and_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_and_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_and_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_and_with_logical_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and_with_logical_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_and_with_logical_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_and_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_and_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_and_with_logical_and&gt;d__359))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_or&gt;d__350))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or_multiple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_or_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_or_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_or_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_or_multiple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or_multiple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_or_multiple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_or_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_or_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_or_multiple&gt;d__351))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bitwise_or_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bitwise_or_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bitwise_or_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bitwise_or_with_logical_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or_with_logical_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bitwise_or_with_logical_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bitwise_or_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bitwise_or_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bitwise_or_with_logical_or&gt;d__358))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bool_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_bool_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_bool_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_bool_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_bool_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_bool_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_bool_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_bool_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_bool_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_bool_closure&gt;d__129))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_constant_int">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_constant_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_constant_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_constant_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_constant_int () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_constant_int : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_constant_int : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_constant_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_constant_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_constant_int&gt;d__147))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_constant_null_string">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_constant_null_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_constant_null_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_constant_null_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_constant_null_string () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_constant_null_string : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_constant_null_string : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_constant_null_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_constant_null_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_constant_null_string&gt;d__148))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_filtered">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_correlated_subquery_filtered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_correlated_subquery_filtered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_correlated_subquery_filtered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_correlated_subquery_filtered () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_filtered : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_correlated_subquery_filtered : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_correlated_subquery_filtered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_correlated_subquery_filtered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_correlated_subquery_filtered&gt;d__156))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_ordered">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_correlated_subquery_ordered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_correlated_subquery_ordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_correlated_subquery_ordered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_correlated_subquery_ordered () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_ordered : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_correlated_subquery_ordered : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_correlated_subquery_ordered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_correlated_subquery_ordered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_correlated_subquery_ordered&gt;d__157))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_correlated_subquery_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_correlated_subquery_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_correlated_subquery_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_correlated_subquery_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_correlated_subquery_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_correlated_subquery_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_correlated_subquery_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_correlated_subquery_projection&gt;d__155))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_customer_identity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_customer_identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_customer_identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_customer_identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_customer_identity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_customer_identity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_customer_identity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_customer_identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_customer_identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_customer_identity&gt;d__142))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_customer_table">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_customer_table ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_customer_table() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_customer_table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_customer_table () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_customer_table : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_customer_table : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_customer_table " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_customer_table();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_customer_table&gt;d__141))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_Distinct_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_Distinct_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_Distinct_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_Distinct_Count&gt;d__264))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_into">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_into ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_into() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_into" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_into () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_into : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_into : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_into " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_into();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_into&gt;d__46))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_local">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_local ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_local() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_local" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_local () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_local : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_local : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_local " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_local();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_local&gt;d__149))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_many_cross_join_same_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_many_cross_join_same_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_many_cross_join_same_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_many_cross_join_same_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_many_cross_join_same_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_many_cross_join_same_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_many_cross_join_same_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_many_cross_join_same_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_many_cross_join_same_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_many_cross_join_same_collection&gt;d__310))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_nested_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_nested_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_nested_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_nested_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_nested_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_nested_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_nested_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_nested_collection&gt;d__154))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_deep">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_nested_collection_deep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_nested_collection_deep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_nested_collection_deep" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_nested_collection_deep () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_deep : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_nested_collection_deep : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_nested_collection_deep " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_nested_collection_deep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_nested_collection_deep&gt;d__163))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_in_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_nested_collection_in_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_nested_collection_in_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_nested_collection_in_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_nested_collection_in_anonymous_type () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_in_anonymous_type : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_nested_collection_in_anonymous_type : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_nested_collection_in_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_nested_collection_in_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_nested_collection_in_anonymous_type&gt;d__158))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_project_filter">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_project_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_project_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_project_filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_project_filter () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_project_filter : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_project_filter : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_project_filter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_project_filter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_project_filter&gt;d__152))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_project_filter2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_project_filter2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_project_filter2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_project_filter2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_project_filter2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_project_filter2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_project_filter2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_project_filter2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_project_filter2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_project_filter2&gt;d__153))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_query_where_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_query_where_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_query_where_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_query_where_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_query_where_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_query_where_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_query_where_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_query_where_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_query_where_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_query_where_navigation&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_query_where_navigation_multi_level">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_query_where_navigation_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_query_where_navigation_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_query_where_navigation_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_query_where_navigation_multi_level () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_query_where_navigation_multi_level : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_query_where_navigation_multi_level : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_query_where_navigation_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_query_where_navigation_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_query_where_navigation_multi_level&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_scalar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_scalar () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_scalar : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_scalar " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_scalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_scalar&gt;d__136))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar_primitive">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_scalar_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_scalar_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_scalar_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_scalar_primitive () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar_primitive : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_scalar_primitive : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_scalar_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_scalar_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_scalar_primitive&gt;d__150))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar_primitive_after_take">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_scalar_primitive_after_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_scalar_primitive_after_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_scalar_primitive_after_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_scalar_primitive_after_take () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar_primitive_after_take : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_scalar_primitive_after_take : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_scalar_primitive_after_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_scalar_primitive_after_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_scalar_primitive_after_take&gt;d__151))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Select_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_Select_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_Select_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_Select_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_Select_Distinct_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_Select_Distinct_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_Select_Distinct_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_Select_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_Select_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_Select_Distinct_Count&gt;d__265))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_recursive_trivial">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_subquery_recursive_trivial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_subquery_recursive_trivial() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Select_subquery_recursive_trivial" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_subquery_recursive_trivial () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_recursive_trivial : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_subquery_recursive_trivial : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Select_subquery_recursive_trivial " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_subquery_recursive_trivial();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Select_subquery_recursive_trivial&gt;d__159))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_cartesian_product_with_ordering">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_cartesian_product_with_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_cartesian_product_with_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_cartesian_product_with_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_cartesian_product_with_ordering () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_cartesian_product_with_ordering : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_cartesian_product_with_ordering : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_cartesian_product_with_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_cartesian_product_with_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_cartesian_product_with_ordering&gt;d__175))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_correlated_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_correlated_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_correlated_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_correlated_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_correlated_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_correlated_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_correlated_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_correlated_simple&gt;d__172))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_subquery_hard">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_correlated_subquery_hard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_correlated_subquery_hard() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_correlated_subquery_hard" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_correlated_subquery_hard () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_subquery_hard : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_correlated_subquery_hard : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_correlated_subquery_hard " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_correlated_subquery_hard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_correlated_subquery_hard&gt;d__174))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_subquery_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_correlated_subquery_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_correlated_subquery_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_correlated_subquery_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_correlated_subquery_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_subquery_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_correlated_subquery_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_correlated_subquery_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_correlated_subquery_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_correlated_subquery_simple&gt;d__173))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_Count&gt;d__201))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_customer_orders">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_customer_orders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_customer_orders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_customer_orders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_customer_orders () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_customer_orders : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_customer_orders : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_customer_orders " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_customer_orders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_customer_orders&gt;d__200))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_entity_deep">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_entity_deep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_entity_deep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_entity_deep" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_entity_deep () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_entity_deep : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_entity_deep : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_entity_deep " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_entity_deep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_entity_deep&gt;d__168))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_Joined ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_Joined() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_Joined" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_Joined () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_Joined : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_Joined " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_Joined();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_Joined&gt;d__307))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_Joined_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_Joined_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_Joined_DefaultIfEmpty () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_Joined_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_Joined_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_Joined_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_Joined_DefaultIfEmpty&gt;d__308))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined_DefaultIfEmpty2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_Joined_DefaultIfEmpty2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_Joined_DefaultIfEmpty2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_Joined_DefaultIfEmpty2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined_DefaultIfEmpty2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_Joined_DefaultIfEmpty2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_Joined_DefaultIfEmpty2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_Joined_DefaultIfEmpty2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_Joined_DefaultIfEmpty2&gt;d__309))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_LongCount&gt;d__202))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_mixed&gt;d__165))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_nested_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_nested_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_nested_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_nested_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_nested_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_nested_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_nested_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_nested_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_nested_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_nested_simple&gt;d__171))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_OrderBy_ThenBy_Any">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_OrderBy_ThenBy_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_OrderBy_ThenBy_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_OrderBy_ThenBy_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_OrderBy_ThenBy_Any () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_OrderBy_ThenBy_Any : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_OrderBy_ThenBy_Any : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_OrderBy_ThenBy_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_OrderBy_ThenBy_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_OrderBy_ThenBy_Any&gt;d__203))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_primitive">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_primitive () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_primitive : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_primitive : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_primitive&gt;d__176))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_primitive_select_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_primitive_select_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_primitive_select_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_primitive_select_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_primitive_select_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_primitive_select_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_primitive_select_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_primitive_select_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_primitive_select_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_primitive_select_subquery&gt;d__177))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_projection1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_projection1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_projection1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_projection1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_projection1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_projection1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_projection1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_projection1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_projection1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_projection1&gt;d__169))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_projection2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_projection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_projection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_projection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_projection2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_projection2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_projection2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_projection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_projection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_projection2&gt;d__170))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_simple1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_simple1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_simple1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_simple1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_simple1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_simple1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_simple1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_simple1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_simple1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_simple1&gt;d__166))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_simple2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_simple2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_simple2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SelectMany_simple2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_simple2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_simple2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_simple2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SelectMany_simple2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_simple2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SelectMany_simple2&gt;d__167))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Single_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Single_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Single_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Single_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Single_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Single_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Single_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Single_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Single_Predicate&gt;d__267))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_Predicate_Cancellation_test">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task Single_Predicate_Cancellation_test (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task Single_Predicate_Cancellation_test(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Single_Predicate_Cancellation_test(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member Single_Predicate_Cancellation_test : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.Single_Predicate_Cancellation_test : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Single_Predicate_Cancellation_test cancellationToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ Single_Predicate_Cancellation_test(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Single_Predicate_Cancellation_test&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_Throws">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Single_Throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Single_Throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Single_Throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Single_Throws () As Task" />
      <MemberSignature Language="F#" Value="abstract member Single_Throws : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Single_Throws : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Single_Throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Single_Throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Single_Throws&gt;d__266))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SingleOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SingleOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SingleOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SingleOrDefault_Predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member SingleOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SingleOrDefault_Predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SingleOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SingleOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SingleOrDefault_Predicate&gt;d__270))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault_Throws">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SingleOrDefault_Throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SingleOrDefault_Throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.SingleOrDefault_Throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SingleOrDefault_Throws () As Task" />
      <MemberSignature Language="F#" Value="abstract member SingleOrDefault_Throws : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SingleOrDefault_Throws : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.SingleOrDefault_Throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SingleOrDefault_Throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;SingleOrDefault_Throws&gt;d__269))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_CountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip_CountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip_CountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip_CountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip_CountAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip_CountAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip_CountAsync : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip_CountAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip_CountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip_CountAsync&gt;d__360))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip_Distinct&gt;d__33))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_LongCountAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip_LongCountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip_LongCountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip_LongCountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip_LongCountAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip_LongCountAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip_LongCountAsync : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip_LongCountAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip_LongCountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip_LongCountAsync&gt;d__361))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip_Take () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip_Take : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip_Take&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Skip_Take_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Skip_Take_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Skip_Take_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Skip_Take_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Skip_Take_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Skip_Take_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Skip_Take_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Skip_Take_Distinct&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Column">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_Contains_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_Contains_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_Contains_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_Contains_Column () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Column : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_Contains_Column : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_Contains_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_Contains_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_Contains_Column&gt;d__295))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Identity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_Contains_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_Contains_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_Contains_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_Contains_Identity () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Identity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_Contains_Identity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_Contains_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_Contains_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_Contains_Identity&gt;d__294))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Literal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_Contains_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_Contains_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_Contains_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_Contains_Literal () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Literal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_Contains_Literal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_Contains_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_Contains_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_Contains_Literal&gt;d__293))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_MethodCall">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_Contains_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_Contains_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_Contains_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_Contains_MethodCall () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_MethodCall : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_Contains_MethodCall : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_Contains_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_Contains_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_Contains_MethodCall&gt;d__296))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Column">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_EndsWith_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_EndsWith_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_EndsWith_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_EndsWith_Column () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Column : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_EndsWith_Column : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_EndsWith_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_EndsWith_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_EndsWith_Column&gt;d__291))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Identity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_EndsWith_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_EndsWith_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_EndsWith_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_EndsWith_Identity () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Identity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_EndsWith_Identity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_EndsWith_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_EndsWith_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_EndsWith_Identity&gt;d__290))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Literal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_EndsWith_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_EndsWith_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_EndsWith_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_EndsWith_Literal () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Literal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_EndsWith_Literal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_EndsWith_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_EndsWith_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_EndsWith_Literal&gt;d__289))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_MethodCall">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_EndsWith_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_EndsWith_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_EndsWith_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_EndsWith_MethodCall () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_MethodCall : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_EndsWith_MethodCall : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_EndsWith_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_EndsWith_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_EndsWith_MethodCall&gt;d__292))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Column">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_StartsWith_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_StartsWith_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_StartsWith_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_StartsWith_Column () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Column : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_StartsWith_Column : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_StartsWith_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_StartsWith_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_StartsWith_Column&gt;d__287))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Identity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_StartsWith_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_StartsWith_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_StartsWith_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_StartsWith_Identity () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Identity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_StartsWith_Identity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_StartsWith_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_StartsWith_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_StartsWith_Identity&gt;d__286))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Literal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_StartsWith_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_StartsWith_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_StartsWith_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_StartsWith_Literal () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Literal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_StartsWith_Literal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_StartsWith_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_StartsWith_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_StartsWith_Literal&gt;d__285))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_MethodCall">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_StartsWith_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_StartsWith_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.String_StartsWith_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_StartsWith_MethodCall () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_MethodCall : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_StartsWith_MethodCall : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.String_StartsWith_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_StartsWith_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;String_StartsWith_MethodCall&gt;d__288))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_over_subquery_is_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_over_subquery_is_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_over_subquery_is_client_eval&gt;d__225))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_arg&gt;d__222))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_arg_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_arg_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_arg_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_arg_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_arg_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_arg_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_arg_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_arg_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_arg_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_arg_expression&gt;d__223))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_binary_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_binary_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_binary_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_binary_expression&gt;d__220))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_coalesce () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_coalesce : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_coalesce : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_coalesce&gt;d__224))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_no_arg () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_no_arg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_no_arg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_no_arg&gt;d__219))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_no_arg_empty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Sum_with_no_arg_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Sum_with_no_arg_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Sum_with_no_arg_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Sum_with_no_arg_empty () As Task" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_no_arg_empty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Sum_with_no_arg_empty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Sum_with_no_arg_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Sum_with_no_arg_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Sum_with_no_arg_empty&gt;d__221))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_Distinct&gt;d__36))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_Distinct_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_Distinct_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_Distinct_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_Distinct_Count&gt;d__39))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_OrderBy_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_OrderBy_Count&gt;d__42))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_simple&gt;d__26))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_simple_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_simple_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_simple_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_simple_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_simple_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_simple_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_simple_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_simple_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_simple_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_simple_projection&gt;d__27))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Skip">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_Skip () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_Skip : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_Skip : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_Skip&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Skip_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_Skip_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_Skip_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_Skip_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_Skip_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_Skip_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_Skip_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_Skip_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_Skip_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_Skip_Distinct&gt;d__35))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_with_single">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_with_single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_with_single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_with_single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_with_single () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_with_single : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_with_single : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_with_single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_with_single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_with_single&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_with_single_select_many">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Take_with_single_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Take_with_single_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Take_with_single_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Take_with_single_select_many () As Task" />
      <MemberSignature Language="F#" Value="abstract member Take_with_single_select_many : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Take_with_single_select_many : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Take_with_single_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Take_with_single_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Take_with_single_select_many&gt;d__52))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_query_first">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Throws_on_concurrent_query_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Throws_on_concurrent_query_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Throws_on_concurrent_query_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Throws_on_concurrent_query_first () As Task" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_query_first : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Throws_on_concurrent_query_first : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Throws_on_concurrent_query_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Throws_on_concurrent_query_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Throws_on_concurrent_query_first&gt;d__330))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_query_list">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Throws_on_concurrent_query_list ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Throws_on_concurrent_query_list() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Throws_on_concurrent_query_list" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Throws_on_concurrent_query_list () As Task" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_query_list : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Throws_on_concurrent_query_list : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Throws_on_concurrent_query_list " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Throws_on_concurrent_query_list();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Throws_on_concurrent_query_list&gt;d__329))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray_on_nav_subquery_in_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToArray_on_nav_subquery_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToArray_on_nav_subquery_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToArray_on_nav_subquery_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray_on_nav_subquery_in_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToArray_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToArray_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToArray_on_nav_subquery_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToArray_on_nav_subquery_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToArray_on_nav_subquery_in_projection&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray_on_nav_subquery_in_projection_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToArray_on_nav_subquery_in_projection_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToArray_on_nav_subquery_in_projection_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToArray_on_nav_subquery_in_projection_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray_on_nav_subquery_in_projection_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToArray_on_nav_subquery_in_projection_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToArray_on_nav_subquery_in_projection_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToArray_on_nav_subquery_in_projection_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToArray_on_nav_subquery_in_projection_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToArray_on_nav_subquery_in_projection_nested&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList_context_subquery_deadlock_issue">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToList_context_subquery_deadlock_issue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToList_context_subquery_deadlock_issue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToList_context_subquery_deadlock_issue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToList_context_subquery_deadlock_issue () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToList_context_subquery_deadlock_issue : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToList_context_subquery_deadlock_issue : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToList_context_subquery_deadlock_issue " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToList_context_subquery_deadlock_issue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToList_context_subquery_deadlock_issue&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList_on_nav_subquery_in_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToList_on_nav_subquery_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToList_on_nav_subquery_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToList_on_nav_subquery_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToList_on_nav_subquery_in_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToList_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToList_on_nav_subquery_in_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToList_on_nav_subquery_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToList_on_nav_subquery_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToList_on_nav_subquery_in_projection&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList_on_nav_subquery_with_predicate_in_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToList_on_nav_subquery_with_predicate_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToList_on_nav_subquery_with_predicate_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToList_on_nav_subquery_with_predicate_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToList_on_nav_subquery_with_predicate_in_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToList_on_nav_subquery_with_predicate_in_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToList_on_nav_subquery_with_predicate_in_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToList_on_nav_subquery_with_predicate_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToList_on_nav_subquery_with_predicate_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToList_on_nav_subquery_with_predicate_in_projection&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToListAsync_can_be_canceled">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToListAsync_can_be_canceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToListAsync_can_be_canceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.ToListAsync_can_be_canceled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToListAsync_can_be_canceled () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToListAsync_can_be_canceled : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToListAsync_can_be_canceled : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.ToListAsync_can_be_canceled " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToListAsync_can_be_canceled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;ToListAsync_can_be_canceled&gt;d__17))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_dbset">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Union_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Union_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Union_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union_dbset () As Task" />
      <MemberSignature Language="F#" Value="abstract member Union_dbset : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Union_dbset : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Union_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Union_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Union_dbset&gt;d__344))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Union_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Union_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Union_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Union_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Union_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Union_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Union_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Union_nested&gt;d__346))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_non_entity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Union_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Union_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Union_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union_non_entity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Union_non_entity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Union_non_entity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Union_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Union_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Union_non_entity&gt;d__347))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Union_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Union_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Union_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Union_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Union_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Union_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Union_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Union_simple&gt;d__345))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_all_any_client">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_all_any_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_all_any_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_all_any_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_all_any_client () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_all_any_client : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_all_any_client : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_all_any_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_all_any_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_all_any_client&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_and&gt;d__349))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_and_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_and_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_and_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_and_with_logical_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_with_logical_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_and_with_logical_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_and_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_and_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_and_with_logical_and&gt;d__355))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_and_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_and_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_and_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_and_with_logical_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_with_logical_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_and_with_logical_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_and_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_and_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_and_with_logical_or&gt;d__357))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_or&gt;d__348))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_or_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_or_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_or_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_or_with_logical_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or_with_logical_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_or_with_logical_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_or_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_or_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_or_with_logical_and&gt;d__356))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bitwise_or_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bitwise_or_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bitwise_or_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bitwise_or_with_logical_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or_with_logical_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bitwise_or_with_logical_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bitwise_or_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bitwise_or_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bitwise_or_with_logical_or&gt;d__354))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_closure&gt;d__128))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member&gt;d__108))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_and_parameter_compared_to_binary_expression_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_and_parameter_compared_to_binary_expression_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_and_parameter_compared_to_binary_expression_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_and_parameter_compared_to_binary_expression_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_and_parameter_compared_to_binary_expression_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_and_parameter_compared_to_binary_expression_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_and_parameter_compared_to_binary_expression_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_and_parameter_compared_to_binary_expression_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_and_parameter_compared_to_binary_expression_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_and_parameter_compared_to_binary_expression_nested&gt;d__121))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_compared_to_binary_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_compared_to_binary_expression&gt;d__115))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_equals_constant">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_equals_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_equals_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_equals_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_equals_constant () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_equals_constant : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_equals_constant : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_equals_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_equals_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_equals_constant&gt;d__113))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_false">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_false () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_false : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_false : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_false&gt;d__109))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_false_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_false_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_false_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_false_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_false_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_false_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_false_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_false_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_false_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_false_shadow&gt;d__112))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_in_complex_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_in_complex_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_in_complex_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_in_complex_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_in_complex_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_in_complex_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_in_complex_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_in_complex_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_in_complex_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_in_complex_predicate&gt;d__114))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_negated_twice">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_negated_twice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_negated_twice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_negated_twice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_negated_twice () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_negated_twice : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_negated_twice : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_negated_twice " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_negated_twice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_negated_twice&gt;d__110))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_member_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_member_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_member_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_member_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_member_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_member_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_member_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_member_shadow&gt;d__111))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_parameter">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_parameter () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_parameter : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_parameter : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_parameter&gt;d__119))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_parameter_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_bool_parameter_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_bool_parameter_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_bool_parameter_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_bool_parameter_compared_to_binary_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_parameter_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_bool_parameter_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_bool_parameter_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_bool_parameter_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_bool_parameter_compared_to_binary_expression&gt;d__120))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_chain">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_chain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_chain() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_chain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_chain () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_chain : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_chain : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_chain " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_chain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_chain&gt;d__328))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_client () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_client : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_client : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_client&gt;d__78))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_compare_constructed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_compare_constructed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_compare_constructed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_compare_constructed () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_compare_constructed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_compare_constructed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_compare_constructed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_compare_constructed&gt;d__133))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_equal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_compare_constructed_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_compare_constructed_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_compare_constructed_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_compare_constructed_equal () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_equal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_compare_constructed_equal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_compare_constructed_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_compare_constructed_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_compare_constructed_equal&gt;d__130))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_multi_value_equal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_compare_constructed_multi_value_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_compare_constructed_multi_value_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_compare_constructed_multi_value_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_compare_constructed_multi_value_equal () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_multi_value_equal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_compare_constructed_multi_value_equal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_compare_constructed_multi_value_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_compare_constructed_multi_value_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_compare_constructed_multi_value_equal&gt;d__131))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_multi_value_not_equal">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_compare_constructed_multi_value_not_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_compare_constructed_multi_value_not_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_compare_constructed_multi_value_not_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_compare_constructed_multi_value_not_equal () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_multi_value_not_equal : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_compare_constructed_multi_value_not_equal : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_compare_constructed_multi_value_not_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_compare_constructed_multi_value_not_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_compare_constructed_multi_value_not_equal&gt;d__132))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_compare_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_compare_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_compare_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_compare_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_compare_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_compare_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_compare_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_compare_null&gt;d__134))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_comparison_nullable_type_not_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_comparison_nullable_type_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_comparison_nullable_type_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_comparison_nullable_type_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_comparison_nullable_type_not_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_comparison_nullable_type_not_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_comparison_nullable_type_not_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_comparison_nullable_type_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_comparison_nullable_type_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_comparison_nullable_type_not_null&gt;d__82))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_comparison_nullable_type_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_comparison_nullable_type_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_comparison_nullable_type_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_comparison_nullable_type_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_comparison_nullable_type_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_comparison_nullable_type_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_comparison_nullable_type_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_comparison_nullable_type_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_comparison_nullable_type_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_comparison_nullable_type_null&gt;d__83))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_negated_expression_optimized">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_complex_negated_expression_optimized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_complex_negated_expression_optimized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_complex_negated_expression_optimized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_complex_negated_expression_optimized () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_negated_expression_optimized : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_complex_negated_expression_optimized : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_complex_negated_expression_optimized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_complex_negated_expression_optimized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_complex_negated_expression_optimized&gt;d__124))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_constant_is_not_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_constant_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_constant_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_constant_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_constant_is_not_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_constant_is_not_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_constant_is_not_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_constant_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_constant_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_constant_is_not_null&gt;d__91))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_constant_is_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_constant_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_constant_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_constant_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_constant_is_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_constant_is_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_constant_is_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_constant_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_constant_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_constant_is_null&gt;d__88))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_de_morgan_and_optimizated">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_de_morgan_and_optimizated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_de_morgan_and_optimizated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_de_morgan_and_optimizated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_de_morgan_and_optimizated () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_de_morgan_and_optimizated : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_de_morgan_and_optimizated : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_de_morgan_and_optimizated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_de_morgan_and_optimizated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_de_morgan_and_optimizated&gt;d__123))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_de_morgan_or_optimizated">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_de_morgan_or_optimizated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_de_morgan_or_optimizated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_de_morgan_or_optimizated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_de_morgan_or_optimizated () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_de_morgan_or_optimizated : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_de_morgan_or_optimizated : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_de_morgan_or_optimizated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_de_morgan_or_optimizated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_de_morgan_or_optimizated&gt;d__122))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_method_int">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_equals_method_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_equals_method_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_equals_method_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_equals_method_int () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_method_int : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_equals_method_int : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_equals_method_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_equals_method_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_equals_method_int&gt;d__81))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_method_string">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_equals_method_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_equals_method_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_equals_method_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_equals_method_string () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_method_string : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_equals_method_string : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_equals_method_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_equals_method_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_equals_method_string&gt;d__80))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_false">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_false () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_false : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_false : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_false&gt;d__127))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_field_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_field_access_closure_via_query_cache&gt;d__62))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_First">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_First" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_First () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_First : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_First : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_First " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_First();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_First&gt;d__274))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_FirstOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_FirstOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_FirstOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_FirstOrDefault&gt;d__277))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_identity_comparison">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_identity_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_identity_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_identity_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_identity_comparison () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_identity_comparison : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_identity_comparison : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_identity_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_identity_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_identity_comparison&gt;d__92))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_in_optimization_multiple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_in_optimization_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_in_optimization_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_in_optimization_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_in_optimization_multiple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_in_optimization_multiple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_in_optimization_multiple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_in_optimization_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_in_optimization_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_in_optimization_multiple&gt;d__98))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_is_not_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_is_not_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_is_not_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_is_not_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_is_not_null&gt;d__89))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_is_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_is_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_is_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_is_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_is_null&gt;d__86))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Last">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_Last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_Last" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_Last () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_Last : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_Last : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_Last " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_Last();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_Last&gt;d__281))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_LastOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_LastOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_LastOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_LastOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_LastOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_LastOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_LastOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_LastOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_LastOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_LastOrDefault&gt;d__284))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_method_call_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_method_call_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_method_call_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_method_call_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_method_call_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_method_call_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_method_call_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_method_call_closure_via_query_cache&gt;d__61))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_nullable_type_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_method_call_nullable_type_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_method_call_nullable_type_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_method_call_nullable_type_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_method_call_nullable_type_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_nullable_type_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_method_call_nullable_type_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_method_call_nullable_type_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_method_call_nullable_type_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_method_call_nullable_type_closure_via_query_cache&gt;d__59))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_nullable_type_reverse_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_method_call_nullable_type_reverse_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_method_call_nullable_type_reverse_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_method_call_nullable_type_reverse_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_method_call_nullable_type_reverse_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_nullable_type_reverse_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_method_call_nullable_type_reverse_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_method_call_nullable_type_reverse_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_method_call_nullable_type_reverse_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_method_call_nullable_type_reverse_closure_via_query_cache&gt;d__60))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_negated_boolean_expression_compared_to_another_negated_boolean_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_negated_boolean_expression_compared_to_another_negated_boolean_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_negated_boolean_expression_compared_to_another_negated_boolean_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_negated_boolean_expression_compared_to_another_negated_boolean_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_negated_boolean_expression_compared_to_another_negated_boolean_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_negated_boolean_expression_compared_to_another_negated_boolean_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_negated_boolean_expression_compared_to_another_negated_boolean_expression&gt;d__117))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_nested_field_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_nested_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_nested_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_nested_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_nested_field_access_closure_via_query_cache&gt;d__66))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache_error_method_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache_error_method_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache_error_method_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_method_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_nested_field_access_closure_via_query_cache_error_method_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache_error_method_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_nested_field_access_closure_via_query_cache_error_method_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_nested_field_access_closure_via_query_cache_error_method_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_nested_field_access_closure_via_query_cache_error_method_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_nested_field_access_closure_via_query_cache_error_method_null&gt;d__69))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache_error_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache_error_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_nested_field_access_closure_via_query_cache_error_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_nested_field_access_closure_via_query_cache_error_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache_error_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_nested_field_access_closure_via_query_cache_error_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_nested_field_access_closure_via_query_cache_error_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_nested_field_access_closure_via_query_cache_error_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_nested_field_access_closure_via_query_cache_error_null&gt;d__68))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_nested_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_nested_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_nested_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_nested_property_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_nested_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_nested_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_nested_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_nested_property_access_closure_via_query_cache&gt;d__67))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_new_instance_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_new_instance_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_new_instance_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_new_instance_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_new_instance_field_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_new_instance_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_new_instance_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_new_instance_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_new_instance_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_new_instance_field_access_closure_via_query_cache&gt;d__70))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_bool_member_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_bool_member_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_bool_member_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_bool_member_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_bool_member_compared_to_binary_expression () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_bool_member_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_bool_member_compared_to_binary_expression : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_bool_member_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_bool_member_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_bool_member_compared_to_binary_expression&gt;d__118))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_bool_member_compared_to_not_bool_member">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_bool_member_compared_to_not_bool_member ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_bool_member_compared_to_not_bool_member() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_bool_member_compared_to_not_bool_member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_bool_member_compared_to_not_bool_member () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_bool_member_compared_to_not_bool_member : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_bool_member_compared_to_not_bool_member : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_bool_member_compared_to_not_bool_member " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_bool_member_compared_to_not_bool_member();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_bool_member_compared_to_not_bool_member&gt;d__116))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_in_optimization1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_in_optimization1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_in_optimization1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_in_optimization1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_in_optimization1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_in_optimization1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_in_optimization1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_in_optimization1&gt;d__99))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_in_optimization2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_in_optimization2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_in_optimization2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_in_optimization2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_in_optimization2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_in_optimization2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_in_optimization2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_in_optimization2&gt;d__100))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_in_optimization3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_in_optimization3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_in_optimization3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_in_optimization3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_in_optimization3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_in_optimization3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_in_optimization3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_in_optimization3&gt;d__101))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization4">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_not_in_optimization4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_not_in_optimization4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_not_in_optimization4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_not_in_optimization4 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization4 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_not_in_optimization4 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_not_in_optimization4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_not_in_optimization4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_not_in_optimization4&gt;d__102))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_null_is_not_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_null_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_null_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_null_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_null_is_not_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_null_is_not_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_null_is_not_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_null_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_null_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_null_is_not_null&gt;d__90))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_null_is_null">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_null_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_null_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_null_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_null_is_null () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_null_is_null : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_null_is_null : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_null_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_null_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_null_is_null&gt;d__87))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_OrderBy_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_OrderBy_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_OrderBy_Count&gt;d__243))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_OrderBy_Count_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_OrderBy_Count_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_OrderBy_Count_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_OrderBy_Count_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_OrderBy_Count_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_OrderBy_Count_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_OrderBy_Count_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_OrderBy_Count_client_eval&gt;d__247))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_OrderBy_Count_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_OrderBy_Count_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_OrderBy_Count_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_OrderBy_Count_client_eval_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_OrderBy_Count_client_eval_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_OrderBy_Count_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_OrderBy_Count_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_OrderBy_Count_client_eval_mixed&gt;d__248))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_primitive () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_primitive : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_primitive&gt;d__104))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive_tracked">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_primitive_tracked ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_primitive_tracked() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_primitive_tracked" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_primitive_tracked () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive_tracked : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_primitive_tracked : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_primitive_tracked " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_primitive_tracked();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_primitive_tracked&gt;d__105))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive_tracked2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_primitive_tracked2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_primitive_tracked2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_primitive_tracked2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_primitive_tracked2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive_tracked2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_primitive_tracked2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_primitive_tracked2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_primitive_tracked2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_primitive_tracked2&gt;d__106))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_projection&gt;d__135))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_property_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_property_access_closure_via_query_cache&gt;d__63))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_query_composition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_query_composition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_query_composition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_query_composition () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_query_composition : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_query_composition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_query_composition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_query_composition&gt;d__161))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_and">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_and () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_and : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_and : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_and&gt;d__103))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_or () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_or : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_or&gt;d__93))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or_with_parameter">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_or_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_or_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_or_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_or_with_parameter () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or_with_parameter : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_or_with_parameter : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_or_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_or_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_or_with_parameter&gt;d__97))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_or2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_or2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_or2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_or2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_or2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_or2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_or2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_or2&gt;d__94))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_or3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_or3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_or3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_or3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_or3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_or3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_or3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_or3&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or4">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_select_many_or4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_select_many_or4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_select_many_or4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_select_many_or4 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or4 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_select_many_or4 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_select_many_or4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_select_many_or4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_select_many_or4&gt;d__96))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_shadow_subquery_first">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_shadow_subquery_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_shadow_subquery_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_shadow_subquery_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_shadow_subquery_first () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_shadow_subquery_first : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_shadow_subquery_first : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_shadow_subquery_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_shadow_subquery_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_shadow_subquery_first&gt;d__77))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_short_member_comparison">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_short_member_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_short_member_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_short_member_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_short_member_comparison () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_short_member_comparison : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_short_member_comparison : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_short_member_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_short_member_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_short_member_comparison&gt;d__125))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple&gt;d__54))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_closure () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_closure : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_closure&gt;d__55))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_constant">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_closure_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_closure_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_closure_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_closure_constant () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_constant : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_closure_constant : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_closure_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_closure_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_closure_constant&gt;d__56))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_closure_via_query_cache&gt;d__57))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache_nullable_type">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_closure_via_query_cache_nullable_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_closure_via_query_cache_nullable_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_closure_via_query_cache_nullable_type () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache_nullable_type : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_closure_via_query_cache_nullable_type : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_closure_via_query_cache_nullable_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_closure_via_query_cache_nullable_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_closure_via_query_cache_nullable_type&gt;d__71))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache_nullable_type_reverse">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_closure_via_query_cache_nullable_type_reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_closure_via_query_cache_nullable_type_reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type_reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_closure_via_query_cache_nullable_type_reverse () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache_nullable_type_reverse : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_closure_via_query_cache_nullable_type_reverse : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_closure_via_query_cache_nullable_type_reverse " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_closure_via_query_cache_nullable_type_reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_closure_via_query_cache_nullable_type_reverse&gt;d__72))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_reversed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_reversed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_reversed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_reversed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_reversed () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_reversed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_reversed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_reversed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_reversed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_reversed&gt;d__85))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_shadow&gt;d__73))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_shadow_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_shadow_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_shadow_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_shadow_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_shadow_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_shadow_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_shadow_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_shadow_projection&gt;d__74))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_projection_mixed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_shadow_projection_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_shadow_projection_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_shadow_projection_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_shadow_projection_mixed () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_projection_mixed : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_shadow_projection_mixed : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_shadow_projection_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_shadow_projection_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_shadow_projection_mixed&gt;d__75))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_simple_shadow_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_simple_shadow_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_simple_shadow_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_simple_shadow_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_simple_shadow_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_simple_shadow_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_simple_shadow_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_simple_shadow_subquery&gt;d__76))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Single">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_Single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_Single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_Single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_Single () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_Single : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_Single : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_Single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_Single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_Single&gt;d__268))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_SingleOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_SingleOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_SingleOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_SingleOrDefault&gt;d__271))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_static_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_static_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_static_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_static_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_static_field_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_static_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_static_field_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_static_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_static_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_static_field_access_closure_via_query_cache&gt;d__64))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_static_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_static_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_static_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_static_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_static_property_access_closure_via_query_cache () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_static_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_static_property_access_closure_via_query_cache : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_static_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_static_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_static_property_access_closure_via_query_cache&gt;d__65))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_length">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_string_length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_string_length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_string_length" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_string_length () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_string_length : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_string_length : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_string_length " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_string_length();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_string_length&gt;d__84))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_anon">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_subquery_anon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_subquery_anon() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_subquery_anon" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_subquery_anon () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_anon : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_subquery_anon : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_subquery_anon " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_subquery_anon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8956")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_subquery_anon&gt;d__107))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_correlated_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_subquery_correlated_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_subquery_correlated_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_subquery_correlated_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_subquery_correlated_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_correlated_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_subquery_correlated_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_subquery_correlated_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_subquery_correlated_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_subquery_correlated_client_eval&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_on_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_subquery_on_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_subquery_on_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_subquery_on_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_subquery_on_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_on_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_subquery_on_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_subquery_on_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_subquery_on_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_subquery_on_collection&gt;d__160))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_recursive_trivial">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_subquery_recursive_trivial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_subquery_recursive_trivial() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_subquery_recursive_trivial" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_subquery_recursive_trivial () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_recursive_trivial : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_subquery_recursive_trivial : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_subquery_recursive_trivial " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_subquery_recursive_trivial();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_subquery_recursive_trivial&gt;d__162))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_true">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Where_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Where_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1.Where_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Where_true () As Task" />
      <MemberSignature Language="F#" Value="abstract member Where_true : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Where_true : unit -&gt; System.Threading.Tasks.Task" Usage="asyncSimpleQueryTestBase.Where_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Where_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncSimpleQueryTestBase`1/&lt;Where_true&gt;d__126))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>