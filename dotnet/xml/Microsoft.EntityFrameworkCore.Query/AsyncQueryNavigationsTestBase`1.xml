<Type Name="AsyncQueryNavigationsTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncQueryNavigationsTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncQueryNavigationsTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncQueryNavigationsTestBase(Of TFixture)&#xA;Inherits AsyncQueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type AsyncQueryNavigationsTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit AsyncQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class AsyncQueryNavigationsTestBase abstract : Microsoft::EntityFrameworkCore::Query::AsyncQueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncQueryNavigationsTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncQueryNavigationsTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; AsyncQueryNavigationsTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" AsyncQueryNavigationsTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="asyncQueryNavigationsTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_multiple_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_multiple_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_multiple_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.Include_with_multiple_optional_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_multiple_optional_navigations () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_multiple_optional_navigations : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_multiple_optional_navigations : unit -&gt; System.Threading.Tasks.Task" Usage="asyncQueryNavigationsTestBase.Include_with_multiple_optional_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_multiple_optional_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;Include_with_multiple_optional_navigations&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_include_with_multiple_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Multiple_include_with_multiple_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Multiple_include_with_multiple_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1.Multiple_include_with_multiple_optional_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Multiple_include_with_multiple_optional_navigations () As Task" />
      <MemberSignature Language="F#" Value="abstract member Multiple_include_with_multiple_optional_navigations : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Multiple_include_with_multiple_optional_navigations : unit -&gt; System.Threading.Tasks.Task" Usage="asyncQueryNavigationsTestBase.Multiple_include_with_multiple_optional_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Multiple_include_with_multiple_optional_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncQueryNavigationsTestBase`1/&lt;Multiple_include_with_multiple_optional_navigations&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>