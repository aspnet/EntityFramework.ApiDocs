<Type Name="AsyncGearsOfWarQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncGearsOfWarQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt; where TFixture : GearsOfWarQueryFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncGearsOfWarQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncGearsOfWarQueryTestBase(Of TFixture)&#xA;Inherits AsyncQueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type AsyncGearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit AsyncQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : GearsOfWarQueryFixtureBasegcnew()public ref class AsyncGearsOfWarQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::AsyncQueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncGearsOfWarQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.GearsOfWarQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncGearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; AsyncGearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" AsyncGearsOfWarQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projecting_constant">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projecting_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projecting_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projecting_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projecting_constant () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projecting_constant : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projecting_constant : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projecting_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projecting_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projecting_constant&gt;d__45))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projecting_single_property">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projecting_single_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projecting_single_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projecting_single_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projecting_single_property () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projecting_single_property : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projecting_single_property : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projecting_single_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projecting_single_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projecting_single_property&gt;d__44))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projection&gt;d__39))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_composite_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projection_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projection_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projection_composite_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_composite_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projection_composite_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projection_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projection_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projection_composite_key&gt;d__43))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_explicit_to_array">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projection_explicit_to_array ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projection_explicit_to_array() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_explicit_to_array" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projection_explicit_to_array () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_explicit_to_array : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projection_explicit_to_array : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projection_explicit_to_array " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projection_explicit_to_array();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projection_explicit_to_array&gt;d__41))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_explicit_to_list">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projection_explicit_to_list ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projection_explicit_to_list() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_explicit_to_list" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projection_explicit_to_list () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_explicit_to_list : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projection_explicit_to_list : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projection_explicit_to_list " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projection_explicit_to_list();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projection_explicit_to_list&gt;d__40))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_basic_projection_ordered">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_basic_projection_ordered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_basic_projection_ordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_basic_projection_ordered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_basic_projection_ordered () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_basic_projection_ordered : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_basic_projection_ordered : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_basic_projection_ordered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_basic_projection_ordered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_basic_projection_ordered&gt;d__42))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_complex_scenario1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_complex_scenario1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_complex_scenario1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_complex_scenario1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_complex_scenario1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_complex_scenario1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_complex_scenario1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_complex_scenario1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_complex_scenario1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_complex_scenario1&gt;d__70))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_complex_scenario2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_complex_scenario2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_complex_scenario2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_complex_scenario2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_complex_scenario2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_complex_scenario2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_complex_scenario2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_complex_scenario2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_complex_scenario2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_complex_scenario2&gt;d__71))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_deeply_nested_left_join">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_deeply_nested_left_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_deeply_nested_left_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_deeply_nested_left_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_deeply_nested_left_join () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_deeply_nested_left_join : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_deeply_nested_left_join : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_deeply_nested_left_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_deeply_nested_left_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_deeply_nested_left_join&gt;d__68))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_different_collections_projected">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_different_collections_projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_different_collections_projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_different_collections_projected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_different_collections_projected () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_different_collections_projected : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_different_collections_projected : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_different_collections_projected " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_different_collections_projected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_different_collections_projected&gt;d__54))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_from_left_join_with_additional_elements_projected_of_that_join&gt;d__69))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_inner_subquery_predicate_references_outer_qsre">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_inner_subquery_predicate_references_outer_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_inner_subquery_predicate_references_outer_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_inner_subquery_predicate_references_outer_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_inner_subquery_predicate_references_outer_qsre () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_inner_subquery_predicate_references_outer_qsre : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_inner_subquery_predicate_references_outer_qsre : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_inner_subquery_predicate_references_outer_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_inner_subquery_predicate_references_outer_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_inner_subquery_predicate_references_outer_qsre&gt;d__57))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_inner_subquery_selector_references_outer_qsre">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_inner_subquery_selector_references_outer_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_inner_subquery_selector_references_outer_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_inner_subquery_selector_references_outer_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_inner_subquery_selector_references_outer_qsre () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_inner_subquery_selector_references_outer_qsre : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_inner_subquery_selector_references_outer_qsre : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_inner_subquery_selector_references_outer_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_inner_subquery_selector_references_outer_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_inner_subquery_selector_references_outer_qsre&gt;d__56))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_left_join_with_self_reference">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_left_join_with_self_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_left_join_with_self_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_left_join_with_self_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_left_join_with_self_reference () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_left_join_with_self_reference : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_left_join_with_self_reference : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_left_join_with_self_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_left_join_with_self_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_left_join_with_self_reference&gt;d__67))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_multiple_nested_complex_collections">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_multiple_nested_complex_collections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_multiple_nested_complex_collections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_multiple_nested_complex_collections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_multiple_nested_complex_collections () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_multiple_nested_complex_collections : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_multiple_nested_complex_collections : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_multiple_nested_complex_collections " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_multiple_nested_complex_collections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_multiple_nested_complex_collections&gt;d__55))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_naked_navigation_with_ToArray">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_naked_navigation_with_ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_naked_navigation_with_ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_naked_navigation_with_ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_naked_navigation_with_ToArray () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_naked_navigation_with_ToArray : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_naked_navigation_with_ToArray : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_naked_navigation_with_ToArray " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_naked_navigation_with_ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_naked_navigation_with_ToArray&gt;d__38))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_naked_navigation_with_ToList">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_naked_navigation_with_ToList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_naked_navigation_with_ToList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_naked_navigation_with_ToList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_naked_navigation_with_ToList () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_naked_navigation_with_ToList : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_naked_navigation_with_ToList : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_naked_navigation_with_ToList " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_naked_navigation_with_ToList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_naked_navigation_with_ToList&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested&gt;d__48))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested_inner_subquery_references_outer_qsre_one_level_up&gt;d__58))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested_inner_subquery_references_outer_qsre_two_levels_up&gt;d__59))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_mixed_streaming_with_buffer1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested_mixed_streaming_with_buffer1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested_mixed_streaming_with_buffer1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested_mixed_streaming_with_buffer1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested_mixed_streaming_with_buffer1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_mixed_streaming_with_buffer1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested_mixed_streaming_with_buffer1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested_mixed_streaming_with_buffer1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested_mixed_streaming_with_buffer1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested_mixed_streaming_with_buffer1&gt;d__49))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_mixed_streaming_with_buffer2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested_mixed_streaming_with_buffer2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested_mixed_streaming_with_buffer2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested_mixed_streaming_with_buffer2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested_mixed_streaming_with_buffer2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_mixed_streaming_with_buffer2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested_mixed_streaming_with_buffer2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested_mixed_streaming_with_buffer2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested_mixed_streaming_with_buffer2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested_mixed_streaming_with_buffer2&gt;d__50))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_nested_with_custom_ordering">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_nested_with_custom_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_nested_with_custom_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_nested_with_custom_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_nested_with_custom_ordering () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_nested_with_custom_ordering : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_nested_with_custom_ordering : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_nested_with_custom_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_nested_with_custom_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_nested_with_custom_ordering&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_left_join_with_null_value">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_on_left_join_with_null_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_on_left_join_with_null_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_on_left_join_with_null_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_on_left_join_with_null_value () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_left_join_with_null_value : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_on_left_join_with_null_value : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_on_left_join_with_null_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_on_left_join_with_null_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_on_left_join_with_null_value&gt;d__66))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_left_join_with_predicate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_on_left_join_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_on_left_join_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_on_left_join_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_on_left_join_with_predicate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_left_join_with_predicate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_on_left_join_with_predicate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_on_left_join_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_on_left_join_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_on_left_join_with_predicate&gt;d__65))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_on_select_many">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_on_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_on_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_on_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_on_select_many () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_on_select_many : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_on_select_many : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_on_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_on_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_on_select_many&gt;d__60))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_project_anonymous_collection_result">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_project_anonymous_collection_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_project_anonymous_collection_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_project_anonymous_collection_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_project_anonymous_collection_result () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_project_anonymous_collection_result : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_project_anonymous_collection_result : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_project_anonymous_collection_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_project_anonymous_collection_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_project_anonymous_collection_result&gt;d__47))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_projection_of_collection_thru_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_projection_of_collection_thru_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_projection_of_collection_thru_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_projection_of_collection_thru_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_projection_of_collection_thru_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_projection_of_collection_thru_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_projection_of_collection_thru_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_projection_of_collection_thru_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_projection_of_collection_thru_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_projection_of_collection_thru_navigation&gt;d__46))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_same_collection_projected_multiple_times">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_same_collection_projected_multiple_times ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_same_collection_projected_multiple_times() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_same_collection_projected_multiple_times" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_same_collection_projected_multiple_times () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_same_collection_projected_multiple_times : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_same_collection_projected_multiple_times : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_same_collection_projected_multiple_times " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_same_collection_projected_multiple_times();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_same_collection_projected_multiple_times&gt;d__52))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_similar_collection_projected_multiple_times">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_similar_collection_projected_multiple_times ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_similar_collection_projected_multiple_times() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_similar_collection_projected_multiple_times" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_similar_collection_projected_multiple_times () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_similar_collection_projected_multiple_times : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_similar_collection_projected_multiple_times : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_similar_collection_projected_multiple_times " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_similar_collection_projected_multiple_times();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_similar_collection_projected_multiple_times&gt;d__53))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_with_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_with_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_with_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_with_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_with_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_with_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_with_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_with_Distinct&gt;d__63))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_with_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_with_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_with_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_with_FirstOrDefault () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_FirstOrDefault : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_with_FirstOrDefault : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_with_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_with_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_with_FirstOrDefault&gt;d__64))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Skip">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_with_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_with_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_with_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_with_Skip () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Skip : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_with_Skip : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_with_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_with_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_with_Skip&gt;d__61))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_collections_with_Take">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Correlated_collections_with_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Correlated_collections_with_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Correlated_collections_with_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Correlated_collections_with_Take () As Task" />
      <MemberSignature Language="F#" Value="abstract member Correlated_collections_with_Take : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Correlated_collections_with_Take : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Correlated_collections_with_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Correlated_collections_with_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Correlated_collections_with_Take&gt;d__62))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As GearsOfWarContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext" Usage="asyncGearsOfWarQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::GearsOfWarModel::GearsOfWarContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::GearsOfWarModel::GearsOfWarContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.GearsOfWarModel.GearsOfWarContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_empty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Entity_equality_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Entity_equality_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Entity_equality_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Entity_equality_empty () As Task" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_empty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Entity_equality_empty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Entity_equality_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Entity_equality_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Entity_equality_empty&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum_ToString_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Enum_ToString_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Enum_ToString_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Enum_ToString_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Enum_ToString_is_client_eval () As Task" />
      <MemberSignature Language="F#" Value="abstract member Enum_ToString_is_client_eval : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Enum_ToString_is_client_eval : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Enum_ToString_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Enum_ToString_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Enum_ToString_is_client_eval&gt;d__36))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter_on_subquery_projecting_one_value_type_from_empty_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Filter_on_subquery_projecting_one_value_type_from_empty_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Filter_on_subquery_projecting_one_value_type_from_empty_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Filter_on_subquery_projecting_one_value_type_from_empty_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Filter_on_subquery_projecting_one_value_type_from_empty_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Filter_on_subquery_projecting_one_value_type_from_empty_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Filter_on_subquery_projecting_one_value_type_from_empty_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Filter_on_subquery_projecting_one_value_type_from_empty_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Filter_on_subquery_projecting_one_value_type_from_empty_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Filter_on_subquery_projecting_one_value_type_from_empty_collection&gt;d__90))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;GroupJoin_on_entity_qsre_keys_inner_key_is_nested_navigation&gt;d__84))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_base_navigation_on_derived_entity">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_base_navigation_on_derived_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_base_navigation_on_derived_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_base_navigation_on_derived_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_base_navigation_on_derived_entity () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_base_navigation_on_derived_entity : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_base_navigation_on_derived_entity : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_base_navigation_on_derived_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_base_navigation_on_derived_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_base_navigation_on_derived_entity&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_lambda">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_collection_on_derived_type_using_lambda ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_collection_on_derived_type_using_lambda() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_lambda" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_collection_on_derived_type_using_lambda () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_lambda : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_collection_on_derived_type_using_lambda : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_collection_on_derived_type_using_lambda " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_collection_on_derived_type_using_lambda();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_collection_on_derived_type_using_lambda&gt;d__26))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_lambda_with_soft_cast">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_collection_on_derived_type_using_lambda_with_soft_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_collection_on_derived_type_using_lambda_with_soft_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_lambda_with_soft_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_collection_on_derived_type_using_lambda_with_soft_cast () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_lambda_with_soft_cast : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_collection_on_derived_type_using_lambda_with_soft_cast : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_collection_on_derived_type_using_lambda_with_soft_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_collection_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_collection_on_derived_type_using_lambda_with_soft_cast&gt;d__27))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_on_derived_type_using_string">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_collection_on_derived_type_using_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_collection_on_derived_type_using_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_collection_on_derived_type_using_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_collection_on_derived_type_using_string () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_on_derived_type_using_string : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_collection_on_derived_type_using_string : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_collection_on_derived_type_using_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_collection_on_derived_type_using_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_collection_on_derived_type_using_string&gt;d__25))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_circular ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_circular() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_circular" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_circular () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_circular : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_circular : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_circular " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_circular();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_circular&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_circular_with_filter">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_circular_with_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_circular_with_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_circular_with_filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_circular_with_filter () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_circular_with_filter : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_circular_with_filter : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_circular_with_filter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_circular_with_filter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_circular_with_filter&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_include_then_include">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_include_then_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_include_then_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_include_then_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_include_then_include () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_include_then_include : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_include_then_include : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_include_then_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_include_then_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_include_then_include&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_one_to_one_and_one_to_many () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_many : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_one_to_one_and_one_to_many : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_one_to_one_and_one_to_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_one_to_one_and_one_to_many&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_many_self_reference">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_many_self_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_many_self_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_many_self_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_one_to_one_and_one_to_many_self_reference () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_many_self_reference : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_one_to_one_and_one_to_many_self_reference : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_many_self_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_one_to_one_and_one_to_many_self_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_one_to_one_and_one_to_many_self_reference&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_and_one_to_one_and_one_to_many">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_one_and_one_to_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_one_to_one_and_one_to_one_and_one_to_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_one_to_one_and_one_to_one_and_one_to_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_one_to_one_and_one_to_one_and_one_to_many () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_and_one_to_one_and_one_to_many : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_one_to_one_and_one_to_one_and_one_to_many : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_one_to_one_and_one_to_one_and_one_to_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_one_to_one_and_one_to_one_and_one_to_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_one_to_one_and_one_to_one_and_one_to_many&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_multiple_one_to_one_optional_and_one_to_one_required">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_multiple_one_to_one_optional_and_one_to_one_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_multiple_one_to_one_optional_and_one_to_one_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_multiple_one_to_one_optional_and_one_to_one_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_multiple_one_to_one_optional_and_one_to_one_required () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_multiple_one_to_one_optional_and_one_to_one_required : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_multiple_one_to_one_optional_and_one_to_one_required : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_multiple_one_to_one_optional_and_one_to_one_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_multiple_one_to_one_optional_and_one_to_one_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_multiple_one_to_one_optional_and_one_to_one_required&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_navigation_on_derived_type () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_navigation_on_derived_type : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_navigation_on_derived_type : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_navigation_on_derived_type&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_on_derived_multi_level">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_on_derived_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_on_derived_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_on_derived_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_on_derived_multi_level () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_on_derived_multi_level : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_on_derived_multi_level : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_on_derived_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_on_derived_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_on_derived_multi_level&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_lambda () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_lambda : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_lambda();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_lambda&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda_with_soft_cast">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda_with_soft_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda_with_soft_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda_with_soft_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_lambda_with_soft_cast () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda_with_soft_cast : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_lambda_with_soft_cast : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda_with_soft_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_lambda_with_soft_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_lambda_with_soft_cast&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_lambda_with_tracking">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda_with_tracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_lambda_with_tracking() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_lambda_with_tracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_lambda_with_tracking () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_lambda_with_tracking : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_lambda_with_tracking : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_lambda_with_tracking " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_lambda_with_tracking();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_lambda_with_tracking&gt;d__24))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_string () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_string : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_string&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string_nested1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_string_nested1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_string_nested1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string_nested1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_string_nested1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string_nested1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_string_nested1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string_nested1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_string_nested1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_string_nested1&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_on_derived_type_using_string_nested2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_reference_on_derived_type_using_string_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_reference_on_derived_type_using_string_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_reference_on_derived_type_using_string_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_reference_on_derived_type_using_string_nested2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_on_derived_type_using_string_nested2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_reference_on_derived_type_using_string_nested2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_reference_on_derived_type_using_string_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_reference_on_derived_type_using_string_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_reference_on_derived_type_using_string_nested2&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_using_alternate_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_using_alternate_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_using_alternate_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_using_alternate_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_using_alternate_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_using_alternate_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_using_alternate_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_using_alternate_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_using_alternate_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_using_alternate_key&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_concat">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_concat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_concat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_concat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_concat () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_concat : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_concat : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_concat " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_concat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_concat&gt;d__75))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_group_by_on_entity_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_group_by_on_entity_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_group_by_on_entity_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_group_by_on_entity_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_group_by_on_entity_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_group_by_on_entity_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_group_by_on_entity_navigation&gt;d__88))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_qsre">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_group_by_on_entity_qsre ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_group_by_on_entity_qsre() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_qsre" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_group_by_on_entity_qsre () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_qsre : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_group_by_on_entity_qsre : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_group_by_on_entity_qsre " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_group_by_on_entity_qsre();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_group_by_on_entity_qsre&gt;d__86))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_group_by_on_entity_qsre_with_composite_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_group_by_on_entity_qsre_with_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_group_by_on_entity_qsre_with_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_group_by_on_entity_qsre_with_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_group_by_on_entity_qsre_with_composite_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_group_by_on_entity_qsre_with_composite_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_group_by_on_entity_qsre_with_composite_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_group_by_on_entity_qsre_with_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_group_by_on_entity_qsre_with_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_group_by_on_entity_qsre_with_composite_key&gt;d__87))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_join_collection1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_join_collection1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_join_collection1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_join_collection1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_collection1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_join_collection1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_join_collection1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_join_collection1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_join_collection1&gt;d__17))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_collection2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_join_collection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_join_collection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_join_collection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_join_collection2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_collection2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_join_collection2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_join_collection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_join_collection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_join_collection2&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference1">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_join_reference1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_join_reference1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_join_reference1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_join_reference1 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_reference1 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_join_reference1 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_join_reference1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_join_reference1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_join_reference1&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_join_reference2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Include_with_join_reference2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Include_with_join_reference2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Include_with_join_reference2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Include_with_join_reference2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member Include_with_join_reference2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Include_with_join_reference2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Include_with_join_reference2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Include_with_join_reference2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Include_with_join_reference2&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys&gt;d__77))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_composite_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_composite_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_composite_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_composite_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_composite_key&gt;d__78))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inheritance">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_inheritance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_inheritance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inheritance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_inheritance () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inheritance : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_inheritance : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inheritance " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_inheritance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_inheritance&gt;d__79))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_inner_key_is_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_inner_key_is_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_inner_key_is_navigation&gt;d__81))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_inner_key_is_navigation_composite_key&gt;d__82))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_inner_key_is_nested_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_nested_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_inner_key_is_nested_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_inner_key_is_nested_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_inner_key_is_nested_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_inner_key_is_nested_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_inner_key_is_nested_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_inner_key_is_nested_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_inner_key_is_nested_navigation&gt;d__83))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_on_entity_qsre_keys_outer_key_is_navigation">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_on_entity_qsre_keys_outer_key_is_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_on_entity_qsre_keys_outer_key_is_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_on_entity_qsre_keys_outer_key_is_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_on_entity_qsre_keys_outer_key_is_navigation () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_on_entity_qsre_keys_outer_key_is_navigation : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_on_entity_qsre_keys_outer_key_is_navigation : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_on_entity_qsre_keys_outer_key_is_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_on_entity_qsre_keys_outer_key_is_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_on_entity_qsre_keys_outer_key_is_navigation&gt;d__80))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_with_complex_key_selector">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_with_complex_key_selector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_with_complex_key_selector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Join_with_complex_key_selector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_with_complex_key_selector () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_with_complex_key_selector : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_with_complex_key_selector : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Join_with_complex_key_selector " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_with_complex_key_selector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Join_with_complex_key_selector&gt;d__85))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_derived_included_on_one_method">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Multiple_derived_included_on_one_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Multiple_derived_included_on_one_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Multiple_derived_included_on_one_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Multiple_derived_included_on_one_method () As Task" />
      <MemberSignature Language="F#" Value="abstract member Multiple_derived_included_on_one_method : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Multiple_derived_included_on_one_method : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Multiple_derived_included_on_one_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Multiple_derived_included_on_one_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Multiple_derived_included_on_one_method&gt;d__33))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negated_bool_ternary_inside_anonymous_type_in_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Negated_bool_ternary_inside_anonymous_type_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Negated_bool_ternary_inside_anonymous_type_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Negated_bool_ternary_inside_anonymous_type_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Negated_bool_ternary_inside_anonymous_type_in_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Negated_bool_ternary_inside_anonymous_type_in_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Negated_bool_ternary_inside_anonymous_type_in_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Negated_bool_ternary_inside_anonymous_type_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Negated_bool_ternary_inside_anonymous_type_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Negated_bool_ternary_inside_anonymous_type_in_projection&gt;d__76))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_group_join_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Outer_parameter_in_group_join_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Outer_parameter_in_group_join_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Outer_parameter_in_group_join_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Outer_parameter_in_group_join_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_group_join_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Outer_parameter_in_group_join_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Outer_parameter_in_group_join_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Outer_parameter_in_group_join_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Outer_parameter_in_group_join_key&gt;d__73))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_group_join_with_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Outer_parameter_in_group_join_with_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Outer_parameter_in_group_join_with_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Outer_parameter_in_group_join_with_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Outer_parameter_in_group_join_with_DefaultIfEmpty () As Task" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_group_join_with_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Outer_parameter_in_group_join_with_DefaultIfEmpty : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Outer_parameter_in_group_join_with_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Outer_parameter_in_group_join_with_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Outer_parameter_in_group_join_with_DefaultIfEmpty&gt;d__74))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outer_parameter_in_join_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Outer_parameter_in_join_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Outer_parameter_in_join_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Outer_parameter_in_join_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Outer_parameter_in_join_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Outer_parameter_in_join_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Outer_parameter_in_join_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Outer_parameter_in_join_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Outer_parameter_in_join_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Outer_parameter_in_join_key&gt;d__72))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_one_value_type_from_empty_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Project_one_value_type_from_empty_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Project_one_value_type_from_empty_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Project_one_value_type_from_empty_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Project_one_value_type_from_empty_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member Project_one_value_type_from_empty_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Project_one_value_type_from_empty_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Project_one_value_type_from_empty_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Project_one_value_type_from_empty_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Project_one_value_type_from_empty_collection&gt;d__89))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projecting_nullable_bool_in_conditional_works">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Projecting_nullable_bool_in_conditional_works ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Projecting_nullable_bool_in_conditional_works() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Projecting_nullable_bool_in_conditional_works" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Projecting_nullable_bool_in_conditional_works () As Task" />
      <MemberSignature Language="F#" Value="abstract member Projecting_nullable_bool_in_conditional_works : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Projecting_nullable_bool_in_conditional_works : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Projecting_nullable_bool_in_conditional_works " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Projecting_nullable_bool_in_conditional_works();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Projecting_nullable_bool_in_conditional_works&gt;d__35))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Navigation_Included">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_Where_Navigation_Included ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_Where_Navigation_Included() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.Select_Where_Navigation_Included" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_Where_Navigation_Included () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Navigation_Included : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_Where_Navigation_Included : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.Select_Where_Navigation_Included " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_Where_Navigation_Included();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;Select_Where_Navigation_Included&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_based_Include_navigation_on_derived_type">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task String_based_Include_navigation_on_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task String_based_Include_navigation_on_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.String_based_Include_navigation_on_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function String_based_Include_navigation_on_derived_type () As Task" />
      <MemberSignature Language="F#" Value="abstract member String_based_Include_navigation_on_derived_type : unit -&gt; System.Threading.Tasks.Task&#xA;override this.String_based_Include_navigation_on_derived_type : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.String_based_Include_navigation_on_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ String_based_Include_navigation_on_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;String_based_Include_navigation_on_derived_type&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_base_reference">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_base_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_base_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_base_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ThenInclude_collection_on_derived_after_base_reference () As Task" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_base_reference : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ThenInclude_collection_on_derived_after_base_reference : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_base_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ThenInclude_collection_on_derived_after_base_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;ThenInclude_collection_on_derived_after_base_reference&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_derived_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_derived_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_derived_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_derived_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ThenInclude_collection_on_derived_after_derived_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_derived_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ThenInclude_collection_on_derived_after_derived_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_derived_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ThenInclude_collection_on_derived_after_derived_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;ThenInclude_collection_on_derived_after_derived_collection&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_collection_on_derived_after_derived_reference">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_derived_reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ThenInclude_collection_on_derived_after_derived_reference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.ThenInclude_collection_on_derived_after_derived_reference" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ThenInclude_collection_on_derived_after_derived_reference () As Task" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_collection_on_derived_after_derived_reference : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ThenInclude_collection_on_derived_after_derived_reference : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.ThenInclude_collection_on_derived_after_derived_reference " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ThenInclude_collection_on_derived_after_derived_reference();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;ThenInclude_collection_on_derived_after_derived_reference&gt;d__30))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenInclude_reference_on_derived_after_derived_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ThenInclude_reference_on_derived_after_derived_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ThenInclude_reference_on_derived_after_derived_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.ThenInclude_reference_on_derived_after_derived_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ThenInclude_reference_on_derived_after_derived_collection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ThenInclude_reference_on_derived_after_derived_collection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ThenInclude_reference_on_derived_after_derived_collection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.ThenInclude_reference_on_derived_after_derived_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ThenInclude_reference_on_derived_after_derived_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;ThenInclude_reference_on_derived_after_derived_collection&gt;d__32))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString_guid_property_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToString_guid_property_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToString_guid_property_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1.ToString_guid_property_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToString_guid_property_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToString_guid_property_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToString_guid_property_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGearsOfWarQueryTestBase.ToString_guid_property_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToString_guid_property_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGearsOfWarQueryTestBase`1/&lt;ToString_guid_property_projection&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>