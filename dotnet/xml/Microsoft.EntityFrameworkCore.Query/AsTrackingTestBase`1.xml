<Type Name="AsTrackingTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsTrackingTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsTrackingTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsTrackingTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type AsTrackingTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class AsTrackingTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsTrackingTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsTrackingTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; AsTrackingTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" AsTrackingTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Applied_to_body_clause">
      <MemberSignature Language="C#" Value="public virtual void Applied_to_body_clause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Applied_to_body_clause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Applied_to_body_clause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Applied_to_body_clause ()" />
      <MemberSignature Language="F#" Value="abstract member Applied_to_body_clause : unit -&gt; unit&#xA;override this.Applied_to_body_clause : unit -&gt; unit" Usage="asTrackingTestBase.Applied_to_body_clause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Applied_to_body_clause();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Applied_to_body_clause();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Applied_to_body_clause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Applied_to_body_clause_with_projection">
      <MemberSignature Language="C#" Value="public virtual void Applied_to_body_clause_with_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Applied_to_body_clause_with_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Applied_to_body_clause_with_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Applied_to_body_clause_with_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Applied_to_body_clause_with_projection : unit -&gt; unit&#xA;override this.Applied_to_body_clause_with_projection : unit -&gt; unit" Usage="asTrackingTestBase.Applied_to_body_clause_with_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Applied_to_body_clause_with_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Applied_to_body_clause_with_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Applied_to_body_clause_with_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Applied_to_multiple_body_clauses">
      <MemberSignature Language="C#" Value="public virtual void Applied_to_multiple_body_clauses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Applied_to_multiple_body_clauses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Applied_to_multiple_body_clauses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Applied_to_multiple_body_clauses ()" />
      <MemberSignature Language="F#" Value="abstract member Applied_to_multiple_body_clauses : unit -&gt; unit&#xA;override this.Applied_to_multiple_body_clauses : unit -&gt; unit" Usage="asTrackingTestBase.Applied_to_multiple_body_clauses " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Applied_to_multiple_body_clauses();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Applied_to_multiple_body_clauses();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Applied_to_multiple_body_clauses();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Applied_to_projection">
      <MemberSignature Language="C#" Value="public virtual void Applied_to_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Applied_to_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Applied_to_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Applied_to_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Applied_to_projection : unit -&gt; unit&#xA;override this.Applied_to_projection : unit -&gt; unit" Usage="asTrackingTestBase.Applied_to_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Applied_to_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Applied_to_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Applied_to_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="asTrackingTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_added_to_state_manager">
      <MemberSignature Language="C#" Value="public virtual void Entity_added_to_state_manager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_added_to_state_manager() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Entity_added_to_state_manager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_added_to_state_manager ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_added_to_state_manager : unit -&gt; unit&#xA;override this.Entity_added_to_state_manager : unit -&gt; unit" Usage="asTrackingTestBase.Entity_added_to_state_manager " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_added_to_state_manager();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_added_to_state_manager();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_added_to_state_manager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.Query.AsTrackingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>