<Type Name="AsyncGroupByQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncGroupByQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncGroupByQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncGroupByQueryTestBase(Of TFixture)&#xA;Inherits AsyncQueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type AsyncGroupByQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit AsyncQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class AsyncGroupByQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::AsyncQueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.AsyncQueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncGroupByQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncGroupByQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; AsyncGroupByQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" AsyncGroupByQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_projection_Distinct_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Anonymous_projection_Distinct_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Anonymous_projection_Distinct_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Anonymous_projection_Distinct_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Anonymous_projection_Distinct_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_projection_Distinct_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Anonymous_projection_Distinct_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Anonymous_projection_Distinct_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Anonymous_projection_Distinct_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Anonymous_projection_Distinct_GroupBy_Aggregate&gt;d__71))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="asyncGroupByQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Distinct_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Distinct_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Distinct_GroupBy_Aggregate&gt;d__70))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_GroupBy_OrderBy_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Distinct_GroupBy_OrderBy_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Distinct_GroupBy_OrderBy_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Distinct_GroupBy_OrderBy_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Distinct_GroupBy_OrderBy_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member Distinct_GroupBy_OrderBy_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Distinct_GroupBy_OrderBy_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Distinct_GroupBy_OrderBy_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Distinct_GroupBy_OrderBy_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Distinct_GroupBy_OrderBy_key&gt;d__94))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_after_predicate_Constant_Select_Sum_Min_Key_Max_Avg&gt;d__48))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Aggregate_Join">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Aggregate_Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Aggregate_Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Aggregate_Join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Aggregate_Join () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Aggregate_Join : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Aggregate_Join : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Aggregate_Join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Aggregate_Join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Aggregate_Join&gt;d__91))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous&gt;d__98))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Average&gt;d__17))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Count&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_LongCount&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Max&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Min&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Sum&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_Select_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_Select_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_Select_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_Select_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_Select_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_Select_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_Select_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_Select_Sum_Min_Max_Avg&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_subquery">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_subquery () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_subquery : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_subquery : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="Test does not pass. See issue#7160")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_subquery&gt;d__100))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_with_alias_Select_Key_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_with_alias_Select_Key_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_with_alias_Select_Key_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_with_alias_Select_Key_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_with_alias_Select_Key_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_with_alias_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_with_alias_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_with_alias_Select_Key_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_with_alias_Select_Key_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_with_alias_Select_Key_Sum&gt;d__24))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_anonymous_with_where">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_anonymous_with_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_anonymous_with_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_anonymous_with_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_anonymous_with_where () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_anonymous_with_where : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_anonymous_with_where : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_anonymous_with_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_anonymous_with_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_anonymous_with_where&gt;d__99))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Average&gt;d__25))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Count&gt;d__26))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Dto_Sum_Min_Key_flattened_Max_Avg&gt;d__44))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Average&gt;d__32))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Count&gt;d__33))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_LongCount&gt;d__34))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Max&gt;d__35))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Min&gt;d__36))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Sum&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Key_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Key_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Key_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Key_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Key_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Key_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Key_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Key_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Key_Sum_Min_Max_Avg&gt;d__38))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_LongCount&gt;d__27))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Max&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Min&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Sum&gt;d__30))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Sum_Min_Key_flattened_Max_Avg&gt;d__40))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Sum_Min_Key_Max_Avg&gt;d__39))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Sum_Min_Max_Avg&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Composite_Select_Sum_Min_part_Key_flattened_Max_Avg&gt;d__46))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Constant_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Constant_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Constant_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Constant_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Constant_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Constant_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Constant_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Constant_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Constant_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Constant_Select_Sum_Min_Key_Max_Avg&gt;d__47))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Constant_with_element_selector_Select_Sum_Min_Key_Max_Avg&gt;d__49))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_DateTimeOffset_Property">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_DateTimeOffset_Property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_DateTimeOffset_Property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_DateTimeOffset_Property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_DateTimeOffset_Property () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_DateTimeOffset_Property : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_DateTimeOffset_Property : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_DateTimeOffset_Property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_DateTimeOffset_Property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_DateTimeOffset_Property&gt;d__110))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Distinct&gt;d__117))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Dto_as_element_selector_Select_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Dto_as_element_selector_Select_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Dto_as_element_selector_Select_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Dto_as_element_selector_Select_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Dto_as_element_selector_Select_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Dto_as_element_selector_Select_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Dto_as_element_selector_Select_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Dto_as_element_selector_Select_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Dto_as_element_selector_Select_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Dto_as_element_selector_Select_Sum&gt;d__42))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Dto_as_key_Select_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Dto_as_key_Select_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Dto_as_key_Select_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Dto_as_key_Select_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Dto_as_key_Select_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Dto_as_key_Select_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Dto_as_key_Select_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Dto_as_key_Select_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Dto_as_key_Select_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Dto_as_key_Select_Sum&gt;d__41))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_filter_count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_filter_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_filter_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_filter_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_filter_count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_filter_count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_filter_count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_filter_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_filter_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_filter_count&gt;d__89))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_filter_count_OrderBy_count_Select_sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_filter_count_OrderBy_count_Select_sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_filter_count_OrderBy_count_Select_sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_filter_count_OrderBy_count_Select_sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_filter_count_OrderBy_count_Select_sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_filter_count_OrderBy_count_Select_sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_filter_count_OrderBy_count_Select_sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_filter_count_OrderBy_count_Select_sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_filter_count_OrderBy_count_Select_sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_filter_count_OrderBy_count_Select_sum&gt;d__90))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_filter_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_filter_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_filter_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_filter_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_filter_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_filter_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_filter_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_filter_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_filter_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_filter_key&gt;d__88))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_first">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_first () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_first : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_first : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_first&gt;d__106))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_join_anonymous">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_join_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_join_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_join_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_join_anonymous () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_join_anonymous : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_join_anonymous : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_join_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_join_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_join_anonymous&gt;d__116))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_join_default_if_empty_anonymous">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_join_default_if_empty_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_join_default_if_empty_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_join_default_if_empty_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_join_default_if_empty_anonymous () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_join_default_if_empty_anonymous : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_join_default_if_empty_anonymous : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_join_default_if_empty_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_join_default_if_empty_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_join_default_if_empty_anonymous&gt;d__102))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_multi_navigation_members_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_multi_navigation_members_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_multi_navigation_members_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_multi_navigation_members_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_multi_navigation_members_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_multi_navigation_members_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_multi_navigation_members_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_multi_navigation_members_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_multi_navigation_members_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_multi_navigation_members_Aggregate&gt;d__82))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_nested_order_by_enumerable">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_nested_order_by_enumerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_nested_order_by_enumerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_nested_order_by_enumerable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_nested_order_by_enumerable () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_nested_order_by_enumerable : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_nested_order_by_enumerable : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_nested_order_by_enumerable " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_nested_order_by_enumerable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_nested_order_by_enumerable&gt;d__101))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_optional_navigation_member_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_optional_navigation_member_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_optional_navigation_member_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_optional_navigation_member_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_optional_navigation_member_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_optional_navigation_member_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_optional_navigation_member_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_optional_navigation_member_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_optional_navigation_member_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_optional_navigation_member_Aggregate&gt;d__79))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_OrderBy_count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_OrderBy_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_OrderBy_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_OrderBy_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_OrderBy_count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_OrderBy_count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_OrderBy_count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_OrderBy_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_OrderBy_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_OrderBy_count&gt;d__85))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_OrderBy_count_Select_sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_OrderBy_count_Select_sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_OrderBy_count_Select_sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_OrderBy_count_Select_sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_OrderBy_count_Select_sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_OrderBy_count_Select_sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_OrderBy_count_Select_sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_OrderBy_count_Select_sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_OrderBy_count_Select_sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_OrderBy_count_Select_sum&gt;d__86))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_OrderBy_key">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_OrderBy_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_OrderBy_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_OrderBy_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_OrderBy_key () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_OrderBy_key : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_OrderBy_key : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_OrderBy_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_OrderBy_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_OrderBy_key&gt;d__84))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_param_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_param_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_param_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_param_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_param_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_param_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_param_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_param_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_param_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_param_Select_Sum_Min_Key_Max_Avg&gt;d__50))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_param_with_element_selector_Select_Sum_Min_Key_Max_Avg&gt;d__51))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Average&gt;d__59))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Count&gt;d__60))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_LongCount&gt;d__61))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Max&gt;d__62))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Min&gt;d__63))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Sum&gt;d__64))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_anonymous_element_selector_Sum_Min_Max_Avg&gt;d__65))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Average&gt;d__52))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Count&gt;d__53))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_LongCount&gt;d__54))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Max&gt;d__55))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Min&gt;d__56))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Sum&gt;d__57))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_scalar_element_selector_Sum_Min_Max_Avg&gt;d__58))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Average&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Count&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Average">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Average () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Average : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Average : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Average&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Count">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Count () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Count : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Count : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Count&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_LongCount&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Max&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Min&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Sum&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Key_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Key_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Key_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Key_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Key_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Key_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Key_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Key_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Key_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Key_Sum_Min_Max_Avg&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_LongCount">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_LongCount () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_LongCount : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_LongCount : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_LongCount&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Max">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Max () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Max : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Max : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Max&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Min">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Min () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Min : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Min : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Min&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Sum">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Sum () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Sum : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Sum : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Sum&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Sum_Min_Key_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Sum_Min_Key_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Sum_Min_Key_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Sum_Min_Key_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Sum_Min_Key_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Sum_Min_Key_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Sum_Min_Key_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Sum_Min_Key_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Sum_Min_Key_Max_Avg&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Property_Select_Sum_Min_Max_Avg">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Property_Select_Sum_Min_Max_Avg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Property_Select_Sum_Min_Max_Avg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Property_Select_Sum_Min_Max_Avg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Property_Select_Sum_Min_Max_Avg () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Property_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Property_Select_Sum_Min_Max_Avg : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Property_Select_Sum_Min_Max_Avg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Property_Select_Sum_Min_Max_Avg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Property_Select_Sum_Min_Max_Avg&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_required_navigation_member_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_required_navigation_member_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_required_navigation_member_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_required_navigation_member_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_required_navigation_member_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_required_navigation_member_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_required_navigation_member_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_required_navigation_member_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_required_navigation_member_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_required_navigation_member_Aggregate&gt;d__74))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Select_sum_over_unmapped_property">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Select_sum_over_unmapped_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Select_sum_over_unmapped_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Select_sum_over_unmapped_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Select_sum_over_unmapped_property () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Select_sum_over_unmapped_property : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Select_sum_over_unmapped_property : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Select_sum_over_unmapped_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Select_sum_over_unmapped_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Select_sum_over_unmapped_property&gt;d__87))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_SelectMany">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_SelectMany () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_SelectMany&gt;d__103))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Shadow&gt;d__123))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Shadow2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Shadow2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Shadow2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Shadow2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Shadow2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Shadow2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Shadow2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Shadow2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Shadow2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Shadow2&gt;d__124))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Shadow3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Shadow3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Shadow3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Shadow3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Shadow3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Shadow3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Shadow3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Shadow3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Shadow3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Shadow3&gt;d__125))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_simple">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_simple () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_simple : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_simple : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_simple&gt;d__104))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_simple2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_simple2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_simple2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_simple2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_simple2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_simple2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_simple2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_simple2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_simple2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_simple2&gt;d__105))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_Sum_constant">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_Sum_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_Sum_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_Sum_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_Sum_constant () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_Sum_constant : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_Sum_constant : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_Sum_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_Sum_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_Sum_constant&gt;d__93))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_aggregate_through_navigation_property">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_aggregate_through_navigation_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_aggregate_through_navigation_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_aggregate_through_navigation_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_aggregate_through_navigation_property () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_aggregate_through_navigation_property : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_aggregate_through_navigation_property : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_aggregate_through_navigation_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_aggregate_through_navigation_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_aggregate_through_navigation_property&gt;d__122))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_element_selector">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_element_selector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_element_selector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_element_selector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_element_selector () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_element_selector : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_element_selector : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_element_selector " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_element_selector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_element_selector&gt;d__107))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_element_selector2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_element_selector2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_element_selector2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_element_selector2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_element_selector2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_element_selector2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_element_selector2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_element_selector2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_element_selector2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_element_selector2&gt;d__108))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_element_selector3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_element_selector3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_element_selector3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_element_selector3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_element_selector3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_element_selector3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_element_selector3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_element_selector3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_element_selector3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_element_selector3&gt;d__109))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_orderby">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_orderby () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_orderby : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_orderby : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_orderby&gt;d__113))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_orderby_and_anonymous_projection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_orderby_and_anonymous_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_orderby_and_anonymous_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_orderby_and_anonymous_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_orderby_and_anonymous_projection () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_orderby_and_anonymous_projection : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_orderby_and_anonymous_projection : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_orderby_and_anonymous_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_orderby_and_anonymous_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_orderby_and_anonymous_projection&gt;d__114))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_orderby_take_skip_distinct">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_orderby_take_skip_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_orderby_take_skip_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_orderby_take_skip_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_orderby_take_skip_distinct () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_orderby_take_skip_distinct : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_orderby_take_skip_distinct : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_orderby_take_skip_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_orderby_take_skip_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_orderby_take_skip_distinct&gt;d__115))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_with_result_selector">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupBy_with_result_selector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupBy_with_result_selector() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupBy_with_result_selector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupBy_with_result_selector () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_with_result_selector : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupBy_with_result_selector : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupBy_with_result_selector " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupBy_with_result_selector();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupBy_with_result_selector&gt;d__92))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_complex_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_complex_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_complex_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupJoin_complex_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_complex_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_complex_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_complex_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupJoin_complex_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_complex_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupJoin_complex_GroupBy_Aggregate&gt;d__80))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupJoin_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupJoin_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupJoin_GroupBy_Aggregate&gt;d__76))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_GroupBy_Aggregate_2">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupJoin_GroupBy_Aggregate_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_GroupBy_Aggregate_2 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_GroupBy_Aggregate_2 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_GroupBy_Aggregate_2 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupJoin_GroupBy_Aggregate_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_GroupBy_Aggregate_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupJoin_GroupBy_Aggregate_2&gt;d__77))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_GroupBy_Aggregate_3">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate_3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task GroupJoin_GroupBy_Aggregate_3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.GroupJoin_GroupBy_Aggregate_3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GroupJoin_GroupBy_Aggregate_3 () As Task" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_GroupBy_Aggregate_3 : unit -&gt; System.Threading.Tasks.Task&#xA;override this.GroupJoin_GroupBy_Aggregate_3 : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.GroupJoin_GroupBy_Aggregate_3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ GroupJoin_GroupBy_Aggregate_3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;GroupJoin_GroupBy_Aggregate_3&gt;d__78))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_complex_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_complex_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_complex_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Join_complex_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_complex_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_complex_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_complex_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Join_complex_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_complex_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Join_complex_GroupBy_Aggregate&gt;d__75))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Join_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Join_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Join_GroupBy_Aggregate&gt;d__73))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_GroupBy_entity_ToList">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Join_GroupBy_entity_ToList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Join_GroupBy_entity_ToList() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Join_GroupBy_entity_ToList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Join_GroupBy_entity_ToList () As Task" />
      <MemberSignature Language="F#" Value="abstract member Join_GroupBy_entity_ToList : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Join_GroupBy_entity_ToList : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Join_GroupBy_entity_ToList " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Join_GroupBy_entity_ToList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Join_GroupBy_entity_ToList&gt;d__128))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_GroupBy_Aggregate&gt;d__66))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_GroupBy_SelectMany">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_GroupBy_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_GroupBy_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_GroupBy_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_GroupBy_SelectMany () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_GroupBy_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_GroupBy_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_GroupBy_SelectMany&gt;d__111))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_GroupBy_SelectMany_shadow">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_GroupBy_SelectMany_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_GroupBy_SelectMany_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_GroupBy_SelectMany_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_GroupBy_SelectMany_shadow () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_GroupBy_SelectMany_shadow : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_GroupBy_SelectMany_shadow : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_GroupBy_SelectMany_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_GroupBy_SelectMany_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_GroupBy_SelectMany_shadow&gt;d__112))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_GroupBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_GroupBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_GroupBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Skip_GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_GroupBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_GroupBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_GroupBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Skip_GroupBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_GroupBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Skip_GroupBy&gt;d__118))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Skip_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Skip_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Skip_GroupBy_Aggregate&gt;d__67))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_Take_GroupBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_Take_GroupBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_Take_GroupBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Skip_Take_GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_Take_GroupBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_Take_GroupBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_Take_GroupBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Skip_Take_GroupBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_Take_GroupBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Skip_Take_GroupBy&gt;d__120))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_Take_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Skip_Take_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Skip_Take_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Skip_Take_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Skip_Take_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_Take_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Skip_Take_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Skip_Take_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Skip_Take_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Skip_Take_GroupBy_Aggregate&gt;d__69))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Take_GroupBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Take_GroupBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Take_GroupBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Take_GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Take_GroupBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Take_GroupBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Take_GroupBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Take_GroupBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Take_GroupBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Take_GroupBy&gt;d__119))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Take_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OrderBy_Take_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OrderBy_Take_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.OrderBy_Take_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OrderBy_Take_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Take_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.OrderBy_Take_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.OrderBy_Take_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OrderBy_Take_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;OrderBy_Take_GroupBy_Aggregate&gt;d__68))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Distinct_GroupBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_Distinct_GroupBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_Distinct_GroupBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Select_Distinct_GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_Distinct_GroupBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_Distinct_GroupBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_Distinct_GroupBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Select_Distinct_GroupBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_Distinct_GroupBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Select_Distinct_GroupBy&gt;d__121))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_GroupBy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_GroupBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_GroupBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Select_GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_GroupBy () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_GroupBy : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_GroupBy : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Select_GroupBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_GroupBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Select_GroupBy&gt;d__126))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_GroupBy_All">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_GroupBy_All ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_GroupBy_All() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Select_GroupBy_All" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_GroupBy_All () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_GroupBy_All : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_GroupBy_All : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Select_GroupBy_All " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_GroupBy_All();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Select_GroupBy_All&gt;d__96))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_GroupBy_SelectMany">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_GroupBy_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_GroupBy_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Select_GroupBy_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_GroupBy_SelectMany () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_GroupBy_SelectMany : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Select_GroupBy_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_GroupBy_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Select_GroupBy_SelectMany&gt;d__127))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_with_groupby">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Select_nested_collection_with_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Select_nested_collection_with_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Select_nested_collection_with_groupby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Select_nested_collection_with_groupby () As Task" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_with_groupby : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Select_nested_collection_with_groupby : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Select_nested_collection_with_groupby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Select_nested_collection_with_groupby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Select_nested_collection_with_groupby&gt;d__95))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SelectMany_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SelectMany_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.SelectMany_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectMany_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SelectMany_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.SelectMany_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SelectMany_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;SelectMany_GroupBy_Aggregate&gt;d__72))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Self_join_GroupBy_Aggregate">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Self_join_GroupBy_Aggregate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Self_join_GroupBy_Aggregate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Self_join_GroupBy_Aggregate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Self_join_GroupBy_Aggregate () As Task" />
      <MemberSignature Language="F#" Value="abstract member Self_join_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Self_join_GroupBy_Aggregate : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Self_join_GroupBy_Aggregate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Self_join_GroupBy_Aggregate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Self_join_GroupBy_Aggregate&gt;d__81))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_simple_groupby">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Union_simple_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Union_simple_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1.Union_simple_groupby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Union_simple_groupby () As Task" />
      <MemberSignature Language="F#" Value="abstract member Union_simple_groupby : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Union_simple_groupby : unit -&gt; System.Threading.Tasks.Task" Usage="asyncGroupByQueryTestBase.Union_simple_groupby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Union_simple_groupby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="Unable to bind group by. See Issue#6658")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.AsyncGroupByQueryTestBase`1/&lt;Union_simple_groupby&gt;d__83))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>