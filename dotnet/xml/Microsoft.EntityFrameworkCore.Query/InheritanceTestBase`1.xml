<Type Name="InheritanceTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.InheritanceTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class InheritanceTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : InheritanceFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InheritanceTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InheritanceTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type InheritanceTestBase&lt;'Fixture (requires 'Fixture :&gt; InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : InheritanceFixtureBasegcnew()public ref class InheritanceTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InheritanceTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.InheritanceTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.InheritanceTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.InheritanceTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InheritanceTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; InheritanceTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" InheritanceTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Byte_enum_value_constant_used_in_projection">
      <MemberSignature Language="C#" Value="public virtual void Byte_enum_value_constant_used_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Byte_enum_value_constant_used_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Byte_enum_value_constant_used_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Byte_enum_value_constant_used_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Byte_enum_value_constant_used_in_projection : unit -&gt; unit&#xA;override this.Byte_enum_value_constant_used_in_projection : unit -&gt; unit" Usage="inheritanceTestBase.Byte_enum_value_constant_used_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Byte_enum_value_constant_used_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Byte_enum_value_constant_used_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Byte_enum_value_constant_used_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_concat_kiwis_and_eagles_as_birds">
      <MemberSignature Language="C#" Value="public virtual void Can_concat_kiwis_and_eagles_as_birds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_concat_kiwis_and_eagles_as_birds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_concat_kiwis_and_eagles_as_birds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_concat_kiwis_and_eagles_as_birds ()" />
      <MemberSignature Language="F#" Value="abstract member Can_concat_kiwis_and_eagles_as_birds : unit -&gt; unit&#xA;override this.Can_concat_kiwis_and_eagles_as_birds : unit -&gt; unit" Usage="inheritanceTestBase.Can_concat_kiwis_and_eagles_as_birds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_concat_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_concat_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_concat_kiwis_and_eagles_as_birds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_except_kiwis_and_eagles_as_birds">
      <MemberSignature Language="C#" Value="public virtual void Can_except_kiwis_and_eagles_as_birds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_except_kiwis_and_eagles_as_birds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_except_kiwis_and_eagles_as_birds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_except_kiwis_and_eagles_as_birds ()" />
      <MemberSignature Language="F#" Value="abstract member Can_except_kiwis_and_eagles_as_birds : unit -&gt; unit&#xA;override this.Can_except_kiwis_and_eagles_as_birds : unit -&gt; unit" Usage="inheritanceTestBase.Can_except_kiwis_and_eagles_as_birds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_except_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_except_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_except_kiwis_and_eagles_as_birds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_filter_all_animals">
      <MemberSignature Language="C#" Value="public virtual void Can_filter_all_animals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_filter_all_animals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_filter_all_animals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_filter_all_animals ()" />
      <MemberSignature Language="F#" Value="abstract member Can_filter_all_animals : unit -&gt; unit&#xA;override this.Can_filter_all_animals : unit -&gt; unit" Usage="inheritanceTestBase.Can_filter_all_animals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_filter_all_animals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_filter_all_animals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_filter_all_animals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_include_animals">
      <MemberSignature Language="C#" Value="public virtual void Can_include_animals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_include_animals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_include_animals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_include_animals ()" />
      <MemberSignature Language="F#" Value="abstract member Can_include_animals : unit -&gt; unit&#xA;override this.Can_include_animals : unit -&gt; unit" Usage="inheritanceTestBase.Can_include_animals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_include_animals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_include_animals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_include_animals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_include_prey">
      <MemberSignature Language="C#" Value="public virtual void Can_include_prey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_include_prey() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_include_prey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_include_prey ()" />
      <MemberSignature Language="F#" Value="abstract member Can_include_prey : unit -&gt; unit&#xA;override this.Can_include_prey : unit -&gt; unit" Usage="inheritanceTestBase.Can_include_prey " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_include_prey();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_include_prey();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_include_prey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_insert_update_delete">
      <MemberSignature Language="C#" Value="public virtual void Can_insert_update_delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_insert_update_delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_insert_update_delete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_insert_update_delete ()" />
      <MemberSignature Language="F#" Value="abstract member Can_insert_update_delete : unit -&gt; unit&#xA;override this.Can_insert_update_delete : unit -&gt; unit" Usage="inheritanceTestBase.Can_insert_update_delete " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_insert_update_delete();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_insert_update_delete();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_insert_update_delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_intersect_kiwis_and_eagles_as_birds">
      <MemberSignature Language="C#" Value="public virtual void Can_intersect_kiwis_and_eagles_as_birds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_intersect_kiwis_and_eagles_as_birds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_intersect_kiwis_and_eagles_as_birds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_intersect_kiwis_and_eagles_as_birds ()" />
      <MemberSignature Language="F#" Value="abstract member Can_intersect_kiwis_and_eagles_as_birds : unit -&gt; unit&#xA;override this.Can_intersect_kiwis_and_eagles_as_birds : unit -&gt; unit" Usage="inheritanceTestBase.Can_intersect_kiwis_and_eagles_as_birds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_intersect_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_intersect_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_intersect_kiwis_and_eagles_as_birds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_all_animal_views">
      <MemberSignature Language="C#" Value="public virtual void Can_query_all_animal_views ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_all_animal_views() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_all_animal_views" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_all_animal_views ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_all_animal_views : unit -&gt; unit&#xA;override this.Can_query_all_animal_views : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_all_animal_views " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_all_animal_views();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_all_animal_views();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_all_animal_views();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_all_animals">
      <MemberSignature Language="C#" Value="public virtual void Can_query_all_animals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_all_animals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_all_animals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_all_animals ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_all_animals : unit -&gt; unit&#xA;override this.Can_query_all_animals : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_all_animals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_all_animals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_all_animals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_all_animals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_all_birds">
      <MemberSignature Language="C#" Value="public virtual void Can_query_all_birds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_all_birds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_all_birds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_all_birds ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_all_birds : unit -&gt; unit&#xA;override this.Can_query_all_birds : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_all_birds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_all_birds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_all_birds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_all_birds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_all_plants">
      <MemberSignature Language="C#" Value="public virtual void Can_query_all_plants ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_all_plants() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_all_plants" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_all_plants ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_all_plants : unit -&gt; unit&#xA;override this.Can_query_all_plants : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_all_plants " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_all_plants();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_all_plants();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_all_plants();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_all_types_when_shared_column">
      <MemberSignature Language="C#" Value="public virtual void Can_query_all_types_when_shared_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_all_types_when_shared_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_all_types_when_shared_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_all_types_when_shared_column ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_all_types_when_shared_column : unit -&gt; unit&#xA;override this.Can_query_all_types_when_shared_column : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_all_types_when_shared_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_all_types_when_shared_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_all_types_when_shared_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_all_types_when_shared_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_just_kiwis">
      <MemberSignature Language="C#" Value="public virtual void Can_query_just_kiwis ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_just_kiwis() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_just_kiwis" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_just_kiwis ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_just_kiwis : unit -&gt; unit&#xA;override this.Can_query_just_kiwis : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_just_kiwis " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_just_kiwis();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_just_kiwis();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_just_kiwis();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_just_roses">
      <MemberSignature Language="C#" Value="public virtual void Can_query_just_roses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_just_roses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_just_roses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_just_roses ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_just_roses : unit -&gt; unit&#xA;override this.Can_query_just_roses : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_just_roses " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_just_roses();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_just_roses();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_just_roses();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_query_when_shared_column">
      <MemberSignature Language="C#" Value="public virtual void Can_query_when_shared_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_query_when_shared_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_query_when_shared_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_query_when_shared_column ()" />
      <MemberSignature Language="F#" Value="abstract member Can_query_when_shared_column : unit -&gt; unit&#xA;override this.Can_query_when_shared_column : unit -&gt; unit" Usage="inheritanceTestBase.Can_query_when_shared_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_query_when_shared_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_query_when_shared_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_query_when_shared_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_union_kiwis_and_eagles_as_birds">
      <MemberSignature Language="C#" Value="public virtual void Can_union_kiwis_and_eagles_as_birds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_union_kiwis_and_eagles_as_birds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_union_kiwis_and_eagles_as_birds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_union_kiwis_and_eagles_as_birds ()" />
      <MemberSignature Language="F#" Value="abstract member Can_union_kiwis_and_eagles_as_birds : unit -&gt; unit&#xA;override this.Can_union_kiwis_and_eagles_as_birds : unit -&gt; unit" Usage="inheritanceTestBase.Can_union_kiwis_and_eagles_as_birds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_union_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_union_kiwis_and_eagles_as_birds();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_union_kiwis_and_eagles_as_birds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_is_kiwi">
      <MemberSignature Language="C#" Value="public virtual void Can_use_is_kiwi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_is_kiwi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_is_kiwi" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_is_kiwi ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_is_kiwi : unit -&gt; unit&#xA;override this.Can_use_is_kiwi : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_is_kiwi " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_is_kiwi();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_is_kiwi();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_is_kiwi();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_is_kiwi_in_projection">
      <MemberSignature Language="C#" Value="public virtual void Can_use_is_kiwi_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_is_kiwi_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_is_kiwi_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_is_kiwi_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_is_kiwi_in_projection : unit -&gt; unit&#xA;override this.Can_use_is_kiwi_in_projection : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_is_kiwi_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_is_kiwi_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_is_kiwi_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_is_kiwi_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_is_kiwi_with_other_predicate">
      <MemberSignature Language="C#" Value="public virtual void Can_use_is_kiwi_with_other_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_is_kiwi_with_other_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_is_kiwi_with_other_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_is_kiwi_with_other_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_is_kiwi_with_other_predicate : unit -&gt; unit&#xA;override this.Can_use_is_kiwi_with_other_predicate : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_is_kiwi_with_other_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_is_kiwi_with_other_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_is_kiwi_with_other_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_is_kiwi_with_other_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_animal">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_animal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_animal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_animal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_animal ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_animal : unit -&gt; unit&#xA;override this.Can_use_of_type_animal : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_animal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_animal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_animal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_animal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_bird">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_bird ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_bird() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_bird" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_bird ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_bird : unit -&gt; unit&#xA;override this.Can_use_of_type_bird : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_bird " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_bird();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_bird();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_bird();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_bird_first">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_bird_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_bird_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_bird_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_bird_first ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_bird_first : unit -&gt; unit&#xA;override this.Can_use_of_type_bird_first : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_bird_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_bird_first();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_bird_first();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_bird_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_bird_predicate">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_bird_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_bird_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_bird_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_bird_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_bird_predicate : unit -&gt; unit&#xA;override this.Can_use_of_type_bird_predicate : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_bird_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_bird_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_bird_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_bird_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_bird_with_projection">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_bird_with_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_bird_with_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_bird_with_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_bird_with_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_bird_with_projection : unit -&gt; unit&#xA;override this.Can_use_of_type_bird_with_projection : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_bird_with_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_bird_with_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_bird_with_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_bird_with_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_kiwi">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_kiwi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_kiwi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_kiwi" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_kiwi ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_kiwi : unit -&gt; unit&#xA;override this.Can_use_of_type_kiwi : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_kiwi " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_kiwi();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_kiwi();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_kiwi();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_kiwi_where_north_on_derived_property">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_kiwi_where_north_on_derived_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_kiwi_where_north_on_derived_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_kiwi_where_north_on_derived_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_kiwi_where_north_on_derived_property ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_kiwi_where_north_on_derived_property : unit -&gt; unit&#xA;override this.Can_use_of_type_kiwi_where_north_on_derived_property : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_kiwi_where_north_on_derived_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_kiwi_where_north_on_derived_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_kiwi_where_north_on_derived_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_kiwi_where_north_on_derived_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_kiwi_where_south_on_derived_property">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_kiwi_where_south_on_derived_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_kiwi_where_south_on_derived_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_kiwi_where_south_on_derived_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_kiwi_where_south_on_derived_property ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_kiwi_where_south_on_derived_property : unit -&gt; unit&#xA;override this.Can_use_of_type_kiwi_where_south_on_derived_property : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_kiwi_where_south_on_derived_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_kiwi_where_south_on_derived_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_kiwi_where_south_on_derived_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_kiwi_where_south_on_derived_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_of_type_rose">
      <MemberSignature Language="C#" Value="public virtual void Can_use_of_type_rose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_use_of_type_rose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Can_use_of_type_rose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_use_of_type_rose ()" />
      <MemberSignature Language="F#" Value="abstract member Can_use_of_type_rose : unit -&gt; unit&#xA;override this.Can_use_of_type_rose : unit -&gt; unit" Usage="inheritanceTestBase.Can_use_of_type_rose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_use_of_type_rose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_use_of_type_rose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_use_of_type_rose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="protected virtual void ClearLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.ClearLog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearLog ()" />
      <MemberSignature Language="F#" Value="abstract member ClearLog : unit -&gt; unit&#xA;override this.ClearLog : unit -&gt; unit" Usage="inheritanceTestBase.ClearLog " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ClearLog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Inheritance.InheritanceContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Inheritance.InheritanceContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As InheritanceContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Inheritance.InheritanceContext" Usage="inheritanceTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Inheritance::InheritanceContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Inheritance::InheritanceContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Inheritance.InheritanceContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator_used_when_projection_over_derived_type">
      <MemberSignature Language="C#" Value="public virtual void Discriminator_used_when_projection_over_derived_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Discriminator_used_when_projection_over_derived_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Discriminator_used_when_projection_over_derived_type ()" />
      <MemberSignature Language="F#" Value="abstract member Discriminator_used_when_projection_over_derived_type : unit -&gt; unit&#xA;override this.Discriminator_used_when_projection_over_derived_type : unit -&gt; unit" Usage="inheritanceTestBase.Discriminator_used_when_projection_over_derived_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_derived_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_derived_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Discriminator_used_when_projection_over_derived_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator_used_when_projection_over_derived_type2">
      <MemberSignature Language="C#" Value="public virtual void Discriminator_used_when_projection_over_derived_type2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Discriminator_used_when_projection_over_derived_type2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Discriminator_used_when_projection_over_derived_type2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Discriminator_used_when_projection_over_derived_type2 ()" />
      <MemberSignature Language="F#" Value="abstract member Discriminator_used_when_projection_over_derived_type2 : unit -&gt; unit&#xA;override this.Discriminator_used_when_projection_over_derived_type2 : unit -&gt; unit" Usage="inheritanceTestBase.Discriminator_used_when_projection_over_derived_type2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_derived_type2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_derived_type2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Discriminator_used_when_projection_over_derived_type2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator_used_when_projection_over_of_type">
      <MemberSignature Language="C#" Value="public virtual void Discriminator_used_when_projection_over_of_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Discriminator_used_when_projection_over_of_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Discriminator_used_when_projection_over_of_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Discriminator_used_when_projection_over_of_type ()" />
      <MemberSignature Language="F#" Value="abstract member Discriminator_used_when_projection_over_of_type : unit -&gt; unit&#xA;override this.Discriminator_used_when_projection_over_of_type : unit -&gt; unit" Usage="inheritanceTestBase.Discriminator_used_when_projection_over_of_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_of_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Discriminator_used_when_projection_over_of_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Discriminator_used_when_projection_over_of_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Discriminator_with_cast_in_shadow_property">
      <MemberSignature Language="C#" Value="public virtual void Discriminator_with_cast_in_shadow_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Discriminator_with_cast_in_shadow_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Discriminator_with_cast_in_shadow_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Discriminator_with_cast_in_shadow_property ()" />
      <MemberSignature Language="F#" Value="abstract member Discriminator_with_cast_in_shadow_property : unit -&gt; unit&#xA;override this.Discriminator_with_cast_in_shadow_property : unit -&gt; unit" Usage="inheritanceTestBase.Discriminator_with_cast_in_shadow_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Discriminator_with_cast_in_shadow_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Discriminator_with_cast_in_shadow_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Discriminator_with_cast_in_shadow_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.Query.InheritanceTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.InheritanceFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setting_foreign_key_to_a_different_type_throws">
      <MemberSignature Language="C#" Value="public virtual void Setting_foreign_key_to_a_different_type_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Setting_foreign_key_to_a_different_type_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.Setting_foreign_key_to_a_different_type_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Setting_foreign_key_to_a_different_type_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Setting_foreign_key_to_a_different_type_throws : unit -&gt; unit&#xA;override this.Setting_foreign_key_to_a_different_type_throws : unit -&gt; unit" Usage="inheritanceTestBase.Setting_foreign_key_to_a_different_type_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Setting_foreign_key_to_a_different_type_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Setting_foreign_key_to_a_different_type_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Setting_foreign_key_to_a_different_type_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="protected virtual void UseTransaction (Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UseTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.InheritanceTestBase`1.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UseTransaction (facade As DatabaseFacade, transaction As IDbContextTransaction)" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction -&gt; unit&#xA;override this.UseTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction -&gt; unit" Usage="inheritanceTestBase.UseTransaction (facade, transaction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UseTransaction(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ facade, Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="facade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" />
        <Parameter Name="transaction" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
      </Parameters>
      <Docs>
        <param name="facade">To be added.</param>
        <param name="transaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>