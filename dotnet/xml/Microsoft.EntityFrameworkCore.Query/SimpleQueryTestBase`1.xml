<Type Name="SimpleQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class SimpleQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SimpleQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.QueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SimpleQueryTestBase(Of TFixture)&#xA;Inherits QueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit QueryTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class SimpleQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::QueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SimpleQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; SimpleQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" SimpleQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_client">
      <MemberSignature Language="C#" Value="public virtual void All_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_client ()" />
      <MemberSignature Language="F#" Value="abstract member All_client : unit -&gt; unit&#xA;override this.All_client : unit -&gt; unit" Usage="simpleQueryTestBase.All_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_client_and_server_top_level">
      <MemberSignature Language="C#" Value="public virtual void All_client_and_server_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_client_and_server_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_client_and_server_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_client_and_server_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member All_client_and_server_top_level : unit -&gt; unit&#xA;override this.All_client_and_server_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.All_client_and_server_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_client_and_server_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_client_and_server_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_client_and_server_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_client_or_server_top_level">
      <MemberSignature Language="C#" Value="public virtual void All_client_or_server_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_client_or_server_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_client_or_server_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_client_or_server_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member All_client_or_server_top_level : unit -&gt; unit&#xA;override this.All_client_or_server_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.All_client_or_server_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_client_or_server_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_client_or_server_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_client_or_server_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level">
      <MemberSignature Language="C#" Value="public virtual void All_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member All_top_level : unit -&gt; unit&#xA;override this.All_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.All_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level_column">
      <MemberSignature Language="C#" Value="public virtual void All_top_level_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_top_level_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_top_level_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_top_level_column ()" />
      <MemberSignature Language="F#" Value="abstract member All_top_level_column : unit -&gt; unit&#xA;override this.All_top_level_column : unit -&gt; unit" Usage="simpleQueryTestBase.All_top_level_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_top_level_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_top_level_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_top_level_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level_subquery">
      <MemberSignature Language="C#" Value="public virtual void All_top_level_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_top_level_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_top_level_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_top_level_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member All_top_level_subquery : unit -&gt; unit&#xA;override this.All_top_level_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.All_top_level_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_top_level_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_top_level_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_top_level_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All_top_level_subquery_ef_property">
      <MemberSignature Language="C#" Value="public virtual void All_top_level_subquery_ef_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void All_top_level_subquery_ef_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.All_top_level_subquery_ef_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub All_top_level_subquery_ef_property ()" />
      <MemberSignature Language="F#" Value="abstract member All_top_level_subquery_ef_property : unit -&gt; unit&#xA;override this.All_top_level_subquery_ef_property : unit -&gt; unit" Usage="simpleQueryTestBase.All_top_level_subquery_ef_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void All_top_level_subquery_ef_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void All_top_level_subquery_ef_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void All_top_level_subquery_ef_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_complex_distinct_orderby">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_complex_distinct_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_complex_distinct_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_complex_distinct_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_complex_distinct_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_complex_distinct_orderby : unit -&gt; unit&#xA;override this.Anonymous_complex_distinct_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_complex_distinct_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_complex_distinct_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_complex_distinct_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_complex_distinct_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_complex_distinct_result">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_complex_distinct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_complex_distinct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_complex_distinct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_complex_distinct_result ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_complex_distinct_result : unit -&gt; unit&#xA;override this.Anonymous_complex_distinct_result : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_complex_distinct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_complex_distinct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_complex_distinct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_complex_distinct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_complex_distinct_where">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_complex_distinct_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_complex_distinct_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_complex_distinct_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_complex_distinct_where ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_complex_distinct_where : unit -&gt; unit&#xA;override this.Anonymous_complex_distinct_where : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_complex_distinct_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_complex_distinct_where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_complex_distinct_where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_complex_distinct_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_complex_orderby">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_complex_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_complex_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_complex_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_complex_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_complex_orderby : unit -&gt; unit&#xA;override this.Anonymous_complex_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_complex_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_complex_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_complex_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_complex_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_member_distinct_orderby">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_member_distinct_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_member_distinct_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_member_distinct_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_member_distinct_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_member_distinct_orderby : unit -&gt; unit&#xA;override this.Anonymous_member_distinct_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_member_distinct_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_member_distinct_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_member_distinct_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_member_distinct_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_member_distinct_result">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_member_distinct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_member_distinct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_member_distinct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_member_distinct_result ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_member_distinct_result : unit -&gt; unit&#xA;override this.Anonymous_member_distinct_result : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_member_distinct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_member_distinct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_member_distinct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_member_distinct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_member_distinct_where">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_member_distinct_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_member_distinct_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_member_distinct_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_member_distinct_where ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_member_distinct_where : unit -&gt; unit&#xA;override this.Anonymous_member_distinct_where : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_member_distinct_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_member_distinct_where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_member_distinct_where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_member_distinct_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous_subquery_orderby">
      <MemberSignature Language="C#" Value="public virtual void Anonymous_subquery_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Anonymous_subquery_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Anonymous_subquery_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Anonymous_subquery_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Anonymous_subquery_orderby : unit -&gt; unit&#xA;override this.Anonymous_subquery_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.Anonymous_subquery_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Anonymous_subquery_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Anonymous_subquery_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Anonymous_subquery_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested">
      <MemberSignature Language="C#" Value="public virtual void Any_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested : unit -&gt; unit&#xA;override this.Any_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested_negated">
      <MemberSignature Language="C#" Value="public virtual void Any_nested_negated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested_negated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested_negated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested_negated ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested_negated : unit -&gt; unit&#xA;override this.Any_nested_negated : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested_negated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested_negated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested_negated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested_negated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested_negated2">
      <MemberSignature Language="C#" Value="public virtual void Any_nested_negated2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested_negated2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested_negated2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested_negated2 ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested_negated2 : unit -&gt; unit&#xA;override this.Any_nested_negated2 : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested_negated2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested_negated2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested_negated2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested_negated2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested_negated3">
      <MemberSignature Language="C#" Value="public virtual void Any_nested_negated3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested_negated3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested_negated3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested_negated3 ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested_negated3 : unit -&gt; unit&#xA;override this.Any_nested_negated3 : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested_negated3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested_negated3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested_negated3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested_negated3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested2">
      <MemberSignature Language="C#" Value="public virtual void Any_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested2 ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested2 : unit -&gt; unit&#xA;override this.Any_nested2 : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_nested3">
      <MemberSignature Language="C#" Value="public virtual void Any_nested3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_nested3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_nested3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_nested3 ()" />
      <MemberSignature Language="F#" Value="abstract member Any_nested3 : unit -&gt; unit&#xA;override this.Any_nested3 : unit -&gt; unit" Usage="simpleQueryTestBase.Any_nested3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_nested3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_nested3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_nested3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_predicate">
      <MemberSignature Language="C#" Value="public virtual void Any_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Any_predicate : unit -&gt; unit&#xA;override this.Any_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Any_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_simple">
      <MemberSignature Language="C#" Value="public virtual void Any_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Any_simple : unit -&gt; unit&#xA;override this.Any_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Any_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_with_multiple_conditions_still_uses_exists">
      <MemberSignature Language="C#" Value="public virtual void Any_with_multiple_conditions_still_uses_exists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Any_with_multiple_conditions_still_uses_exists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Any_with_multiple_conditions_still_uses_exists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Any_with_multiple_conditions_still_uses_exists ()" />
      <MemberSignature Language="F#" Value="abstract member Any_with_multiple_conditions_still_uses_exists : unit -&gt; unit&#xA;override this.Any_with_multiple_conditions_still_uses_exists : unit -&gt; unit" Usage="simpleQueryTestBase.Any_with_multiple_conditions_still_uses_exists " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Any_with_multiple_conditions_still_uses_exists();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Any_with_multiple_conditions_still_uses_exists();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Any_with_multiple_conditions_still_uses_exists();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Auto_initialized_view_set">
      <MemberSignature Language="C#" Value="public virtual void Auto_initialized_view_set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Auto_initialized_view_set() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Auto_initialized_view_set" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Auto_initialized_view_set ()" />
      <MemberSignature Language="F#" Value="abstract member Auto_initialized_view_set : unit -&gt; unit&#xA;override this.Auto_initialized_view_set : unit -&gt; unit" Usage="simpleQueryTestBase.Auto_initialized_view_set " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Auto_initialized_view_set();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Auto_initialized_view_set();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Auto_initialized_view_set();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_no_data">
      <MemberSignature Language="C#" Value="public virtual void Average_no_data ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_no_data() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_no_data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_no_data ()" />
      <MemberSignature Language="F#" Value="abstract member Average_no_data : unit -&gt; unit&#xA;override this.Average_no_data : unit -&gt; unit" Usage="simpleQueryTestBase.Average_no_data " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_no_data();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_no_data();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_no_data();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_no_data_subquery">
      <MemberSignature Language="C#" Value="public virtual void Average_no_data_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_no_data_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_no_data_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_no_data_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Average_no_data_subquery : unit -&gt; unit&#xA;override this.Average_no_data_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Average_no_data_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_no_data_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_no_data_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_no_data_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_on_float_column">
      <MemberSignature Language="C#" Value="public virtual void Average_on_float_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_on_float_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_on_float_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_on_float_column ()" />
      <MemberSignature Language="F#" Value="abstract member Average_on_float_column : unit -&gt; unit&#xA;override this.Average_on_float_column : unit -&gt; unit" Usage="simpleQueryTestBase.Average_on_float_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_on_float_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_on_float_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_on_float_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_on_float_column_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Average_on_float_column_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_on_float_column_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_on_float_column_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_on_float_column_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Average_on_float_column_in_subquery : unit -&gt; unit&#xA;override this.Average_on_float_column_in_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Average_on_float_column_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_on_float_column_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_on_float_column_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_on_float_column_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_on_float_column_in_subquery_with_cast">
      <MemberSignature Language="C#" Value="public virtual void Average_on_float_column_in_subquery_with_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_on_float_column_in_subquery_with_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_on_float_column_in_subquery_with_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_on_float_column_in_subquery_with_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Average_on_float_column_in_subquery_with_cast : unit -&gt; unit&#xA;override this.Average_on_float_column_in_subquery_with_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Average_on_float_column_in_subquery_with_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_on_float_column_in_subquery_with_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_on_float_column_in_subquery_with_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_on_float_column_in_subquery_with_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Average_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_over_subquery_is_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Average_over_subquery_is_client_eval : unit -&gt; unit&#xA;override this.Average_over_subquery_is_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Average_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_arg">
      <MemberSignature Language="C#" Value="public virtual void Average_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_arg : unit -&gt; unit&#xA;override this.Average_with_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_arg_expression">
      <MemberSignature Language="C#" Value="public virtual void Average_with_arg_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_arg_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_arg_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_arg_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_arg_expression : unit -&gt; unit&#xA;override this.Average_with_arg_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_arg_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_arg_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_arg_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_arg_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Average_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_binary_expression : unit -&gt; unit&#xA;override this.Average_with_binary_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual void Average_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_coalesce ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_coalesce : unit -&gt; unit&#xA;override this.Average_with_coalesce : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_coalesce();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_coalesce();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_division_on_decimal">
      <MemberSignature Language="C#" Value="public virtual void Average_with_division_on_decimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_division_on_decimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_division_on_decimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_division_on_decimal ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_division_on_decimal : unit -&gt; unit&#xA;override this.Average_with_division_on_decimal : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_division_on_decimal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_division_on_decimal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_division_on_decimal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_division_on_decimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_division_on_decimal_no_significant_digits">
      <MemberSignature Language="C#" Value="public virtual void Average_with_division_on_decimal_no_significant_digits ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_division_on_decimal_no_significant_digits() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_division_on_decimal_no_significant_digits" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_division_on_decimal_no_significant_digits ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_division_on_decimal_no_significant_digits : unit -&gt; unit&#xA;override this.Average_with_division_on_decimal_no_significant_digits : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_division_on_decimal_no_significant_digits " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_division_on_decimal_no_significant_digits();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_division_on_decimal_no_significant_digits();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_division_on_decimal_no_significant_digits();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual void Average_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_no_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_no_arg : unit -&gt; unit&#xA;override this.Average_with_no_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_no_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_no_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast : unit -&gt; unit&#xA;override this.Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Average_with_non_matching_types_in_projection_doesnt_produce_second_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730">
      <MemberSignature Language="C#" Value="public virtual void Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730 ()" />
      <MemberSignature Language="F#" Value="abstract member Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730 : unit -&gt; unit&#xA;override this.Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730 : unit -&gt; unit" Usage="simpleQueryTestBase.Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_cast_CreateQuery_result_to_IQueryable_T_bug_1730();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_execute_non_generic">
      <MemberSignature Language="C#" Value="public virtual void Can_execute_non_generic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_execute_non_generic() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Can_execute_non_generic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_execute_non_generic ()" />
      <MemberSignature Language="F#" Value="abstract member Can_execute_non_generic : unit -&gt; unit&#xA;override this.Can_execute_non_generic : unit -&gt; unit" Usage="simpleQueryTestBase.Can_execute_non_generic " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_execute_non_generic();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_execute_non_generic();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_execute_non_generic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast_results_to_object">
      <MemberSignature Language="C#" Value="public virtual void Cast_results_to_object ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cast_results_to_object() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Cast_results_to_object" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cast_results_to_object ()" />
      <MemberSignature Language="F#" Value="abstract member Cast_results_to_object : unit -&gt; unit&#xA;override this.Cast_results_to_object : unit -&gt; unit" Usage="simpleQueryTestBase.Cast_results_to_object " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cast_results_to_object();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Cast_results_to_object();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Cast_results_to_object();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="protected virtual void ClearLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ClearLog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearLog ()" />
      <MemberSignature Language="F#" Value="abstract member ClearLog : unit -&gt; unit&#xA;override this.ClearLog : unit -&gt; unit" Usage="simpleQueryTestBase.ClearLog " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ClearLog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client_Join_select_many">
      <MemberSignature Language="C#" Value="public virtual void Client_Join_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Client_Join_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Client_Join_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Client_Join_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Client_Join_select_many : unit -&gt; unit&#xA;override this.Client_Join_select_many : unit -&gt; unit" Usage="simpleQueryTestBase.Client_Join_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Client_Join_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Client_Join_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Client_Join_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalPredicate">
      <MemberSignature Language="C#" Value="protected static bool ClientEvalPredicate (Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ClientEvalPredicate(class Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ClientEvalPredicate(Microsoft.EntityFrameworkCore.TestModels.Northwind.Order)" />
      <MemberSignature Language="F#" Value="static member ClientEvalPredicate : Microsoft.EntityFrameworkCore.TestModels.Northwind.Order -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.ClientEvalPredicate order" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ClientEvalPredicate(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order ^ order);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool ClientEvalPredicate(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order const &amp; order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.EntityFrameworkCore.TestModels.Northwind.Order" />
      </Parameters>
      <Docs>
        <param name="order">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalPredicateStateless">
      <MemberSignature Language="C#" Value="public static bool ClientEvalPredicateStateless ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ClientEvalPredicateStateless() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ClientEvalPredicateStateless" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClientEvalPredicateStateless () As Boolean" />
      <MemberSignature Language="F#" Value="static member ClientEvalPredicateStateless : unit -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.ClientEvalPredicateStateless " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ClientEvalPredicateStateless();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool ClientEvalPredicateStateless();" />
      <MemberSignature Language="C++ WINRT" Value=" static bool ClientEvalPredicateStateless();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientEvalSelector">
      <MemberSignature Language="C#" Value="protected internal uint ClientEvalSelector (Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance unsigned int32 ClientEvalSelector(class Microsoft.EntityFrameworkCore.TestModels.Northwind.Order order) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ClientEvalSelector(Microsoft.EntityFrameworkCore.TestModels.Northwind.Order)" />
      <MemberSignature Language="F#" Value="member this.ClientEvalSelector : Microsoft.EntityFrameworkCore.TestModels.Northwind.Order -&gt; uint32" Usage="simpleQueryTestBase.ClientEvalSelector order" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::UInt32 ClientEvalSelector(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order ^ order);" />
      <MemberSignature Language="C++ WINRT" Value="unsigned int ClientEvalSelector(Microsoft::EntityFrameworkCore::TestModels::Northwind::Order const &amp; order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="order" Type="Microsoft.EntityFrameworkCore.TestModels.Northwind.Order" />
      </Parameters>
      <Docs>
        <param name="order">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare_collection_navigation_with_itself">
      <MemberSignature Language="C#" Value="public virtual void Compare_collection_navigation_with_itself ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Compare_collection_navigation_with_itself() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Compare_collection_navigation_with_itself" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Compare_collection_navigation_with_itself ()" />
      <MemberSignature Language="F#" Value="abstract member Compare_collection_navigation_with_itself : unit -&gt; unit&#xA;override this.Compare_collection_navigation_with_itself : unit -&gt; unit" Usage="simpleQueryTestBase.Compare_collection_navigation_with_itself " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Compare_collection_navigation_with_itself();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Compare_collection_navigation_with_itself();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Compare_collection_navigation_with_itself();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare_two_collection_navigations_using_equals">
      <MemberSignature Language="C#" Value="public virtual void Compare_two_collection_navigations_using_equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Compare_two_collection_navigations_using_equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Compare_two_collection_navigations_using_equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Compare_two_collection_navigations_using_equals ()" />
      <MemberSignature Language="F#" Value="abstract member Compare_two_collection_navigations_using_equals : unit -&gt; unit&#xA;override this.Compare_two_collection_navigations_using_equals : unit -&gt; unit" Usage="simpleQueryTestBase.Compare_two_collection_navigations_using_equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Compare_two_collection_navigations_using_equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Compare_two_collection_navigations_using_equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Compare_two_collection_navigations_using_equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8366")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare_two_collection_navigations_with_different_property_chains">
      <MemberSignature Language="C#" Value="public virtual void Compare_two_collection_navigations_with_different_property_chains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Compare_two_collection_navigations_with_different_property_chains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Compare_two_collection_navigations_with_different_property_chains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Compare_two_collection_navigations_with_different_property_chains ()" />
      <MemberSignature Language="F#" Value="abstract member Compare_two_collection_navigations_with_different_property_chains : unit -&gt; unit&#xA;override this.Compare_two_collection_navigations_with_different_property_chains : unit -&gt; unit" Usage="simpleQueryTestBase.Compare_two_collection_navigations_with_different_property_chains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Compare_two_collection_navigations_with_different_property_chains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Compare_two_collection_navigations_with_different_property_chains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Compare_two_collection_navigations_with_different_property_chains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare_two_collection_navigations_with_different_query_sources">
      <MemberSignature Language="C#" Value="public virtual void Compare_two_collection_navigations_with_different_query_sources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Compare_two_collection_navigations_with_different_query_sources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Compare_two_collection_navigations_with_different_query_sources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Compare_two_collection_navigations_with_different_query_sources ()" />
      <MemberSignature Language="F#" Value="abstract member Compare_two_collection_navigations_with_different_query_sources : unit -&gt; unit&#xA;override this.Compare_two_collection_navigations_with_different_query_sources : unit -&gt; unit" Usage="simpleQueryTestBase.Compare_two_collection_navigations_with_different_query_sources " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Compare_two_collection_navigations_with_different_query_sources();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Compare_two_collection_navigations_with_different_query_sources();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Compare_two_collection_navigations_with_different_query_sources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_collection_navigation_to_null">
      <MemberSignature Language="C#" Value="public virtual void Comparing_collection_navigation_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_collection_navigation_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_collection_navigation_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_collection_navigation_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_collection_navigation_to_null : unit -&gt; unit&#xA;override this.Comparing_collection_navigation_to_null : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_collection_navigation_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_collection_navigation_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_collection_navigation_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_collection_navigation_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_collection_navigation_to_null_complex">
      <MemberSignature Language="C#" Value="public virtual void Comparing_collection_navigation_to_null_complex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_collection_navigation_to_null_complex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_collection_navigation_to_null_complex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_collection_navigation_to_null_complex ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_collection_navigation_to_null_complex : unit -&gt; unit&#xA;override this.Comparing_collection_navigation_to_null_complex : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_collection_navigation_to_null_complex " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_collection_navigation_to_null_complex();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_collection_navigation_to_null_complex();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_collection_navigation_to_null_complex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_different_entity_types_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_different_entity_types_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_different_entity_types_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_different_entity_types_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_different_entity_types_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_different_entity_types_using_Equals : unit -&gt; unit&#xA;override this.Comparing_different_entity_types_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_different_entity_types_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_different_entity_types_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_different_entity_types_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_different_entity_types_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_entities_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_entities_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_entities_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_entities_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_entities_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_entities_using_Equals : unit -&gt; unit&#xA;override this.Comparing_entities_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_entities_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_entities_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_entities_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_entities_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_entity_to_null_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_entity_to_null_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_entity_to_null_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_entity_to_null_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_entity_to_null_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_entity_to_null_using_Equals : unit -&gt; unit&#xA;override this.Comparing_entity_to_null_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_entity_to_null_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_entity_to_null_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_entity_to_null_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_entity_to_null_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_navigations_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_navigations_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_navigations_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_navigations_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_navigations_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_navigations_using_Equals : unit -&gt; unit&#xA;override this.Comparing_navigations_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_navigations_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_navigations_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_navigations_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_navigations_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_navigations_using_static_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_navigations_using_static_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_navigations_using_static_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_navigations_using_static_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_navigations_using_static_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_navigations_using_static_Equals : unit -&gt; unit&#xA;override this.Comparing_navigations_using_static_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_navigations_using_static_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_navigations_using_static_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_navigations_using_static_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_navigations_using_static_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_non_matching_collection_navigations_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_non_matching_collection_navigations_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_non_matching_collection_navigations_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_non_matching_collection_navigations_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_non_matching_collection_navigations_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_non_matching_collection_navigations_using_Equals : unit -&gt; unit&#xA;override this.Comparing_non_matching_collection_navigations_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_non_matching_collection_navigations_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_non_matching_collection_navigations_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_non_matching_collection_navigations_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_non_matching_collection_navigations_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_non_matching_entities_using_Equals">
      <MemberSignature Language="C#" Value="public virtual void Comparing_non_matching_entities_using_Equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_non_matching_entities_using_Equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_non_matching_entities_using_Equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_non_matching_entities_using_Equals ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_non_matching_entities_using_Equals : unit -&gt; unit&#xA;override this.Comparing_non_matching_entities_using_Equals : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_non_matching_entities_using_Equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_non_matching_entities_using_Equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_non_matching_entities_using_Equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_non_matching_entities_using_Equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_to_fixed_string_parameter">
      <MemberSignature Language="C#" Value="public virtual void Comparing_to_fixed_string_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_to_fixed_string_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Comparing_to_fixed_string_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_to_fixed_string_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_to_fixed_string_parameter : unit -&gt; unit&#xA;override this.Comparing_to_fixed_string_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.Comparing_to_fixed_string_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_to_fixed_string_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_to_fixed_string_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_to_fixed_string_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result">
      <MemberSignature Language="C#" Value="public virtual void Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result : unit -&gt; unit&#xA;override this.Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result : unit -&gt; unit" Usage="simpleQueryTestBase.Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_nested_query_doesnt_try_binding_to_grandparent_when_parent_returns_complex_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result">
      <MemberSignature Language="C#" Value="public virtual void Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result : unit -&gt; unit&#xA;override this.Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result : unit -&gt; unit" Usage="simpleQueryTestBase.Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_nested_query_properly_binds_to_grandparent_when_parent_returns_scalar_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_query_with_repeated_nested_query_model_compiles_correctly">
      <MemberSignature Language="C#" Value="public virtual void Complex_query_with_repeated_nested_query_model_compiles_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_query_with_repeated_nested_query_model_compiles_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Complex_query_with_repeated_nested_query_model_compiles_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_query_with_repeated_nested_query_model_compiles_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_query_with_repeated_nested_query_model_compiles_correctly : unit -&gt; unit&#xA;override this.Complex_query_with_repeated_nested_query_model_compiles_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Complex_query_with_repeated_nested_query_model_compiles_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_query_with_repeated_nested_query_model_compiles_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_query_with_repeated_nested_query_model_compiles_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_query_with_repeated_nested_query_model_compiles_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_query_with_repeated_query_model_compiles_correctly">
      <MemberSignature Language="C#" Value="public virtual void Complex_query_with_repeated_query_model_compiles_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_query_with_repeated_query_model_compiles_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Complex_query_with_repeated_query_model_compiles_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_query_with_repeated_query_model_compiles_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_query_with_repeated_query_model_compiles_correctly : unit -&gt; unit&#xA;override this.Complex_query_with_repeated_query_model_compiles_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Complex_query_with_repeated_query_model_compiles_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_query_with_repeated_query_model_compiles_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_query_with_repeated_query_model_compiles_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_query_with_repeated_query_model_compiles_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_dbset">
      <MemberSignature Language="C#" Value="public virtual void Concat_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Concat_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_dbset ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_dbset : unit -&gt; unit&#xA;override this.Concat_dbset : unit -&gt; unit" Usage="simpleQueryTestBase.Concat_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_dbset();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_dbset();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_nested">
      <MemberSignature Language="C#" Value="public virtual void Concat_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Concat_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_nested : unit -&gt; unit&#xA;override this.Concat_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Concat_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_non_entity">
      <MemberSignature Language="C#" Value="public virtual void Concat_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Concat_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_non_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_non_entity : unit -&gt; unit&#xA;override this.Concat_non_entity : unit -&gt; unit" Usage="simpleQueryTestBase.Concat_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_non_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_non_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat_simple">
      <MemberSignature Language="C#" Value="public virtual void Concat_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Concat_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Concat_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Concat_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Concat_simple : unit -&gt; unit&#xA;override this.Concat_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Concat_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Concat_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Concat_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Concat_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_over_entityType_should_materialize_when_composite">
      <MemberSignature Language="C#" Value="public virtual void Contains_over_entityType_should_materialize_when_composite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_over_entityType_should_materialize_when_composite() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_over_entityType_should_materialize_when_composite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_over_entityType_should_materialize_when_composite ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_over_entityType_should_materialize_when_composite : unit -&gt; unit&#xA;override this.Contains_over_entityType_should_materialize_when_composite : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_over_entityType_should_materialize_when_composite " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_over_entityType_should_materialize_when_composite();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_over_entityType_should_materialize_when_composite();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_over_entityType_should_materialize_when_composite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_over_entityType_should_rewrite_to_identity_equality">
      <MemberSignature Language="C#" Value="public virtual void Contains_over_entityType_should_rewrite_to_identity_equality ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_over_entityType_should_rewrite_to_identity_equality() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_over_entityType_should_rewrite_to_identity_equality" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_over_entityType_should_rewrite_to_identity_equality ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_over_entityType_should_rewrite_to_identity_equality : unit -&gt; unit&#xA;override this.Contains_over_entityType_should_rewrite_to_identity_equality : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_over_entityType_should_rewrite_to_identity_equality " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_over_entityType_should_rewrite_to_identity_equality();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_over_entityType_should_rewrite_to_identity_equality();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_over_entityType_should_rewrite_to_identity_equality();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_top_level">
      <MemberSignature Language="C#" Value="public virtual void Contains_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_top_level : unit -&gt; unit&#xA;override this.Contains_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_DateTime_Date">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_DateTime_Date ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_DateTime_Date() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_DateTime_Date" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_DateTime_Date ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_DateTime_Date : unit -&gt; unit&#xA;override this.Contains_with_DateTime_Date : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_DateTime_Date " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_DateTime_Date();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_DateTime_Date();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_DateTime_Date();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_anonymous_type_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_anonymous_type_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_anonymous_type_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_anonymous_type_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_anonymous_type_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_anonymous_type_array_closure : unit -&gt; unit&#xA;override this.Contains_with_local_anonymous_type_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_anonymous_type_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_anonymous_type_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_anonymous_type_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_anonymous_type_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_array_closure : unit -&gt; unit&#xA;override this.Contains_with_local_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_array_inline">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_array_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_array_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_array_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_array_inline ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_array_inline : unit -&gt; unit&#xA;override this.Contains_with_local_array_inline : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_array_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_array_inline();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_array_inline();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_array_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_and">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_complex_predicate_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_complex_predicate_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_complex_predicate_and ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_and : unit -&gt; unit&#xA;override this.Contains_with_local_collection_complex_predicate_and : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_complex_predicate_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_complex_predicate_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_not_matching_ins1">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_complex_predicate_not_matching_ins1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_complex_predicate_not_matching_ins1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_complex_predicate_not_matching_ins1 ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_not_matching_ins1 : unit -&gt; unit&#xA;override this.Contains_with_local_collection_complex_predicate_not_matching_ins1 : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_complex_predicate_not_matching_ins1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_not_matching_ins1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_not_matching_ins1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_complex_predicate_not_matching_ins1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_not_matching_ins2">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_complex_predicate_not_matching_ins2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_complex_predicate_not_matching_ins2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_not_matching_ins2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_complex_predicate_not_matching_ins2 ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_not_matching_ins2 : unit -&gt; unit&#xA;override this.Contains_with_local_collection_complex_predicate_not_matching_ins2 : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_complex_predicate_not_matching_ins2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_not_matching_ins2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_not_matching_ins2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_complex_predicate_not_matching_ins2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_complex_predicate_or">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_complex_predicate_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_complex_predicate_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_complex_predicate_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_complex_predicate_or ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_complex_predicate_or : unit -&gt; unit&#xA;override this.Contains_with_local_collection_complex_predicate_or : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_complex_predicate_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_complex_predicate_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_complex_predicate_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_empty_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_empty_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_empty_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_empty_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_empty_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_empty_closure : unit -&gt; unit&#xA;override this.Contains_with_local_collection_empty_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_empty_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_empty_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_empty_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_empty_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_empty_inline">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_empty_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_empty_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_empty_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_empty_inline ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_empty_inline : unit -&gt; unit&#xA;override this.Contains_with_local_collection_empty_inline : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_empty_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_empty_inline();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_empty_inline();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_empty_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_false">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_false ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_false : unit -&gt; unit&#xA;override this.Contains_with_local_collection_false : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_false();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_false();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_collection_sql_injection">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_collection_sql_injection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_collection_sql_injection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_collection_sql_injection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_collection_sql_injection ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_collection_sql_injection : unit -&gt; unit&#xA;override this.Contains_with_local_collection_sql_injection : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_collection_sql_injection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_collection_sql_injection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_collection_sql_injection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_collection_sql_injection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_int_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_int_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_int_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_int_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_int_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_int_array_closure : unit -&gt; unit&#xA;override this.Contains_with_local_int_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_int_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_int_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_int_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_int_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_list_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_list_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_list_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_list_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_closure : unit -&gt; unit&#xA;override this.Contains_with_local_list_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_list_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_list_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_list_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_list_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_inline">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_list_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_list_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_list_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_list_inline ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_inline : unit -&gt; unit&#xA;override this.Contains_with_local_list_inline : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_list_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_list_inline();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_list_inline();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_list_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_list_inline_closure_mix">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_list_inline_closure_mix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_list_inline_closure_mix() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_list_inline_closure_mix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_list_inline_closure_mix ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_list_inline_closure_mix : unit -&gt; unit&#xA;override this.Contains_with_local_list_inline_closure_mix : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_list_inline_closure_mix " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_list_inline_closure_mix();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_list_inline_closure_mix();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_list_inline_closure_mix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_nullable_int_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_nullable_int_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_nullable_int_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_nullable_int_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_nullable_int_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_nullable_int_array_closure : unit -&gt; unit&#xA;override this.Contains_with_local_nullable_int_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_nullable_int_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_nullable_int_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_nullable_int_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_nullable_int_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_local_tuple_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_local_tuple_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_local_tuple_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_local_tuple_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_local_tuple_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_local_tuple_array_closure : unit -&gt; unit&#xA;override this.Contains_with_local_tuple_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_local_tuple_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_local_tuple_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_local_tuple_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_local_tuple_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery : unit -&gt; unit&#xA;override this.Contains_with_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery_and_local_array_closure">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_subquery_and_local_array_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_subquery_and_local_array_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_subquery_and_local_array_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_subquery_and_local_array_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery_and_local_array_closure : unit -&gt; unit&#xA;override this.Contains_with_subquery_and_local_array_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_subquery_and_local_array_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_subquery_and_local_array_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_subquery_and_local_array_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_subquery_and_local_array_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery_involving_join_binds_to_correct_table">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_subquery_involving_join_binds_to_correct_table ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_subquery_involving_join_binds_to_correct_table() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Contains_with_subquery_involving_join_binds_to_correct_table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_subquery_involving_join_binds_to_correct_table ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery_involving_join_binds_to_correct_table : unit -&gt; unit&#xA;override this.Contains_with_subquery_involving_join_binds_to_correct_table : unit -&gt; unit" Usage="simpleQueryTestBase.Contains_with_subquery_involving_join_binds_to_correct_table " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_subquery_involving_join_binds_to_correct_table();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_subquery_involving_join_binds_to_correct_table();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_subquery_involving_join_binds_to_correct_table();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToByte">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToByte ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToByte : unit -&gt; unit&#xA;override this.Convert_ToByte : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToByte " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToByte();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToByte();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToDecimal">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToDecimal ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToDecimal : unit -&gt; unit&#xA;override this.Convert_ToDecimal : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToDecimal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToDecimal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToDecimal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToDecimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToDouble">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToDouble ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToDouble : unit -&gt; unit&#xA;override this.Convert_ToDouble : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToDouble " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToDouble();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToDouble();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToInt16">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToInt16 ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToInt16 : unit -&gt; unit&#xA;override this.Convert_ToInt16 : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToInt16 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToInt16();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToInt16();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToInt32">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToInt32 ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToInt32 : unit -&gt; unit&#xA;override this.Convert_ToInt32 : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToInt32 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToInt32();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToInt32();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToInt64">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToInt64 ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToInt64 : unit -&gt; unit&#xA;override this.Convert_ToInt64 : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToInt64 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToInt64();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToInt64();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert_ToString">
      <MemberSignature Language="C#" Value="public virtual void Convert_ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert_ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Convert_ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert_ToString ()" />
      <MemberSignature Language="F#" Value="abstract member Convert_ToString : unit -&gt; unit&#xA;override this.Convert_ToString : unit -&gt; unit" Usage="simpleQueryTestBase.Convert_ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert_ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Convert_ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Convert_ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_no_predicate">
      <MemberSignature Language="C#" Value="public virtual void Count_with_no_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_with_no_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Count_with_no_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_with_no_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Count_with_no_predicate : unit -&gt; unit&#xA;override this.Count_with_no_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Count_with_no_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_with_no_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_with_no_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_with_no_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_order_by">
      <MemberSignature Language="C#" Value="public virtual void Count_with_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_with_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Count_with_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_with_order_by ()" />
      <MemberSignature Language="F#" Value="abstract member Count_with_order_by : unit -&gt; unit&#xA;override this.Count_with_order_by : unit -&gt; unit" Usage="simpleQueryTestBase.Count_with_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_with_order_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_with_order_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_with_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Count_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Count_with_predicate : unit -&gt; unit&#xA;override this.Count_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Count_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Count_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="simpleQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateTime_parse_is_parameterized">
      <MemberSignature Language="C#" Value="public virtual void DateTime_parse_is_parameterized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DateTime_parse_is_parameterized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DateTime_parse_is_parameterized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DateTime_parse_is_parameterized ()" />
      <MemberSignature Language="F#" Value="abstract member DateTime_parse_is_parameterized : unit -&gt; unit&#xA;override this.DateTime_parse_is_parameterized : unit -&gt; unit" Usage="simpleQueryTestBase.DateTime_parse_is_parameterized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DateTime_parse_is_parameterized();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DateTime_parse_is_parameterized();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DateTime_parse_is_parameterized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level">
      <MemberSignature Language="C#" Value="public virtual void Default_if_empty_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Default_if_empty_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Default_if_empty_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Default_if_empty_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level : unit -&gt; unit&#xA;override this.Default_if_empty_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Default_if_empty_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Default_if_empty_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Default_if_empty_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Default_if_empty_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_arg">
      <MemberSignature Language="C#" Value="public virtual void Default_if_empty_top_level_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Default_if_empty_top_level_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Default_if_empty_top_level_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Default_if_empty_top_level_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_arg : unit -&gt; unit&#xA;override this.Default_if_empty_top_level_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Default_if_empty_top_level_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Default_if_empty_top_level_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Default_if_empty_top_level_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Default_if_empty_top_level_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_positive">
      <MemberSignature Language="C#" Value="public virtual void Default_if_empty_top_level_positive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Default_if_empty_top_level_positive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Default_if_empty_top_level_positive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Default_if_empty_top_level_positive ()" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_positive : unit -&gt; unit&#xA;override this.Default_if_empty_top_level_positive : unit -&gt; unit" Usage="simpleQueryTestBase.Default_if_empty_top_level_positive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Default_if_empty_top_level_positive();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Default_if_empty_top_level_positive();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Default_if_empty_top_level_positive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default_if_empty_top_level_projection">
      <MemberSignature Language="C#" Value="public virtual void Default_if_empty_top_level_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Default_if_empty_top_level_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Default_if_empty_top_level_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Default_if_empty_top_level_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Default_if_empty_top_level_projection : unit -&gt; unit&#xA;override this.Default_if_empty_top_level_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Default_if_empty_top_level_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Default_if_empty_top_level_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Default_if_empty_top_level_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Default_if_empty_top_level_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void DefaultIfEmpty_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultIfEmpty_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DefaultIfEmpty_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefaultIfEmpty_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member DefaultIfEmpty_in_subquery : unit -&gt; unit&#xA;override this.DefaultIfEmpty_in_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.DefaultIfEmpty_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefaultIfEmpty_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DefaultIfEmpty_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DefaultIfEmpty_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty_in_subquery_nested">
      <MemberSignature Language="C#" Value="public virtual void DefaultIfEmpty_in_subquery_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultIfEmpty_in_subquery_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DefaultIfEmpty_in_subquery_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefaultIfEmpty_in_subquery_nested ()" />
      <MemberSignature Language="F#" Value="abstract member DefaultIfEmpty_in_subquery_nested : unit -&gt; unit&#xA;override this.DefaultIfEmpty_in_subquery_nested : unit -&gt; unit" Usage="simpleQueryTestBase.DefaultIfEmpty_in_subquery_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefaultIfEmpty_in_subquery_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DefaultIfEmpty_in_subquery_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DefaultIfEmpty_in_subquery_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty_without_group_join">
      <MemberSignature Language="C#" Value="public virtual void DefaultIfEmpty_without_group_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultIfEmpty_without_group_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DefaultIfEmpty_without_group_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefaultIfEmpty_without_group_join ()" />
      <MemberSignature Language="F#" Value="abstract member DefaultIfEmpty_without_group_join : unit -&gt; unit&#xA;override this.DefaultIfEmpty_without_group_join : unit -&gt; unit" Usage="simpleQueryTestBase.DefaultIfEmpty_without_group_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefaultIfEmpty_without_group_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DefaultIfEmpty_without_group_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DefaultIfEmpty_without_group_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public virtual void Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct : unit -&gt; unit&#xA;override this.Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Count : unit -&gt; unit&#xA;override this.Distinct_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_OrderBy">
      <MemberSignature Language="C#" Value="public virtual void Distinct_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_OrderBy : unit -&gt; unit&#xA;override this.Distinct_OrderBy : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_OrderBy2">
      <MemberSignature Language="C#" Value="public virtual void Distinct_OrderBy2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_OrderBy2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_OrderBy2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_OrderBy2 ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_OrderBy2 : unit -&gt; unit&#xA;override this.Distinct_OrderBy2 : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_OrderBy2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_OrderBy2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_OrderBy2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_OrderBy2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_OrderBy3">
      <MemberSignature Language="C#" Value="public virtual void Distinct_OrderBy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_OrderBy3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_OrderBy3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_OrderBy3 ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_OrderBy3 : unit -&gt; unit&#xA;override this.Distinct_OrderBy3 : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_OrderBy3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_OrderBy3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_OrderBy3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_OrderBy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Scalar">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Scalar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Scalar ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Scalar : unit -&gt; unit&#xA;override this.Distinct_Scalar : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Scalar " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Scalar();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Scalar();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Scalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Skip">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Skip ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Skip : unit -&gt; unit&#xA;override this.Distinct_Skip : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Skip_Take">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Skip_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Skip_Take : unit -&gt; unit&#xA;override this.Distinct_Skip_Take : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Skip_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Skip_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Take">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Take : unit -&gt; unit&#xA;override this.Distinct_Take : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct_Take_Count">
      <MemberSignature Language="C#" Value="public virtual void Distinct_Take_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distinct_Take_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Distinct_Take_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Distinct_Take_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Distinct_Take_Count : unit -&gt; unit&#xA;override this.Distinct_Take_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Distinct_Take_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Distinct_Take_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Distinct_Take_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Distinct_Take_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_complex_distinct_orderby">
      <MemberSignature Language="C#" Value="public virtual void DTO_complex_distinct_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_complex_distinct_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_complex_distinct_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_complex_distinct_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_complex_distinct_orderby : unit -&gt; unit&#xA;override this.DTO_complex_distinct_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_complex_distinct_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_complex_distinct_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_complex_distinct_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_complex_distinct_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_complex_distinct_result">
      <MemberSignature Language="C#" Value="public virtual void DTO_complex_distinct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_complex_distinct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_complex_distinct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_complex_distinct_result ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_complex_distinct_result : unit -&gt; unit&#xA;override this.DTO_complex_distinct_result : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_complex_distinct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_complex_distinct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_complex_distinct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_complex_distinct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_complex_distinct_where">
      <MemberSignature Language="C#" Value="public virtual void DTO_complex_distinct_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_complex_distinct_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_complex_distinct_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_complex_distinct_where ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_complex_distinct_where : unit -&gt; unit&#xA;override this.DTO_complex_distinct_where : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_complex_distinct_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_complex_distinct_where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_complex_distinct_where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_complex_distinct_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_complex_orderby">
      <MemberSignature Language="C#" Value="public virtual void DTO_complex_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_complex_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_complex_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_complex_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_complex_orderby : unit -&gt; unit&#xA;override this.DTO_complex_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_complex_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_complex_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_complex_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_complex_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_member_distinct_orderby">
      <MemberSignature Language="C#" Value="public virtual void DTO_member_distinct_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_member_distinct_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_member_distinct_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_member_distinct_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_member_distinct_orderby : unit -&gt; unit&#xA;override this.DTO_member_distinct_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_member_distinct_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_member_distinct_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_member_distinct_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_member_distinct_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_member_distinct_result">
      <MemberSignature Language="C#" Value="public virtual void DTO_member_distinct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_member_distinct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_member_distinct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_member_distinct_result ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_member_distinct_result : unit -&gt; unit&#xA;override this.DTO_member_distinct_result : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_member_distinct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_member_distinct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_member_distinct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_member_distinct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_member_distinct_where">
      <MemberSignature Language="C#" Value="public virtual void DTO_member_distinct_where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_member_distinct_where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_member_distinct_where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_member_distinct_where ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_member_distinct_where : unit -&gt; unit&#xA;override this.DTO_member_distinct_where : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_member_distinct_where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_member_distinct_where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_member_distinct_where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_member_distinct_where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DTO_subquery_orderby">
      <MemberSignature Language="C#" Value="public virtual void DTO_subquery_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DTO_subquery_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.DTO_subquery_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DTO_subquery_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member DTO_subquery_orderby : unit -&gt; unit&#xA;override this.DTO_subquery_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.DTO_subquery_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DTO_subquery_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DTO_subquery_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DTO_subquery_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_local">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_local ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_local() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Entity_equality_local" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_local ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_local : unit -&gt; unit&#xA;override this.Entity_equality_local : unit -&gt; unit" Usage="simpleQueryTestBase.Entity_equality_local " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_local();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_local();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_local();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_local_inline">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_local_inline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_local_inline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Entity_equality_local_inline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_local_inline ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_local_inline : unit -&gt; unit&#xA;override this.Entity_equality_local_inline : unit -&gt; unit" Usage="simpleQueryTestBase.Entity_equality_local_inline " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_local_inline();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_local_inline();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_local_inline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_not_null">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Entity_equality_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_not_null : unit -&gt; unit&#xA;override this.Entity_equality_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Entity_equality_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_null">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Entity_equality_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_null ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_null : unit -&gt; unit&#xA;override this.Entity_equality_null : unit -&gt; unit" Usage="simpleQueryTestBase.Entity_equality_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_self">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_self ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_self() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Entity_equality_self" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_self ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_self : unit -&gt; unit&#xA;override this.Entity_equality_self : unit -&gt; unit" Usage="simpleQueryTestBase.Entity_equality_self " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_self();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_self();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_self();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment_newline_is_funcletized">
      <MemberSignature Language="C#" Value="public virtual void Environment_newline_is_funcletized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Environment_newline_is_funcletized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Environment_newline_is_funcletized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Environment_newline_is_funcletized ()" />
      <MemberSignature Language="F#" Value="abstract member Environment_newline_is_funcletized : unit -&gt; unit&#xA;override this.Environment_newline_is_funcletized : unit -&gt; unit" Usage="simpleQueryTestBase.Environment_newline_is_funcletized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Environment_newline_is_funcletized();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Environment_newline_is_funcletized();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Environment_newline_is_funcletized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_dbset">
      <MemberSignature Language="C#" Value="public virtual void Except_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Except_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Except_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Except_dbset ()" />
      <MemberSignature Language="F#" Value="abstract member Except_dbset : unit -&gt; unit&#xA;override this.Except_dbset : unit -&gt; unit" Usage="simpleQueryTestBase.Except_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Except_dbset();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Except_dbset();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Except_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_nested">
      <MemberSignature Language="C#" Value="public virtual void Except_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Except_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Except_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Except_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Except_nested : unit -&gt; unit&#xA;override this.Except_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Except_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Except_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Except_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Except_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_non_entity">
      <MemberSignature Language="C#" Value="public virtual void Except_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Except_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Except_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Except_non_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Except_non_entity : unit -&gt; unit&#xA;override this.Except_non_entity : unit -&gt; unit" Usage="simpleQueryTestBase.Except_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Except_non_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Except_non_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Except_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Except_simple">
      <MemberSignature Language="C#" Value="public virtual void Except_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Except_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Except_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Except_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Except_simple : unit -&gt; unit&#xA;override this.Except_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Except_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Except_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Except_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Except_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Filter_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Filter_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Filter_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Filter_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Filter_coalesce_operator : unit -&gt; unit&#xA;override this.Filter_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Filter_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Filter_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Filter_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Filter_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public virtual void First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.First" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub First ()" />
      <MemberSignature Language="F#" Value="abstract member First : unit -&gt; unit&#xA;override this.First : unit -&gt; unit" Usage="simpleQueryTestBase.First " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void First();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void First();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void First();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_client_predicate">
      <MemberSignature Language="C#" Value="public virtual void First_client_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void First_client_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.First_client_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub First_client_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member First_client_predicate : unit -&gt; unit&#xA;override this.First_client_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.First_client_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void First_client_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void First_client_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void First_client_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_inside_subquery_gets_client_evaluated">
      <MemberSignature Language="C#" Value="public virtual void First_inside_subquery_gets_client_evaluated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void First_inside_subquery_gets_client_evaluated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.First_inside_subquery_gets_client_evaluated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub First_inside_subquery_gets_client_evaluated ()" />
      <MemberSignature Language="F#" Value="abstract member First_inside_subquery_gets_client_evaluated : unit -&gt; unit&#xA;override this.First_inside_subquery_gets_client_evaluated : unit -&gt; unit" Usage="simpleQueryTestBase.First_inside_subquery_gets_client_evaluated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void First_inside_subquery_gets_client_evaluated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void First_inside_subquery_gets_client_evaluated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void First_inside_subquery_gets_client_evaluated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_Predicate">
      <MemberSignature Language="C#" Value="public virtual void First_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void First_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.First_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub First_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member First_Predicate : unit -&gt; unit&#xA;override this.First_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.First_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void First_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void First_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void First_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault : unit -&gt; unit&#xA;override this.FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault_inside_subquery_gets_server_evaluated">
      <MemberSignature Language="C#" Value="public virtual void FirstOrDefault_inside_subquery_gets_server_evaluated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FirstOrDefault_inside_subquery_gets_server_evaluated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.FirstOrDefault_inside_subquery_gets_server_evaluated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FirstOrDefault_inside_subquery_gets_server_evaluated ()" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault_inside_subquery_gets_server_evaluated : unit -&gt; unit&#xA;override this.FirstOrDefault_inside_subquery_gets_server_evaluated : unit -&gt; unit" Usage="simpleQueryTestBase.FirstOrDefault_inside_subquery_gets_server_evaluated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FirstOrDefault_inside_subquery_gets_server_evaluated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void FirstOrDefault_inside_subquery_gets_server_evaluated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void FirstOrDefault_inside_subquery_gets_server_evaluated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual void FirstOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FirstOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.FirstOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FirstOrDefault_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member FirstOrDefault_Predicate : unit -&gt; unit&#xA;override this.FirstOrDefault_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.FirstOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FirstOrDefault_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void FirstOrDefault_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void FirstOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy_tracking_after_dispose">
      <MemberSignature Language="C#" Value="public virtual void GroupBy_tracking_after_dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupBy_tracking_after_dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupBy_tracking_after_dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupBy_tracking_after_dispose ()" />
      <MemberSignature Language="F#" Value="abstract member GroupBy_tracking_after_dispose : unit -&gt; unit&#xA;override this.GroupBy_tracking_after_dispose : unit -&gt; unit" Usage="simpleQueryTestBase.GroupBy_tracking_after_dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupBy_tracking_after_dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupBy_tracking_after_dispose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupBy_tracking_after_dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_employees_shadow">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_employees_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_employees_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_employees_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_employees_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_employees_shadow : unit -&gt; unit&#xA;override this.GroupJoin_customers_employees_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_employees_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_employees_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_employees_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_employees_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_employees_subquery_shadow">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_employees_subquery_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_employees_subquery_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_employees_subquery_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_employees_subquery_shadow : unit -&gt; unit&#xA;override this.GroupJoin_customers_employees_subquery_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_employees_subquery_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_employees_subquery_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_employees_subquery_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_employees_subquery_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_employees_subquery_shadow_take">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_employees_subquery_shadow_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_employees_subquery_shadow_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_employees_subquery_shadow_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_employees_subquery_shadow_take ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_employees_subquery_shadow_take : unit -&gt; unit&#xA;override this.GroupJoin_customers_employees_subquery_shadow_take : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_employees_subquery_shadow_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_employees_subquery_shadow_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_employees_subquery_shadow_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_employees_subquery_shadow_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_orders">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_orders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_orders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_orders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_orders ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_orders : unit -&gt; unit&#xA;override this.GroupJoin_customers_orders : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_orders " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_orders();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_orders();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_orders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_orders_count">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_orders_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_orders_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_orders_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_orders_count ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_orders_count : unit -&gt; unit&#xA;override this.GroupJoin_customers_orders_count : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_orders_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_orders_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_orders_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_orders_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_customers_orders_count_preserves_ordering">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_customers_orders_count_preserves_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_customers_orders_count_preserves_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_customers_orders_count_preserves_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_customers_orders_count_preserves_ordering ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_customers_orders_count_preserves_ordering : unit -&gt; unit&#xA;override this.GroupJoin_customers_orders_count_preserves_ordering : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_customers_orders_count_preserves_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_customers_orders_count_preserves_ordering();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_customers_orders_count_preserves_ordering();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_customers_orders_count_preserves_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty_multiple">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty_multiple : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty_multiple : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty_Project">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty_Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty_Project() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty_Project" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty_Project ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty_Project : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty_Project : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty_Project " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_Project();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_Project();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty_Project();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty_Where">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty_Where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty_Where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty_Where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty_Where ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty_Where : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty_Where : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty_Where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_Where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty_Where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty_Where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty2 : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_DefaultIfEmpty3">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_DefaultIfEmpty3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_DefaultIfEmpty3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_DefaultIfEmpty3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_DefaultIfEmpty3 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_DefaultIfEmpty3 : unit -&gt; unit&#xA;override this.GroupJoin_DefaultIfEmpty3 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_DefaultIfEmpty3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_DefaultIfEmpty3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_DefaultIfEmpty3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection_reverse">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection_reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection_reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection_reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection_reverse ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection_reverse : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection_reverse : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection_reverse " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection_reverse();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection_reverse();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection_reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection_reverse2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection_reverse2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection_reverse2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection_reverse2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection_reverse2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection_reverse2 : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection_reverse2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection_reverse2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection_reverse2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection_reverse2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection_reverse2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection2 : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection3">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection3 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection3 : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection3 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_outer_projection4">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_outer_projection4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_outer_projection4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_outer_projection4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_outer_projection4 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_outer_projection4 : unit -&gt; unit&#xA;override this.GroupJoin_outer_projection4 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_outer_projection4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_outer_projection4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_outer_projection4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_outer_projection4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_projection">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_projection ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_projection : unit -&gt; unit&#xA;override this.GroupJoin_projection : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_SelectMany_subquery_with_filter">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_SelectMany_subquery_with_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_SelectMany_subquery_with_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_SelectMany_subquery_with_filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_SelectMany_subquery_with_filter ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_SelectMany_subquery_with_filter : unit -&gt; unit&#xA;override this.GroupJoin_SelectMany_subquery_with_filter : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_SelectMany_subquery_with_filter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_SelectMany_subquery_with_filter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty : unit -&gt; unit&#xA;override this.GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_SelectMany_subquery_with_filter_and_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_SelectMany_subquery_with_filter_orderby">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_SelectMany_subquery_with_filter_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_SelectMany_subquery_with_filter_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_SelectMany_subquery_with_filter_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_SelectMany_subquery_with_filter_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_SelectMany_subquery_with_filter_orderby : unit -&gt; unit&#xA;override this.GroupJoin_SelectMany_subquery_with_filter_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_SelectMany_subquery_with_filter_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_SelectMany_subquery_with_filter_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty : unit -&gt; unit&#xA;override this.GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_SelectMany_subquery_with_filter_orderby_and_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_simple ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple : unit -&gt; unit&#xA;override this.GroupJoin_simple : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple_ordering">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_simple_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_simple_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_simple_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_simple_ordering ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple_ordering : unit -&gt; unit&#xA;override this.GroupJoin_simple_ordering : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_simple_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_simple_ordering();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_simple_ordering();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_simple_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple_subquery">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_simple_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_simple_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_simple_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_simple_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple_subquery : unit -&gt; unit&#xA;override this.GroupJoin_simple_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_simple_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_simple_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_simple_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_simple_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_simple2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_simple2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_simple2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_simple2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple2 : unit -&gt; unit&#xA;override this.GroupJoin_simple2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_simple2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_simple2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_simple2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_simple2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_simple3">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_simple3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_simple3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_simple3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_simple3 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_simple3 : unit -&gt; unit&#xA;override this.GroupJoin_simple3 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_simple3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_simple3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_simple3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_simple3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_subquery_projection_outer_mixed">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_subquery_projection_outer_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_subquery_projection_outer_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_subquery_projection_outer_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_subquery_projection_outer_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_subquery_projection_outer_mixed : unit -&gt; unit&#xA;override this.GroupJoin_subquery_projection_outer_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_subquery_projection_outer_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_subquery_projection_outer_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_subquery_projection_outer_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_subquery_projection_outer_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_tracking_groups">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_tracking_groups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_tracking_groups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_tracking_groups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_tracking_groups ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_tracking_groups : unit -&gt; unit&#xA;override this.GroupJoin_tracking_groups : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_tracking_groups " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_tracking_groups();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_tracking_groups();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_tracking_groups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_tracking_groups2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_tracking_groups2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_tracking_groups2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_tracking_groups2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_tracking_groups2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_tracking_groups2 : unit -&gt; unit&#xA;override this.GroupJoin_tracking_groups2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_tracking_groups2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_tracking_groups2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_tracking_groups2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_tracking_groups2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_Where">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_Where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_Where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_Where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_Where ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_Where : unit -&gt; unit&#xA;override this.GroupJoin_Where : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_Where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_Where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_Where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_Where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_Where_OrderBy">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_Where_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_Where_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_Where_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_Where_OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_Where_OrderBy : unit -&gt; unit&#xA;override this.GroupJoin_Where_OrderBy : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_Where_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_Where_OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_Where_OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_Where_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_different_outer_elements_with_same_key">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_different_outer_elements_with_same_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_different_outer_elements_with_same_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_with_different_outer_elements_with_same_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_different_outer_elements_with_same_key ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_different_outer_elements_with_same_key : unit -&gt; unit&#xA;override this.GroupJoin_with_different_outer_elements_with_same_key : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_with_different_outer_elements_with_same_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_different_outer_elements_with_same_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity : unit -&gt; unit&#xA;override this.GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_different_outer_elements_with_same_key_projected_from_another_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_different_outer_elements_with_same_key_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_different_outer_elements_with_same_key_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_different_outer_elements_with_same_key_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_with_different_outer_elements_with_same_key_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_different_outer_elements_with_same_key_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_different_outer_elements_with_same_key_with_predicate : unit -&gt; unit&#xA;override this.GroupJoin_with_different_outer_elements_with_same_key_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_with_different_outer_elements_with_same_key_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_different_outer_elements_with_same_key_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_different_outer_elements_with_same_key_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_order_by_key_descending1">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_order_by_key_descending1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_order_by_key_descending1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_with_order_by_key_descending1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_order_by_key_descending1 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_order_by_key_descending1 : unit -&gt; unit&#xA;override this.GroupJoin_with_order_by_key_descending1 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_with_order_by_key_descending1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_order_by_key_descending1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_order_by_key_descending1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_order_by_key_descending1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_order_by_key_descending2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_order_by_key_descending2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_order_by_key_descending2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.GroupJoin_with_order_by_key_descending2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_order_by_key_descending2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_order_by_key_descending2 : unit -&gt; unit&#xA;override this.GroupJoin_with_order_by_key_descending2 : unit -&gt; unit" Usage="simpleQueryTestBase.GroupJoin_with_order_by_key_descending2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_order_by_key_descending2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_order_by_key_descending2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_order_by_key_descending2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle_materialization_properly_when_more_than_two_query_sources_are_involved">
      <MemberSignature Language="C#" Value="public virtual void Handle_materialization_properly_when_more_than_two_query_sources_are_involved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Handle_materialization_properly_when_more_than_two_query_sources_are_involved() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Handle_materialization_properly_when_more_than_two_query_sources_are_involved" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Handle_materialization_properly_when_more_than_two_query_sources_are_involved ()" />
      <MemberSignature Language="F#" Value="abstract member Handle_materialization_properly_when_more_than_two_query_sources_are_involved : unit -&gt; unit&#xA;override this.Handle_materialization_properly_when_more_than_two_query_sources_are_involved : unit -&gt; unit" Usage="simpleQueryTestBase.Handle_materialization_properly_when_more_than_two_query_sources_are_involved " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Handle_materialization_properly_when_more_than_two_query_sources_are_involved();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Handle_materialization_properly_when_more_than_two_query_sources_are_involved();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Handle_materialization_properly_when_more_than_two_query_sources_are_involved();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_orderby_skip_preserves_ordering">
      <MemberSignature Language="C#" Value="public virtual void Include_with_orderby_skip_preserves_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_orderby_skip_preserves_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Include_with_orderby_skip_preserves_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_orderby_skip_preserves_ordering ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_orderby_skip_preserves_ordering : unit -&gt; unit&#xA;override this.Include_with_orderby_skip_preserves_ordering : unit -&gt; unit" Usage="simpleQueryTestBase.Include_with_orderby_skip_preserves_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_orderby_skip_preserves_ordering();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_orderby_skip_preserves_ordering();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_orderby_skip_preserves_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indexof_with_emptystring">
      <MemberSignature Language="C#" Value="public virtual void Indexof_with_emptystring ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Indexof_with_emptystring() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Indexof_with_emptystring" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Indexof_with_emptystring ()" />
      <MemberSignature Language="F#" Value="abstract member Indexof_with_emptystring : unit -&gt; unit&#xA;override this.Indexof_with_emptystring : unit -&gt; unit" Usage="simpleQueryTestBase.Indexof_with_emptystring " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Indexof_with_emptystring();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Indexof_with_emptystring();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Indexof_with_emptystring();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Int16_parameter_can_be_used_for_int_column">
      <MemberSignature Language="C#" Value="public virtual void Int16_parameter_can_be_used_for_int_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Int16_parameter_can_be_used_for_int_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Int16_parameter_can_be_used_for_int_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Int16_parameter_can_be_used_for_int_column ()" />
      <MemberSignature Language="F#" Value="abstract member Int16_parameter_can_be_used_for_int_column : unit -&gt; unit&#xA;override this.Int16_parameter_can_be_used_for_int_column : unit -&gt; unit" Usage="simpleQueryTestBase.Int16_parameter_can_be_used_for_int_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Int16_parameter_can_be_used_for_int_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Int16_parameter_can_be_used_for_int_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Int16_parameter_can_be_used_for_int_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_dbset">
      <MemberSignature Language="C#" Value="public virtual void Intersect_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Intersect_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Intersect_dbset ()" />
      <MemberSignature Language="F#" Value="abstract member Intersect_dbset : unit -&gt; unit&#xA;override this.Intersect_dbset : unit -&gt; unit" Usage="simpleQueryTestBase.Intersect_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Intersect_dbset();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Intersect_dbset();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Intersect_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_nested">
      <MemberSignature Language="C#" Value="public virtual void Intersect_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Intersect_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Intersect_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Intersect_nested : unit -&gt; unit&#xA;override this.Intersect_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Intersect_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Intersect_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Intersect_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Intersect_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_non_entity">
      <MemberSignature Language="C#" Value="public virtual void Intersect_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Intersect_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Intersect_non_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Intersect_non_entity : unit -&gt; unit&#xA;override this.Intersect_non_entity : unit -&gt; unit" Usage="simpleQueryTestBase.Intersect_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Intersect_non_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Intersect_non_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Intersect_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect_simple">
      <MemberSignature Language="C#" Value="public virtual void Intersect_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intersect_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Intersect_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Intersect_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Intersect_simple : unit -&gt; unit&#xA;override this.Intersect_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Intersect_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Intersect_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Intersect_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Intersect_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void IsNullOrEmpty_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsNullOrEmpty_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.IsNullOrEmpty_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IsNullOrEmpty_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member IsNullOrEmpty_in_predicate : unit -&gt; unit&#xA;override this.IsNullOrEmpty_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.IsNullOrEmpty_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IsNullOrEmpty_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void IsNullOrEmpty_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void IsNullOrEmpty_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty_in_projection">
      <MemberSignature Language="C#" Value="public virtual void IsNullOrEmpty_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsNullOrEmpty_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.IsNullOrEmpty_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IsNullOrEmpty_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member IsNullOrEmpty_in_projection : unit -&gt; unit&#xA;override this.IsNullOrEmpty_in_projection : unit -&gt; unit" Usage="simpleQueryTestBase.IsNullOrEmpty_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IsNullOrEmpty_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void IsNullOrEmpty_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void IsNullOrEmpty_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty_negated_in_projection">
      <MemberSignature Language="C#" Value="public virtual void IsNullOrEmpty_negated_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsNullOrEmpty_negated_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.IsNullOrEmpty_negated_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IsNullOrEmpty_negated_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member IsNullOrEmpty_negated_in_projection : unit -&gt; unit&#xA;override this.IsNullOrEmpty_negated_in_projection : unit -&gt; unit" Usage="simpleQueryTestBase.IsNullOrEmpty_negated_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IsNullOrEmpty_negated_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void IsNullOrEmpty_negated_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void IsNullOrEmpty_negated_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullOrWhiteSpace_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void IsNullOrWhiteSpace_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsNullOrWhiteSpace_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.IsNullOrWhiteSpace_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IsNullOrWhiteSpace_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member IsNullOrWhiteSpace_in_predicate : unit -&gt; unit&#xA;override this.IsNullOrWhiteSpace_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.IsNullOrWhiteSpace_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IsNullOrWhiteSpace_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void IsNullOrWhiteSpace_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void IsNullOrWhiteSpace_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_client_new_expression">
      <MemberSignature Language="C#" Value="public virtual void Join_client_new_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_client_new_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_client_new_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_client_new_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Join_client_new_expression : unit -&gt; unit&#xA;override this.Join_client_new_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Join_client_new_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_client_new_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_client_new_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_client_new_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_complex_condition">
      <MemberSignature Language="C#" Value="public virtual void Join_complex_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_complex_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_complex_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_complex_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Join_complex_condition : unit -&gt; unit&#xA;override this.Join_complex_condition : unit -&gt; unit" Usage="simpleQueryTestBase.Join_complex_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_complex_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_complex_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_complex_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Join_composite_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_composite_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_composite_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_composite_key ()" />
      <MemberSignature Language="F#" Value="abstract member Join_composite_key : unit -&gt; unit&#xA;override this.Join_composite_key : unit -&gt; unit" Usage="simpleQueryTestBase.Join_composite_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_composite_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_composite_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_composite_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_entities">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_entities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_entities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_entities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_entities ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_entities : unit -&gt; unit&#xA;override this.Join_customers_orders_entities : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_entities " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_entities();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_entities();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_entities();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_Customers_Orders_Orders_Skip_Take_Same_Properties">
      <MemberSignature Language="C#" Value="public virtual void Join_Customers_Orders_Orders_Skip_Take_Same_Properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_Customers_Orders_Orders_Skip_Take_Same_Properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_Customers_Orders_Orders_Skip_Take_Same_Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_Customers_Orders_Orders_Skip_Take_Same_Properties ()" />
      <MemberSignature Language="F#" Value="abstract member Join_Customers_Orders_Orders_Skip_Take_Same_Properties : unit -&gt; unit&#xA;override this.Join_Customers_Orders_Orders_Skip_Take_Same_Properties : unit -&gt; unit" Usage="simpleQueryTestBase.Join_Customers_Orders_Orders_Skip_Take_Same_Properties " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_Customers_Orders_Orders_Skip_Take_Same_Properties();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_Customers_Orders_Orders_Skip_Take_Same_Properties();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_Customers_Orders_Orders_Skip_Take_Same_Properties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_projection">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_projection : unit -&gt; unit&#xA;override this.Join_customers_orders_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_Customers_Orders_Projection_With_String_Concat_Skip_Take">
      <MemberSignature Language="C#" Value="public virtual void Join_Customers_Orders_Projection_With_String_Concat_Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_Customers_Orders_Projection_With_String_Concat_Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_Customers_Orders_Projection_With_String_Concat_Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_Customers_Orders_Projection_With_String_Concat_Skip_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Join_Customers_Orders_Projection_With_String_Concat_Skip_Take : unit -&gt; unit&#xA;override this.Join_Customers_Orders_Projection_With_String_Concat_Skip_Take : unit -&gt; unit" Usage="simpleQueryTestBase.Join_Customers_Orders_Projection_With_String_Concat_Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_Customers_Orders_Projection_With_String_Concat_Skip_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_Customers_Orders_Projection_With_String_Concat_Skip_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_Customers_Orders_Projection_With_String_Concat_Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_select">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_select ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_select : unit -&gt; unit&#xA;override this.Join_customers_orders_select : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_Customers_Orders_Skip_Take">
      <MemberSignature Language="C#" Value="public virtual void Join_Customers_Orders_Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_Customers_Orders_Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_Customers_Orders_Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_Customers_Orders_Skip_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Join_Customers_Orders_Skip_Take : unit -&gt; unit&#xA;override this.Join_Customers_Orders_Skip_Take : unit -&gt; unit" Usage="simpleQueryTestBase.Join_Customers_Orders_Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_Customers_Orders_Skip_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_Customers_Orders_Skip_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_Customers_Orders_Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_anonymous_property_method">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery_anonymous_property_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery_anonymous_property_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery_anonymous_property_method ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_anonymous_property_method : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery_anonymous_property_method : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery_anonymous_property_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_anonymous_property_method();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_anonymous_property_method();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery_anonymous_property_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_anonymous_property_method_with_take">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery_anonymous_property_method_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery_anonymous_property_method_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery_anonymous_property_method_with_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery_anonymous_property_method_with_take ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_anonymous_property_method_with_take : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery_anonymous_property_method_with_take : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery_anonymous_property_method_with_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_anonymous_property_method_with_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_anonymous_property_method_with_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery_anonymous_property_method_with_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_predicate">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_predicate : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_predicate_with_take">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery_predicate_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery_predicate_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery_predicate_with_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery_predicate_with_take ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_predicate_with_take : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery_predicate_with_take : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery_predicate_with_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_predicate_with_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_predicate_with_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery_predicate_with_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_customers_orders_with_subquery_with_take">
      <MemberSignature Language="C#" Value="public virtual void Join_customers_orders_with_subquery_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_customers_orders_with_subquery_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_customers_orders_with_subquery_with_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_customers_orders_with_subquery_with_take ()" />
      <MemberSignature Language="F#" Value="abstract member Join_customers_orders_with_subquery_with_take : unit -&gt; unit&#xA;override this.Join_customers_orders_with_subquery_with_take : unit -&gt; unit" Usage="simpleQueryTestBase.Join_customers_orders_with_subquery_with_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_with_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_customers_orders_with_subquery_with_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_customers_orders_with_subquery_with_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_GroupJoin_DefaultIfEmpty_Where">
      <MemberSignature Language="C#" Value="public virtual void Join_GroupJoin_DefaultIfEmpty_Where ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_GroupJoin_DefaultIfEmpty_Where() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_GroupJoin_DefaultIfEmpty_Where" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_GroupJoin_DefaultIfEmpty_Where ()" />
      <MemberSignature Language="F#" Value="abstract member Join_GroupJoin_DefaultIfEmpty_Where : unit -&gt; unit&#xA;override this.Join_GroupJoin_DefaultIfEmpty_Where : unit -&gt; unit" Usage="simpleQueryTestBase.Join_GroupJoin_DefaultIfEmpty_Where " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_GroupJoin_DefaultIfEmpty_Where();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_GroupJoin_DefaultIfEmpty_Where();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_GroupJoin_DefaultIfEmpty_Where();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_local_bytes_closure_is_cached_correctly">
      <MemberSignature Language="C#" Value="public virtual void Join_local_bytes_closure_is_cached_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_local_bytes_closure_is_cached_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_local_bytes_closure_is_cached_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_local_bytes_closure_is_cached_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Join_local_bytes_closure_is_cached_correctly : unit -&gt; unit&#xA;override this.Join_local_bytes_closure_is_cached_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Join_local_bytes_closure_is_cached_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_local_bytes_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_local_bytes_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_local_bytes_closure_is_cached_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_local_collection_int_closure_is_cached_correctly">
      <MemberSignature Language="C#" Value="public virtual void Join_local_collection_int_closure_is_cached_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_local_collection_int_closure_is_cached_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_local_collection_int_closure_is_cached_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_local_collection_int_closure_is_cached_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Join_local_collection_int_closure_is_cached_correctly : unit -&gt; unit&#xA;override this.Join_local_collection_int_closure_is_cached_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Join_local_collection_int_closure_is_cached_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_local_collection_int_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_local_collection_int_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_local_collection_int_closure_is_cached_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_local_string_closure_is_cached_correctly">
      <MemberSignature Language="C#" Value="public virtual void Join_local_string_closure_is_cached_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_local_string_closure_is_cached_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_local_string_closure_is_cached_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_local_string_closure_is_cached_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Join_local_string_closure_is_cached_correctly : unit -&gt; unit&#xA;override this.Join_local_string_closure_is_cached_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Join_local_string_closure_is_cached_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_local_string_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_local_string_closure_is_cached_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_local_string_closure_is_cached_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual void Join_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_OrderBy_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Join_OrderBy_Count : unit -&gt; unit&#xA;override this.Join_OrderBy_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Join_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_OrderBy_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_OrderBy_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_same_collection_force_alias_uniquefication">
      <MemberSignature Language="C#" Value="public virtual void Join_same_collection_force_alias_uniquefication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_same_collection_force_alias_uniquefication() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_same_collection_force_alias_uniquefication" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_same_collection_force_alias_uniquefication ()" />
      <MemberSignature Language="F#" Value="abstract member Join_same_collection_force_alias_uniquefication : unit -&gt; unit&#xA;override this.Join_same_collection_force_alias_uniquefication : unit -&gt; unit" Usage="simpleQueryTestBase.Join_same_collection_force_alias_uniquefication " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_same_collection_force_alias_uniquefication();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_same_collection_force_alias_uniquefication();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_same_collection_force_alias_uniquefication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_same_collection_multiple">
      <MemberSignature Language="C#" Value="public virtual void Join_same_collection_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_same_collection_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_same_collection_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_same_collection_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member Join_same_collection_multiple : unit -&gt; unit&#xA;override this.Join_same_collection_multiple : unit -&gt; unit" Usage="simpleQueryTestBase.Join_same_collection_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_same_collection_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_same_collection_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_same_collection_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_select_many">
      <MemberSignature Language="C#" Value="public virtual void Join_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Join_select_many : unit -&gt; unit&#xA;override this.Join_select_many : unit -&gt; unit" Usage="simpleQueryTestBase.Join_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_take_count_works">
      <MemberSignature Language="C#" Value="public virtual void Join_take_count_works ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_take_count_works() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_take_count_works" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_take_count_works ()" />
      <MemberSignature Language="F#" Value="abstract member Join_take_count_works : unit -&gt; unit&#xA;override this.Join_take_count_works : unit -&gt; unit" Usage="simpleQueryTestBase.Join_take_count_works " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_take_count_works();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_take_count_works();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_take_count_works();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_Where_Count">
      <MemberSignature Language="C#" Value="public virtual void Join_Where_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_Where_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Join_Where_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_Where_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Join_Where_Count : unit -&gt; unit&#xA;override this.Join_Where_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Join_Where_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_Where_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_Where_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_Where_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public virtual void Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Last" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Last ()" />
      <MemberSignature Language="F#" Value="abstract member Last : unit -&gt; unit&#xA;override this.Last : unit -&gt; unit" Usage="simpleQueryTestBase.Last " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Last();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Last();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Last();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_Predicate">
      <MemberSignature Language="C#" Value="public virtual void Last_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Last_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Last_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Last_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Last_Predicate : unit -&gt; unit&#xA;override this.Last_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Last_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Last_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Last_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Last_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_when_no_order_by">
      <MemberSignature Language="C#" Value="public virtual void Last_when_no_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Last_when_no_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Last_when_no_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Last_when_no_order_by ()" />
      <MemberSignature Language="F#" Value="abstract member Last_when_no_order_by : unit -&gt; unit&#xA;override this.Last_when_no_order_by : unit -&gt; unit" Usage="simpleQueryTestBase.Last_when_no_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Last_when_no_order_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Last_when_no_order_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Last_when_no_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault">
      <MemberSignature Language="C#" Value="public virtual void LastOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LastOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.LastOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LastOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member LastOrDefault : unit -&gt; unit&#xA;override this.LastOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.LastOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LastOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void LastOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void LastOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual void LastOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LastOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.LastOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LastOrDefault_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member LastOrDefault_Predicate : unit -&gt; unit&#xA;override this.LastOrDefault_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.LastOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LastOrDefault_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void LastOrDefault_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void LastOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Let_any_subquery_anonymous">
      <MemberSignature Language="C#" Value="public virtual void Let_any_subquery_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Let_any_subquery_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Let_any_subquery_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Let_any_subquery_anonymous ()" />
      <MemberSignature Language="F#" Value="abstract member Let_any_subquery_anonymous : unit -&gt; unit&#xA;override this.Let_any_subquery_anonymous : unit -&gt; unit" Usage="simpleQueryTestBase.Let_any_subquery_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Let_any_subquery_anonymous();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Let_any_subquery_anonymous();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Let_any_subquery_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lifting_when_subquery_nested_order_by_anonymous">
      <MemberSignature Language="C#" Value="public virtual void Lifting_when_subquery_nested_order_by_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lifting_when_subquery_nested_order_by_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Lifting_when_subquery_nested_order_by_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lifting_when_subquery_nested_order_by_anonymous ()" />
      <MemberSignature Language="F#" Value="abstract member Lifting_when_subquery_nested_order_by_anonymous : unit -&gt; unit&#xA;override this.Lifting_when_subquery_nested_order_by_anonymous : unit -&gt; unit" Usage="simpleQueryTestBase.Lifting_when_subquery_nested_order_by_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lifting_when_subquery_nested_order_by_anonymous();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lifting_when_subquery_nested_order_by_anonymous();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lifting_when_subquery_nested_order_by_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lifting_when_subquery_nested_order_by_simple">
      <MemberSignature Language="C#" Value="public virtual void Lifting_when_subquery_nested_order_by_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lifting_when_subquery_nested_order_by_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Lifting_when_subquery_nested_order_by_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lifting_when_subquery_nested_order_by_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Lifting_when_subquery_nested_order_by_simple : unit -&gt; unit&#xA;override this.Lifting_when_subquery_nested_order_by_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Lifting_when_subquery_nested_order_by_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lifting_when_subquery_nested_order_by_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lifting_when_subquery_nested_order_by_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lifting_when_subquery_nested_order_by_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Local_array">
      <MemberSignature Language="C#" Value="public virtual void Local_array ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Local_array() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Local_array" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Local_array ()" />
      <MemberSignature Language="F#" Value="abstract member Local_array : unit -&gt; unit&#xA;override this.Local_array : unit -&gt; unit" Usage="simpleQueryTestBase.Local_array " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Local_array();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Local_array();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Local_array();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalMethod1">
      <MemberSignature Language="C#" Value="protected static string LocalMethod1 ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string LocalMethod1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.LocalMethod1" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function LocalMethod1 () As String" />
      <MemberSignature Language="F#" Value="static member LocalMethod1 : unit -&gt; string" Usage="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LocalMethod1 " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ LocalMethod1();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; static Platform::String ^ LocalMethod1();" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LocalMethod1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalMethod2">
      <MemberSignature Language="C#" Value="protected static string LocalMethod2 ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string LocalMethod2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.LocalMethod2" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function LocalMethod2 () As String" />
      <MemberSignature Language="F#" Value="static member LocalMethod2 : unit -&gt; string" Usage="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LocalMethod2 " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ LocalMethod2();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; static Platform::String ^ LocalMethod2();" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LocalMethod2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manual_expression_tree_typed_null_equality">
      <MemberSignature Language="C#" Value="public virtual void Manual_expression_tree_typed_null_equality ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Manual_expression_tree_typed_null_equality() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Manual_expression_tree_typed_null_equality" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Manual_expression_tree_typed_null_equality ()" />
      <MemberSignature Language="F#" Value="abstract member Manual_expression_tree_typed_null_equality : unit -&gt; unit&#xA;override this.Manual_expression_tree_typed_null_equality : unit -&gt; unit" Usage="simpleQueryTestBase.Manual_expression_tree_typed_null_equality " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Manual_expression_tree_typed_null_equality();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Manual_expression_tree_typed_null_equality();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Manual_expression_tree_typed_null_equality();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_no_data">
      <MemberSignature Language="C#" Value="public virtual void Max_no_data ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_no_data() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_no_data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_no_data ()" />
      <MemberSignature Language="F#" Value="abstract member Max_no_data : unit -&gt; unit&#xA;override this.Max_no_data : unit -&gt; unit" Usage="simpleQueryTestBase.Max_no_data " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_no_data();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_no_data();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_no_data();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_no_data_subquery">
      <MemberSignature Language="C#" Value="public virtual void Max_no_data_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_no_data_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_no_data_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_no_data_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Max_no_data_subquery : unit -&gt; unit&#xA;override this.Max_no_data_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Max_no_data_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_no_data_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_no_data_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_no_data_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Max_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_over_subquery_is_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Max_over_subquery_is_client_eval : unit -&gt; unit&#xA;override this.Max_over_subquery_is_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Max_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_arg">
      <MemberSignature Language="C#" Value="public virtual void Max_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_with_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Max_with_arg : unit -&gt; unit&#xA;override this.Max_with_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Max_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_with_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_with_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual void Max_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_with_coalesce ()" />
      <MemberSignature Language="F#" Value="abstract member Max_with_coalesce : unit -&gt; unit&#xA;override this.Max_with_coalesce : unit -&gt; unit" Usage="simpleQueryTestBase.Max_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_with_coalesce();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_with_coalesce();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual void Max_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_with_no_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Max_with_no_arg : unit -&gt; unit&#xA;override this.Max_with_no_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Max_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_with_no_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_with_no_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max_with_non_matching_types_in_projection_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Max_with_non_matching_types_in_projection_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Max_with_non_matching_types_in_projection_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Max_with_non_matching_types_in_projection_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Max_with_non_matching_types_in_projection_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Max_with_non_matching_types_in_projection_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Max_with_non_matching_types_in_projection_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Max_with_non_matching_types_in_projection_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Max_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Max_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Max_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method_with_constant_queryable_arg">
      <MemberSignature Language="C#" Value="public virtual void Method_with_constant_queryable_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Method_with_constant_queryable_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Method_with_constant_queryable_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Method_with_constant_queryable_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Method_with_constant_queryable_arg : unit -&gt; unit&#xA;override this.Method_with_constant_queryable_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Method_with_constant_queryable_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Method_with_constant_queryable_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Method_with_constant_queryable_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Method_with_constant_queryable_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_no_data">
      <MemberSignature Language="C#" Value="public virtual void Min_no_data ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_no_data() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_no_data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_no_data ()" />
      <MemberSignature Language="F#" Value="abstract member Min_no_data : unit -&gt; unit&#xA;override this.Min_no_data : unit -&gt; unit" Usage="simpleQueryTestBase.Min_no_data " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_no_data();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_no_data();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_no_data();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_no_data_subquery">
      <MemberSignature Language="C#" Value="public virtual void Min_no_data_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_no_data_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_no_data_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_no_data_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Min_no_data_subquery : unit -&gt; unit&#xA;override this.Min_no_data_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Min_no_data_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_no_data_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_no_data_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_no_data_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Min_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_over_subquery_is_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Min_over_subquery_is_client_eval : unit -&gt; unit&#xA;override this.Min_over_subquery_is_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Min_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_arg">
      <MemberSignature Language="C#" Value="public virtual void Min_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_with_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Min_with_arg : unit -&gt; unit&#xA;override this.Min_with_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Min_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_with_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_with_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual void Min_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_with_coalesce ()" />
      <MemberSignature Language="F#" Value="abstract member Min_with_coalesce : unit -&gt; unit&#xA;override this.Min_with_coalesce : unit -&gt; unit" Usage="simpleQueryTestBase.Min_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_with_coalesce();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_with_coalesce();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual void Min_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_with_no_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Min_with_no_arg : unit -&gt; unit&#xA;override this.Min_with_no_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Min_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_with_no_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_with_no_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min_with_non_matching_types_in_projection_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Min_with_non_matching_types_in_projection_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Min_with_non_matching_types_in_projection_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Min_with_non_matching_types_in_projection_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Min_with_non_matching_types_in_projection_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Min_with_non_matching_types_in_projection_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Min_with_non_matching_types_in_projection_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Min_with_non_matching_types_in_projection_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Min_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Min_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Min_with_non_matching_types_in_projection_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_joins_Where_Order_Any">
      <MemberSignature Language="C#" Value="public virtual void Multiple_joins_Where_Order_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_joins_Where_Order_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Multiple_joins_Where_Order_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_joins_Where_Order_Any ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_joins_Where_Order_Any : unit -&gt; unit&#xA;override this.Multiple_joins_Where_Order_Any : unit -&gt; unit" Usage="simpleQueryTestBase.Multiple_joins_Where_Order_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_joins_Where_Order_Any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_joins_Where_Order_Any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_joins_Where_Order_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="New_date_time_in_anonymous_type_works">
      <MemberSignature Language="C#" Value="public virtual void New_date_time_in_anonymous_type_works ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void New_date_time_in_anonymous_type_works() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.New_date_time_in_anonymous_type_works" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub New_date_time_in_anonymous_type_works ()" />
      <MemberSignature Language="F#" Value="abstract member New_date_time_in_anonymous_type_works : unit -&gt; unit&#xA;override this.New_date_time_in_anonymous_type_works : unit -&gt; unit" Usage="simpleQueryTestBase.New_date_time_in_anonymous_type_works " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void New_date_time_in_anonymous_type_works();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void New_date_time_in_anonymous_type_works();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void New_date_time_in_anonymous_type_works();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ">
      <MemberSignature Language="C#" Value="public virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ ()" />
      <MemberSignature Language="F#" Value="abstract member No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ : unit -&gt; unit&#xA;override this.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ : unit -&gt; unit" Usage="simpleQueryTestBase.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1">
      <MemberSignature Language="C#" Value="public virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1 ()" />
      <MemberSignature Language="F#" Value="abstract member No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1 : unit -&gt; unit&#xA;override this.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1 : unit -&gt; unit" Usage="simpleQueryTestBase.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2">
      <MemberSignature Language="C#" Value="public virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2 ()" />
      <MemberSignature Language="F#" Value="abstract member No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2 : unit -&gt; unit&#xA;override this.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2 : unit -&gt; unit" Usage="simpleQueryTestBase.No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void No_orderby_added_for_client_side_GroupJoin_dependent_to_principal_LOJ_with_additional_join_condition2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="No_orderby_added_for_fully_translated_manually_constructed_LOJ">
      <MemberSignature Language="C#" Value="public virtual void No_orderby_added_for_fully_translated_manually_constructed_LOJ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void No_orderby_added_for_fully_translated_manually_constructed_LOJ() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.No_orderby_added_for_fully_translated_manually_constructed_LOJ" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub No_orderby_added_for_fully_translated_manually_constructed_LOJ ()" />
      <MemberSignature Language="F#" Value="abstract member No_orderby_added_for_fully_translated_manually_constructed_LOJ : unit -&gt; unit&#xA;override this.No_orderby_added_for_fully_translated_manually_constructed_LOJ : unit -&gt; unit" Usage="simpleQueryTestBase.No_orderby_added_for_fully_translated_manually_constructed_LOJ " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void No_orderby_added_for_fully_translated_manually_constructed_LOJ();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void No_orderby_added_for_fully_translated_manually_constructed_LOJ();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void No_orderby_added_for_fully_translated_manually_constructed_LOJ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonExistentID">
      <MemberSignature Language="C#" Value="protected const uint NonExistentID;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal unsigned int32 NonExistentID" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.NonExistentID" />
      <MemberSignature Language="VB.NET" Value="Protected Const NonExistentID As UInteger " />
      <MemberSignature Language="F#" Value="val mutable NonExistentID : uint32" Usage="Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.NonExistentID" />
      <MemberSignature Language="C++ CLI" Value="protected: System::UInt32 NonExistentID;" />
      <MemberSignature Language="C++ CX" Value="protected: unsigned int NonExistentID;" />
      <MemberSignature Language="C++ WINRT" Value="unsigned int NonExistentID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_conditional_deep">
      <MemberSignature Language="C#" Value="public virtual void Null_conditional_deep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_conditional_deep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Null_conditional_deep" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_conditional_deep ()" />
      <MemberSignature Language="F#" Value="abstract member Null_conditional_deep : unit -&gt; unit&#xA;override this.Null_conditional_deep : unit -&gt; unit" Usage="simpleQueryTestBase.Null_conditional_deep " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_conditional_deep();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_conditional_deep();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_conditional_deep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_conditional_simple">
      <MemberSignature Language="C#" Value="public virtual void Null_conditional_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_conditional_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Null_conditional_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_conditional_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Null_conditional_simple : unit -&gt; unit&#xA;override this.Null_conditional_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Null_conditional_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_conditional_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_conditional_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_conditional_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfType_Select">
      <MemberSignature Language="C#" Value="public virtual void OfType_Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OfType_Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OfType_Select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OfType_Select ()" />
      <MemberSignature Language="F#" Value="abstract member OfType_Select : unit -&gt; unit&#xA;override this.OfType_Select : unit -&gt; unit" Usage="simpleQueryTestBase.OfType_Select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OfType_Select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OfType_Select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OfType_Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfType_Select_OfType_Select">
      <MemberSignature Language="C#" Value="public virtual void OfType_Select_OfType_Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OfType_Select_OfType_Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OfType_Select_OfType_Select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OfType_Select_OfType_Select ()" />
      <MemberSignature Language="F#" Value="abstract member OfType_Select_OfType_Select : unit -&gt; unit&#xA;override this.OfType_Select_OfType_Select : unit -&gt; unit" Usage="simpleQueryTestBase.OfType_Select_OfType_Select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OfType_Select_OfType_Select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OfType_Select_OfType_Select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OfType_Select_OfType_Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_length_twice">
      <MemberSignature Language="C#" Value="public virtual void Order_by_length_twice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_length_twice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Order_by_length_twice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_length_twice ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_length_twice : unit -&gt; unit&#xA;override this.Order_by_length_twice : unit -&gt; unit" Usage="simpleQueryTestBase.Order_by_length_twice " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_length_twice();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_length_twice();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_length_twice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public virtual void OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy : unit -&gt; unit&#xA;override this.OrderBy : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ">
      <MemberSignature Language="C#" Value="public virtual void Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ ()" />
      <MemberSignature Language="F#" Value="abstract member Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ : unit -&gt; unit&#xA;override this.Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ : unit -&gt; unit" Usage="simpleQueryTestBase.Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Orderby_added_for_client_side_GroupJoin_principal_to_dependent_LOJ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_anon">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_anon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_anon() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_anon" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_anon ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_anon : unit -&gt; unit&#xA;override this.OrderBy_anon : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_anon " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_anon();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_anon();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_anon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_anon2">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_anon2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_anon2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_anon2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_anon2 ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_anon2 : unit -&gt; unit&#xA;override this.OrderBy_anon2 : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_anon2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_anon2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_anon2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_anon2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_any">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_any ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_any : unit -&gt; unit&#xA;override this.OrderBy_any : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_arithmetic">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_arithmetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_arithmetic() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_arithmetic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_arithmetic ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_arithmetic : unit -&gt; unit&#xA;override this.OrderBy_arithmetic : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_arithmetic " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_arithmetic();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_arithmetic();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_arithmetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_client_mixed">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_client_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_client_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_client_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_client_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_client_mixed : unit -&gt; unit&#xA;override this.OrderBy_client_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_client_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_client_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_client_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_client_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_client_Take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_client_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_client_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_client_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_client_Take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_client_Take : unit -&gt; unit&#xA;override this.OrderBy_client_Take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_client_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_client_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_client_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_client_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_coalesce_skip_take_distinct">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_coalesce_skip_take_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_coalesce_skip_take_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_coalesce_skip_take_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_coalesce_skip_take_distinct ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_coalesce_skip_take_distinct : unit -&gt; unit&#xA;override this.OrderBy_coalesce_skip_take_distinct : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_coalesce_skip_take_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_coalesce_skip_take_distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_coalesce_skip_take_distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_coalesce_skip_take_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_coalesce_skip_take_distinct_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_coalesce_skip_take_distinct_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_coalesce_skip_take_distinct_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_coalesce_skip_take_distinct_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_coalesce_skip_take_distinct_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_coalesce_skip_take_distinct_take : unit -&gt; unit&#xA;override this.OrderBy_coalesce_skip_take_distinct_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_coalesce_skip_take_distinct_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_coalesce_skip_take_distinct_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_coalesce_skip_take_distinct_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_coalesce_skip_take_distinct_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_coalesce_take_distinct">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_coalesce_take_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_coalesce_take_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_coalesce_take_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_coalesce_take_distinct ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_coalesce_take_distinct : unit -&gt; unit&#xA;override this.OrderBy_coalesce_take_distinct : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_coalesce_take_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_coalesce_take_distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_coalesce_take_distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_coalesce_take_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_comparison_operator">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_comparison_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_comparison_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_comparison_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_comparison_operator ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_comparison_operator : unit -&gt; unit&#xA;override this.OrderBy_comparison_operator : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_comparison_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_comparison_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_comparison_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_comparison_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_condition_comparison">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_condition_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_condition_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_condition_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_condition_comparison ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_condition_comparison : unit -&gt; unit&#xA;override this.OrderBy_condition_comparison : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_condition_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_condition_comparison();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_condition_comparison();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_condition_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_conditional_operator">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_conditional_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_conditional_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_conditional_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_conditional_operator ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_conditional_operator : unit -&gt; unit&#xA;override this.OrderBy_conditional_operator : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_conditional_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_conditional_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_conditional_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_conditional_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_conditional_operator_where_condition_null">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_conditional_operator_where_condition_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_conditional_operator_where_condition_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_conditional_operator_where_condition_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_conditional_operator_where_condition_null ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_conditional_operator_where_condition_null : unit -&gt; unit&#xA;override this.OrderBy_conditional_operator_where_condition_null : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_conditional_operator_where_condition_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_conditional_operator_where_condition_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_conditional_operator_where_condition_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_conditional_operator_where_condition_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_correlated_subquery1">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_correlated_subquery1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_correlated_subquery1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_correlated_subquery1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_correlated_subquery1 ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_correlated_subquery1 : unit -&gt; unit&#xA;override this.OrderBy_correlated_subquery1 : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_correlated_subquery1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_correlated_subquery1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_correlated_subquery1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_correlated_subquery1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_correlated_subquery2">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_correlated_subquery2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_correlated_subquery2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_correlated_subquery2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_correlated_subquery2 ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_correlated_subquery2 : unit -&gt; unit&#xA;override this.OrderBy_correlated_subquery2 : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_correlated_subquery2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_correlated_subquery2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_correlated_subquery2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_correlated_subquery2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Count_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate : unit -&gt; unit&#xA;override this.OrderBy_Count_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Count_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Count_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate_client_eval">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Count_with_predicate_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Count_with_predicate_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Count_with_predicate_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Count_with_predicate_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate_client_eval : unit -&gt; unit&#xA;override this.OrderBy_Count_with_predicate_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Count_with_predicate_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Count_with_predicate_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Count_with_predicate_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Count_with_predicate_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Count_with_predicate_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Count_with_predicate_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Count_with_predicate_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Count_with_predicate_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Count_with_predicate_client_eval_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Count_with_predicate_client_eval_mixed : unit -&gt; unit&#xA;override this.OrderBy_Count_with_predicate_client_eval_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Count_with_predicate_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Count_with_predicate_client_eval_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Count_with_predicate_client_eval_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Count_with_predicate_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Distinct">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Distinct : unit -&gt; unit&#xA;override this.OrderBy_Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Dto_projection_skip_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Dto_projection_skip_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Dto_projection_skip_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Dto_projection_skip_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Dto_projection_skip_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Dto_projection_skip_take : unit -&gt; unit&#xA;override this.OrderBy_Dto_projection_skip_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Dto_projection_skip_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Dto_projection_skip_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Dto_projection_skip_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Dto_projection_skip_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_empty_list_contains">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_empty_list_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_empty_list_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_empty_list_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_empty_list_contains ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_empty_list_contains : unit -&gt; unit&#xA;override this.OrderBy_empty_list_contains : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_empty_list_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_empty_list_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_empty_list_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_empty_list_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_empty_list_does_not_contains">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_empty_list_does_not_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_empty_list_does_not_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_empty_list_does_not_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_empty_list_does_not_contains ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_empty_list_does_not_contains : unit -&gt; unit&#xA;override this.OrderBy_empty_list_does_not_contains : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_empty_list_does_not_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_empty_list_does_not_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_empty_list_does_not_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_empty_list_does_not_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_integer">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_integer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_integer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_integer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_integer ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_integer : unit -&gt; unit&#xA;override this.OrderBy_integer : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_integer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_integer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_integer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_integer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Join">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Join ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Join : unit -&gt; unit&#xA;override this.OrderBy_Join : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_multiple">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_multiple : unit -&gt; unit&#xA;override this.OrderBy_multiple : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_multiple_queries">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_multiple_queries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_multiple_queries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_multiple_queries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_multiple_queries ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_multiple_queries : unit -&gt; unit&#xA;override this.OrderBy_multiple_queries : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_multiple_queries " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_multiple_queries();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_multiple_queries();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_multiple_queries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_null_coalesce_operator : unit -&gt; unit&#xA;override this.OrderBy_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_OrderBy_same_column_different_direction">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_OrderBy_same_column_different_direction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_OrderBy_same_column_different_direction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_OrderBy_same_column_different_direction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_OrderBy_same_column_different_direction ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_OrderBy_same_column_different_direction : unit -&gt; unit&#xA;override this.OrderBy_OrderBy_same_column_different_direction : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_OrderBy_same_column_different_direction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_OrderBy_same_column_different_direction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_OrderBy_same_column_different_direction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_OrderBy_same_column_different_direction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_parameter">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_parameter : unit -&gt; unit&#xA;override this.OrderBy_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_scalar_primitive">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_scalar_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_scalar_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_scalar_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_scalar_primitive ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_scalar_primitive : unit -&gt; unit&#xA;override this.OrderBy_scalar_primitive : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_scalar_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_scalar_primitive();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_scalar_primitive();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_scalar_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Select">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Select ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Select : unit -&gt; unit&#xA;override this.OrderBy_Select : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_SelectMany">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_SelectMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_SelectMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_SelectMany" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_SelectMany ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_SelectMany : unit -&gt; unit&#xA;override this.OrderBy_SelectMany : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_SelectMany " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_SelectMany();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_SelectMany();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_SelectMany();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_shadow">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_shadow : unit -&gt; unit&#xA;override this.OrderBy_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Skip_Last_gives_correct_result">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Skip_Last_gives_correct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Skip_Last_gives_correct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Skip_Last_gives_correct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Skip_Last_gives_correct_result ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Skip_Last_gives_correct_result : unit -&gt; unit&#xA;override this.OrderBy_Skip_Last_gives_correct_result : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Skip_Last_gives_correct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Skip_Last_gives_correct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Skip_Last_gives_correct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Skip_Last_gives_correct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_skip_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_skip_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_skip_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_skip_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_skip_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_skip_take : unit -&gt; unit&#xA;override this.OrderBy_skip_skip_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_skip_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_skip_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_skip_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_skip_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take : unit -&gt; unit&#xA;override this.OrderBy_skip_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take_distinct">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take_distinct ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take_distinct : unit -&gt; unit&#xA;override this.OrderBy_skip_take_distinct : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take_distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take_distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take_distinct_orderby_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take_distinct_orderby_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take_distinct_orderby_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take_distinct_orderby_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take_distinct_orderby_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take_distinct_orderby_take : unit -&gt; unit&#xA;override this.OrderBy_skip_take_distinct_orderby_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take_distinct_orderby_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take_distinct_orderby_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take_distinct_orderby_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take_distinct_orderby_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take_skip_take_skip">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take_skip_take_skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take_skip_take_skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take_skip_take_skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take_skip_take_skip ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take_skip_take_skip : unit -&gt; unit&#xA;override this.OrderBy_skip_take_skip_take_skip : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take_skip_take_skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take_skip_take_skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take_skip_take_skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take_skip_take_skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take_take : unit -&gt; unit&#xA;override this.OrderBy_skip_take_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_skip_take_take_take_take">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_skip_take_take_take_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_skip_take_take_take_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_skip_take_take_take_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_skip_take_take_take_take ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_skip_take_take_take_take : unit -&gt; unit&#xA;override this.OrderBy_skip_take_take_take_take : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_skip_take_take_take_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_skip_take_take_take_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_skip_take_take_take_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_skip_take_take_take_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Take_Count">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Take_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Take_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Take_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Take_Count ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Take_Count : unit -&gt; unit&#xA;override this.OrderBy_Take_Count : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Take_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Take_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Take_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Take_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Take_Last_gives_correct_result">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Take_Last_gives_correct_result ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Take_Last_gives_correct_result() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Take_Last_gives_correct_result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Take_Last_gives_correct_result ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Take_Last_gives_correct_result : unit -&gt; unit&#xA;override this.OrderBy_Take_Last_gives_correct_result : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Take_Last_gives_correct_result " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Take_Last_gives_correct_result();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Take_Last_gives_correct_result();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Take_Last_gives_correct_result();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ternary_conditions">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_ternary_conditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_ternary_conditions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_ternary_conditions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_ternary_conditions ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ternary_conditions : unit -&gt; unit&#xA;override this.OrderBy_ternary_conditions : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_ternary_conditions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_ternary_conditions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_ternary_conditions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_ternary_conditions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_ThenBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_ThenBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_ThenBy ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy : unit -&gt; unit&#xA;override this.OrderBy_ThenBy : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_ThenBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_ThenBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_ThenBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_ThenBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy_Any">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_ThenBy_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_ThenBy_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_ThenBy_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_ThenBy_Any ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy_Any : unit -&gt; unit&#xA;override this.OrderBy_ThenBy_Any : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_ThenBy_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_ThenBy_Any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_ThenBy_Any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_ThenBy_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy_predicate">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_ThenBy_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_ThenBy_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_ThenBy_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_ThenBy_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy_predicate : unit -&gt; unit&#xA;override this.OrderBy_ThenBy_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_ThenBy_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_ThenBy_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_ThenBy_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_ThenBy_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_ThenBy_same_column_different_direction">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_ThenBy_same_column_different_direction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_ThenBy_same_column_different_direction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_ThenBy_same_column_different_direction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_ThenBy_same_column_different_direction ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_ThenBy_same_column_different_direction : unit -&gt; unit&#xA;override this.OrderBy_ThenBy_same_column_different_direction : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_ThenBy_same_column_different_direction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_ThenBy_same_column_different_direction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_ThenBy_same_column_different_direction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_ThenBy_same_column_different_direction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_true">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_true ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_true : unit -&gt; unit&#xA;override this.OrderBy_true : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_true();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_true();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count : unit -&gt; unit&#xA;override this.OrderBy_Where_Count : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_client_eval">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_client_eval : unit -&gt; unit&#xA;override this.OrderBy_Where_Count_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count_client_eval_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_client_eval_mixed : unit -&gt; unit&#xA;override this.OrderBy_Where_Count_client_eval_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count_client_eval_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count_client_eval_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate : unit -&gt; unit&#xA;override this.OrderBy_Where_Count_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate_client_eval">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count_with_predicate_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count_with_predicate_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count_with_predicate_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate_client_eval : unit -&gt; unit&#xA;override this.OrderBy_Where_Count_with_predicate_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count_with_predicate_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count_with_predicate_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_Where_Count_with_predicate_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_Where_Count_with_predicate_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_Where_Count_with_predicate_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderBy_Where_Count_with_predicate_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_Where_Count_with_predicate_client_eval_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_Where_Count_with_predicate_client_eval_mixed : unit -&gt; unit&#xA;override this.OrderBy_Where_Count_with_predicate_client_eval_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.OrderBy_Where_Count_with_predicate_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate_client_eval_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_Where_Count_with_predicate_client_eval_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_Where_Count_with_predicate_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public virtual void OrderByDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderByDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderByDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderByDescending ()" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending : unit -&gt; unit&#xA;override this.OrderByDescending : unit -&gt; unit" Usage="simpleQueryTestBase.OrderByDescending " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderByDescending();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderByDescending();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderByDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending_ThenBy">
      <MemberSignature Language="C#" Value="public virtual void OrderByDescending_ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderByDescending_ThenBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderByDescending_ThenBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderByDescending_ThenBy ()" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending_ThenBy : unit -&gt; unit&#xA;override this.OrderByDescending_ThenBy : unit -&gt; unit" Usage="simpleQueryTestBase.OrderByDescending_ThenBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderByDescending_ThenBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderByDescending_ThenBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderByDescending_ThenBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending_ThenByDescending">
      <MemberSignature Language="C#" Value="public virtual void OrderByDescending_ThenByDescending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderByDescending_ThenByDescending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.OrderByDescending_ThenByDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderByDescending_ThenByDescending ()" />
      <MemberSignature Language="F#" Value="abstract member OrderByDescending_ThenByDescending : unit -&gt; unit&#xA;override this.OrderByDescending_ThenByDescending : unit -&gt; unit" Usage="simpleQueryTestBase.OrderByDescending_ThenByDescending " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderByDescending_ThenByDescending();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderByDescending_ThenByDescending();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderByDescending_ThenByDescending();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paging_operation_on_string_doesnt_issue_warning">
      <MemberSignature Language="C#" Value="public virtual void Paging_operation_on_string_doesnt_issue_warning ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paging_operation_on_string_doesnt_issue_warning() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Paging_operation_on_string_doesnt_issue_warning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Paging_operation_on_string_doesnt_issue_warning ()" />
      <MemberSignature Language="F#" Value="abstract member Paging_operation_on_string_doesnt_issue_warning : unit -&gt; unit&#xA;override this.Paging_operation_on_string_doesnt_issue_warning : unit -&gt; unit" Usage="simpleQueryTestBase.Paging_operation_on_string_doesnt_issue_warning " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Paging_operation_on_string_doesnt_issue_warning();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Paging_operation_on_string_doesnt_issue_warning();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Paging_operation_on_string_doesnt_issue_warning();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter_extraction_can_throw_exception_from_user_code">
      <MemberSignature Language="C#" Value="public virtual void Parameter_extraction_can_throw_exception_from_user_code ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parameter_extraction_can_throw_exception_from_user_code() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Parameter_extraction_can_throw_exception_from_user_code" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parameter_extraction_can_throw_exception_from_user_code ()" />
      <MemberSignature Language="F#" Value="abstract member Parameter_extraction_can_throw_exception_from_user_code : unit -&gt; unit&#xA;override this.Parameter_extraction_can_throw_exception_from_user_code : unit -&gt; unit" Usage="simpleQueryTestBase.Parameter_extraction_can_throw_exception_from_user_code " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parameter_extraction_can_throw_exception_from_user_code();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Parameter_extraction_can_throw_exception_from_user_code();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Parameter_extraction_can_throw_exception_from_user_code();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter_extraction_can_throw_exception_from_user_code_2">
      <MemberSignature Language="C#" Value="public virtual void Parameter_extraction_can_throw_exception_from_user_code_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parameter_extraction_can_throw_exception_from_user_code_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Parameter_extraction_can_throw_exception_from_user_code_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parameter_extraction_can_throw_exception_from_user_code_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Parameter_extraction_can_throw_exception_from_user_code_2 : unit -&gt; unit&#xA;override this.Parameter_extraction_can_throw_exception_from_user_code_2 : unit -&gt; unit" Usage="simpleQueryTestBase.Parameter_extraction_can_throw_exception_from_user_code_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parameter_extraction_can_throw_exception_from_user_code_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Parameter_extraction_can_throw_exception_from_user_code_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Parameter_extraction_can_throw_exception_from_user_code_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter_extraction_short_circuits_1">
      <MemberSignature Language="C#" Value="public virtual void Parameter_extraction_short_circuits_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parameter_extraction_short_circuits_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Parameter_extraction_short_circuits_1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parameter_extraction_short_circuits_1 ()" />
      <MemberSignature Language="F#" Value="abstract member Parameter_extraction_short_circuits_1 : unit -&gt; unit&#xA;override this.Parameter_extraction_short_circuits_1 : unit -&gt; unit" Usage="simpleQueryTestBase.Parameter_extraction_short_circuits_1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Parameter_extraction_short_circuits_1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter_extraction_short_circuits_2">
      <MemberSignature Language="C#" Value="public virtual void Parameter_extraction_short_circuits_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parameter_extraction_short_circuits_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Parameter_extraction_short_circuits_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parameter_extraction_short_circuits_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Parameter_extraction_short_circuits_2 : unit -&gt; unit&#xA;override this.Parameter_extraction_short_circuits_2 : unit -&gt; unit" Usage="simpleQueryTestBase.Parameter_extraction_short_circuits_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Parameter_extraction_short_circuits_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter_extraction_short_circuits_3">
      <MemberSignature Language="C#" Value="public virtual void Parameter_extraction_short_circuits_3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parameter_extraction_short_circuits_3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Parameter_extraction_short_circuits_3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parameter_extraction_short_circuits_3 ()" />
      <MemberSignature Language="F#" Value="abstract member Parameter_extraction_short_circuits_3 : unit -&gt; unit&#xA;override this.Parameter_extraction_short_circuits_3 : unit -&gt; unit" Usage="simpleQueryTestBase.Parameter_extraction_short_circuits_3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Parameter_extraction_short_circuits_3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Parameter_extraction_short_circuits_3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_constant_Sum">
      <MemberSignature Language="C#" Value="public virtual void Project_constant_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_constant_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_constant_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_constant_Sum ()" />
      <MemberSignature Language="F#" Value="abstract member Project_constant_Sum : unit -&gt; unit&#xA;override this.Project_constant_Sum : unit -&gt; unit" Usage="simpleQueryTestBase.Project_constant_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_constant_Sum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_constant_Sum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_constant_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2 : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2 : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_multiple_OrderBys_Take_and_FirstOrDefault_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_Distinct_and_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2 : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2 : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_over_navigation_Take_and_FirstOrDefault_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_Skip_and_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_Take_and_FirstOrDefault_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault : unit -&gt; unit&#xA;override this.Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_single_element_from_collection_with_OrderBy_Take_and_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_to_int_array">
      <MemberSignature Language="C#" Value="public virtual void Project_to_int_array ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_to_int_array() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_to_int_array" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_to_int_array ()" />
      <MemberSignature Language="F#" Value="abstract member Project_to_int_array : unit -&gt; unit&#xA;override this.Project_to_int_array : unit -&gt; unit" Usage="simpleQueryTestBase.Project_to_int_array " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_to_int_array();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_to_int_array();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_to_int_array();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_to_object_array">
      <MemberSignature Language="C#" Value="public virtual void Project_to_object_array ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_to_object_array() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Project_to_object_array" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_to_object_array ()" />
      <MemberSignature Language="F#" Value="abstract member Project_to_object_array : unit -&gt; unit&#xA;override this.Project_to_object_array : unit -&gt; unit" Usage="simpleQueryTestBase.Project_to_object_array " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_to_object_array();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_to_object_array();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_to_object_array();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_containing_DateTime_subtraction">
      <MemberSignature Language="C#" Value="public virtual void Projection_containing_DateTime_subtraction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_containing_DateTime_subtraction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_containing_DateTime_subtraction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_containing_DateTime_subtraction ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_containing_DateTime_subtraction : unit -&gt; unit&#xA;override this.Projection_containing_DateTime_subtraction : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_containing_DateTime_subtraction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_containing_DateTime_subtraction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_containing_DateTime_subtraction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_containing_DateTime_subtraction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_in_a_subquery_should_be_liftable">
      <MemberSignature Language="C#" Value="public virtual void Projection_in_a_subquery_should_be_liftable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_in_a_subquery_should_be_liftable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_in_a_subquery_should_be_liftable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_in_a_subquery_should_be_liftable ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_in_a_subquery_should_be_liftable : unit -&gt; unit&#xA;override this.Projection_in_a_subquery_should_be_liftable : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_in_a_subquery_should_be_liftable " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_in_a_subquery_should_be_liftable();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_in_a_subquery_should_be_liftable();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_in_a_subquery_should_be_liftable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Projection_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_null_coalesce_operator : unit -&gt; unit&#xA;override this.Projection_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_expression_precendence">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_arithmetic_expression_precendence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_arithmetic_expression_precendence() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_arithmetic_expression_precendence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_arithmetic_expression_precendence ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_expression_precendence : unit -&gt; unit&#xA;override this.Projection_when_arithmetic_expression_precendence : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_arithmetic_expression_precendence " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_arithmetic_expression_precendence();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_arithmetic_expression_precendence();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_arithmetic_expression_precendence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_expressions">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_arithmetic_expressions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_arithmetic_expressions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_arithmetic_expressions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_arithmetic_expressions ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_expressions : unit -&gt; unit&#xA;override this.Projection_when_arithmetic_expressions : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_arithmetic_expressions " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_arithmetic_expressions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_arithmetic_expressions();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_arithmetic_expressions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_mixed">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_arithmetic_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_arithmetic_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_arithmetic_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_arithmetic_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_mixed : unit -&gt; unit&#xA;override this.Projection_when_arithmetic_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_arithmetic_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_arithmetic_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_arithmetic_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_arithmetic_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_arithmetic_mixed_subqueries">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_arithmetic_mixed_subqueries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_arithmetic_mixed_subqueries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_arithmetic_mixed_subqueries" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_arithmetic_mixed_subqueries ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_arithmetic_mixed_subqueries : unit -&gt; unit&#xA;override this.Projection_when_arithmetic_mixed_subqueries : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_arithmetic_mixed_subqueries " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_arithmetic_mixed_subqueries();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_arithmetic_mixed_subqueries();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_arithmetic_mixed_subqueries();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_client_evald_subquery">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_client_evald_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_client_evald_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_client_evald_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_client_evald_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_client_evald_subquery : unit -&gt; unit&#xA;override this.Projection_when_client_evald_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_client_evald_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_client_evald_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_client_evald_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_client_evald_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_when_null_value">
      <MemberSignature Language="C#" Value="public virtual void Projection_when_null_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_when_null_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Projection_when_null_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_when_null_value ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_when_null_value : unit -&gt; unit&#xA;override this.Projection_when_null_value : unit -&gt; unit" Usage="simpleQueryTestBase.Projection_when_null_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_when_null_value();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_when_null_value();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_when_null_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_backed_by_database_view">
      <MemberSignature Language="C#" Value="public virtual void Query_backed_by_database_view ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_backed_by_database_view() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Query_backed_by_database_view" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_backed_by_database_view ()" />
      <MemberSignature Language="F#" Value="abstract member Query_backed_by_database_view : unit -&gt; unit&#xA;override this.Query_backed_by_database_view : unit -&gt; unit" Usage="simpleQueryTestBase.Query_backed_by_database_view " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_backed_by_database_view();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_backed_by_database_view();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_backed_by_database_view();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_composition_against_ienumerable_set">
      <MemberSignature Language="C#" Value="public void Query_composition_against_ienumerable_set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Query_composition_against_ienumerable_set() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Query_composition_against_ienumerable_set" />
      <MemberSignature Language="VB.NET" Value="Public Sub Query_composition_against_ienumerable_set ()" />
      <MemberSignature Language="F#" Value="member this.Query_composition_against_ienumerable_set : unit -&gt; unit" Usage="simpleQueryTestBase.Query_composition_against_ienumerable_set " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Query_composition_against_ienumerable_set();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Query_composition_against_ienumerable_set();" />
      <MemberSignature Language="C++ WINRT" Value="void Query_composition_against_ienumerable_set();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_expression_with_to_string_and_contains">
      <MemberSignature Language="C#" Value="public virtual void Query_expression_with_to_string_and_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_expression_with_to_string_and_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Query_expression_with_to_string_and_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_expression_with_to_string_and_contains ()" />
      <MemberSignature Language="F#" Value="abstract member Query_expression_with_to_string_and_contains : unit -&gt; unit&#xA;override this.Query_expression_with_to_string_and_contains : unit -&gt; unit" Usage="simpleQueryTestBase.Query_expression_with_to_string_and_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_expression_with_to_string_and_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_expression_with_to_string_and_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_expression_with_to_string_and_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_when_evaluatable_queryable_method_call_with_repository">
      <MemberSignature Language="C#" Value="public virtual void Query_when_evaluatable_queryable_method_call_with_repository ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_when_evaluatable_queryable_method_call_with_repository() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Query_when_evaluatable_queryable_method_call_with_repository" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_when_evaluatable_queryable_method_call_with_repository ()" />
      <MemberSignature Language="F#" Value="abstract member Query_when_evaluatable_queryable_method_call_with_repository : unit -&gt; unit&#xA;override this.Query_when_evaluatable_queryable_method_call_with_repository : unit -&gt; unit" Usage="simpleQueryTestBase.Query_when_evaluatable_queryable_method_call_with_repository " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_when_evaluatable_queryable_method_call_with_repository();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_when_evaluatable_queryable_method_call_with_repository();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_when_evaluatable_queryable_method_call_with_repository();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_nested_simple">
      <MemberSignature Language="C#" Value="public virtual void Queryable_nested_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_nested_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_nested_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_nested_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_nested_simple : unit -&gt; unit&#xA;override this.Queryable_nested_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_nested_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_nested_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_nested_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_nested_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_reprojection">
      <MemberSignature Language="C#" Value="public virtual void Queryable_reprojection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_reprojection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_reprojection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_reprojection ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_reprojection : unit -&gt; unit&#xA;override this.Queryable_reprojection : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_reprojection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_reprojection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_reprojection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_reprojection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple">
      <MemberSignature Language="C#" Value="public virtual void Queryable_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple : unit -&gt; unit&#xA;override this.Queryable_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple_anonymous">
      <MemberSignature Language="C#" Value="public virtual void Queryable_simple_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_simple_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_simple_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_simple_anonymous ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple_anonymous : unit -&gt; unit&#xA;override this.Queryable_simple_anonymous : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_simple_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_simple_anonymous();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_simple_anonymous();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_simple_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple_anonymous_projection_subquery">
      <MemberSignature Language="C#" Value="public virtual void Queryable_simple_anonymous_projection_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_simple_anonymous_projection_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_simple_anonymous_projection_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_simple_anonymous_projection_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple_anonymous_projection_subquery : unit -&gt; unit&#xA;override this.Queryable_simple_anonymous_projection_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_simple_anonymous_projection_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_simple_anonymous_projection_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_simple_anonymous_projection_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_simple_anonymous_projection_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Queryable_simple_anonymous_subquery">
      <MemberSignature Language="C#" Value="public virtual void Queryable_simple_anonymous_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Queryable_simple_anonymous_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Queryable_simple_anonymous_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Queryable_simple_anonymous_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Queryable_simple_anonymous_subquery : unit -&gt; unit&#xA;override this.Queryable_simple_anonymous_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Queryable_simple_anonymous_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Queryable_simple_anonymous_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Queryable_simple_anonymous_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Queryable_simple_anonymous_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_select_where_navigation">
      <MemberSignature Language="C#" Value="public virtual void QueryType_select_where_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_select_where_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_select_where_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_select_where_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_select_where_navigation : unit -&gt; unit&#xA;override this.QueryType_select_where_navigation : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_select_where_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_select_where_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_select_where_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_select_where_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_select_where_navigation_multi_level">
      <MemberSignature Language="C#" Value="public virtual void QueryType_select_where_navigation_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_select_where_navigation_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_select_where_navigation_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_select_where_navigation_multi_level ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_select_where_navigation_multi_level : unit -&gt; unit&#xA;override this.QueryType_select_where_navigation_multi_level : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_select_where_navigation_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_select_where_navigation_multi_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_select_where_navigation_multi_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_select_where_navigation_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_simple">
      <MemberSignature Language="C#" Value="public virtual void QueryType_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_simple ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_simple : unit -&gt; unit&#xA;override this.QueryType_simple : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_where_simple">
      <MemberSignature Language="C#" Value="public virtual void QueryType_where_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_where_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_where_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_where_simple ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_where_simple : unit -&gt; unit&#xA;override this.QueryType_where_simple : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_where_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_where_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_where_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_where_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_with_defining_query">
      <MemberSignature Language="C#" Value="public virtual void QueryType_with_defining_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_with_defining_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_with_defining_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_with_defining_query ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_with_defining_query : unit -&gt; unit&#xA;override this.QueryType_with_defining_query : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_with_defining_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_with_defining_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_with_defining_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_with_defining_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_with_included_nav">
      <MemberSignature Language="C#" Value="public virtual void QueryType_with_included_nav ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_with_included_nav() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_with_included_nav" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_with_included_nav ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_with_included_nav : unit -&gt; unit&#xA;override this.QueryType_with_included_nav : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_with_included_nav " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_with_included_nav();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_with_included_nav();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_with_included_nav();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_with_included_navs_multi_level">
      <MemberSignature Language="C#" Value="public virtual void QueryType_with_included_navs_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_with_included_navs_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_with_included_navs_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_with_included_navs_multi_level ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_with_included_navs_multi_level : unit -&gt; unit&#xA;override this.QueryType_with_included_navs_multi_level : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_with_included_navs_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_with_included_navs_multi_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_with_included_navs_multi_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_with_included_navs_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_with_mixed_tracking">
      <MemberSignature Language="C#" Value="public virtual void QueryType_with_mixed_tracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_with_mixed_tracking() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_with_mixed_tracking" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_with_mixed_tracking ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_with_mixed_tracking : unit -&gt; unit&#xA;override this.QueryType_with_mixed_tracking : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_with_mixed_tracking " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_with_mixed_tracking();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_with_mixed_tracking();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_with_mixed_tracking();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryType_with_nav_defining_query">
      <MemberSignature Language="C#" Value="public virtual void QueryType_with_nav_defining_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryType_with_nav_defining_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.QueryType_with_nav_defining_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub QueryType_with_nav_defining_query ()" />
      <MemberSignature Language="F#" Value="abstract member QueryType_with_nav_defining_query : unit -&gt; unit&#xA;override this.QueryType_with_nav_defining_query : unit -&gt; unit" Usage="simpleQueryTestBase.QueryType_with_nav_defining_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryType_with_nav_defining_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void QueryType_with_nav_defining_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void QueryType_with_nav_defining_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_1">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_1 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_1 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_1 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_2">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_2 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_2 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_2 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_3">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_3 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_3 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_3 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_4">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_4 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_4 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_4 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_5">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_5 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_5 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_5 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Random_next_is_not_funcletized_6">
      <MemberSignature Language="C#" Value="public virtual void Random_next_is_not_funcletized_6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Random_next_is_not_funcletized_6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Random_next_is_not_funcletized_6" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Random_next_is_not_funcletized_6 ()" />
      <MemberSignature Language="F#" Value="abstract member Random_next_is_not_funcletized_6 : unit -&gt; unit&#xA;override this.Random_next_is_not_funcletized_6 : unit -&gt; unit" Usage="simpleQueryTestBase.Random_next_is_not_funcletized_6 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Random_next_is_not_funcletized_6();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Random_next_is_not_funcletized_6();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Random_next_is_not_funcletized_6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace_with_emptystring">
      <MemberSignature Language="C#" Value="public virtual void Replace_with_emptystring ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replace_with_emptystring() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Replace_with_emptystring" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Replace_with_emptystring ()" />
      <MemberSignature Language="F#" Value="abstract member Replace_with_emptystring : unit -&gt; unit&#xA;override this.Replace_with_emptystring : unit -&gt; unit" Usage="simpleQueryTestBase.Replace_with_emptystring " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Replace_with_emptystring();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Replace_with_emptystring();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Replace_with_emptystring();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_All">
      <MemberSignature Language="C#" Value="public virtual void Select_All ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_All() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_All" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_All ()" />
      <MemberSignature Language="F#" Value="abstract member Select_All : unit -&gt; unit&#xA;override this.Select_All : unit -&gt; unit" Usage="simpleQueryTestBase.Select_All " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_All();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_All();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_All();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_bool_constant_true">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_bool_constant_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_bool_constant_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_bool_constant_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_bool_constant_true ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_bool_constant_true : unit -&gt; unit&#xA;override this.Select_anonymous_bool_constant_true : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_bool_constant_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_bool_constant_true();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_bool_constant_true();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_bool_constant_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_conditional_expression">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_conditional_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_conditional_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_conditional_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_conditional_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_conditional_expression : unit -&gt; unit&#xA;override this.Select_anonymous_conditional_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_conditional_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_conditional_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_conditional_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_conditional_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_constant_in_expression">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_constant_in_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_constant_in_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_constant_in_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_constant_in_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_constant_in_expression : unit -&gt; unit&#xA;override this.Select_anonymous_constant_in_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_constant_in_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_constant_in_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_constant_in_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_constant_in_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_empty">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_empty ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_empty : unit -&gt; unit&#xA;override this.Select_anonymous_empty : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_empty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_empty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_literal">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_literal ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_literal : unit -&gt; unit&#xA;override this.Select_anonymous_literal : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_literal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_literal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_nested">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_nested : unit -&gt; unit&#xA;override this.Select_anonymous_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_one">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_one" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_one ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_one : unit -&gt; unit&#xA;override this.Select_anonymous_one : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_one " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_one();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_one();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_one();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_three">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_three ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_three() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_three" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_three ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_three : unit -&gt; unit&#xA;override this.Select_anonymous_three : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_three " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_three();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_three();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_three();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_two">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_two ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_two() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_two" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_two ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_two : unit -&gt; unit&#xA;override this.Select_anonymous_two : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_two " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_two();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_two();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_two();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_anonymous_with_object">
      <MemberSignature Language="C#" Value="public virtual void Select_anonymous_with_object ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_anonymous_with_object() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_anonymous_with_object" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_anonymous_with_object ()" />
      <MemberSignature Language="F#" Value="abstract member Select_anonymous_with_object : unit -&gt; unit&#xA;override this.Select_anonymous_with_object : unit -&gt; unit" Usage="simpleQueryTestBase.Select_anonymous_with_object " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_anonymous_with_object();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_anonymous_with_object();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_anonymous_with_object();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_and ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and : unit -&gt; unit&#xA;override this.Select_bitwise_and : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and_or">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_and_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_and_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_and_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_and_or ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and_or : unit -&gt; unit&#xA;override this.Select_bitwise_and_or : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_and_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_and_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_and_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_and_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_and_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_and_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_and_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_and_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_and_with_logical_and ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_and_with_logical_and : unit -&gt; unit&#xA;override this.Select_bitwise_and_with_logical_and : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_and_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_and_with_logical_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_and_with_logical_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_and_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_or ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or : unit -&gt; unit&#xA;override this.Select_bitwise_or : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or_multiple">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_or_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_or_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_or_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_or_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or_multiple : unit -&gt; unit&#xA;override this.Select_bitwise_or_multiple : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_or_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_or_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_or_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_or_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bitwise_or_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual void Select_bitwise_or_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bitwise_or_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bitwise_or_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bitwise_or_with_logical_or ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bitwise_or_with_logical_or : unit -&gt; unit&#xA;override this.Select_bitwise_or_with_logical_or : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bitwise_or_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bitwise_or_with_logical_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bitwise_or_with_logical_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bitwise_or_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_bool_closure">
      <MemberSignature Language="C#" Value="public virtual void Select_bool_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_bool_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_bool_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_bool_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Select_bool_closure : unit -&gt; unit&#xA;override this.Select_bool_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Select_bool_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_bool_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_bool_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_bool_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_byte_constant">
      <MemberSignature Language="C#" Value="public virtual void Select_byte_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_byte_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_byte_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_byte_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Select_byte_constant : unit -&gt; unit&#xA;override this.Select_byte_constant : unit -&gt; unit" Usage="simpleQueryTestBase.Select_byte_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_byte_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_byte_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_byte_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_conditional_with_null_comparison_in_test">
      <MemberSignature Language="C#" Value="public virtual void Select_conditional_with_null_comparison_in_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_conditional_with_null_comparison_in_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_conditional_with_null_comparison_in_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_conditional_with_null_comparison_in_test ()" />
      <MemberSignature Language="F#" Value="abstract member Select_conditional_with_null_comparison_in_test : unit -&gt; unit&#xA;override this.Select_conditional_with_null_comparison_in_test : unit -&gt; unit" Usage="simpleQueryTestBase.Select_conditional_with_null_comparison_in_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_conditional_with_null_comparison_in_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_conditional_with_null_comparison_in_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_conditional_with_null_comparison_in_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_constant_int">
      <MemberSignature Language="C#" Value="public virtual void Select_constant_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_constant_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_constant_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_constant_int ()" />
      <MemberSignature Language="F#" Value="abstract member Select_constant_int : unit -&gt; unit&#xA;override this.Select_constant_int : unit -&gt; unit" Usage="simpleQueryTestBase.Select_constant_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_constant_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_constant_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_constant_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_constant_null_string">
      <MemberSignature Language="C#" Value="public virtual void Select_constant_null_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_constant_null_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_constant_null_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_constant_null_string ()" />
      <MemberSignature Language="F#" Value="abstract member Select_constant_null_string : unit -&gt; unit&#xA;override this.Select_constant_null_string : unit -&gt; unit" Usage="simpleQueryTestBase.Select_constant_null_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_constant_null_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_constant_null_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_constant_null_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_filtered">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_subquery_filtered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_subquery_filtered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_correlated_subquery_filtered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_subquery_filtered ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_filtered : unit -&gt; unit&#xA;override this.Select_correlated_subquery_filtered : unit -&gt; unit" Usage="simpleQueryTestBase.Select_correlated_subquery_filtered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_subquery_filtered();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_subquery_filtered();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_subquery_filtered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_ordered">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_subquery_ordered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_subquery_ordered() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_correlated_subquery_ordered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_subquery_ordered ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_ordered : unit -&gt; unit&#xA;override this.Select_correlated_subquery_ordered : unit -&gt; unit" Usage="simpleQueryTestBase.Select_correlated_subquery_ordered " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_subquery_ordered();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_subquery_ordered();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_subquery_ordered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_correlated_subquery_projection">
      <MemberSignature Language="C#" Value="public virtual void Select_correlated_subquery_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_correlated_subquery_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_correlated_subquery_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_correlated_subquery_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Select_correlated_subquery_projection : unit -&gt; unit&#xA;override this.Select_correlated_subquery_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Select_correlated_subquery_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_correlated_subquery_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_correlated_subquery_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_correlated_subquery_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_customer_identity">
      <MemberSignature Language="C#" Value="public virtual void Select_customer_identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_customer_identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_customer_identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_customer_identity ()" />
      <MemberSignature Language="F#" Value="abstract member Select_customer_identity : unit -&gt; unit&#xA;override this.Select_customer_identity : unit -&gt; unit" Usage="simpleQueryTestBase.Select_customer_identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_customer_identity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_customer_identity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_customer_identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_customer_table">
      <MemberSignature Language="C#" Value="public virtual void Select_customer_table ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_customer_table() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_customer_table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_customer_table ()" />
      <MemberSignature Language="F#" Value="abstract member Select_customer_table : unit -&gt; unit&#xA;override this.Select_customer_table : unit -&gt; unit" Usage="simpleQueryTestBase.Select_customer_table " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_customer_table();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_customer_table();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_customer_table();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_day_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_day_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_day_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_day_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_day_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_day_component : unit -&gt; unit&#xA;override this.Select_datetime_day_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_day_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_day_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_day_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_day_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_day_of_year_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_day_of_year_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_day_of_year_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_day_of_year_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_day_of_year_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_day_of_year_component : unit -&gt; unit&#xA;override this.Select_datetime_day_of_year_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_day_of_year_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_day_of_year_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_day_of_year_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_day_of_year_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_hour_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_hour_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_hour_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_hour_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_hour_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_hour_component : unit -&gt; unit&#xA;override this.Select_datetime_hour_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_hour_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_hour_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_hour_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_hour_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_millisecond_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_millisecond_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_millisecond_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_millisecond_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_millisecond_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_millisecond_component : unit -&gt; unit&#xA;override this.Select_datetime_millisecond_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_millisecond_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_millisecond_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_millisecond_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_millisecond_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_minute_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_minute_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_minute_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_minute_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_minute_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_minute_component : unit -&gt; unit&#xA;override this.Select_datetime_minute_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_minute_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_minute_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_minute_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_minute_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_month_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_month_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_month_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_month_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_month_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_month_component : unit -&gt; unit&#xA;override this.Select_datetime_month_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_month_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_month_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_month_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_month_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_second_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_second_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_second_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_second_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_second_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_second_component : unit -&gt; unit&#xA;override this.Select_datetime_second_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_second_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_second_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_second_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_second_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_datetime_year_component">
      <MemberSignature Language="C#" Value="public virtual void Select_datetime_year_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_datetime_year_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_datetime_year_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_datetime_year_component ()" />
      <MemberSignature Language="F#" Value="abstract member Select_datetime_year_component : unit -&gt; unit&#xA;override this.Select_datetime_year_component : unit -&gt; unit" Usage="simpleQueryTestBase.Select_datetime_year_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_datetime_year_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_datetime_year_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_datetime_year_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_average">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_average ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_average : unit -&gt; unit&#xA;override this.Select_distinct_average : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_average();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_average();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_count">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_count : unit -&gt; unit&#xA;override this.Select_distinct_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_long_count">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_long_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_long_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_long_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_long_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_long_count : unit -&gt; unit&#xA;override this.Select_distinct_long_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_long_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_long_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_long_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_long_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_max">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_max ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_max : unit -&gt; unit&#xA;override this.Select_distinct_max : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_max();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_max();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_min">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_min ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_min : unit -&gt; unit&#xA;override this.Select_distinct_min : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_min();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_min();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_distinct_sum">
      <MemberSignature Language="C#" Value="public virtual void Select_distinct_sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_distinct_sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_distinct_sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_distinct_sum ()" />
      <MemberSignature Language="F#" Value="abstract member Select_distinct_sum : unit -&gt; unit&#xA;override this.Select_distinct_sum : unit -&gt; unit" Usage="simpleQueryTestBase.Select_distinct_sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_distinct_sum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_distinct_sum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_distinct_sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_DTO_constructor_distinct_translated_to_server">
      <MemberSignature Language="C#" Value="public virtual void Select_DTO_constructor_distinct_translated_to_server ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_DTO_constructor_distinct_translated_to_server() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_DTO_constructor_distinct_translated_to_server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_DTO_constructor_distinct_translated_to_server ()" />
      <MemberSignature Language="F#" Value="abstract member Select_DTO_constructor_distinct_translated_to_server : unit -&gt; unit&#xA;override this.Select_DTO_constructor_distinct_translated_to_server : unit -&gt; unit" Usage="simpleQueryTestBase.Select_DTO_constructor_distinct_translated_to_server " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_DTO_constructor_distinct_translated_to_server();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_DTO_constructor_distinct_translated_to_server();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_DTO_constructor_distinct_translated_to_server();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_DTO_distinct_translated_to_server">
      <MemberSignature Language="C#" Value="public virtual void Select_DTO_distinct_translated_to_server ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_DTO_distinct_translated_to_server() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_DTO_distinct_translated_to_server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_DTO_distinct_translated_to_server ()" />
      <MemberSignature Language="F#" Value="abstract member Select_DTO_distinct_translated_to_server : unit -&gt; unit&#xA;override this.Select_DTO_distinct_translated_to_server : unit -&gt; unit" Usage="simpleQueryTestBase.Select_DTO_distinct_translated_to_server " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_DTO_distinct_translated_to_server();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_DTO_distinct_translated_to_server();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_DTO_distinct_translated_to_server();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_DTO_with_member_init_distinct_in_subquery_translated_to_server">
      <MemberSignature Language="C#" Value="public virtual void Select_DTO_with_member_init_distinct_in_subquery_translated_to_server ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_DTO_with_member_init_distinct_in_subquery_translated_to_server() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_DTO_with_member_init_distinct_in_subquery_translated_to_server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_DTO_with_member_init_distinct_in_subquery_translated_to_server ()" />
      <MemberSignature Language="F#" Value="abstract member Select_DTO_with_member_init_distinct_in_subquery_translated_to_server : unit -&gt; unit&#xA;override this.Select_DTO_with_member_init_distinct_in_subquery_translated_to_server : unit -&gt; unit" Usage="simpleQueryTestBase.Select_DTO_with_member_init_distinct_in_subquery_translated_to_server " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_in_subquery_translated_to_server();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_in_subquery_translated_to_server();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_DTO_with_member_init_distinct_in_subquery_translated_to_server();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server">
      <MemberSignature Language="C#" Value="public virtual void Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server ()" />
      <MemberSignature Language="F#" Value="abstract member Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server : unit -&gt; unit&#xA;override this.Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server : unit -&gt; unit" Usage="simpleQueryTestBase.Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_DTO_with_member_init_distinct_in_subquery_used_in_projection_translated_to_server();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_DTO_with_member_init_distinct_translated_to_server">
      <MemberSignature Language="C#" Value="public virtual void Select_DTO_with_member_init_distinct_translated_to_server ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_DTO_with_member_init_distinct_translated_to_server() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_DTO_with_member_init_distinct_translated_to_server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_DTO_with_member_init_distinct_translated_to_server ()" />
      <MemberSignature Language="F#" Value="abstract member Select_DTO_with_member_init_distinct_translated_to_server : unit -&gt; unit&#xA;override this.Select_DTO_with_member_init_distinct_translated_to_server : unit -&gt; unit" Usage="simpleQueryTestBase.Select_DTO_with_member_init_distinct_translated_to_server " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_translated_to_server();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_DTO_with_member_init_distinct_translated_to_server();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_DTO_with_member_init_distinct_translated_to_server();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_date_add_milliseconds_above_the_range">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_date_add_milliseconds_above_the_range ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_date_add_milliseconds_above_the_range() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_date_add_milliseconds_above_the_range" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_date_add_milliseconds_above_the_range ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_date_add_milliseconds_above_the_range : unit -&gt; unit&#xA;override this.Select_expression_date_add_milliseconds_above_the_range : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_date_add_milliseconds_above_the_range " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_above_the_range();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_above_the_range();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_date_add_milliseconds_above_the_range();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_date_add_milliseconds_below_the_range">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_date_add_milliseconds_below_the_range ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_date_add_milliseconds_below_the_range() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_date_add_milliseconds_below_the_range" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_date_add_milliseconds_below_the_range ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_date_add_milliseconds_below_the_range : unit -&gt; unit&#xA;override this.Select_expression_date_add_milliseconds_below_the_range : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_date_add_milliseconds_below_the_range " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_below_the_range();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_below_the_range();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_date_add_milliseconds_below_the_range();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_date_add_milliseconds_large_number_divided">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_date_add_milliseconds_large_number_divided ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_date_add_milliseconds_large_number_divided() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_date_add_milliseconds_large_number_divided" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_date_add_milliseconds_large_number_divided ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_date_add_milliseconds_large_number_divided : unit -&gt; unit&#xA;override this.Select_expression_date_add_milliseconds_large_number_divided : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_date_add_milliseconds_large_number_divided " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_large_number_divided();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_date_add_milliseconds_large_number_divided();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_date_add_milliseconds_large_number_divided();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_date_add_year">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_date_add_year ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_date_add_year() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_date_add_year" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_date_add_year ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_date_add_year : unit -&gt; unit&#xA;override this.Select_expression_date_add_year : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_date_add_year " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_date_add_year();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_date_add_year();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_date_add_year();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_int_to_string">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_int_to_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_int_to_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_int_to_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_int_to_string ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_int_to_string : unit -&gt; unit&#xA;override this.Select_expression_int_to_string : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_int_to_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_int_to_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_int_to_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_int_to_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_long_to_string">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_long_to_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_long_to_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_long_to_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_long_to_string ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_long_to_string : unit -&gt; unit&#xA;override this.Select_expression_long_to_string : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_long_to_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_long_to_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_long_to_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_long_to_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_other_to_string">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_other_to_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_other_to_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_other_to_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_other_to_string ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_other_to_string : unit -&gt; unit&#xA;override this.Select_expression_other_to_string : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_other_to_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_other_to_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_other_to_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_other_to_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_expression_references_are_updated_correctly_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void Select_expression_references_are_updated_correctly_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_expression_references_are_updated_correctly_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_expression_references_are_updated_correctly_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_expression_references_are_updated_correctly_with_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Select_expression_references_are_updated_correctly_with_subquery : unit -&gt; unit&#xA;override this.Select_expression_references_are_updated_correctly_with_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Select_expression_references_are_updated_correctly_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_expression_references_are_updated_correctly_with_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_expression_references_are_updated_correctly_with_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_expression_references_are_updated_correctly_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_into">
      <MemberSignature Language="C#" Value="public virtual void Select_into ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_into() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_into" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_into ()" />
      <MemberSignature Language="F#" Value="abstract member Select_into : unit -&gt; unit&#xA;override this.Select_into : unit -&gt; unit" Usage="simpleQueryTestBase.Select_into " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_into();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_into();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_into();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_local">
      <MemberSignature Language="C#" Value="public virtual void Select_local ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_local() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_local" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_local ()" />
      <MemberSignature Language="F#" Value="abstract member Select_local : unit -&gt; unit&#xA;override this.Select_local : unit -&gt; unit" Usage="simpleQueryTestBase.Select_local " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_local();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_local();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_local();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_many_cross_join_same_collection">
      <MemberSignature Language="C#" Value="public virtual void Select_many_cross_join_same_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_many_cross_join_same_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_many_cross_join_same_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_many_cross_join_same_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Select_many_cross_join_same_collection : unit -&gt; unit&#xA;override this.Select_many_cross_join_same_collection : unit -&gt; unit" Usage="simpleQueryTestBase.Select_many_cross_join_same_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_many_cross_join_same_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_many_cross_join_same_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_many_cross_join_same_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_math_round_int">
      <MemberSignature Language="C#" Value="public virtual void Select_math_round_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_math_round_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_math_round_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_math_round_int ()" />
      <MemberSignature Language="F#" Value="abstract member Select_math_round_int : unit -&gt; unit&#xA;override this.Select_math_round_int : unit -&gt; unit" Usage="simpleQueryTestBase.Select_math_round_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_math_round_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_math_round_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_math_round_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_math_truncate_int">
      <MemberSignature Language="C#" Value="public virtual void Select_math_truncate_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_math_truncate_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_math_truncate_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_math_truncate_int ()" />
      <MemberSignature Language="F#" Value="abstract member Select_math_truncate_int : unit -&gt; unit&#xA;override this.Select_math_truncate_int : unit -&gt; unit" Usage="simpleQueryTestBase.Select_math_truncate_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_math_truncate_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_math_truncate_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_math_truncate_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection : unit -&gt; unit&#xA;override this.Select_nested_collection : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_count_using_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_count_using_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_count_using_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_count_using_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_count_using_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_count_using_anonymous_type : unit -&gt; unit&#xA;override this.Select_nested_collection_count_using_anonymous_type : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_count_using_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_count_using_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_count_using_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_count_using_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_count_using_DTO">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_count_using_DTO ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_count_using_DTO() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_count_using_DTO" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_count_using_DTO ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_count_using_DTO : unit -&gt; unit&#xA;override this.Select_nested_collection_count_using_DTO : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_count_using_DTO " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_count_using_DTO();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_count_using_DTO();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_count_using_DTO();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_deep">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_deep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_deep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_deep" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_deep ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_deep : unit -&gt; unit&#xA;override this.Select_nested_collection_deep : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_deep " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_deep();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_deep();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_deep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_in_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_in_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_in_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_in_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_in_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_in_anonymous_type : unit -&gt; unit&#xA;override this.Select_nested_collection_in_anonymous_type : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_in_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_in_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_in_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_in_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level2">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level2 : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level2 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level3">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level3 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level3 : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level3 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level4">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level4 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level4 : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level4 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level5">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level5 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level5 : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level5 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nested_collection_multi_level6">
      <MemberSignature Language="C#" Value="public virtual void Select_nested_collection_multi_level6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nested_collection_multi_level6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_nested_collection_multi_level6" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nested_collection_multi_level6 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nested_collection_multi_level6 : unit -&gt; unit&#xA;override this.Select_nested_collection_multi_level6 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_nested_collection_multi_level6 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nested_collection_multi_level6();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nested_collection_multi_level6();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nested_collection_multi_level6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_anonymous_type_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_binary_expression_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_binary_expression_nested_introduces_top_level_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_length_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_length_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_length_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_length_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_length_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_length_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_length_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_length_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_length_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_length_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_length_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_method_call_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_method_call_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_method_call_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_method_call_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_method_call_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_method_call_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_method_call_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_method_call_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_method_call_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_method_call_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_method_call_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1 : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2 : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_from_unary_expression_introduces_explicit_cast2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_int_to_long_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_int_to_long_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_int_to_long_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_int_to_long_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_int_to_long_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_int_to_long_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_int_to_long_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_int_to_long_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_int_to_long_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_int_to_long_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_int_to_long_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_int_to_nullable_int_doesnt_introduce_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_nullable_int_to_int_doesnt_introduce_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast">
      <MemberSignature Language="C#" Value="public virtual void Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast ()" />
      <MemberSignature Language="F#" Value="abstract member Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast : unit -&gt; unit&#xA;override this.Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast : unit -&gt; unit" Usage="simpleQueryTestBase.Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_non_matching_value_types_nullable_int_to_long_introduces_explicit_cast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Select_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Select_null_coalesce_operator : unit -&gt; unit&#xA;override this.Select_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Select_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_orderBy_skip_count">
      <MemberSignature Language="C#" Value="public virtual void Select_orderBy_skip_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_orderBy_skip_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_orderBy_skip_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_orderBy_skip_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_orderBy_skip_count : unit -&gt; unit&#xA;override this.Select_orderBy_skip_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_orderBy_skip_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_orderBy_skip_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_orderBy_skip_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_orderBy_skip_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_orderBy_skip_long_count">
      <MemberSignature Language="C#" Value="public virtual void Select_orderBy_skip_long_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_orderBy_skip_long_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_orderBy_skip_long_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_orderBy_skip_long_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_orderBy_skip_long_count : unit -&gt; unit&#xA;override this.Select_orderBy_skip_long_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_orderBy_skip_long_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_orderBy_skip_long_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_orderBy_skip_long_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_orderBy_skip_long_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_orderBy_take_count">
      <MemberSignature Language="C#" Value="public virtual void Select_orderBy_take_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_orderBy_take_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_orderBy_take_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_orderBy_take_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_orderBy_take_count : unit -&gt; unit&#xA;override this.Select_orderBy_take_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_orderBy_take_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_orderBy_take_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_orderBy_take_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_orderBy_take_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_orderBy_take_long_count">
      <MemberSignature Language="C#" Value="public virtual void Select_orderBy_take_long_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_orderBy_take_long_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_orderBy_take_long_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_orderBy_take_long_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_orderBy_take_long_count : unit -&gt; unit&#xA;override this.Select_orderBy_take_long_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_orderBy_take_long_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_orderBy_take_long_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_orderBy_take_long_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_orderBy_take_long_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_project_filter">
      <MemberSignature Language="C#" Value="public virtual void Select_project_filter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_project_filter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_project_filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_project_filter ()" />
      <MemberSignature Language="F#" Value="abstract member Select_project_filter : unit -&gt; unit&#xA;override this.Select_project_filter : unit -&gt; unit" Usage="simpleQueryTestBase.Select_project_filter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_project_filter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_project_filter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_project_filter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_project_filter2">
      <MemberSignature Language="C#" Value="public virtual void Select_project_filter2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_project_filter2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_project_filter2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_project_filter2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_project_filter2 : unit -&gt; unit&#xA;override this.Select_project_filter2 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_project_filter2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_project_filter2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_project_filter2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_project_filter2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Property_when_non_shadow">
      <MemberSignature Language="C#" Value="public virtual void Select_Property_when_non_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Property_when_non_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Property_when_non_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Property_when_non_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Property_when_non_shadow : unit -&gt; unit&#xA;override this.Select_Property_when_non_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Property_when_non_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Property_when_non_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Property_when_non_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Property_when_non_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Property_when_shadow">
      <MemberSignature Language="C#" Value="public virtual void Select_Property_when_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Property_when_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Property_when_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Property_when_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Property_when_shadow : unit -&gt; unit&#xA;override this.Select_Property_when_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Property_when_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Property_when_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Property_when_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Property_when_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Property_when_shaow_unconstrained_generic_method">
      <MemberSignature Language="C#" Value="public virtual void Select_Property_when_shaow_unconstrained_generic_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Property_when_shaow_unconstrained_generic_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Property_when_shaow_unconstrained_generic_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Property_when_shaow_unconstrained_generic_method ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Property_when_shaow_unconstrained_generic_method : unit -&gt; unit&#xA;override this.Select_Property_when_shaow_unconstrained_generic_method : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Property_when_shaow_unconstrained_generic_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Property_when_shaow_unconstrained_generic_method();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Property_when_shaow_unconstrained_generic_method();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Property_when_shaow_unconstrained_generic_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar">
      <MemberSignature Language="C#" Value="public virtual void Select_scalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_scalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_scalar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_scalar ()" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar : unit -&gt; unit&#xA;override this.Select_scalar : unit -&gt; unit" Usage="simpleQueryTestBase.Select_scalar " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_scalar();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_scalar();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_scalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar_primitive">
      <MemberSignature Language="C#" Value="public virtual void Select_scalar_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_scalar_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_scalar_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_scalar_primitive ()" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar_primitive : unit -&gt; unit&#xA;override this.Select_scalar_primitive : unit -&gt; unit" Usage="simpleQueryTestBase.Select_scalar_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_scalar_primitive();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_scalar_primitive();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_scalar_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_scalar_primitive_after_take">
      <MemberSignature Language="C#" Value="public virtual void Select_scalar_primitive_after_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_scalar_primitive_after_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_scalar_primitive_after_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_scalar_primitive_after_take ()" />
      <MemberSignature Language="F#" Value="abstract member Select_scalar_primitive_after_take : unit -&gt; unit&#xA;override this.Select_scalar_primitive_after_take : unit -&gt; unit" Usage="simpleQueryTestBase.Select_scalar_primitive_after_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_scalar_primitive_after_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_scalar_primitive_after_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_scalar_primitive_after_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Select_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual void Select_Select_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Select_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Select_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Select_Distinct_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Select_Distinct_Count : unit -&gt; unit&#xA;override this.Select_Select_Distinct_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Select_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Select_Distinct_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Select_Distinct_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Select_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_short_constant">
      <MemberSignature Language="C#" Value="public virtual void Select_short_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_short_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_short_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_short_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Select_short_constant : unit -&gt; unit&#xA;override this.Select_short_constant : unit -&gt; unit" Usage="simpleQueryTestBase.Select_short_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_short_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_short_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_short_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_average">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_average ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_average : unit -&gt; unit&#xA;override this.Select_skip_average : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_average();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_average();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_count">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_count : unit -&gt; unit&#xA;override this.Select_skip_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_long_count">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_long_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_long_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_long_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_long_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_long_count : unit -&gt; unit&#xA;override this.Select_skip_long_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_long_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_long_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_long_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_long_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_max">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_max ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_max : unit -&gt; unit&#xA;override this.Select_skip_max : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_max();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_max();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_min">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_min ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_min : unit -&gt; unit&#xA;override this.Select_skip_min : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_min();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_min();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_skip_sum">
      <MemberSignature Language="C#" Value="public virtual void Select_skip_sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_skip_sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_skip_sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_skip_sum ()" />
      <MemberSignature Language="F#" Value="abstract member Select_skip_sum : unit -&gt; unit&#xA;override this.Select_skip_sum : unit -&gt; unit" Usage="simpleQueryTestBase.Select_skip_sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_skip_sum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_skip_sum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_skip_sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_recursive_trivial">
      <MemberSignature Language="C#" Value="public virtual void Select_subquery_recursive_trivial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_subquery_recursive_trivial() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_subquery_recursive_trivial" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_subquery_recursive_trivial ()" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_recursive_trivial : unit -&gt; unit&#xA;override this.Select_subquery_recursive_trivial : unit -&gt; unit" Usage="simpleQueryTestBase.Select_subquery_recursive_trivial " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_subquery_recursive_trivial();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_subquery_recursive_trivial();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_subquery_recursive_trivial();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Subquery_Single">
      <MemberSignature Language="C#" Value="public virtual void Select_Subquery_Single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Subquery_Single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Subquery_Single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Subquery_Single ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Subquery_Single : unit -&gt; unit&#xA;override this.Select_Subquery_Single : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Subquery_Single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Subquery_Single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Subquery_Single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Subquery_Single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_average">
      <MemberSignature Language="C#" Value="public virtual void Select_take_average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_average ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_average : unit -&gt; unit&#xA;override this.Select_take_average : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_average();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_average();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_count">
      <MemberSignature Language="C#" Value="public virtual void Select_take_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_count : unit -&gt; unit&#xA;override this.Select_take_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_long_count">
      <MemberSignature Language="C#" Value="public virtual void Select_take_long_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_long_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_long_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_long_count ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_long_count : unit -&gt; unit&#xA;override this.Select_take_long_count : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_long_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_long_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_long_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_long_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_max">
      <MemberSignature Language="C#" Value="public virtual void Select_take_max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_max ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_max : unit -&gt; unit&#xA;override this.Select_take_max : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_max();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_max();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_min">
      <MemberSignature Language="C#" Value="public virtual void Select_take_min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_min ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_min : unit -&gt; unit&#xA;override this.Select_take_min : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_min();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_min();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Select_take_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_null_coalesce_operator : unit -&gt; unit&#xA;override this.Select_take_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_skip_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Select_take_skip_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_skip_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_skip_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_skip_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_skip_null_coalesce_operator : unit -&gt; unit&#xA;override this.Select_take_skip_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_skip_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_skip_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_skip_null_coalesce_operator2">
      <MemberSignature Language="C#" Value="public virtual void Select_take_skip_null_coalesce_operator2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_skip_null_coalesce_operator2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_skip_null_coalesce_operator2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_skip_null_coalesce_operator2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_skip_null_coalesce_operator2 : unit -&gt; unit&#xA;override this.Select_take_skip_null_coalesce_operator2 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_skip_null_coalesce_operator2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_skip_null_coalesce_operator2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_skip_null_coalesce_operator3">
      <MemberSignature Language="C#" Value="public virtual void Select_take_skip_null_coalesce_operator3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_skip_null_coalesce_operator3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_skip_null_coalesce_operator3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_skip_null_coalesce_operator3 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_skip_null_coalesce_operator3 : unit -&gt; unit&#xA;override this.Select_take_skip_null_coalesce_operator3 : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_skip_null_coalesce_operator3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_skip_null_coalesce_operator3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_skip_null_coalesce_operator3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_take_sum">
      <MemberSignature Language="C#" Value="public virtual void Select_take_sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_take_sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_take_sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_take_sum ()" />
      <MemberSignature Language="F#" Value="abstract member Select_take_sum : unit -&gt; unit&#xA;override this.Select_take_sum : unit -&gt; unit" Usage="simpleQueryTestBase.Select_take_sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_take_sum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_take_sum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_take_sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Subquery_Deep_First">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Subquery_Deep_First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Subquery_Deep_First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Where_Subquery_Deep_First" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Subquery_Deep_First ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Subquery_Deep_First : unit -&gt; unit&#xA;override this.Select_Where_Subquery_Deep_First : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Where_Subquery_Deep_First " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Subquery_Deep_First();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Subquery_Deep_First();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Subquery_Deep_First();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Subquery_Deep_Single">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Subquery_Deep_Single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Subquery_Deep_Single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Where_Subquery_Deep_Single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Subquery_Deep_Single ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Subquery_Deep_Single : unit -&gt; unit&#xA;override this.Select_Where_Subquery_Deep_Single : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Where_Subquery_Deep_Single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Subquery_Deep_Single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Subquery_Deep_Single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Subquery_Deep_Single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_Where_Subquery_Equality">
      <MemberSignature Language="C#" Value="public virtual void Select_Where_Subquery_Equality ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_Where_Subquery_Equality() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Select_Where_Subquery_Equality" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_Where_Subquery_Equality ()" />
      <MemberSignature Language="F#" Value="abstract member Select_Where_Subquery_Equality : unit -&gt; unit&#xA;override this.Select_Where_Subquery_Equality : unit -&gt; unit" Usage="simpleQueryTestBase.Select_Where_Subquery_Equality " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_Where_Subquery_Equality();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_Where_Subquery_Equality();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_Where_Subquery_Equality();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected_column_can_coalesce">
      <MemberSignature Language="C#" Value="public virtual void Selected_column_can_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Selected_column_can_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Selected_column_can_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Selected_column_can_coalesce ()" />
      <MemberSignature Language="F#" Value="abstract member Selected_column_can_coalesce : unit -&gt; unit&#xA;override this.Selected_column_can_coalesce : unit -&gt; unit" Usage="simpleQueryTestBase.Selected_column_can_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Selected_column_can_coalesce();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Selected_column_can_coalesce();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Selected_column_can_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_cartesian_product_with_ordering">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_cartesian_product_with_ordering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_cartesian_product_with_ordering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_cartesian_product_with_ordering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_cartesian_product_with_ordering ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_cartesian_product_with_ordering : unit -&gt; unit&#xA;override this.SelectMany_cartesian_product_with_ordering : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_cartesian_product_with_ordering " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_cartesian_product_with_ordering();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_cartesian_product_with_ordering();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_cartesian_product_with_ordering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_simple">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_correlated_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_correlated_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_correlated_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_correlated_simple ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_simple : unit -&gt; unit&#xA;override this.SelectMany_correlated_simple : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_correlated_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_correlated_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_correlated_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_correlated_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_subquery_hard">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_correlated_subquery_hard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_correlated_subquery_hard() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_correlated_subquery_hard" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_correlated_subquery_hard ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_subquery_hard : unit -&gt; unit&#xA;override this.SelectMany_correlated_subquery_hard : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_correlated_subquery_hard " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_correlated_subquery_hard();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_correlated_subquery_hard();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_correlated_subquery_hard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_correlated_subquery_simple">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_correlated_subquery_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_correlated_subquery_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_correlated_subquery_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_correlated_subquery_simple ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_correlated_subquery_simple : unit -&gt; unit&#xA;override this.SelectMany_correlated_subquery_simple : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_correlated_subquery_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_correlated_subquery_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_correlated_subquery_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_correlated_subquery_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Count">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_Count ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Count : unit -&gt; unit&#xA;override this.SelectMany_Count : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_customer_orders">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_customer_orders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_customer_orders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_customer_orders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_customer_orders ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_customer_orders : unit -&gt; unit&#xA;override this.SelectMany_customer_orders : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_customer_orders " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_customer_orders();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_customer_orders();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_customer_orders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_entity_deep">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_entity_deep ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_entity_deep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_entity_deep" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_entity_deep ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_entity_deep : unit -&gt; unit&#xA;override this.SelectMany_entity_deep : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_entity_deep " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_entity_deep();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_entity_deep();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_entity_deep();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_Joined ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_Joined() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_Joined" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_Joined ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined : unit -&gt; unit&#xA;override this.SelectMany_Joined : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_Joined " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_Joined();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_Joined();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_Joined();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_Joined_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_Joined_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_Joined_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_Joined_DefaultIfEmpty : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_Joined_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_Joined_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_Joined_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_Joined_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined_DefaultIfEmpty2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_Joined_DefaultIfEmpty2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_Joined_DefaultIfEmpty2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_Joined_DefaultIfEmpty2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_Joined_DefaultIfEmpty2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined_DefaultIfEmpty2 : unit -&gt; unit&#xA;override this.SelectMany_Joined_DefaultIfEmpty2 : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_Joined_DefaultIfEmpty2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_Joined_DefaultIfEmpty2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_Joined_DefaultIfEmpty2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_Joined_DefaultIfEmpty2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_Joined_Take">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_Joined_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_Joined_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_Joined_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_Joined_Take ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_Joined_Take : unit -&gt; unit&#xA;override this.SelectMany_Joined_Take : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_Joined_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_Joined_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_Joined_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_Joined_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_LongCount">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_LongCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_LongCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_LongCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_LongCount ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_LongCount : unit -&gt; unit&#xA;override this.SelectMany_LongCount : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_LongCount " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_LongCount();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_LongCount();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_LongCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_mixed">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_mixed : unit -&gt; unit&#xA;override this.SelectMany_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_nested_simple">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_nested_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_nested_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_nested_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_nested_simple ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_nested_simple : unit -&gt; unit&#xA;override this.SelectMany_nested_simple : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_nested_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_nested_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_nested_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_nested_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_OrderBy_ThenBy_Any">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_OrderBy_ThenBy_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_OrderBy_ThenBy_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_OrderBy_ThenBy_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_OrderBy_ThenBy_Any ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_OrderBy_ThenBy_Any : unit -&gt; unit&#xA;override this.SelectMany_OrderBy_ThenBy_Any : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_OrderBy_ThenBy_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_OrderBy_ThenBy_Any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_OrderBy_ThenBy_Any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_OrderBy_ThenBy_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_primitive">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_primitive ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_primitive : unit -&gt; unit&#xA;override this.SelectMany_primitive : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_primitive();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_primitive();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_primitive_select_subquery">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_primitive_select_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_primitive_select_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_primitive_select_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_primitive_select_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_primitive_select_subquery : unit -&gt; unit&#xA;override this.SelectMany_primitive_select_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_primitive_select_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_primitive_select_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_primitive_select_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_primitive_select_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_projection1">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_projection1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_projection1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_projection1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_projection1 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_projection1 : unit -&gt; unit&#xA;override this.SelectMany_projection1 : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_projection1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_projection1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_projection1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_projection1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_projection2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_projection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_projection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_projection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_projection2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_projection2 : unit -&gt; unit&#xA;override this.SelectMany_projection2 : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_projection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_projection2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_projection2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_projection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_simple_subquery">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_simple_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_simple_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_simple_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_simple_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_simple_subquery : unit -&gt; unit&#xA;override this.SelectMany_simple_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_simple_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_simple_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_simple_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_simple_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_simple1">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_simple1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_simple1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_simple1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_simple1 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_simple1 : unit -&gt; unit&#xA;override this.SelectMany_simple1 : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_simple1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_simple1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_simple1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_simple1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_simple2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_simple2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_simple2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SelectMany_simple2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_simple2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_simple2 : unit -&gt; unit&#xA;override this.SelectMany_simple2 : unit -&gt; unit" Usage="simpleQueryTestBase.SelectMany_simple2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_simple2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_simple2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_simple2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowPropertySelect&lt;TIn,TOut&gt;">
      <MemberSignature Language="C#" Value="protected System.Linq.IQueryable&lt;TOut&gt; ShadowPropertySelect&lt;TIn,TOut&gt; (System.Linq.IQueryable&lt;TIn&gt; source, object column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Linq.IQueryable`1&lt;!!TOut&gt; ShadowPropertySelect&lt;TIn, TOut&gt;(class System.Linq.IQueryable`1&lt;!!TIn&gt; source, object column) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ShadowPropertySelect``2(System.Linq.IQueryable{``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShadowPropertySelect(Of TIn, TOut) (source As IQueryable(Of TIn), column As Object) As IQueryable(Of TOut)" />
      <MemberSignature Language="F#" Value="member this.ShadowPropertySelect : System.Linq.IQueryable&lt;'In&gt; * obj -&gt; System.Linq.IQueryable&lt;'Out&gt;" Usage="simpleQueryTestBase.ShadowPropertySelect (source, column)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TIn, typename TOut&gt;&#xA; System::Linq::IQueryable&lt;TOut&gt; ^ ShadowPropertySelect(System::Linq::IQueryable&lt;TIn&gt; ^ source, System::Object ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TOut&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TIn" />
        <TypeParameter Name="TOut" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TIn&gt;" />
        <Parameter Name="column" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TIn">To be added.</typeparam>
        <typeparam name="TOut">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="column">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowPropertyWhere&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Linq.IQueryable&lt;T&gt; ShadowPropertyWhere&lt;T&gt; (System.Linq.IQueryable&lt;T&gt; source, object column, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Linq.IQueryable`1&lt;!!T&gt; ShadowPropertyWhere&lt;T&gt;(class System.Linq.IQueryable`1&lt;!!T&gt; source, object column, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ShadowPropertyWhere``1(System.Linq.IQueryable{``0},System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ShadowPropertyWhere(Of T) (source As IQueryable(Of T), column As Object, value As String) As IQueryable(Of T)" />
      <MemberSignature Language="F#" Value="member this.ShadowPropertyWhere : System.Linq.IQueryable&lt;'T&gt; * obj * string -&gt; System.Linq.IQueryable&lt;'T&gt;" Usage="simpleQueryTestBase.ShadowPropertyWhere (source, column, value)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; System::Linq::IQueryable&lt;T&gt; ^ ShadowPropertyWhere(System::Linq::IQueryable&lt;T&gt; ^ source, System::Object ^ column, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;T&gt;" />
        <Parameter Name="column" Type="System.Object" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="column">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shaper_command_caching_when_parameter_names_different">
      <MemberSignature Language="C#" Value="public virtual void Shaper_command_caching_when_parameter_names_different ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shaper_command_caching_when_parameter_names_different() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Shaper_command_caching_when_parameter_names_different" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Shaper_command_caching_when_parameter_names_different ()" />
      <MemberSignature Language="F#" Value="abstract member Shaper_command_caching_when_parameter_names_different : unit -&gt; unit&#xA;override this.Shaper_command_caching_when_parameter_names_different : unit -&gt; unit" Usage="simpleQueryTestBase.Shaper_command_caching_when_parameter_names_different " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shaper_command_caching_when_parameter_names_different();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Shaper_command_caching_when_parameter_names_different();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Shaper_command_caching_when_parameter_names_different();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_Predicate">
      <MemberSignature Language="C#" Value="public virtual void Single_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Single_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Single_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Single_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Single_Predicate : unit -&gt; unit&#xA;override this.Single_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Single_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Single_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Single_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Single_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_Throws">
      <MemberSignature Language="C#" Value="public virtual void Single_Throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Single_Throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Single_Throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Single_Throws ()" />
      <MemberSignature Language="F#" Value="abstract member Single_Throws : unit -&gt; unit&#xA;override this.Single_Throws : unit -&gt; unit" Usage="simpleQueryTestBase.Single_Throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Single_Throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Single_Throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Single_Throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault_Predicate">
      <MemberSignature Language="C#" Value="public virtual void SingleOrDefault_Predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SingleOrDefault_Predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SingleOrDefault_Predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SingleOrDefault_Predicate ()" />
      <MemberSignature Language="F#" Value="abstract member SingleOrDefault_Predicate : unit -&gt; unit&#xA;override this.SingleOrDefault_Predicate : unit -&gt; unit" Usage="simpleQueryTestBase.SingleOrDefault_Predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SingleOrDefault_Predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SingleOrDefault_Predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SingleOrDefault_Predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault_Throws">
      <MemberSignature Language="C#" Value="public virtual void SingleOrDefault_Throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SingleOrDefault_Throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.SingleOrDefault_Throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SingleOrDefault_Throws ()" />
      <MemberSignature Language="F#" Value="abstract member SingleOrDefault_Throws : unit -&gt; unit&#xA;override this.SingleOrDefault_Throws : unit -&gt; unit" Usage="simpleQueryTestBase.SingleOrDefault_Throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SingleOrDefault_Throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SingleOrDefault_Throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SingleOrDefault_Throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="simpleQueryTestBase.Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Skip_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Distinct : unit -&gt; unit&#xA;override this.Skip_Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_no_orderby">
      <MemberSignature Language="C#" Value="public virtual void Skip_no_orderby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_no_orderby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_no_orderby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_no_orderby ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_no_orderby : unit -&gt; unit&#xA;override this.Skip_no_orderby : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_no_orderby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_no_orderby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_no_orderby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_no_orderby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take">
      <MemberSignature Language="C#" Value="public virtual void Skip_Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Take ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take : unit -&gt; unit&#xA;override this.Skip_Take : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take_All">
      <MemberSignature Language="C#" Value="public virtual void Skip_Take_All ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Take_All() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Take_All" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Take_All ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take_All : unit -&gt; unit&#xA;override this.Skip_Take_All : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Take_All " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Take_All();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Take_All();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Take_All();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take_Any">
      <MemberSignature Language="C#" Value="public virtual void Skip_Take_Any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Take_Any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Take_Any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Take_Any ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take_Any : unit -&gt; unit&#xA;override this.Skip_Take_Any : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Take_Any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Take_Any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Take_Any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Take_Any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take_Any_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Skip_Take_Any_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Take_Any_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Take_Any_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Take_Any_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take_Any_with_predicate : unit -&gt; unit&#xA;override this.Skip_Take_Any_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Take_Any_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Take_Any_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Take_Any_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Take_Any_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip_Take_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Skip_Take_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip_Take_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Skip_Take_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip_Take_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Skip_Take_Distinct : unit -&gt; unit&#xA;override this.Skip_Take_Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.Skip_Take_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip_Take_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Skip_Take_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Skip_Take_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Static_equals_int_compared_to_long">
      <MemberSignature Language="C#" Value="public virtual void Static_equals_int_compared_to_long ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Static_equals_int_compared_to_long() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Static_equals_int_compared_to_long" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Static_equals_int_compared_to_long ()" />
      <MemberSignature Language="F#" Value="abstract member Static_equals_int_compared_to_long : unit -&gt; unit&#xA;override this.Static_equals_int_compared_to_long : unit -&gt; unit" Usage="simpleQueryTestBase.Static_equals_int_compared_to_long " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Static_equals_int_compared_to_long();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Static_equals_int_compared_to_long();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Static_equals_int_compared_to_long();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Static_equals_nullable_datetime_compared_to_non_nullable">
      <MemberSignature Language="C#" Value="public virtual void Static_equals_nullable_datetime_compared_to_non_nullable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Static_equals_nullable_datetime_compared_to_non_nullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Static_equals_nullable_datetime_compared_to_non_nullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Static_equals_nullable_datetime_compared_to_non_nullable ()" />
      <MemberSignature Language="F#" Value="abstract member Static_equals_nullable_datetime_compared_to_non_nullable : unit -&gt; unit&#xA;override this.Static_equals_nullable_datetime_compared_to_non_nullable : unit -&gt; unit" Usage="simpleQueryTestBase.Static_equals_nullable_datetime_compared_to_non_nullable " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Static_equals_nullable_datetime_compared_to_non_nullable();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Static_equals_nullable_datetime_compared_to_non_nullable();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Static_equals_nullable_datetime_compared_to_non_nullable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Static_string_equals_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Static_string_equals_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Static_string_equals_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Static_string_equals_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Static_string_equals_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Static_string_equals_in_predicate : unit -&gt; unit&#xA;override this.Static_string_equals_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Static_string_equals_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Static_string_equals_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Static_string_equals_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Static_string_equals_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Streaming_chained_sync_query">
      <MemberSignature Language="C#" Value="public virtual void Streaming_chained_sync_query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Streaming_chained_sync_query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Streaming_chained_sync_query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Streaming_chained_sync_query ()" />
      <MemberSignature Language="F#" Value="abstract member Streaming_chained_sync_query : unit -&gt; unit&#xA;override this.Streaming_chained_sync_query : unit -&gt; unit" Usage="simpleQueryTestBase.Streaming_chained_sync_query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Streaming_chained_sync_query();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Streaming_chained_sync_query();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Streaming_chained_sync_query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_multi_predicate">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_multi_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_multi_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_multi_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_multi_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_multi_predicate : unit -&gt; unit&#xA;override this.String_Compare_multi_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_multi_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_multi_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_multi_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_multi_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_nested">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_nested ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_nested : unit -&gt; unit&#xA;override this.String_Compare_nested : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_simple_client">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_simple_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_simple_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_simple_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_simple_client ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_simple_client : unit -&gt; unit&#xA;override this.String_Compare_simple_client : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_simple_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_simple_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_simple_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_simple_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_simple_one">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_simple_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_simple_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_simple_one" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_simple_one ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_simple_one : unit -&gt; unit&#xA;override this.String_Compare_simple_one : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_simple_one " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_simple_one();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_simple_one();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_simple_one();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_simple_zero">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_simple_zero ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_simple_zero() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_simple_zero" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_simple_zero ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_simple_zero : unit -&gt; unit&#xA;override this.String_Compare_simple_zero : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_simple_zero " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_simple_zero();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_simple_zero();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_simple_zero();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_to_multi_predicate">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_to_multi_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_to_multi_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_to_multi_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_to_multi_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_to_multi_predicate : unit -&gt; unit&#xA;override this.String_Compare_to_multi_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_to_multi_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_to_multi_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_to_multi_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_to_multi_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_to_nested">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_to_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_to_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_to_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_to_nested ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_to_nested : unit -&gt; unit&#xA;override this.String_Compare_to_nested : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_to_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_to_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_to_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_to_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_to_simple_client">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_to_simple_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_to_simple_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_to_simple_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_to_simple_client ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_to_simple_client : unit -&gt; unit&#xA;override this.String_Compare_to_simple_client : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_to_simple_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_to_simple_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_to_simple_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_to_simple_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_to_simple_one">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_to_simple_one ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_to_simple_one() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_to_simple_one" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_to_simple_one ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_to_simple_one : unit -&gt; unit&#xA;override this.String_Compare_to_simple_one : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_to_simple_one " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_to_simple_one();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_to_simple_one();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_to_simple_one();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Compare_to_simple_zero">
      <MemberSignature Language="C#" Value="public virtual void String_Compare_to_simple_zero ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Compare_to_simple_zero() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Compare_to_simple_zero" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Compare_to_simple_zero ()" />
      <MemberSignature Language="F#" Value="abstract member String_Compare_to_simple_zero : unit -&gt; unit&#xA;override this.String_Compare_to_simple_zero : unit -&gt; unit" Usage="simpleQueryTestBase.String_Compare_to_simple_zero " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Compare_to_simple_zero();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Compare_to_simple_zero();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Compare_to_simple_zero();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_compare_to_with_parameter">
      <MemberSignature Language="C#" Value="public virtual void String_compare_to_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_compare_to_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_compare_to_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_compare_to_with_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member String_compare_to_with_parameter : unit -&gt; unit&#xA;override this.String_compare_to_with_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.String_compare_to_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_compare_to_with_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_compare_to_with_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_compare_to_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_compare_with_parameter">
      <MemberSignature Language="C#" Value="public virtual void String_compare_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_compare_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_compare_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_compare_with_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member String_compare_with_parameter : unit -&gt; unit&#xA;override this.String_compare_with_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.String_compare_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_compare_with_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_compare_with_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_compare_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_concat_with_navigation1">
      <MemberSignature Language="C#" Value="public virtual void String_concat_with_navigation1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_concat_with_navigation1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_concat_with_navigation1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_concat_with_navigation1 ()" />
      <MemberSignature Language="F#" Value="abstract member String_concat_with_navigation1 : unit -&gt; unit&#xA;override this.String_concat_with_navigation1 : unit -&gt; unit" Usage="simpleQueryTestBase.String_concat_with_navigation1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_concat_with_navigation1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_concat_with_navigation1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_concat_with_navigation1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_concat_with_navigation2">
      <MemberSignature Language="C#" Value="public virtual void String_concat_with_navigation2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_concat_with_navigation2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_concat_with_navigation2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_concat_with_navigation2 ()" />
      <MemberSignature Language="F#" Value="abstract member String_concat_with_navigation2 : unit -&gt; unit&#xA;override this.String_concat_with_navigation2 : unit -&gt; unit" Usage="simpleQueryTestBase.String_concat_with_navigation2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_concat_with_navigation2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_concat_with_navigation2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_concat_with_navigation2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Column">
      <MemberSignature Language="C#" Value="public virtual void String_Contains_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Contains_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Contains_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Contains_Column ()" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Column : unit -&gt; unit&#xA;override this.String_Contains_Column : unit -&gt; unit" Usage="simpleQueryTestBase.String_Contains_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Contains_Column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Contains_Column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Contains_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Identity">
      <MemberSignature Language="C#" Value="public virtual void String_Contains_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Contains_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Contains_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Contains_Identity ()" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Identity : unit -&gt; unit&#xA;override this.String_Contains_Identity : unit -&gt; unit" Usage="simpleQueryTestBase.String_Contains_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Contains_Identity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Contains_Identity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Contains_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_Literal">
      <MemberSignature Language="C#" Value="public virtual void String_Contains_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Contains_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Contains_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Contains_Literal ()" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_Literal : unit -&gt; unit&#xA;override this.String_Contains_Literal : unit -&gt; unit" Usage="simpleQueryTestBase.String_Contains_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Contains_Literal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Contains_Literal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Contains_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_Contains_MethodCall">
      <MemberSignature Language="C#" Value="public virtual void String_Contains_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_Contains_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_Contains_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_Contains_MethodCall ()" />
      <MemberSignature Language="F#" Value="abstract member String_Contains_MethodCall : unit -&gt; unit&#xA;override this.String_Contains_MethodCall : unit -&gt; unit" Usage="simpleQueryTestBase.String_Contains_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_Contains_MethodCall();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_Contains_MethodCall();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_Contains_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Column">
      <MemberSignature Language="C#" Value="public virtual void String_EndsWith_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_EndsWith_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_EndsWith_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_EndsWith_Column ()" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Column : unit -&gt; unit&#xA;override this.String_EndsWith_Column : unit -&gt; unit" Usage="simpleQueryTestBase.String_EndsWith_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_EndsWith_Column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_EndsWith_Column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_EndsWith_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Identity">
      <MemberSignature Language="C#" Value="public virtual void String_EndsWith_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_EndsWith_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_EndsWith_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_EndsWith_Identity ()" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Identity : unit -&gt; unit&#xA;override this.String_EndsWith_Identity : unit -&gt; unit" Usage="simpleQueryTestBase.String_EndsWith_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_EndsWith_Identity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_EndsWith_Identity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_EndsWith_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_Literal">
      <MemberSignature Language="C#" Value="public virtual void String_EndsWith_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_EndsWith_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_EndsWith_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_EndsWith_Literal ()" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_Literal : unit -&gt; unit&#xA;override this.String_EndsWith_Literal : unit -&gt; unit" Usage="simpleQueryTestBase.String_EndsWith_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_EndsWith_Literal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_EndsWith_Literal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_EndsWith_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_EndsWith_MethodCall">
      <MemberSignature Language="C#" Value="public virtual void String_EndsWith_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_EndsWith_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_EndsWith_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_EndsWith_MethodCall ()" />
      <MemberSignature Language="F#" Value="abstract member String_EndsWith_MethodCall : unit -&gt; unit&#xA;override this.String_EndsWith_MethodCall : unit -&gt; unit" Usage="simpleQueryTestBase.String_EndsWith_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_EndsWith_MethodCall();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_EndsWith_MethodCall();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_EndsWith_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Column">
      <MemberSignature Language="C#" Value="public virtual void String_StartsWith_Column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_StartsWith_Column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_StartsWith_Column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_StartsWith_Column ()" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Column : unit -&gt; unit&#xA;override this.String_StartsWith_Column : unit -&gt; unit" Usage="simpleQueryTestBase.String_StartsWith_Column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_StartsWith_Column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_StartsWith_Column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_StartsWith_Column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Identity">
      <MemberSignature Language="C#" Value="public virtual void String_StartsWith_Identity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_StartsWith_Identity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_StartsWith_Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_StartsWith_Identity ()" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Identity : unit -&gt; unit&#xA;override this.String_StartsWith_Identity : unit -&gt; unit" Usage="simpleQueryTestBase.String_StartsWith_Identity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_StartsWith_Identity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_StartsWith_Identity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_StartsWith_Identity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_Literal">
      <MemberSignature Language="C#" Value="public virtual void String_StartsWith_Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_StartsWith_Literal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_StartsWith_Literal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_StartsWith_Literal ()" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_Literal : unit -&gt; unit&#xA;override this.String_StartsWith_Literal : unit -&gt; unit" Usage="simpleQueryTestBase.String_StartsWith_Literal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_StartsWith_Literal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_StartsWith_Literal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_StartsWith_Literal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_StartsWith_MethodCall">
      <MemberSignature Language="C#" Value="public virtual void String_StartsWith_MethodCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_StartsWith_MethodCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.String_StartsWith_MethodCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_StartsWith_MethodCall ()" />
      <MemberSignature Language="F#" Value="abstract member String_StartsWith_MethodCall : unit -&gt; unit&#xA;override this.String_StartsWith_MethodCall : unit -&gt; unit" Usage="simpleQueryTestBase.String_StartsWith_MethodCall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_StartsWith_MethodCall();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_StartsWith_MethodCall();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_StartsWith_MethodCall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_is_not_null_translated_correctly">
      <MemberSignature Language="C#" Value="public virtual void Subquery_is_not_null_translated_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_is_not_null_translated_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Subquery_is_not_null_translated_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_is_not_null_translated_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_is_not_null_translated_correctly : unit -&gt; unit&#xA;override this.Subquery_is_not_null_translated_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Subquery_is_not_null_translated_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_is_not_null_translated_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_is_not_null_translated_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_is_not_null_translated_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_is_null_translated_correctly">
      <MemberSignature Language="C#" Value="public virtual void Subquery_is_null_translated_correctly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_is_null_translated_correctly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Subquery_is_null_translated_correctly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_is_null_translated_correctly ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_is_null_translated_correctly : unit -&gt; unit&#xA;override this.Subquery_is_null_translated_correctly : unit -&gt; unit" Usage="simpleQueryTestBase.Subquery_is_null_translated_correctly " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_is_null_translated_correctly();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_is_null_translated_correctly();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_is_null_translated_correctly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_member_pushdown_does_not_change_original_subquery_model">
      <MemberSignature Language="C#" Value="public virtual void Subquery_member_pushdown_does_not_change_original_subquery_model ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_member_pushdown_does_not_change_original_subquery_model() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Subquery_member_pushdown_does_not_change_original_subquery_model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_member_pushdown_does_not_change_original_subquery_model ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_member_pushdown_does_not_change_original_subquery_model : unit -&gt; unit&#xA;override this.Subquery_member_pushdown_does_not_change_original_subquery_model : unit -&gt; unit" Usage="simpleQueryTestBase.Subquery_member_pushdown_does_not_change_original_subquery_model " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_member_pushdown_does_not_change_original_subquery_model();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_member_pushdown_does_not_change_original_subquery_model();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_member_pushdown_does_not_change_original_subquery_model();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring_with_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Substring_with_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Substring_with_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Substring_with_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Substring_with_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Substring_with_client_eval : unit -&gt; unit&#xA;override this.Substring_with_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Substring_with_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Substring_with_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Substring_with_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Substring_with_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring_with_closure">
      <MemberSignature Language="C#" Value="public virtual void Substring_with_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Substring_with_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Substring_with_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Substring_with_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Substring_with_closure : unit -&gt; unit&#xA;override this.Substring_with_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Substring_with_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Substring_with_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Substring_with_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Substring_with_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring_with_constant">
      <MemberSignature Language="C#" Value="public virtual void Substring_with_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Substring_with_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Substring_with_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Substring_with_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Substring_with_constant : unit -&gt; unit&#xA;override this.Substring_with_constant : unit -&gt; unit" Usage="simpleQueryTestBase.Substring_with_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Substring_with_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Substring_with_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Substring_with_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring_with_zero_length">
      <MemberSignature Language="C#" Value="public virtual void Substring_with_zero_length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Substring_with_zero_length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Substring_with_zero_length" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Substring_with_zero_length ()" />
      <MemberSignature Language="F#" Value="abstract member Substring_with_zero_length : unit -&gt; unit&#xA;override this.Substring_with_zero_length : unit -&gt; unit" Usage="simpleQueryTestBase.Substring_with_zero_length " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Substring_with_zero_length();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Substring_with_zero_length();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Substring_with_zero_length();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Substring_with_zero_startindex">
      <MemberSignature Language="C#" Value="public virtual void Substring_with_zero_startindex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Substring_with_zero_startindex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Substring_with_zero_startindex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Substring_with_zero_startindex ()" />
      <MemberSignature Language="F#" Value="abstract member Substring_with_zero_startindex : unit -&gt; unit&#xA;override this.Substring_with_zero_startindex : unit -&gt; unit" Usage="simpleQueryTestBase.Substring_with_zero_startindex " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Substring_with_zero_startindex();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Substring_with_zero_startindex();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Substring_with_zero_startindex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_on_float_column">
      <MemberSignature Language="C#" Value="public virtual void Sum_on_float_column ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_on_float_column() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_on_float_column" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_on_float_column ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_on_float_column : unit -&gt; unit&#xA;override this.Sum_on_float_column : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_on_float_column " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_on_float_column();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_on_float_column();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_on_float_column();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_on_float_column_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Sum_on_float_column_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_on_float_column_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_on_float_column_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_on_float_column_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_on_float_column_in_subquery : unit -&gt; unit&#xA;override this.Sum_on_float_column_in_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_on_float_column_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_on_float_column_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_on_float_column_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_on_float_column_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_over_subquery_is_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Sum_over_subquery_is_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_over_subquery_is_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_over_subquery_is_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_over_subquery_is_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_over_subquery_is_client_eval : unit -&gt; unit&#xA;override this.Sum_over_subquery_is_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_over_subquery_is_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_over_subquery_is_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_over_subquery_is_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_arg">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_arg : unit -&gt; unit&#xA;override this.Sum_with_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_arg_expression">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_arg_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_arg_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_arg_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_arg_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_arg_expression : unit -&gt; unit&#xA;override this.Sum_with_arg_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_arg_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_arg_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_arg_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_arg_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_binary_expression : unit -&gt; unit&#xA;override this.Sum_with_binary_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_coalesce">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_coalesce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_coalesce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_coalesce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_coalesce ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_coalesce : unit -&gt; unit&#xA;override this.Sum_with_coalesce : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_coalesce " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_coalesce();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_coalesce();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_coalesce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_division_on_decimal">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_division_on_decimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_division_on_decimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_division_on_decimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_division_on_decimal ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_division_on_decimal : unit -&gt; unit&#xA;override this.Sum_with_division_on_decimal : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_division_on_decimal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_division_on_decimal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_division_on_decimal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_division_on_decimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_division_on_decimal_no_significant_digits">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_division_on_decimal_no_significant_digits ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_division_on_decimal_no_significant_digits() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_division_on_decimal_no_significant_digits" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_division_on_decimal_no_significant_digits ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_division_on_decimal_no_significant_digits : unit -&gt; unit&#xA;override this.Sum_with_division_on_decimal_no_significant_digits : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_division_on_decimal_no_significant_digits " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_division_on_decimal_no_significant_digits();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_division_on_decimal_no_significant_digits();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_division_on_decimal_no_significant_digits();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_no_arg">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_no_arg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_no_arg() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_no_arg" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_no_arg ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_no_arg : unit -&gt; unit&#xA;override this.Sum_with_no_arg : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_no_arg " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_no_arg();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_no_arg();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_no_arg();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_no_arg_empty">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_no_arg_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_no_arg_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_no_arg_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_no_arg_empty ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_no_arg_empty : unit -&gt; unit&#xA;override this.Sum_with_no_arg_empty : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_no_arg_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_no_arg_empty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_no_arg_empty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_no_arg_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum_with_no_data_nullable">
      <MemberSignature Language="C#" Value="public virtual void Sum_with_no_data_nullable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sum_with_no_data_nullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Sum_with_no_data_nullable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sum_with_no_data_nullable ()" />
      <MemberSignature Language="F#" Value="abstract member Sum_with_no_data_nullable : unit -&gt; unit&#xA;override this.Sum_with_no_data_nullable : unit -&gt; unit" Usage="simpleQueryTestBase.Sum_with_no_data_nullable " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sum_with_no_data_nullable();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Sum_with_no_data_nullable();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Sum_with_no_data_nullable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_All">
      <MemberSignature Language="C#" Value="public virtual void Take_All ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_All() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_All" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_All ()" />
      <MemberSignature Language="F#" Value="abstract member Take_All : unit -&gt; unit&#xA;override this.Take_All : unit -&gt; unit" Usage="simpleQueryTestBase.Take_All " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_All();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_All();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_All();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Any_with_predicate">
      <MemberSignature Language="C#" Value="public virtual void Take_Any_with_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Any_with_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Any_with_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Any_with_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Any_with_predicate : unit -&gt; unit&#xA;override this.Take_Any_with_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Any_with_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Any_with_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Any_with_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Any_with_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Take_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Distinct : unit -&gt; unit&#xA;override this.Take_Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual void Take_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Distinct_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Distinct_Count : unit -&gt; unit&#xA;override this.Take_Distinct_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Distinct_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Distinct_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual void Take_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_OrderBy_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Take_OrderBy_Count : unit -&gt; unit&#xA;override this.Take_OrderBy_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Take_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_OrderBy_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_OrderBy_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_simple">
      <MemberSignature Language="C#" Value="public virtual void Take_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Take_simple : unit -&gt; unit&#xA;override this.Take_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Take_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_simple_parameterized">
      <MemberSignature Language="C#" Value="public virtual void Take_simple_parameterized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_simple_parameterized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_simple_parameterized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_simple_parameterized ()" />
      <MemberSignature Language="F#" Value="abstract member Take_simple_parameterized : unit -&gt; unit&#xA;override this.Take_simple_parameterized : unit -&gt; unit" Usage="simpleQueryTestBase.Take_simple_parameterized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_simple_parameterized();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_simple_parameterized();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_simple_parameterized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_simple_projection">
      <MemberSignature Language="C#" Value="public virtual void Take_simple_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_simple_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_simple_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_simple_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Take_simple_projection : unit -&gt; unit&#xA;override this.Take_simple_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Take_simple_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_simple_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_simple_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_simple_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Skip">
      <MemberSignature Language="C#" Value="public virtual void Take_Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Skip ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Skip : unit -&gt; unit&#xA;override this.Take_Skip : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Skip " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Skip();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Skip();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Skip();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Skip_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Take_Skip_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Skip_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Skip_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Skip_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Skip_Distinct : unit -&gt; unit&#xA;override this.Take_Skip_Distinct : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Skip_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Skip_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Skip_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Skip_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Skip_Distinct_Caching">
      <MemberSignature Language="C#" Value="public virtual void Take_Skip_Distinct_Caching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Skip_Distinct_Caching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Skip_Distinct_Caching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Skip_Distinct_Caching ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Skip_Distinct_Caching : unit -&gt; unit&#xA;override this.Take_Skip_Distinct_Caching : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Skip_Distinct_Caching " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Skip_Distinct_Caching();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Skip_Distinct_Caching();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Skip_Distinct_Caching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_skip_null_coalesce_operator">
      <MemberSignature Language="C#" Value="public virtual void Take_skip_null_coalesce_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_skip_null_coalesce_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_skip_null_coalesce_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_skip_null_coalesce_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Take_skip_null_coalesce_operator : unit -&gt; unit&#xA;override this.Take_skip_null_coalesce_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Take_skip_null_coalesce_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_skip_null_coalesce_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_skip_null_coalesce_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_skip_null_coalesce_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_subquery_projection">
      <MemberSignature Language="C#" Value="public virtual void Take_subquery_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_subquery_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_subquery_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_subquery_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Take_subquery_projection : unit -&gt; unit&#xA;override this.Take_subquery_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Take_subquery_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_subquery_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_subquery_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_subquery_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_Where_Distinct_Count">
      <MemberSignature Language="C#" Value="public virtual void Take_Where_Distinct_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_Where_Distinct_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_Where_Distinct_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_Where_Distinct_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Take_Where_Distinct_Count : unit -&gt; unit&#xA;override this.Take_Where_Distinct_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Take_Where_Distinct_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_Where_Distinct_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_Where_Distinct_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_Where_Distinct_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_with_single">
      <MemberSignature Language="C#" Value="public virtual void Take_with_single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_with_single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_with_single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_with_single ()" />
      <MemberSignature Language="F#" Value="abstract member Take_with_single : unit -&gt; unit&#xA;override this.Take_with_single : unit -&gt; unit" Usage="simpleQueryTestBase.Take_with_single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_with_single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_with_single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_with_single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Take_with_single_select_many">
      <MemberSignature Language="C#" Value="public virtual void Take_with_single_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Take_with_single_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Take_with_single_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Take_with_single_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Take_with_single_select_many : unit -&gt; unit&#xA;override this.Take_with_single_select_many : unit -&gt; unit" Usage="simpleQueryTestBase.Take_with_single_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Take_with_single_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Take_with_single_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Take_with_single_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_query_first">
      <MemberSignature Language="C#" Value="public virtual void Throws_on_concurrent_query_first ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_on_concurrent_query_first() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Throws_on_concurrent_query_first" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_on_concurrent_query_first ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_query_first : unit -&gt; unit&#xA;override this.Throws_on_concurrent_query_first : unit -&gt; unit" Usage="simpleQueryTestBase.Throws_on_concurrent_query_first " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_on_concurrent_query_first();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_on_concurrent_query_first();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_on_concurrent_query_first();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_query_list">
      <MemberSignature Language="C#" Value="public virtual void Throws_on_concurrent_query_list ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_on_concurrent_query_list() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Throws_on_concurrent_query_list" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_on_concurrent_query_list ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_query_list : unit -&gt; unit&#xA;override this.Throws_on_concurrent_query_list : unit -&gt; unit" Usage="simpleQueryTestBase.Throws_on_concurrent_query_list " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_on_concurrent_query_list();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_on_concurrent_query_list();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_on_concurrent_query_list();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString_with_formatter_is_evaluated_on_the_client">
      <MemberSignature Language="C#" Value="public virtual void ToString_with_formatter_is_evaluated_on_the_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToString_with_formatter_is_evaluated_on_the_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.ToString_with_formatter_is_evaluated_on_the_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ToString_with_formatter_is_evaluated_on_the_client ()" />
      <MemberSignature Language="F#" Value="abstract member ToString_with_formatter_is_evaluated_on_the_client : unit -&gt; unit&#xA;override this.ToString_with_formatter_is_evaluated_on_the_client : unit -&gt; unit" Usage="simpleQueryTestBase.ToString_with_formatter_is_evaluated_on_the_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ToString_with_formatter_is_evaluated_on_the_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ToString_with_formatter_is_evaluated_on_the_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ToString_with_formatter_is_evaluated_on_the_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim_with_char_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Trim_with_char_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Trim_with_char_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Trim_with_char_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Trim_with_char_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Trim_with_char_argument_in_predicate : unit -&gt; unit&#xA;override this.Trim_with_char_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Trim_with_char_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Trim_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Trim_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Trim_with_char_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim_with_char_array_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Trim_with_char_array_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Trim_with_char_array_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Trim_with_char_array_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Trim_with_char_array_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Trim_with_char_array_argument_in_predicate : unit -&gt; unit&#xA;override this.Trim_with_char_array_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Trim_with_char_array_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Trim_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Trim_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Trim_with_char_array_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim_without_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Trim_without_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Trim_without_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Trim_without_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Trim_without_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Trim_without_argument_in_predicate : unit -&gt; unit&#xA;override this.Trim_without_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Trim_without_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Trim_without_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Trim_without_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Trim_without_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd_with_char_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimEnd_with_char_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimEnd_with_char_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimEnd_with_char_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimEnd_with_char_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimEnd_with_char_argument_in_predicate : unit -&gt; unit&#xA;override this.TrimEnd_with_char_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimEnd_with_char_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimEnd_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimEnd_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimEnd_with_char_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd_with_char_array_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimEnd_with_char_array_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimEnd_with_char_array_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimEnd_with_char_array_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimEnd_with_char_array_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimEnd_with_char_array_argument_in_predicate : unit -&gt; unit&#xA;override this.TrimEnd_with_char_array_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimEnd_with_char_array_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimEnd_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimEnd_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimEnd_with_char_array_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd_without_arguments_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimEnd_without_arguments_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimEnd_without_arguments_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimEnd_without_arguments_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimEnd_without_arguments_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimEnd_without_arguments_in_predicate : unit -&gt; unit&#xA;override this.TrimEnd_without_arguments_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimEnd_without_arguments_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimEnd_without_arguments_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimEnd_without_arguments_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimEnd_without_arguments_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart_with_char_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimStart_with_char_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimStart_with_char_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimStart_with_char_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimStart_with_char_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimStart_with_char_argument_in_predicate : unit -&gt; unit&#xA;override this.TrimStart_with_char_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimStart_with_char_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimStart_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimStart_with_char_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimStart_with_char_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart_with_char_array_argument_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimStart_with_char_array_argument_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimStart_with_char_array_argument_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimStart_with_char_array_argument_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimStart_with_char_array_argument_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimStart_with_char_array_argument_in_predicate : unit -&gt; unit&#xA;override this.TrimStart_with_char_array_argument_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimStart_with_char_array_argument_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimStart_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimStart_with_char_array_argument_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimStart_with_char_array_argument_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart_without_arguments_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void TrimStart_without_arguments_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimStart_without_arguments_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.TrimStart_without_arguments_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimStart_without_arguments_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member TrimStart_without_arguments_in_predicate : unit -&gt; unit&#xA;override this.TrimStart_without_arguments_in_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.TrimStart_without_arguments_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimStart_without_arguments_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void TrimStart_without_arguments_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void TrimStart_without_arguments_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_dbset">
      <MemberSignature Language="C#" Value="public virtual void Union_dbset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Union_dbset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Union_dbset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Union_dbset ()" />
      <MemberSignature Language="F#" Value="abstract member Union_dbset : unit -&gt; unit&#xA;override this.Union_dbset : unit -&gt; unit" Usage="simpleQueryTestBase.Union_dbset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Union_dbset();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Union_dbset();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Union_dbset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_nested">
      <MemberSignature Language="C#" Value="public virtual void Union_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Union_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Union_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Union_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Union_nested : unit -&gt; unit&#xA;override this.Union_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Union_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Union_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Union_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Union_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_non_entity">
      <MemberSignature Language="C#" Value="public virtual void Union_non_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Union_non_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Union_non_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Union_non_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Union_non_entity : unit -&gt; unit&#xA;override this.Union_non_entity : unit -&gt; unit" Usage="simpleQueryTestBase.Union_non_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Union_non_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Union_non_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Union_non_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union_simple">
      <MemberSignature Language="C#" Value="public virtual void Union_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Union_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Union_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Union_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Union_simple : unit -&gt; unit&#xA;override this.Union_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Union_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Union_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Union_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Union_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_array_index">
      <MemberSignature Language="C#" Value="public virtual void Where_array_index ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_array_index() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_array_index" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_array_index ()" />
      <MemberSignature Language="F#" Value="abstract member Where_array_index : unit -&gt; unit&#xA;override this.Where_array_index : unit -&gt; unit" Usage="simpleQueryTestBase.Where_array_index " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_array_index();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_array_index();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_array_index();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_as_queryable_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_as_queryable_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_as_queryable_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_as_queryable_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_as_queryable_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_as_queryable_expression : unit -&gt; unit&#xA;override this.Where_as_queryable_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_as_queryable_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_as_queryable_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_as_queryable_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_as_queryable_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and : unit -&gt; unit&#xA;override this.Where_bitwise_and : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_and_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_with_logical_and ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_with_logical_and : unit -&gt; unit&#xA;override this.Where_bitwise_and_with_logical_and : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_and_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_with_logical_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_with_logical_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_and_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_and_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_and_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_and_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_and_with_logical_or ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_and_with_logical_or : unit -&gt; unit&#xA;override this.Where_bitwise_and_with_logical_or : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_and_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_and_with_logical_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_and_with_logical_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_and_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_or ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or : unit -&gt; unit&#xA;override this.Where_bitwise_or : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_with_logical_and">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_or_with_logical_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_or_with_logical_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_or_with_logical_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_or_with_logical_and ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or_with_logical_and : unit -&gt; unit&#xA;override this.Where_bitwise_or_with_logical_and : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_or_with_logical_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_or_with_logical_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_or_with_logical_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_or_with_logical_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bitwise_or_with_logical_or">
      <MemberSignature Language="C#" Value="public virtual void Where_bitwise_or_with_logical_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bitwise_or_with_logical_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bitwise_or_with_logical_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bitwise_or_with_logical_or ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bitwise_or_with_logical_or : unit -&gt; unit&#xA;override this.Where_bitwise_or_with_logical_or : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bitwise_or_with_logical_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bitwise_or_with_logical_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bitwise_or_with_logical_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bitwise_or_with_logical_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_client_side_negated">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_client_side_negated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_client_side_negated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_client_side_negated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_client_side_negated ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_client_side_negated : unit -&gt; unit&#xA;override this.Where_bool_client_side_negated : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_client_side_negated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_client_side_negated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_client_side_negated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_client_side_negated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_closure : unit -&gt; unit&#xA;override this.Where_bool_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member : unit -&gt; unit&#xA;override this.Where_bool_member : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_and_parameter_compared_to_binary_expression_nested">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_and_parameter_compared_to_binary_expression_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_and_parameter_compared_to_binary_expression_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_and_parameter_compared_to_binary_expression_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_and_parameter_compared_to_binary_expression_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_and_parameter_compared_to_binary_expression_nested : unit -&gt; unit&#xA;override this.Where_bool_member_and_parameter_compared_to_binary_expression_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_and_parameter_compared_to_binary_expression_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_and_parameter_compared_to_binary_expression_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_and_parameter_compared_to_binary_expression_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_and_parameter_compared_to_binary_expression_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_compared_to_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_compared_to_binary_expression : unit -&gt; unit&#xA;override this.Where_bool_member_compared_to_binary_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_compared_to_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_compared_to_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_equals_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_equals_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_equals_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_equals_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_equals_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_equals_constant : unit -&gt; unit&#xA;override this.Where_bool_member_equals_constant : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_equals_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_equals_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_equals_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_equals_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_false">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_false ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_false : unit -&gt; unit&#xA;override this.Where_bool_member_false : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_false();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_false();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_false_shadow">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_false_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_false_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_false_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_false_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_false_shadow : unit -&gt; unit&#xA;override this.Where_bool_member_false_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_false_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_false_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_false_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_false_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_in_complex_predicate">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_in_complex_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_in_complex_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_in_complex_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_in_complex_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_in_complex_predicate : unit -&gt; unit&#xA;override this.Where_bool_member_in_complex_predicate : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_in_complex_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_in_complex_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_in_complex_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_in_complex_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_negated_twice">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_negated_twice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_negated_twice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_negated_twice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_negated_twice ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_negated_twice : unit -&gt; unit&#xA;override this.Where_bool_member_negated_twice : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_negated_twice " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_negated_twice();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_negated_twice();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_negated_twice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_member_shadow">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_member_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_member_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_member_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_member_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_member_shadow : unit -&gt; unit&#xA;override this.Where_bool_member_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_member_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_member_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_member_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_member_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_parameter : unit -&gt; unit&#xA;override this.Where_bool_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_bool_parameter_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_bool_parameter_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_bool_parameter_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_bool_parameter_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_bool_parameter_compared_to_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_bool_parameter_compared_to_binary_expression : unit -&gt; unit&#xA;override this.Where_bool_parameter_compared_to_binary_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_bool_parameter_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_bool_parameter_compared_to_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_bool_parameter_compared_to_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_bool_parameter_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_chain">
      <MemberSignature Language="C#" Value="public virtual void Where_chain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_chain() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_chain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_chain ()" />
      <MemberSignature Language="F#" Value="abstract member Where_chain : unit -&gt; unit&#xA;override this.Where_chain : unit -&gt; unit" Usage="simpleQueryTestBase.Where_chain " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_chain();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_chain();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_chain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client">
      <MemberSignature Language="C#" Value="public virtual void Where_client ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_client() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_client" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_client ()" />
      <MemberSignature Language="F#" Value="abstract member Where_client : unit -&gt; unit&#xA;override this.Where_client : unit -&gt; unit" Usage="simpleQueryTestBase.Where_client " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_client();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_client();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_client();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client_and_server_non_top_level">
      <MemberSignature Language="C#" Value="public virtual void Where_client_and_server_non_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_client_and_server_non_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_client_and_server_non_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_client_and_server_non_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Where_client_and_server_non_top_level : unit -&gt; unit&#xA;override this.Where_client_and_server_non_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Where_client_and_server_non_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_client_and_server_non_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_client_and_server_non_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_client_and_server_non_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client_and_server_top_level">
      <MemberSignature Language="C#" Value="public virtual void Where_client_and_server_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_client_and_server_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_client_and_server_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_client_and_server_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Where_client_and_server_top_level : unit -&gt; unit&#xA;override this.Where_client_and_server_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Where_client_and_server_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_client_and_server_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_client_and_server_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_client_and_server_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client_deep_inside_predicate_and_server_top_level">
      <MemberSignature Language="C#" Value="public virtual void Where_client_deep_inside_predicate_and_server_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_client_deep_inside_predicate_and_server_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_client_deep_inside_predicate_and_server_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_client_deep_inside_predicate_and_server_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Where_client_deep_inside_predicate_and_server_top_level : unit -&gt; unit&#xA;override this.Where_client_deep_inside_predicate_and_server_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Where_client_deep_inside_predicate_and_server_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_client_deep_inside_predicate_and_server_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_client_deep_inside_predicate_and_server_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_client_deep_inside_predicate_and_server_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_client_or_server_top_level">
      <MemberSignature Language="C#" Value="public virtual void Where_client_or_server_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_client_or_server_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_client_or_server_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_client_or_server_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Where_client_or_server_top_level : unit -&gt; unit&#xA;override this.Where_client_or_server_top_level : unit -&gt; unit" Usage="simpleQueryTestBase.Where_client_or_server_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_client_or_server_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_client_or_server_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_client_or_server_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_constructed_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_constructed_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_constructed_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_constructed_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_equal : unit -&gt; unit&#xA;override this.Where_compare_constructed_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_constructed_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_constructed_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_constructed_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_constructed_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_multi_value_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_constructed_multi_value_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_constructed_multi_value_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_constructed_multi_value_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_constructed_multi_value_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_multi_value_equal : unit -&gt; unit&#xA;override this.Where_compare_constructed_multi_value_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_constructed_multi_value_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_constructed_multi_value_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_constructed_multi_value_not_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_constructed_multi_value_not_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_constructed_multi_value_not_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_constructed_multi_value_not_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_constructed_multi_value_not_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_constructed_multi_value_not_equal : unit -&gt; unit&#xA;override this.Where_compare_constructed_multi_value_not_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_constructed_multi_value_not_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_constructed_multi_value_not_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_null">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_null : unit -&gt; unit&#xA;override this.Where_compare_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_constructed_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_constructed_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_constructed_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_constructed_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_constructed_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_constructed_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_constructed_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_constructed_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_constructed_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_constructed_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_constructed_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_constructed_multi_value_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_constructed_multi_value_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_constructed_multi_value_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_constructed_multi_value_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_constructed_multi_value_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_constructed_multi_value_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_constructed_multi_value_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_constructed_multi_value_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_constructed_multi_value_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_constructed_multi_value_not_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_constructed_multi_value_not_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_constructed_multi_value_not_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_constructed_multi_value_not_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_constructed_multi_value_not_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_constructed_multi_value_not_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_constructed_multi_value_not_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_constructed_multi_value_not_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_constructed_multi_value_not_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_create_constructed_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_create_constructed_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_create_constructed_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_create_constructed_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_create_constructed_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_create_constructed_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_create_constructed_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_create_constructed_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_create_constructed_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_create_constructed_multi_value_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_create_constructed_multi_value_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_create_constructed_multi_value_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_create_constructed_multi_value_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_create_constructed_multi_value_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_create_constructed_multi_value_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_create_constructed_multi_value_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_create_constructed_multi_value_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_multi_value_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_create_constructed_multi_value_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_compare_tuple_create_constructed_multi_value_not_equal">
      <MemberSignature Language="C#" Value="public virtual void Where_compare_tuple_create_constructed_multi_value_not_equal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_compare_tuple_create_constructed_multi_value_not_equal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_compare_tuple_create_constructed_multi_value_not_equal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_compare_tuple_create_constructed_multi_value_not_equal ()" />
      <MemberSignature Language="F#" Value="abstract member Where_compare_tuple_create_constructed_multi_value_not_equal : unit -&gt; unit&#xA;override this.Where_compare_tuple_create_constructed_multi_value_not_equal : unit -&gt; unit" Usage="simpleQueryTestBase.Where_compare_tuple_create_constructed_multi_value_not_equal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_compare_tuple_create_constructed_multi_value_not_equal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_compare_tuple_create_constructed_multi_value_not_equal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_comparison_nullable_type_not_null">
      <MemberSignature Language="C#" Value="public virtual void Where_comparison_nullable_type_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_comparison_nullable_type_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_comparison_nullable_type_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_comparison_nullable_type_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_comparison_nullable_type_not_null : unit -&gt; unit&#xA;override this.Where_comparison_nullable_type_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_comparison_nullable_type_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_comparison_nullable_type_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_comparison_nullable_type_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_comparison_nullable_type_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_comparison_nullable_type_null">
      <MemberSignature Language="C#" Value="public virtual void Where_comparison_nullable_type_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_comparison_nullable_type_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_comparison_nullable_type_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_comparison_nullable_type_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_comparison_nullable_type_null : unit -&gt; unit&#xA;override this.Where_comparison_nullable_type_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_comparison_nullable_type_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_comparison_nullable_type_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_comparison_nullable_type_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_comparison_nullable_type_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_comparison_to_nullable_bool">
      <MemberSignature Language="C#" Value="public virtual void Where_comparison_to_nullable_bool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_comparison_to_nullable_bool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_comparison_to_nullable_bool" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_comparison_to_nullable_bool ()" />
      <MemberSignature Language="F#" Value="abstract member Where_comparison_to_nullable_bool : unit -&gt; unit&#xA;override this.Where_comparison_to_nullable_bool : unit -&gt; unit" Usage="simpleQueryTestBase.Where_comparison_to_nullable_bool " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_comparison_to_nullable_bool();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_comparison_to_nullable_bool();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_comparison_to_nullable_bool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_negated_expression_optimized">
      <MemberSignature Language="C#" Value="public virtual void Where_complex_negated_expression_optimized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_complex_negated_expression_optimized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_complex_negated_expression_optimized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_complex_negated_expression_optimized ()" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_negated_expression_optimized : unit -&gt; unit&#xA;override this.Where_complex_negated_expression_optimized : unit -&gt; unit" Usage="simpleQueryTestBase.Where_complex_negated_expression_optimized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_complex_negated_expression_optimized();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_complex_negated_expression_optimized();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_complex_negated_expression_optimized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_concat_string_int_comparison1">
      <MemberSignature Language="C#" Value="public virtual void Where_concat_string_int_comparison1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_concat_string_int_comparison1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_concat_string_int_comparison1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_concat_string_int_comparison1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_concat_string_int_comparison1 : unit -&gt; unit&#xA;override this.Where_concat_string_int_comparison1 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_concat_string_int_comparison1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_concat_string_int_comparison1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_concat_string_int_comparison1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_concat_string_int_comparison1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_concat_string_int_comparison2">
      <MemberSignature Language="C#" Value="public virtual void Where_concat_string_int_comparison2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_concat_string_int_comparison2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_concat_string_int_comparison2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_concat_string_int_comparison2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_concat_string_int_comparison2 : unit -&gt; unit&#xA;override this.Where_concat_string_int_comparison2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_concat_string_int_comparison2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_concat_string_int_comparison2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_concat_string_int_comparison2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_concat_string_int_comparison2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_concat_string_int_comparison3">
      <MemberSignature Language="C#" Value="public virtual void Where_concat_string_int_comparison3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_concat_string_int_comparison3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_concat_string_int_comparison3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_concat_string_int_comparison3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_concat_string_int_comparison3 : unit -&gt; unit&#xA;override this.Where_concat_string_int_comparison3 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_concat_string_int_comparison3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_concat_string_int_comparison3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_concat_string_int_comparison3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_concat_string_int_comparison3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_constant_is_not_null">
      <MemberSignature Language="C#" Value="public virtual void Where_constant_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_constant_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_constant_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_constant_is_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_constant_is_not_null : unit -&gt; unit&#xA;override this.Where_constant_is_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_constant_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_constant_is_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_constant_is_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_constant_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_constant_is_null">
      <MemberSignature Language="C#" Value="public virtual void Where_constant_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_constant_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_constant_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_constant_is_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_constant_is_null : unit -&gt; unit&#xA;override this.Where_constant_is_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_constant_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_constant_is_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_constant_is_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_constant_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_contains_on_navigation">
      <MemberSignature Language="C#" Value="public virtual void Where_contains_on_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_contains_on_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_contains_on_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_contains_on_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Where_contains_on_navigation : unit -&gt; unit&#xA;override this.Where_contains_on_navigation : unit -&gt; unit" Usage="simpleQueryTestBase.Where_contains_on_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_contains_on_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_contains_on_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_contains_on_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_date_add_year_constant_component">
      <MemberSignature Language="C#" Value="public virtual void Where_date_add_year_constant_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_date_add_year_constant_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_date_add_year_constant_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_date_add_year_constant_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_date_add_year_constant_component : unit -&gt; unit&#xA;override this.Where_date_add_year_constant_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_date_add_year_constant_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_date_add_year_constant_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_date_add_year_constant_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_date_add_year_constant_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_date_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_date_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_date_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_date_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_date_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_date_component : unit -&gt; unit&#xA;override this.Where_datetime_date_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_date_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_date_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_date_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_date_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_day_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_day_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_day_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_day_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_day_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_day_component : unit -&gt; unit&#xA;override this.Where_datetime_day_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_day_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_day_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_day_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_day_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_dayOfYear_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_dayOfYear_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_dayOfYear_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_dayOfYear_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_dayOfYear_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_dayOfYear_component : unit -&gt; unit&#xA;override this.Where_datetime_dayOfYear_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_dayOfYear_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_dayOfYear_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_dayOfYear_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_dayOfYear_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_hour_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_hour_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_hour_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_hour_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_hour_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_hour_component : unit -&gt; unit&#xA;override this.Where_datetime_hour_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_hour_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_hour_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_hour_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_hour_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_millisecond_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_millisecond_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_millisecond_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_millisecond_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_millisecond_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_millisecond_component : unit -&gt; unit&#xA;override this.Where_datetime_millisecond_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_millisecond_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_millisecond_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_millisecond_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_millisecond_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_minute_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_minute_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_minute_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_minute_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_minute_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_minute_component : unit -&gt; unit&#xA;override this.Where_datetime_minute_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_minute_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_minute_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_minute_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_minute_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_month_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_month_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_month_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_month_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_month_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_month_component : unit -&gt; unit&#xA;override this.Where_datetime_month_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_month_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_month_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_month_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_month_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_now">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_now ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_now() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_now" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_now ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_now : unit -&gt; unit&#xA;override this.Where_datetime_now : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_now " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_now();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_now();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_now();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_second_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_second_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_second_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_second_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_second_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_second_component : unit -&gt; unit&#xA;override this.Where_datetime_second_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_second_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_second_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_second_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_second_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_today">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_today ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_today() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_today" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_today ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_today : unit -&gt; unit&#xA;override this.Where_datetime_today : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_today " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_today();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_today();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_today();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_utcnow">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_utcnow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_utcnow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_utcnow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_utcnow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_utcnow : unit -&gt; unit&#xA;override this.Where_datetime_utcnow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_utcnow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_utcnow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_utcnow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_utcnow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_datetime_year_component">
      <MemberSignature Language="C#" Value="public virtual void Where_datetime_year_component ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_datetime_year_component() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_datetime_year_component" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_datetime_year_component ()" />
      <MemberSignature Language="F#" Value="abstract member Where_datetime_year_component : unit -&gt; unit&#xA;override this.Where_datetime_year_component : unit -&gt; unit" Usage="simpleQueryTestBase.Where_datetime_year_component " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_datetime_year_component();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_datetime_year_component();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_datetime_year_component();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_de_morgan_and_optimizated">
      <MemberSignature Language="C#" Value="public virtual void Where_de_morgan_and_optimizated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_de_morgan_and_optimizated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_de_morgan_and_optimizated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_de_morgan_and_optimizated ()" />
      <MemberSignature Language="F#" Value="abstract member Where_de_morgan_and_optimizated : unit -&gt; unit&#xA;override this.Where_de_morgan_and_optimizated : unit -&gt; unit" Usage="simpleQueryTestBase.Where_de_morgan_and_optimizated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_de_morgan_and_optimizated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_de_morgan_and_optimizated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_de_morgan_and_optimizated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_de_morgan_or_optimizated">
      <MemberSignature Language="C#" Value="public virtual void Where_de_morgan_or_optimizated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_de_morgan_or_optimizated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_de_morgan_or_optimizated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_de_morgan_or_optimizated ()" />
      <MemberSignature Language="F#" Value="abstract member Where_de_morgan_or_optimizated : unit -&gt; unit&#xA;override this.Where_de_morgan_or_optimizated : unit -&gt; unit" Usage="simpleQueryTestBase.Where_de_morgan_or_optimizated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_de_morgan_or_optimizated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_de_morgan_or_optimizated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_de_morgan_or_optimizated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_default">
      <MemberSignature Language="C#" Value="public virtual void Where_default ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_default() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_default" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_default ()" />
      <MemberSignature Language="F#" Value="abstract member Where_default : unit -&gt; unit&#xA;override this.Where_default : unit -&gt; unit" Usage="simpleQueryTestBase.Where_default " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_default();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_default();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_default();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_dictionary_key_access_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_dictionary_key_access_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_dictionary_key_access_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_dictionary_key_access_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_dictionary_key_access_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_dictionary_key_access_closure : unit -&gt; unit&#xA;override this.Where_dictionary_key_access_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_dictionary_key_access_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_dictionary_key_access_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_dictionary_key_access_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_dictionary_key_access_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_method_int">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_method_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_method_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_method_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_method_int ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_method_int : unit -&gt; unit&#xA;override this.Where_equals_method_int : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_method_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_method_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_method_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_method_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_method_string">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_method_string ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_method_string() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_method_string" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_method_string ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_method_string : unit -&gt; unit&#xA;override this.Where_equals_method_string : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_method_string " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_method_string();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_method_string();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_method_string();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_on_matched_nullable_int_types">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_on_matched_nullable_int_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_on_matched_nullable_int_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_on_matched_nullable_int_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_on_matched_nullable_int_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_on_matched_nullable_int_types : unit -&gt; unit&#xA;override this.Where_equals_on_matched_nullable_int_types : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_on_matched_nullable_int_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_on_matched_nullable_int_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_on_matched_nullable_int_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_on_matched_nullable_int_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_on_mismatched_types_int_nullable_int">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_on_mismatched_types_int_nullable_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_on_mismatched_types_int_nullable_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_on_mismatched_types_int_nullable_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_on_mismatched_types_int_nullable_int ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_on_mismatched_types_int_nullable_int : unit -&gt; unit&#xA;override this.Where_equals_on_mismatched_types_int_nullable_int : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_on_mismatched_types_int_nullable_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_int_nullable_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_int_nullable_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_on_mismatched_types_int_nullable_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_on_mismatched_types_nullable_int_long">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_on_mismatched_types_nullable_int_long ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_on_mismatched_types_nullable_int_long() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_on_mismatched_types_nullable_int_long" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_on_mismatched_types_nullable_int_long ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_on_mismatched_types_nullable_int_long : unit -&gt; unit&#xA;override this.Where_equals_on_mismatched_types_nullable_int_long : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_on_mismatched_types_nullable_int_long " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_nullable_int_long();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_nullable_int_long();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_on_mismatched_types_nullable_int_long();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_on_mismatched_types_nullable_long_nullable_int">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_on_mismatched_types_nullable_long_nullable_int ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_on_mismatched_types_nullable_long_nullable_int() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_on_mismatched_types_nullable_long_nullable_int" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_on_mismatched_types_nullable_long_nullable_int ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_on_mismatched_types_nullable_long_nullable_int : unit -&gt; unit&#xA;override this.Where_equals_on_mismatched_types_nullable_long_nullable_int : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_on_mismatched_types_nullable_long_nullable_int " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_nullable_long_nullable_int();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_on_mismatched_types_nullable_long_nullable_int();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_on_mismatched_types_nullable_long_nullable_int();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_on_null_nullable_int_types">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_on_null_nullable_int_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_on_null_nullable_int_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_on_null_nullable_int_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_on_null_nullable_int_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_on_null_nullable_int_types : unit -&gt; unit&#xA;override this.Where_equals_on_null_nullable_int_types : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_on_null_nullable_int_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_on_null_nullable_int_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_on_null_nullable_int_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_on_null_nullable_int_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_using_int_overload_on_mismatched_types">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_using_int_overload_on_mismatched_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_using_int_overload_on_mismatched_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_using_int_overload_on_mismatched_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_using_int_overload_on_mismatched_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_using_int_overload_on_mismatched_types : unit -&gt; unit&#xA;override this.Where_equals_using_int_overload_on_mismatched_types : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_using_int_overload_on_mismatched_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_using_int_overload_on_mismatched_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_using_int_overload_on_mismatched_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_using_int_overload_on_mismatched_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_equals_using_object_overload_on_mismatched_types">
      <MemberSignature Language="C#" Value="public virtual void Where_equals_using_object_overload_on_mismatched_types ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_equals_using_object_overload_on_mismatched_types() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_equals_using_object_overload_on_mismatched_types" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_equals_using_object_overload_on_mismatched_types ()" />
      <MemberSignature Language="F#" Value="abstract member Where_equals_using_object_overload_on_mismatched_types : unit -&gt; unit&#xA;override this.Where_equals_using_object_overload_on_mismatched_types : unit -&gt; unit" Usage="simpleQueryTestBase.Where_equals_using_object_overload_on_mismatched_types " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_equals_using_object_overload_on_mismatched_types();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_equals_using_object_overload_on_mismatched_types();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_equals_using_object_overload_on_mismatched_types();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_expression_invoke">
      <MemberSignature Language="C#" Value="public virtual void Where_expression_invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_expression_invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_expression_invoke" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_expression_invoke ()" />
      <MemberSignature Language="F#" Value="abstract member Where_expression_invoke : unit -&gt; unit&#xA;override this.Where_expression_invoke : unit -&gt; unit" Usage="simpleQueryTestBase.Where_expression_invoke " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_expression_invoke();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_expression_invoke();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_expression_invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_false">
      <MemberSignature Language="C#" Value="public virtual void Where_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_false ()" />
      <MemberSignature Language="F#" Value="abstract member Where_false : unit -&gt; unit&#xA;override this.Where_false : unit -&gt; unit" Usage="simpleQueryTestBase.Where_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_false();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_false();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_field_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_field_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_field_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_First">
      <MemberSignature Language="C#" Value="public virtual void Where_First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_First" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_First ()" />
      <MemberSignature Language="F#" Value="abstract member Where_First : unit -&gt; unit&#xA;override this.Where_First : unit -&gt; unit" Usage="simpleQueryTestBase.Where_First " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_First();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_First();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_First();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_functions_nested">
      <MemberSignature Language="C#" Value="public virtual void Where_functions_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_functions_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_functions_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_functions_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Where_functions_nested : unit -&gt; unit&#xA;override this.Where_functions_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Where_functions_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_functions_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_functions_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_functions_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_guid_newguid">
      <MemberSignature Language="C#" Value="public virtual void Where_guid_newguid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_guid_newguid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_guid_newguid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_guid_newguid ()" />
      <MemberSignature Language="F#" Value="abstract member Where_guid_newguid : unit -&gt; unit&#xA;override this.Where_guid_newguid : unit -&gt; unit" Usage="simpleQueryTestBase.Where_guid_newguid " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_guid_newguid();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_guid_newguid();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_guid_newguid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_identity_comparison">
      <MemberSignature Language="C#" Value="public virtual void Where_identity_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_identity_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_identity_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_identity_comparison ()" />
      <MemberSignature Language="F#" Value="abstract member Where_identity_comparison : unit -&gt; unit&#xA;override this.Where_identity_comparison : unit -&gt; unit" Usage="simpleQueryTestBase.Where_identity_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_identity_comparison();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_identity_comparison();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_identity_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_in_optimization_multiple">
      <MemberSignature Language="C#" Value="public virtual void Where_in_optimization_multiple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_in_optimization_multiple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_in_optimization_multiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_in_optimization_multiple ()" />
      <MemberSignature Language="F#" Value="abstract member Where_in_optimization_multiple : unit -&gt; unit&#xA;override this.Where_in_optimization_multiple : unit -&gt; unit" Usage="simpleQueryTestBase.Where_in_optimization_multiple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_in_optimization_multiple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_in_optimization_multiple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_in_optimization_multiple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_indexer_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_indexer_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_indexer_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_indexer_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_indexer_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_indexer_closure : unit -&gt; unit&#xA;override this.Where_indexer_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_indexer_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_indexer_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_indexer_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_indexer_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_is_not_null">
      <MemberSignature Language="C#" Value="public virtual void Where_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_is_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_is_not_null : unit -&gt; unit&#xA;override this.Where_is_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_is_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_is_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_is_null">
      <MemberSignature Language="C#" Value="public virtual void Where_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_is_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_is_null : unit -&gt; unit&#xA;override this.Where_is_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_is_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_is_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Is_on_same_type">
      <MemberSignature Language="C#" Value="public virtual void Where_Is_on_same_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Is_on_same_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Is_on_same_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Is_on_same_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Is_on_same_type : unit -&gt; unit&#xA;override this.Where_Is_on_same_type : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Is_on_same_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Is_on_same_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Is_on_same_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Is_on_same_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_join_orderby_join_select">
      <MemberSignature Language="C#" Value="public virtual void Where_join_orderby_join_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_join_orderby_join_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_join_orderby_join_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_join_orderby_join_select ()" />
      <MemberSignature Language="F#" Value="abstract member Where_join_orderby_join_select : unit -&gt; unit&#xA;override this.Where_join_orderby_join_select : unit -&gt; unit" Usage="simpleQueryTestBase.Where_join_orderby_join_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_join_orderby_join_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_join_orderby_join_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_join_orderby_join_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_join_select">
      <MemberSignature Language="C#" Value="public virtual void Where_join_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_join_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_join_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_join_select ()" />
      <MemberSignature Language="F#" Value="abstract member Where_join_select : unit -&gt; unit&#xA;override this.Where_join_select : unit -&gt; unit" Usage="simpleQueryTestBase.Where_join_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_join_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_join_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_join_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Last">
      <MemberSignature Language="C#" Value="public virtual void Where_Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Last() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Last" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Last ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Last : unit -&gt; unit&#xA;override this.Where_Last : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Last " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Last();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Last();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Last();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_LastOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_LastOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_LastOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_LastOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_LastOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_LastOrDefault : unit -&gt; unit&#xA;override this.Where_LastOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_LastOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_LastOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_LastOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_LastOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_abs_uncorrelated">
      <MemberSignature Language="C#" Value="public virtual void Where_math_abs_uncorrelated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_abs_uncorrelated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_abs_uncorrelated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_abs_uncorrelated ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_abs_uncorrelated : unit -&gt; unit&#xA;override this.Where_math_abs_uncorrelated : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_abs_uncorrelated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_abs_uncorrelated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_abs_uncorrelated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_abs_uncorrelated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_abs1">
      <MemberSignature Language="C#" Value="public virtual void Where_math_abs1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_abs1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_abs1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_abs1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_abs1 : unit -&gt; unit&#xA;override this.Where_math_abs1 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_abs1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_abs1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_abs1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_abs1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_abs2">
      <MemberSignature Language="C#" Value="public virtual void Where_math_abs2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_abs2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_abs2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_abs2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_abs2 : unit -&gt; unit&#xA;override this.Where_math_abs2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_abs2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_abs2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_abs2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_abs2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_abs3">
      <MemberSignature Language="C#" Value="public virtual void Where_math_abs3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_abs3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_abs3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_abs3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_abs3 : unit -&gt; unit&#xA;override this.Where_math_abs3 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_abs3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_abs3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_abs3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_abs3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_acos">
      <MemberSignature Language="C#" Value="public virtual void Where_math_acos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_acos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_acos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_acos ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_acos : unit -&gt; unit&#xA;override this.Where_math_acos : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_acos " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_acos();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_acos();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_acos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_asin">
      <MemberSignature Language="C#" Value="public virtual void Where_math_asin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_asin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_asin" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_asin ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_asin : unit -&gt; unit&#xA;override this.Where_math_asin : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_asin " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_asin();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_asin();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_asin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_atan">
      <MemberSignature Language="C#" Value="public virtual void Where_math_atan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_atan() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_atan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_atan ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_atan : unit -&gt; unit&#xA;override this.Where_math_atan : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_atan " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_atan();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_atan();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_atan();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_atan2">
      <MemberSignature Language="C#" Value="public virtual void Where_math_atan2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_atan2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_atan2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_atan2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_atan2 : unit -&gt; unit&#xA;override this.Where_math_atan2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_atan2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_atan2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_atan2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_atan2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_ceiling1">
      <MemberSignature Language="C#" Value="public virtual void Where_math_ceiling1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_ceiling1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_ceiling1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_ceiling1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_ceiling1 : unit -&gt; unit&#xA;override this.Where_math_ceiling1 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_ceiling1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_ceiling1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_ceiling1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_ceiling1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_ceiling2">
      <MemberSignature Language="C#" Value="public virtual void Where_math_ceiling2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_ceiling2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_ceiling2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_ceiling2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_ceiling2 : unit -&gt; unit&#xA;override this.Where_math_ceiling2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_ceiling2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_ceiling2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_ceiling2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_ceiling2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_cos">
      <MemberSignature Language="C#" Value="public virtual void Where_math_cos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_cos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_cos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_cos ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_cos : unit -&gt; unit&#xA;override this.Where_math_cos : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_cos " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_cos();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_cos();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_cos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_exp">
      <MemberSignature Language="C#" Value="public virtual void Where_math_exp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_exp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_exp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_exp ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_exp : unit -&gt; unit&#xA;override this.Where_math_exp : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_exp " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_exp();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_exp();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_exp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_floor">
      <MemberSignature Language="C#" Value="public virtual void Where_math_floor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_floor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_floor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_floor ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_floor : unit -&gt; unit&#xA;override this.Where_math_floor : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_floor " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_floor();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_floor();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_floor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_log">
      <MemberSignature Language="C#" Value="public virtual void Where_math_log ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_log() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_log" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_log ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_log : unit -&gt; unit&#xA;override this.Where_math_log : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_log " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_log();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_log();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_log();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_log_new_base">
      <MemberSignature Language="C#" Value="public virtual void Where_math_log_new_base ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_log_new_base() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_log_new_base" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_log_new_base ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_log_new_base : unit -&gt; unit&#xA;override this.Where_math_log_new_base : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_log_new_base " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_log_new_base();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_log_new_base();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_log_new_base();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_log10">
      <MemberSignature Language="C#" Value="public virtual void Where_math_log10 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_log10() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_log10" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_log10 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_log10 : unit -&gt; unit&#xA;override this.Where_math_log10 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_log10 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_log10();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_log10();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_log10();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_max">
      <MemberSignature Language="C#" Value="public virtual void Where_math_max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_max ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_max : unit -&gt; unit&#xA;override this.Where_math_max : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_max();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_max();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_min">
      <MemberSignature Language="C#" Value="public virtual void Where_math_min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_min ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_min : unit -&gt; unit&#xA;override this.Where_math_min : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_min();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_min();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_power">
      <MemberSignature Language="C#" Value="public virtual void Where_math_power ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_power() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_power" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_power ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_power : unit -&gt; unit&#xA;override this.Where_math_power : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_power " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_power();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_power();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_power();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_round">
      <MemberSignature Language="C#" Value="public virtual void Where_math_round ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_round() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_round" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_round ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_round : unit -&gt; unit&#xA;override this.Where_math_round : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_round " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_round();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_round();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_round();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_round2">
      <MemberSignature Language="C#" Value="public virtual void Where_math_round2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_round2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_round2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_round2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_round2 : unit -&gt; unit&#xA;override this.Where_math_round2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_round2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_round2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_round2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_round2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_sign">
      <MemberSignature Language="C#" Value="public virtual void Where_math_sign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_sign() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_sign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_sign ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_sign : unit -&gt; unit&#xA;override this.Where_math_sign : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_sign " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_sign();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_sign();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_sign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_sin">
      <MemberSignature Language="C#" Value="public virtual void Where_math_sin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_sin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_sin" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_sin ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_sin : unit -&gt; unit&#xA;override this.Where_math_sin : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_sin " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_sin();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_sin();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_sin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_sqrt">
      <MemberSignature Language="C#" Value="public virtual void Where_math_sqrt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_sqrt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_sqrt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_sqrt ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_sqrt : unit -&gt; unit&#xA;override this.Where_math_sqrt : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_sqrt " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_sqrt();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_sqrt();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_sqrt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_tan">
      <MemberSignature Language="C#" Value="public virtual void Where_math_tan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_tan() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_tan" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_tan ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_tan : unit -&gt; unit&#xA;override this.Where_math_tan : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_tan " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_tan();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_tan();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_tan();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_math_truncate">
      <MemberSignature Language="C#" Value="public virtual void Where_math_truncate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_math_truncate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_math_truncate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_math_truncate ()" />
      <MemberSignature Language="F#" Value="abstract member Where_math_truncate : unit -&gt; unit&#xA;override this.Where_math_truncate : unit -&gt; unit" Usage="simpleQueryTestBase.Where_math_truncate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_math_truncate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_math_truncate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_math_truncate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_method_call_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_method_call_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_method_call_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_method_call_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_method_call_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_method_call_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_method_call_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_method_call_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_method_call_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_nullable_type_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_method_call_nullable_type_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_method_call_nullable_type_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_method_call_nullable_type_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_method_call_nullable_type_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_nullable_type_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_method_call_nullable_type_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_method_call_nullable_type_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_method_call_nullable_type_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_method_call_nullable_type_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_method_call_nullable_type_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_method_call_nullable_type_reverse_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_method_call_nullable_type_reverse_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_method_call_nullable_type_reverse_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_method_call_nullable_type_reverse_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_method_call_nullable_type_reverse_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_method_call_nullable_type_reverse_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_method_call_nullable_type_reverse_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_method_call_nullable_type_reverse_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_method_call_nullable_type_reverse_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_method_call_nullable_type_reverse_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_method_call_nullable_type_reverse_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_contains_in_subquery_with_and">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_contains_in_subquery_with_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_contains_in_subquery_with_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_multiple_contains_in_subquery_with_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_contains_in_subquery_with_and ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_contains_in_subquery_with_and : unit -&gt; unit&#xA;override this.Where_multiple_contains_in_subquery_with_and : unit -&gt; unit" Usage="simpleQueryTestBase.Where_multiple_contains_in_subquery_with_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_contains_in_subquery_with_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_contains_in_subquery_with_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_contains_in_subquery_with_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_contains_in_subquery_with_or">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_contains_in_subquery_with_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_contains_in_subquery_with_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_multiple_contains_in_subquery_with_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_contains_in_subquery_with_or ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_contains_in_subquery_with_or : unit -&gt; unit&#xA;override this.Where_multiple_contains_in_subquery_with_or : unit -&gt; unit" Usage="simpleQueryTestBase.Where_multiple_contains_in_subquery_with_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_contains_in_subquery_with_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_contains_in_subquery_with_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_contains_in_subquery_with_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_named_tuple_item_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_named_tuple_item_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_named_tuple_item_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_named_tuple_item_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_named_tuple_item_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_named_tuple_item_closure : unit -&gt; unit&#xA;override this.Where_named_tuple_item_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_named_tuple_item_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_named_tuple_item_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_named_tuple_item_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_named_tuple_item_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_navigation_contains">
      <MemberSignature Language="C#" Value="public virtual void Where_navigation_contains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_navigation_contains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_navigation_contains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_navigation_contains ()" />
      <MemberSignature Language="F#" Value="abstract member Where_navigation_contains : unit -&gt; unit&#xA;override this.Where_navigation_contains : unit -&gt; unit" Usage="simpleQueryTestBase.Where_navigation_contains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_navigation_contains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_navigation_contains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_navigation_contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_negated_boolean_expression_compared_to_another_negated_boolean_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_negated_boolean_expression_compared_to_another_negated_boolean_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_negated_boolean_expression_compared_to_another_negated_boolean_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_negated_boolean_expression_compared_to_another_negated_boolean_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_negated_boolean_expression_compared_to_another_negated_boolean_expression : unit -&gt; unit&#xA;override this.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_negated_boolean_expression_compared_to_another_negated_boolean_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_negated_boolean_expression_compared_to_another_negated_boolean_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_negated_boolean_expression_compared_to_another_negated_boolean_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_negated_boolean_expression_compared_to_another_negated_boolean_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_nested_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nested_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nested_field_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_nested_field_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_nested_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nested_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache_error_method_null">
      <MemberSignature Language="C#" Value="public virtual void Where_nested_field_access_closure_via_query_cache_error_method_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nested_field_access_closure_via_query_cache_error_method_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_method_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nested_field_access_closure_via_query_cache_error_method_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache_error_method_null : unit -&gt; unit&#xA;override this.Where_nested_field_access_closure_via_query_cache_error_method_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_nested_field_access_closure_via_query_cache_error_method_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache_error_method_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache_error_method_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nested_field_access_closure_via_query_cache_error_method_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_field_access_closure_via_query_cache_error_null">
      <MemberSignature Language="C#" Value="public virtual void Where_nested_field_access_closure_via_query_cache_error_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nested_field_access_closure_via_query_cache_error_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_nested_field_access_closure_via_query_cache_error_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nested_field_access_closure_via_query_cache_error_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_field_access_closure_via_query_cache_error_null : unit -&gt; unit&#xA;override this.Where_nested_field_access_closure_via_query_cache_error_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_nested_field_access_closure_via_query_cache_error_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache_error_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nested_field_access_closure_via_query_cache_error_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nested_field_access_closure_via_query_cache_error_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nested_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_nested_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nested_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_nested_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nested_property_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nested_property_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_nested_property_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_nested_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nested_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nested_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nested_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_new_instance_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_new_instance_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_new_instance_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_new_instance_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_new_instance_field_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_new_instance_field_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_new_instance_field_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_new_instance_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_new_instance_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_new_instance_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_new_instance_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_bool_member_compared_to_binary_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_not_bool_member_compared_to_binary_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_bool_member_compared_to_binary_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_bool_member_compared_to_binary_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_bool_member_compared_to_binary_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_bool_member_compared_to_binary_expression : unit -&gt; unit&#xA;override this.Where_not_bool_member_compared_to_binary_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_bool_member_compared_to_binary_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_bool_member_compared_to_binary_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_bool_member_compared_to_binary_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_bool_member_compared_to_binary_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_bool_member_compared_to_not_bool_member">
      <MemberSignature Language="C#" Value="public virtual void Where_not_bool_member_compared_to_not_bool_member ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_bool_member_compared_to_not_bool_member() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_bool_member_compared_to_not_bool_member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_bool_member_compared_to_not_bool_member ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_bool_member_compared_to_not_bool_member : unit -&gt; unit&#xA;override this.Where_not_bool_member_compared_to_not_bool_member : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_bool_member_compared_to_not_bool_member " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_bool_member_compared_to_not_bool_member();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_bool_member_compared_to_not_bool_member();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_bool_member_compared_to_not_bool_member();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization1">
      <MemberSignature Language="C#" Value="public virtual void Where_not_in_optimization1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_in_optimization1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_in_optimization1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_in_optimization1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization1 : unit -&gt; unit&#xA;override this.Where_not_in_optimization1 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_in_optimization1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_in_optimization1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_in_optimization1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_in_optimization1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization2">
      <MemberSignature Language="C#" Value="public virtual void Where_not_in_optimization2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_in_optimization2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_in_optimization2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_in_optimization2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization2 : unit -&gt; unit&#xA;override this.Where_not_in_optimization2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_in_optimization2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_in_optimization2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_in_optimization2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_in_optimization2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization3">
      <MemberSignature Language="C#" Value="public virtual void Where_not_in_optimization3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_in_optimization3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_in_optimization3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_in_optimization3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization3 : unit -&gt; unit&#xA;override this.Where_not_in_optimization3 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_in_optimization3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_in_optimization3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_in_optimization3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_in_optimization3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_not_in_optimization4">
      <MemberSignature Language="C#" Value="public virtual void Where_not_in_optimization4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_not_in_optimization4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_not_in_optimization4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_not_in_optimization4 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_not_in_optimization4 : unit -&gt; unit&#xA;override this.Where_not_in_optimization4 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_not_in_optimization4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_not_in_optimization4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_not_in_optimization4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_not_in_optimization4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_null_is_not_null">
      <MemberSignature Language="C#" Value="public virtual void Where_null_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_null_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_null_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_null_is_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_null_is_not_null : unit -&gt; unit&#xA;override this.Where_null_is_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_null_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_null_is_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_null_is_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_null_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_null_is_null">
      <MemberSignature Language="C#" Value="public virtual void Where_null_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_null_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_null_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_null_is_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_null_is_null : unit -&gt; unit&#xA;override this.Where_null_is_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_null_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_null_is_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_null_is_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_null_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count">
      <MemberSignature Language="C#" Value="public virtual void Where_OrderBy_Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_OrderBy_Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_OrderBy_Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_OrderBy_Count ()" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count : unit -&gt; unit&#xA;override this.Where_OrderBy_Count : unit -&gt; unit" Usage="simpleQueryTestBase.Where_OrderBy_Count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_OrderBy_Count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_OrderBy_Count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_OrderBy_Count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Where_OrderBy_Count_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_OrderBy_Count_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_OrderBy_Count_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_OrderBy_Count_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count_client_eval : unit -&gt; unit&#xA;override this.Where_OrderBy_Count_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Where_OrderBy_Count_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_OrderBy_Count_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_OrderBy_Count_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_OrderBy_Count_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_OrderBy_Count_client_eval_mixed">
      <MemberSignature Language="C#" Value="public virtual void Where_OrderBy_Count_client_eval_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_OrderBy_Count_client_eval_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_OrderBy_Count_client_eval_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_OrderBy_Count_client_eval_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member Where_OrderBy_Count_client_eval_mixed : unit -&gt; unit&#xA;override this.Where_OrderBy_Count_client_eval_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.Where_OrderBy_Count_client_eval_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_OrderBy_Count_client_eval_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_OrderBy_Count_client_eval_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_OrderBy_Count_client_eval_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_orderby_join_select">
      <MemberSignature Language="C#" Value="public virtual void Where_orderby_join_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_orderby_join_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_orderby_join_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_orderby_join_select ()" />
      <MemberSignature Language="F#" Value="abstract member Where_orderby_join_select : unit -&gt; unit&#xA;override this.Where_orderby_join_select : unit -&gt; unit" Usage="simpleQueryTestBase.Where_orderby_join_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_orderby_join_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_orderby_join_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_orderby_join_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_orderby_select_many">
      <MemberSignature Language="C#" Value="public virtual void Where_orderby_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_orderby_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_orderby_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_orderby_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Where_orderby_select_many : unit -&gt; unit&#xA;override this.Where_orderby_select_many : unit -&gt; unit" Usage="simpleQueryTestBase.Where_orderby_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_orderby_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_orderby_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_orderby_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_poco_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_poco_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_poco_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_poco_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_poco_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_poco_closure : unit -&gt; unit&#xA;override this.Where_poco_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_poco_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_poco_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_poco_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_poco_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive">
      <MemberSignature Language="C#" Value="public virtual void Where_primitive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_primitive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_primitive" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_primitive ()" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive : unit -&gt; unit&#xA;override this.Where_primitive : unit -&gt; unit" Usage="simpleQueryTestBase.Where_primitive " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_primitive();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_primitive();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_primitive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive_tracked">
      <MemberSignature Language="C#" Value="public virtual void Where_primitive_tracked ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_primitive_tracked() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_primitive_tracked" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_primitive_tracked ()" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive_tracked : unit -&gt; unit&#xA;override this.Where_primitive_tracked : unit -&gt; unit" Usage="simpleQueryTestBase.Where_primitive_tracked " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_primitive_tracked();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_primitive_tracked();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_primitive_tracked();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_primitive_tracked2">
      <MemberSignature Language="C#" Value="public virtual void Where_primitive_tracked2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_primitive_tracked2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_primitive_tracked2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_primitive_tracked2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_primitive_tracked2 : unit -&gt; unit&#xA;override this.Where_primitive_tracked2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_primitive_tracked2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_primitive_tracked2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_primitive_tracked2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_primitive_tracked2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_projection">
      <MemberSignature Language="C#" Value="public virtual void Where_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Where_projection : unit -&gt; unit&#xA;override this.Where_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Where_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_property_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_property_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_property_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Property_shadow_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_Property_shadow_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Property_shadow_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Property_shadow_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Property_shadow_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Property_shadow_closure : unit -&gt; unit&#xA;override this.Where_Property_shadow_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Property_shadow_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Property_shadow_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Property_shadow_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Property_shadow_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Property_when_non_shadow">
      <MemberSignature Language="C#" Value="public virtual void Where_Property_when_non_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Property_when_non_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Property_when_non_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Property_when_non_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Property_when_non_shadow : unit -&gt; unit&#xA;override this.Where_Property_when_non_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Property_when_non_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Property_when_non_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Property_when_non_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Property_when_non_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Property_when_shadow">
      <MemberSignature Language="C#" Value="public virtual void Where_Property_when_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Property_when_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Property_when_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Property_when_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Property_when_shadow : unit -&gt; unit&#xA;override this.Where_Property_when_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Property_when_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Property_when_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Property_when_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Property_when_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Property_when_shaow_unconstrained_generic_method">
      <MemberSignature Language="C#" Value="public virtual void Where_Property_when_shaow_unconstrained_generic_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Property_when_shaow_unconstrained_generic_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Property_when_shaow_unconstrained_generic_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Property_when_shaow_unconstrained_generic_method ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Property_when_shaow_unconstrained_generic_method : unit -&gt; unit&#xA;override this.Where_Property_when_shaow_unconstrained_generic_method : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Property_when_shaow_unconstrained_generic_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Property_when_shaow_unconstrained_generic_method();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Property_when_shaow_unconstrained_generic_method();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Property_when_shaow_unconstrained_generic_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition : unit -&gt; unit&#xA;override this.Where_query_composition : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_multiple_elements_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_multiple_elements_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_multiple_elements_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_multiple_elements_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_multiple_elements_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_multiple_elements_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_multiple_elements_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_multiple_elements_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_multiple_elements_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_multiple_elements_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_multiple_elements_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_multiple_elements_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_multiple_elements_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_multiple_elements_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_multiple_elements_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_multiple_elements_SingleOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_multiple_elements_SingleOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_multiple_elements_SingleOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_multiple_elements_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_multiple_elements_SingleOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_multiple_elements_SingleOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_multiple_elements_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_no_elements_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_no_elements_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_no_elements_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_no_elements_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_no_elements_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_no_elements_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_no_elements_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_no_elements_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_no_elements_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_no_elements_Single">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_no_elements_Single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_no_elements_Single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_no_elements_Single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_no_elements_Single ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_no_elements_Single : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_no_elements_Single : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_no_elements_Single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_Single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_Single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_no_elements_Single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_no_elements_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_no_elements_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_no_elements_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_no_elements_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_no_elements_SingleOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_no_elements_SingleOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_no_elements_SingleOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_no_elements_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_SingleOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_no_elements_SingleOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_no_elements_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_one_element_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_one_element_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_one_element_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_one_element_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_one_element_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_one_element_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_one_element_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_one_element_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_one_element_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_one_element_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_one_element_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_entity_equality_one_element_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_entity_equality_one_element_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_entity_equality_one_element_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_entity_equality_one_element_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_entity_equality_one_element_SingleOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_entity_equality_one_element_SingleOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition_entity_equality_one_element_SingleOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_entity_equality_one_element_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_entity_equality_one_element_SingleOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_entity_equality_one_element_SingleOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_entity_equality_one_element_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_is_not_null">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_is_not_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_is_not_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_is_not_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_is_not_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_is_not_null : unit -&gt; unit&#xA;override this.Where_query_composition_is_not_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_is_not_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_is_not_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_is_not_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_is_not_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition_is_null">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition_is_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition_is_null : unit -&gt; unit&#xA;override this.Where_query_composition_is_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition_is_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition_is_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition2">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition2 : unit -&gt; unit&#xA;override this.Where_query_composition2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition2_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition2_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition2_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition2_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition2_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition2_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_query_composition2_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition2_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition2_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition2_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition2_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition2_FirstOrDefault_with_anonymous">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition2_FirstOrDefault_with_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition2_FirstOrDefault_with_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition2_FirstOrDefault_with_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition2_FirstOrDefault_with_anonymous ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition2_FirstOrDefault_with_anonymous : unit -&gt; unit&#xA;override this.Where_query_composition2_FirstOrDefault_with_anonymous : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition2_FirstOrDefault_with_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition2_FirstOrDefault_with_anonymous();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition2_FirstOrDefault_with_anonymous();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition2_FirstOrDefault_with_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition3">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition3 : unit -&gt; unit&#xA;override this.Where_query_composition3 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition4">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition4 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition4 : unit -&gt; unit&#xA;override this.Where_query_composition4 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition5">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition5 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition5 : unit -&gt; unit&#xA;override this.Where_query_composition5 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_query_composition6">
      <MemberSignature Language="C#" Value="public virtual void Where_query_composition6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_query_composition6() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_query_composition6" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_query_composition6 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_query_composition6 : unit -&gt; unit&#xA;override this.Where_query_composition6 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_query_composition6 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_query_composition6();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_query_composition6();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_query_composition6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many : unit -&gt; unit&#xA;override this.Where_select_many : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_and">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_and ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_and() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_and" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_and ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_and : unit -&gt; unit&#xA;override this.Where_select_many_and : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_and " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_and();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_and();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_and();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_or ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_or() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_or" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_or ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or : unit -&gt; unit&#xA;override this.Where_select_many_or : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_or " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_or();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_or();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_or();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or_with_parameter">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_or_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_or_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_or_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_or_with_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or_with_parameter : unit -&gt; unit&#xA;override this.Where_select_many_or_with_parameter : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_or_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_or_with_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_or_with_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_or_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or2">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_or2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_or2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_or2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_or2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or2 : unit -&gt; unit&#xA;override this.Where_select_many_or2 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_or2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_or2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_or2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_or2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or3">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_or3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_or3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_or3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_or3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or3 : unit -&gt; unit&#xA;override this.Where_select_many_or3 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_or3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_or3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_or3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_or3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_select_many_or4">
      <MemberSignature Language="C#" Value="public virtual void Where_select_many_or4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_select_many_or4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_select_many_or4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_select_many_or4 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_select_many_or4 : unit -&gt; unit&#xA;override this.Where_select_many_or4 : unit -&gt; unit" Usage="simpleQueryTestBase.Where_select_many_or4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_select_many_or4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_select_many_or4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_select_many_or4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_shadow_subquery_FirstOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_shadow_subquery_FirstOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_shadow_subquery_FirstOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_shadow_subquery_FirstOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_shadow_subquery_FirstOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_shadow_subquery_FirstOrDefault : unit -&gt; unit&#xA;override this.Where_shadow_subquery_FirstOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_shadow_subquery_FirstOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_shadow_subquery_FirstOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_shadow_subquery_FirstOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_shadow_subquery_FirstOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_short_member_comparison">
      <MemberSignature Language="C#" Value="public virtual void Where_short_member_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_short_member_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_short_member_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_short_member_comparison ()" />
      <MemberSignature Language="F#" Value="abstract member Where_short_member_comparison : unit -&gt; unit&#xA;override this.Where_short_member_comparison : unit -&gt; unit" Usage="simpleQueryTestBase.Where_short_member_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_short_member_comparison();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_short_member_comparison();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_short_member_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple">
      <MemberSignature Language="C#" Value="public virtual void Where_simple ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple : unit -&gt; unit&#xA;override this.Where_simple : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure : unit -&gt; unit&#xA;override this.Where_simple_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_constant">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_closure_constant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_closure_constant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_closure_constant" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_closure_constant ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_constant : unit -&gt; unit&#xA;override this.Where_simple_closure_constant : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_closure_constant " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_closure_constant();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_closure_constant();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_closure_constant();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_simple_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache_nullable_type">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_closure_via_query_cache_nullable_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_closure_via_query_cache_nullable_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_closure_via_query_cache_nullable_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache_nullable_type : unit -&gt; unit&#xA;override this.Where_simple_closure_via_query_cache_nullable_type : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_closure_via_query_cache_nullable_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache_nullable_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache_nullable_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_closure_via_query_cache_nullable_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_closure_via_query_cache_nullable_type_reverse">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_closure_via_query_cache_nullable_type_reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_closure_via_query_cache_nullable_type_reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_closure_via_query_cache_nullable_type_reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_closure_via_query_cache_nullable_type_reverse ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_closure_via_query_cache_nullable_type_reverse : unit -&gt; unit&#xA;override this.Where_simple_closure_via_query_cache_nullable_type_reverse : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_closure_via_query_cache_nullable_type_reverse " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache_nullable_type_reverse();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_closure_via_query_cache_nullable_type_reverse();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_closure_via_query_cache_nullable_type_reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_reversed">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_reversed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_reversed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_reversed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_reversed ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_reversed : unit -&gt; unit&#xA;override this.Where_simple_reversed : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_reversed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_reversed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_reversed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_reversed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_shadow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_shadow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_shadow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_shadow ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow : unit -&gt; unit&#xA;override this.Where_simple_shadow : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_shadow " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_shadow();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_shadow();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_shadow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_projection">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_shadow_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_shadow_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_shadow_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_shadow_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_projection : unit -&gt; unit&#xA;override this.Where_simple_shadow_projection : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_shadow_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_shadow_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_shadow_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_shadow_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_projection_mixed">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_shadow_projection_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_shadow_projection_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_shadow_projection_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_shadow_projection_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_projection_mixed : unit -&gt; unit&#xA;override this.Where_simple_shadow_projection_mixed : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_shadow_projection_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_shadow_projection_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_shadow_projection_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_shadow_projection_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_simple_shadow_subquery">
      <MemberSignature Language="C#" Value="public virtual void Where_simple_shadow_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_simple_shadow_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_simple_shadow_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_simple_shadow_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Where_simple_shadow_subquery : unit -&gt; unit&#xA;override this.Where_simple_shadow_subquery : unit -&gt; unit" Usage="simpleQueryTestBase.Where_simple_shadow_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_simple_shadow_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_simple_shadow_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_simple_shadow_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_Single">
      <MemberSignature Language="C#" Value="public virtual void Where_Single ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_Single() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_Single" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_Single ()" />
      <MemberSignature Language="F#" Value="abstract member Where_Single : unit -&gt; unit&#xA;override this.Where_Single : unit -&gt; unit" Usage="simpleQueryTestBase.Where_Single " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_Single();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_Single();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_Single();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_SingleOrDefault">
      <MemberSignature Language="C#" Value="public virtual void Where_SingleOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_SingleOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_SingleOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_SingleOrDefault ()" />
      <MemberSignature Language="F#" Value="abstract member Where_SingleOrDefault : unit -&gt; unit&#xA;override this.Where_SingleOrDefault : unit -&gt; unit" Usage="simpleQueryTestBase.Where_SingleOrDefault " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_SingleOrDefault();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_SingleOrDefault();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_SingleOrDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_static_field_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_static_field_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_static_field_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_static_field_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_static_field_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_static_field_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_static_field_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_static_field_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_static_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_static_field_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_static_field_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_static_property_access_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_static_property_access_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_static_property_access_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_static_property_access_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_static_property_access_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_static_property_access_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_static_property_access_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_static_property_access_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_static_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_static_property_access_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_static_property_access_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_indexof">
      <MemberSignature Language="C#" Value="public virtual void Where_string_indexof ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_indexof() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_indexof" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_indexof ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_indexof : unit -&gt; unit&#xA;override this.Where_string_indexof : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_indexof " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_indexof();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_indexof();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_indexof();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_length">
      <MemberSignature Language="C#" Value="public virtual void Where_string_length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_length" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_length ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_length : unit -&gt; unit&#xA;override this.Where_string_length : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_length " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_length();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_length();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_length();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_replace">
      <MemberSignature Language="C#" Value="public virtual void Where_string_replace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_replace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_replace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_replace ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_replace : unit -&gt; unit&#xA;override this.Where_string_replace : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_replace " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_replace();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_replace();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_replace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_substring">
      <MemberSignature Language="C#" Value="public virtual void Where_string_substring ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_substring() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_substring" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_substring ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_substring : unit -&gt; unit&#xA;override this.Where_string_substring : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_substring " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_substring();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_substring();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_substring();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_to_lower">
      <MemberSignature Language="C#" Value="public virtual void Where_string_to_lower ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_to_lower() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_to_lower" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_to_lower ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_to_lower : unit -&gt; unit&#xA;override this.Where_string_to_lower : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_to_lower " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_to_lower();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_to_lower();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_to_lower();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_string_to_upper">
      <MemberSignature Language="C#" Value="public virtual void Where_string_to_upper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_string_to_upper() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_string_to_upper" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_string_to_upper ()" />
      <MemberSignature Language="F#" Value="abstract member Where_string_to_upper : unit -&gt; unit&#xA;override this.Where_string_to_upper : unit -&gt; unit" Usage="simpleQueryTestBase.Where_string_to_upper " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_string_to_upper();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_string_to_upper();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_string_to_upper();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_all_not_equals">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_all_not_equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_all_not_equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_all_not_equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_all_not_equals ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_all_not_equals : unit -&gt; unit&#xA;override this.Where_subquery_all_not_equals : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_all_not_equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_all_not_equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_all_not_equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_all_not_equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_all_not_equals_operator">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_all_not_equals_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_all_not_equals_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_all_not_equals_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_all_not_equals_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_all_not_equals_operator : unit -&gt; unit&#xA;override this.Where_subquery_all_not_equals_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_all_not_equals_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_all_not_equals_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_all_not_equals_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_all_not_equals_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_all_not_equals_static">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_all_not_equals_static ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_all_not_equals_static() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_all_not_equals_static" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_all_not_equals_static ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_all_not_equals_static : unit -&gt; unit&#xA;override this.Where_subquery_all_not_equals_static : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_all_not_equals_static " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_all_not_equals_static();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_all_not_equals_static();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_all_not_equals_static();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_anon">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_anon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_anon() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_anon" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_anon ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_anon : unit -&gt; unit&#xA;override this.Where_subquery_anon : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_anon " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_anon();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_anon();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_anon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8956")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_anon_nested">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_anon_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_anon_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_anon_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_anon_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_anon_nested : unit -&gt; unit&#xA;override this.Where_subquery_anon_nested : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_anon_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_anon_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_anon_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_anon_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8956")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_any_equals">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_any_equals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_any_equals() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_any_equals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_any_equals ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_any_equals : unit -&gt; unit&#xA;override this.Where_subquery_any_equals : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_any_equals " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_any_equals();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_any_equals();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_any_equals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_any_equals_operator">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_any_equals_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_any_equals_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_any_equals_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_any_equals_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_any_equals_operator : unit -&gt; unit&#xA;override this.Where_subquery_any_equals_operator : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_any_equals_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_any_equals_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_any_equals_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_any_equals_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_any_equals_static">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_any_equals_static ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_any_equals_static() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_any_equals_static" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_any_equals_static ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_any_equals_static : unit -&gt; unit&#xA;override this.Where_subquery_any_equals_static : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_any_equals_static " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_any_equals_static();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_any_equals_static();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_any_equals_static();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_closure_via_query_cache">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_closure_via_query_cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_closure_via_query_cache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_closure_via_query_cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_closure_via_query_cache ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_closure_via_query_cache : unit -&gt; unit&#xA;override this.Where_subquery_closure_via_query_cache : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_closure_via_query_cache " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_closure_via_query_cache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_closure_via_query_cache();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_closure_via_query_cache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_correlated">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_correlated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_correlated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_correlated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_correlated ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_correlated : unit -&gt; unit&#xA;override this.Where_subquery_correlated : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_correlated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_correlated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_correlated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_correlated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_correlated_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_correlated_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_correlated_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_correlated_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_correlated_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_correlated_client_eval : unit -&gt; unit&#xA;override this.Where_subquery_correlated_client_eval : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_correlated_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_correlated_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_correlated_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_correlated_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_expression">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_expression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_expression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_expression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_expression ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_expression : unit -&gt; unit&#xA;override this.Where_subquery_expression : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_expression " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_expression();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_expression();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_expression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_expression_same_parametername">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_expression_same_parametername ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_expression_same_parametername() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_expression_same_parametername" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_expression_same_parametername ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_expression_same_parametername : unit -&gt; unit&#xA;override this.Where_subquery_expression_same_parametername : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_expression_same_parametername " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_expression_same_parametername();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_expression_same_parametername();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_expression_same_parametername();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_FirstOrDefault_compared_to_entity">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_FirstOrDefault_compared_to_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_FirstOrDefault_compared_to_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_FirstOrDefault_compared_to_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_FirstOrDefault_compared_to_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_FirstOrDefault_compared_to_entity : unit -&gt; unit&#xA;override this.Where_subquery_FirstOrDefault_compared_to_entity : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_FirstOrDefault_compared_to_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_FirstOrDefault_compared_to_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_FirstOrDefault_compared_to_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_FirstOrDefault_compared_to_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_FirstOrDefault_is_null">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_FirstOrDefault_is_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_FirstOrDefault_is_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_FirstOrDefault_is_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_FirstOrDefault_is_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_FirstOrDefault_is_null : unit -&gt; unit&#xA;override this.Where_subquery_FirstOrDefault_is_null : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_FirstOrDefault_is_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_FirstOrDefault_is_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_FirstOrDefault_is_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_FirstOrDefault_is_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_on_bool">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_on_bool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_on_bool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_on_bool" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_on_bool ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_on_bool : unit -&gt; unit&#xA;override this.Where_subquery_on_bool : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_on_bool " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_on_bool();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_on_bool();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_on_bool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_on_collection">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_on_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_on_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_on_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_on_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_on_collection : unit -&gt; unit&#xA;override this.Where_subquery_on_collection : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_on_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_on_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_on_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_on_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_recursive_trivial">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_recursive_trivial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_recursive_trivial() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_recursive_trivial" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_recursive_trivial ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_recursive_trivial : unit -&gt; unit&#xA;override this.Where_subquery_recursive_trivial : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_recursive_trivial " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_recursive_trivial();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_recursive_trivial();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_recursive_trivial();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_where_all">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_where_all ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_where_all() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_where_all" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_where_all ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_where_all : unit -&gt; unit&#xA;override this.Where_subquery_where_all : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_where_all " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_where_all();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_where_all();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_where_all();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_subquery_where_any">
      <MemberSignature Language="C#" Value="public virtual void Where_subquery_where_any ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_subquery_where_any() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_subquery_where_any" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_subquery_where_any ()" />
      <MemberSignature Language="F#" Value="abstract member Where_subquery_where_any : unit -&gt; unit&#xA;override this.Where_subquery_where_any : unit -&gt; unit" Usage="simpleQueryTestBase.Where_subquery_where_any " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_subquery_where_any();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_subquery_where_any();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_subquery_where_any();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_ternary_boolean_condition_false">
      <MemberSignature Language="C#" Value="public virtual void Where_ternary_boolean_condition_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_ternary_boolean_condition_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_ternary_boolean_condition_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_ternary_boolean_condition_false ()" />
      <MemberSignature Language="F#" Value="abstract member Where_ternary_boolean_condition_false : unit -&gt; unit&#xA;override this.Where_ternary_boolean_condition_false : unit -&gt; unit" Usage="simpleQueryTestBase.Where_ternary_boolean_condition_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_ternary_boolean_condition_false();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_ternary_boolean_condition_false();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_ternary_boolean_condition_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_ternary_boolean_condition_true">
      <MemberSignature Language="C#" Value="public virtual void Where_ternary_boolean_condition_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_ternary_boolean_condition_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_ternary_boolean_condition_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_ternary_boolean_condition_true ()" />
      <MemberSignature Language="F#" Value="abstract member Where_ternary_boolean_condition_true : unit -&gt; unit&#xA;override this.Where_ternary_boolean_condition_true : unit -&gt; unit" Usage="simpleQueryTestBase.Where_ternary_boolean_condition_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_ternary_boolean_condition_true();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_ternary_boolean_condition_true();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_ternary_boolean_condition_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_ternary_boolean_condition_with_another_condition">
      <MemberSignature Language="C#" Value="public virtual void Where_ternary_boolean_condition_with_another_condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_ternary_boolean_condition_with_another_condition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_ternary_boolean_condition_with_another_condition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_ternary_boolean_condition_with_another_condition ()" />
      <MemberSignature Language="F#" Value="abstract member Where_ternary_boolean_condition_with_another_condition : unit -&gt; unit&#xA;override this.Where_ternary_boolean_condition_with_another_condition : unit -&gt; unit" Usage="simpleQueryTestBase.Where_ternary_boolean_condition_with_another_condition " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_another_condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_another_condition();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_ternary_boolean_condition_with_another_condition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_ternary_boolean_condition_with_false_as_result_false">
      <MemberSignature Language="C#" Value="public virtual void Where_ternary_boolean_condition_with_false_as_result_false ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_ternary_boolean_condition_with_false_as_result_false() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_ternary_boolean_condition_with_false_as_result_false" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_ternary_boolean_condition_with_false_as_result_false ()" />
      <MemberSignature Language="F#" Value="abstract member Where_ternary_boolean_condition_with_false_as_result_false : unit -&gt; unit&#xA;override this.Where_ternary_boolean_condition_with_false_as_result_false : unit -&gt; unit" Usage="simpleQueryTestBase.Where_ternary_boolean_condition_with_false_as_result_false " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_false_as_result_false();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_false_as_result_false();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_ternary_boolean_condition_with_false_as_result_false();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_ternary_boolean_condition_with_false_as_result_true">
      <MemberSignature Language="C#" Value="public virtual void Where_ternary_boolean_condition_with_false_as_result_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_ternary_boolean_condition_with_false_as_result_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_ternary_boolean_condition_with_false_as_result_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_ternary_boolean_condition_with_false_as_result_true ()" />
      <MemberSignature Language="F#" Value="abstract member Where_ternary_boolean_condition_with_false_as_result_true : unit -&gt; unit&#xA;override this.Where_ternary_boolean_condition_with_false_as_result_true : unit -&gt; unit" Usage="simpleQueryTestBase.Where_ternary_boolean_condition_with_false_as_result_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_false_as_result_true();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_ternary_boolean_condition_with_false_as_result_true();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_ternary_boolean_condition_with_false_as_result_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_true">
      <MemberSignature Language="C#" Value="public virtual void Where_true ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_true() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_true" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_true ()" />
      <MemberSignature Language="F#" Value="abstract member Where_true : unit -&gt; unit&#xA;override this.Where_true : unit -&gt; unit" Usage="simpleQueryTestBase.Where_true " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_true();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_true();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_true();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_tuple_item_closure">
      <MemberSignature Language="C#" Value="public virtual void Where_tuple_item_closure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_tuple_item_closure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SimpleQueryTestBase`1.Where_tuple_item_closure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_tuple_item_closure ()" />
      <MemberSignature Language="F#" Value="abstract member Where_tuple_item_closure : unit -&gt; unit&#xA;override this.Where_tuple_item_closure : unit -&gt; unit" Usage="simpleQueryTestBase.Where_tuple_item_closure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_tuple_item_closure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_tuple_item_closure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_tuple_item_closure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>