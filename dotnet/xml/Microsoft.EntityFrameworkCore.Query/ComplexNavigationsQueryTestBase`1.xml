<Type Name="ComplexNavigationsQueryTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class ComplexNavigationsQueryTestBase&lt;TFixture&gt; : Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt; where TFixture : ComplexNavigationsQueryFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComplexNavigationsQueryTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryFixtureBase) TFixture&gt; extends Microsoft.EntityFrameworkCore.Query.QueryTestBase`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexNavigationsQueryTestBase(Of TFixture)&#xA;Inherits QueryTestBase(Of TFixture)" />
  <TypeSignature Language="F#" Value="type ComplexNavigationsQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; ComplexNavigationsQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    inherit QueryTestBase&lt;'Fixture (requires 'Fixture :&gt; ComplexNavigationsQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : ComplexNavigationsQueryFixtureBasegcnew()public ref class ComplexNavigationsQueryTestBase abstract : Microsoft::EntityFrameworkCore::Query::QueryTestBase&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryTestBase&lt;TFixture&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFixture">TFixture</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexNavigationsQueryTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexNavigationsQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ComplexNavigationsQueryTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" ComplexNavigationsQueryTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessing_optional_property_inside_result_operator_subquery">
      <MemberSignature Language="C#" Value="public virtual void Accessing_optional_property_inside_result_operator_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Accessing_optional_property_inside_result_operator_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Accessing_optional_property_inside_result_operator_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Accessing_optional_property_inside_result_operator_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Accessing_optional_property_inside_result_operator_subquery : unit -&gt; unit&#xA;override this.Accessing_optional_property_inside_result_operator_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Accessing_optional_property_inside_result_operator_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Accessing_optional_property_inside_result_operator_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Accessing_optional_property_inside_result_operator_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Accessing_optional_property_inside_result_operator_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="See issue#11464")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparing_collection_navigation_on_optional_reference_to_null">
      <MemberSignature Language="C#" Value="public virtual void Comparing_collection_navigation_on_optional_reference_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comparing_collection_navigation_on_optional_reference_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Comparing_collection_navigation_on_optional_reference_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Comparing_collection_navigation_on_optional_reference_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Comparing_collection_navigation_on_optional_reference_to_null : unit -&gt; unit&#xA;override this.Comparing_collection_navigation_on_optional_reference_to_null : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Comparing_collection_navigation_on_optional_reference_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Comparing_collection_navigation_on_optional_reference_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Comparing_collection_navigation_on_optional_reference_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Comparing_collection_navigation_on_optional_reference_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_multi_include_with_order_by_and_paging">
      <MemberSignature Language="C#" Value="public virtual void Complex_multi_include_with_order_by_and_paging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_multi_include_with_order_by_and_paging() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_multi_include_with_order_by_and_paging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_multi_include_with_order_by_and_paging ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_multi_include_with_order_by_and_paging : unit -&gt; unit&#xA;override this.Complex_multi_include_with_order_by_and_paging : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_multi_include_with_order_by_and_paging " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_multi_include_with_order_by_and_paging();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_multi_include_with_order_by_and_paging_joins_on_correct_key">
      <MemberSignature Language="C#" Value="public virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_multi_include_with_order_by_and_paging_joins_on_correct_key ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_multi_include_with_order_by_and_paging_joins_on_correct_key : unit -&gt; unit&#xA;override this.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2">
      <MemberSignature Language="C#" Value="public virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2 ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2 : unit -&gt; unit&#xA;override this.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_multi_include_with_order_by_and_paging_joins_on_correct_key2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_navigations_with_predicate_projected_into_anonymous_type">
      <MemberSignature Language="C#" Value="public virtual void Complex_navigations_with_predicate_projected_into_anonymous_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_navigations_with_predicate_projected_into_anonymous_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_navigations_with_predicate_projected_into_anonymous_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_navigations_with_predicate_projected_into_anonymous_type ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_navigations_with_predicate_projected_into_anonymous_type : unit -&gt; unit&#xA;override this.Complex_navigations_with_predicate_projected_into_anonymous_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_navigations_with_predicate_projected_into_anonymous_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_navigations_with_predicate_projected_into_anonymous_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_navigations_with_predicate_projected_into_anonymous_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_navigations_with_predicate_projected_into_anonymous_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_navigations_with_predicate_projected_into_anonymous_type2">
      <MemberSignature Language="C#" Value="public virtual void Complex_navigations_with_predicate_projected_into_anonymous_type2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_navigations_with_predicate_projected_into_anonymous_type2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_navigations_with_predicate_projected_into_anonymous_type2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_navigations_with_predicate_projected_into_anonymous_type2 ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_navigations_with_predicate_projected_into_anonymous_type2 : unit -&gt; unit&#xA;override this.Complex_navigations_with_predicate_projected_into_anonymous_type2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_navigations_with_predicate_projected_into_anonymous_type2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_navigations_with_predicate_projected_into_anonymous_type2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_navigations_with_predicate_projected_into_anonymous_type2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_navigations_with_predicate_projected_into_anonymous_type2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex_query_with_optional_navigations_and_client_side_evaluation">
      <MemberSignature Language="C#" Value="public virtual void Complex_query_with_optional_navigations_and_client_side_evaluation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complex_query_with_optional_navigations_and_client_side_evaluation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Complex_query_with_optional_navigations_and_client_side_evaluation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Complex_query_with_optional_navigations_and_client_side_evaluation ()" />
      <MemberSignature Language="F#" Value="abstract member Complex_query_with_optional_navigations_and_client_side_evaluation : unit -&gt; unit&#xA;override this.Complex_query_with_optional_navigations_and_client_side_evaluation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Complex_query_with_optional_navigations_and_client_side_evaluation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complex_query_with_optional_navigations_and_client_side_evaluation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Complex_query_with_optional_navigations_and_client_side_evaluation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Complex_query_with_optional_navigations_and_client_side_evaluation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains_with_subquery_optional_navigation_and_constant_item">
      <MemberSignature Language="C#" Value="public virtual void Contains_with_subquery_optional_navigation_and_constant_item ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Contains_with_subquery_optional_navigation_and_constant_item() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Contains_with_subquery_optional_navigation_and_constant_item" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Contains_with_subquery_optional_navigation_and_constant_item ()" />
      <MemberSignature Language="F#" Value="abstract member Contains_with_subquery_optional_navigation_and_constant_item : unit -&gt; unit&#xA;override this.Contains_with_subquery_optional_navigation_and_constant_item : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Contains_with_subquery_optional_navigation_and_constant_item " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Contains_with_subquery_optional_navigation_and_constant_item();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Contains_with_subquery_optional_navigation_and_constant_item();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Contains_with_subquery_optional_navigation_and_constant_item();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level">
      <MemberSignature Language="C#" Value="public virtual void Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit&#xA;override this.Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_nested_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level">
      <MemberSignature Language="C#" Value="public virtual void Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit&#xA;override this.Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_nested_two_levels_up_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level">
      <MemberSignature Language="C#" Value="public virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit&#xA;override this.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join">
      <MemberSignature Language="C#" Value="public virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join ()" />
      <MemberSignature Language="F#" Value="abstract member Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join : unit -&gt; unit&#xA;override this.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Correlated_subquery_doesnt_project_unnecessary_columns_in_top_level_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As ComplexNavigationsContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext" Usage="complexNavigationsQueryTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::ComplexNavigationsContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::ComplexNavigationsContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual void Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations : unit -&gt; unit&#xA;override this.Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Data_reader_is_closed_correct_number_of_times_for_include_queries_on_optional_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity_equality_empty">
      <MemberSignature Language="C#" Value="public virtual void Entity_equality_empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entity_equality_empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Entity_equality_empty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entity_equality_empty ()" />
      <MemberSignature Language="F#" Value="abstract member Entity_equality_empty : unit -&gt; unit&#xA;override this.Entity_equality_empty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Entity_equality_empty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entity_equality_empty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entity_equality_empty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entity_equality_empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries_for_detached_entities_are_removed">
      <MemberSignature Language="C#" Value="public virtual void Entries_for_detached_entities_are_removed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Entries_for_detached_entities_are_removed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Entries_for_detached_entities_are_removed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Entries_for_detached_entities_are_removed ()" />
      <MemberSignature Language="F#" Value="abstract member Entries_for_detached_entities_are_removed : unit -&gt; unit&#xA;override this.Entries_for_detached_entities_are_removed : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Entries_for_detached_entities_are_removed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Entries_for_detached_entities_are_removed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Entries_for_detached_entities_are_removed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Entries_for_detached_entities_are_removed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_multiple_result_operator_distinct_count_materializes_main_clause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_scalar_result_operator">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_scalar_result_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_scalar_result_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_scalar_result_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_scalar_result_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_scalar_result_operator : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_scalar_result_operator : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_scalar_result_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_scalar_result_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_scalar_result_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_scalar_result_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_unrelated_projection">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_unrelated_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_unrelated_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_unrelated_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_unrelated_projection : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_unrelated_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_unrelated_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_unrelated_projection2">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_unrelated_projection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_unrelated_projection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_unrelated_projection2 ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_unrelated_projection2 : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_unrelated_projection2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_unrelated_projection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_unrelated_projection3">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_unrelated_projection3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_unrelated_projection3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_unrelated_projection3 ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_unrelated_projection3 : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_unrelated_projection3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_unrelated_projection3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explicit_GroupJoin_in_subquery_with_unrelated_projection4">
      <MemberSignature Language="C#" Value="public virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Explicit_GroupJoin_in_subquery_with_unrelated_projection4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Explicit_GroupJoin_in_subquery_with_unrelated_projection4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Explicit_GroupJoin_in_subquery_with_unrelated_projection4 ()" />
      <MemberSignature Language="F#" Value="abstract member Explicit_GroupJoin_in_subquery_with_unrelated_projection4 : unit -&gt; unit&#xA;override this.Explicit_GroupJoin_in_subquery_with_unrelated_projection4 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Explicit_GroupJoin_in_subquery_with_unrelated_projection4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Explicit_GroupJoin_in_subquery_with_unrelated_projection4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_client_method_in_OrderBy">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_client_method_in_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_client_method_in_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_client_method_in_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_client_method_in_OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_client_method_in_OrderBy : unit -&gt; unit&#xA;override this.GroupJoin_client_method_in_OrderBy : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_client_method_in_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_client_method_in_OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_client_method_in_OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_client_method_in_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_client_method_on_outer">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_client_method_on_outer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_client_method_on_outer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_client_method_on_outer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_client_method_on_outer ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_client_method_on_outer : unit -&gt; unit&#xA;override this.GroupJoin_client_method_on_outer : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_client_method_on_outer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_client_method_on_outer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_client_method_on_outer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_client_method_on_outer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_in_subquery_with_client_projection">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_in_subquery_with_client_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_in_subquery_with_client_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_in_subquery_with_client_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_in_subquery_with_client_projection ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_in_subquery_with_client_projection : unit -&gt; unit&#xA;override this.GroupJoin_in_subquery_with_client_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_in_subquery_with_client_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_in_subquery_with_client_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_in_subquery_with_client_projection_nested1">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_in_subquery_with_client_projection_nested1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_in_subquery_with_client_projection_nested1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_in_subquery_with_client_projection_nested1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_in_subquery_with_client_projection_nested1 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_in_subquery_with_client_projection_nested1 : unit -&gt; unit&#xA;override this.GroupJoin_in_subquery_with_client_projection_nested1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_in_subquery_with_client_projection_nested1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection_nested1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection_nested1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_in_subquery_with_client_projection_nested1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_in_subquery_with_client_projection_nested2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_in_subquery_with_client_projection_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_in_subquery_with_client_projection_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_in_subquery_with_client_projection_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_in_subquery_with_client_projection_nested2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_in_subquery_with_client_projection_nested2 : unit -&gt; unit&#xA;override this.GroupJoin_in_subquery_with_client_projection_nested2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_in_subquery_with_client_projection_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection_nested2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_projection_nested2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_in_subquery_with_client_projection_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_in_subquery_with_client_result_operator">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_in_subquery_with_client_result_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_in_subquery_with_client_result_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_in_subquery_with_client_result_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_in_subquery_with_client_result_operator ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_in_subquery_with_client_result_operator : unit -&gt; unit&#xA;override this.GroupJoin_in_subquery_with_client_result_operator : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_in_subquery_with_client_result_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_result_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_in_subquery_with_client_result_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_in_subquery_with_client_result_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner : unit -&gt; unit&#xA;override this.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_inner();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer : unit -&gt; unit&#xA;override this.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method : unit -&gt; unit&#xA;override this.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_a_subquery_containing_another_GroupJoin_projecting_outer_with_client_method();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected : unit -&gt; unit&#xA;override this.GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_complex_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_left_side_being_a_subquery">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_left_side_being_a_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_left_side_being_a_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_left_side_being_a_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_left_side_being_a_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_left_side_being_a_subquery : unit -&gt; unit&#xA;override this.GroupJoin_on_left_side_being_a_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_left_side_being_a_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_left_side_being_a_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_left_side_being_a_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_left_side_being_a_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_right_side_being_a_subquery">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_right_side_being_a_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_right_side_being_a_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_right_side_being_a_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_right_side_being_a_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_right_side_being_a_subquery : unit -&gt; unit&#xA;override this.GroupJoin_on_right_side_being_a_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_right_side_being_a_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_right_side_being_a_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_right_side_being_a_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_right_side_being_a_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected : unit -&gt; unit&#xA;override this.GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_on_subquery_and_set_operation_on_grouping_but_nothing_from_grouping_is_projected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_reference_to_group_in_OrderBy">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_reference_to_group_in_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_reference_to_group_in_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_reference_to_group_in_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_reference_to_group_in_OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_reference_to_group_in_OrderBy : unit -&gt; unit&#xA;override this.GroupJoin_reference_to_group_in_OrderBy : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_reference_to_group_in_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_reference_to_group_in_OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_reference_to_group_in_OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_reference_to_group_in_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened : unit -&gt; unit&#xA;override this.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2 : unit -&gt; unit&#xA;override this.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3 : unit -&gt; unit&#xA;override this.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_complex_subquery_with_joins_does_not_get_flattened3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1 : unit -&gt; unit&#xA;override this.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2 ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2 : unit -&gt; unit&#xA;override this.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_complex_subquery_with_joins_with_reference_to_grouping2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_subquery_on_inner">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_subquery_on_inner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_subquery_on_inner() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_subquery_on_inner" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_subquery_on_inner ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_subquery_on_inner : unit -&gt; unit&#xA;override this.GroupJoin_with_subquery_on_inner : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_subquery_on_inner " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_subquery_on_inner();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_subquery_on_inner();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_subquery_on_inner();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty : unit -&gt; unit&#xA;override this.GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_with_subquery_on_inner_and_no_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin_without_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void GroupJoin_without_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GroupJoin_without_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.GroupJoin_without_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GroupJoin_without_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member GroupJoin_without_DefaultIfEmpty : unit -&gt; unit&#xA;override this.GroupJoin_without_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.GroupJoin_without_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GroupJoin_without_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void GroupJoin_without_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void GroupJoin_without_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_after_multiple_SelectMany_and_reference_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_after_multiple_SelectMany_and_reference_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_after_multiple_SelectMany_and_reference_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_after_multiple_SelectMany_and_reference_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_after_multiple_SelectMany_and_reference_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_after_multiple_SelectMany_and_reference_navigation : unit -&gt; unit&#xA;override this.Include_after_multiple_SelectMany_and_reference_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_after_multiple_SelectMany_and_reference_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_after_multiple_SelectMany_and_reference_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_after_multiple_SelectMany_and_reference_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_after_multiple_SelectMany_and_reference_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_after_SelectMany_and_multiple_reference_navigations">
      <MemberSignature Language="C#" Value="public virtual void Include_after_SelectMany_and_multiple_reference_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_after_SelectMany_and_multiple_reference_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_after_SelectMany_and_multiple_reference_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_after_SelectMany_and_multiple_reference_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Include_after_SelectMany_and_multiple_reference_navigations : unit -&gt; unit&#xA;override this.Include_after_SelectMany_and_multiple_reference_navigations : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_after_SelectMany_and_multiple_reference_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_after_SelectMany_and_multiple_reference_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_after_SelectMany_and_multiple_reference_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_after_SelectMany_and_multiple_reference_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_after_SelectMany_and_reference_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_after_SelectMany_and_reference_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_after_SelectMany_and_reference_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_after_SelectMany_and_reference_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_after_SelectMany_and_reference_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_after_SelectMany_and_reference_navigation : unit -&gt; unit&#xA;override this.Include_after_SelectMany_and_reference_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_after_SelectMany_and_reference_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_after_SelectMany_and_reference_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_after_SelectMany_and_reference_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_after_SelectMany_and_reference_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct">
      <MemberSignature Language="C#" Value="public virtual void Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct : unit -&gt; unit&#xA;override this.Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_after_SelectMany_and_reference_navigation_with_another_SelectMany_with_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_groupby_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_groupby_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_groupby_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_groupby_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_groupby_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_groupby_in_subquery : unit -&gt; unit&#xA;override this.Include_collection_with_groupby_in_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_groupby_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_groupby_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_groupby_in_subquery_and_filter_after_groupby">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_groupby_in_subquery_and_filter_after_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_groupby_in_subquery_and_filter_after_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_groupby_in_subquery_and_filter_after_groupby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_groupby_in_subquery_and_filter_after_groupby ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_groupby_in_subquery_and_filter_after_groupby : unit -&gt; unit&#xA;override this.Include_collection_with_groupby_in_subquery_and_filter_after_groupby : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_groupby_in_subquery_and_filter_after_groupby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery_and_filter_after_groupby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery_and_filter_after_groupby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_groupby_in_subquery_and_filter_after_groupby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_groupby_in_subquery_and_filter_before_groupby">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_groupby_in_subquery_and_filter_before_groupby ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_groupby_in_subquery_and_filter_before_groupby() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_groupby_in_subquery_and_filter_before_groupby" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_groupby_in_subquery_and_filter_before_groupby ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_groupby_in_subquery_and_filter_before_groupby : unit -&gt; unit&#xA;override this.Include_collection_with_groupby_in_subquery_and_filter_before_groupby : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_groupby_in_subquery_and_filter_before_groupby " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery_and_filter_before_groupby();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_groupby_in_subquery_and_filter_before_groupby();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_groupby_in_subquery_and_filter_before_groupby();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_multiple_orderbys_complex">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_multiple_orderbys_complex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_multiple_orderbys_complex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_multiple_orderbys_complex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_multiple_orderbys_complex ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_multiple_orderbys_complex : unit -&gt; unit&#xA;override this.Include_collection_with_multiple_orderbys_complex : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_multiple_orderbys_complex " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_complex();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_complex();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_multiple_orderbys_complex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_multiple_orderbys_complex_repeated">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_multiple_orderbys_complex_repeated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_multiple_orderbys_complex_repeated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_multiple_orderbys_complex_repeated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_multiple_orderbys_complex_repeated ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_multiple_orderbys_complex_repeated : unit -&gt; unit&#xA;override this.Include_collection_with_multiple_orderbys_complex_repeated : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_multiple_orderbys_complex_repeated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_complex_repeated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_complex_repeated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_multiple_orderbys_complex_repeated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_multiple_orderbys_member">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_multiple_orderbys_member ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_multiple_orderbys_member() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_multiple_orderbys_member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_multiple_orderbys_member ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_multiple_orderbys_member : unit -&gt; unit&#xA;override this.Include_collection_with_multiple_orderbys_member : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_multiple_orderbys_member " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_member();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_member();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_multiple_orderbys_member();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_multiple_orderbys_methodcall">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_multiple_orderbys_methodcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_multiple_orderbys_methodcall() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_multiple_orderbys_methodcall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_multiple_orderbys_methodcall ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_multiple_orderbys_methodcall : unit -&gt; unit&#xA;override this.Include_collection_with_multiple_orderbys_methodcall : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_multiple_orderbys_methodcall " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_methodcall();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_methodcall();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_multiple_orderbys_methodcall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_collection_with_multiple_orderbys_property">
      <MemberSignature Language="C#" Value="public virtual void Include_collection_with_multiple_orderbys_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_collection_with_multiple_orderbys_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_collection_with_multiple_orderbys_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_collection_with_multiple_orderbys_property ()" />
      <MemberSignature Language="F#" Value="abstract member Include_collection_with_multiple_orderbys_property : unit -&gt; unit&#xA;override this.Include_collection_with_multiple_orderbys_property : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_collection_with_multiple_orderbys_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_collection_with_multiple_orderbys_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_collection_with_multiple_orderbys_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_inside_subquery">
      <MemberSignature Language="C#" Value="public virtual void Include_inside_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_inside_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_inside_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_inside_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Include_inside_subquery : unit -&gt; unit&#xA;override this.Include_inside_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_inside_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_inside_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_inside_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_inside_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8722")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_nested_with_optional_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_nested_with_optional_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_nested_with_optional_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_nested_with_optional_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_nested_with_optional_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_nested_with_optional_navigation : unit -&gt; unit&#xA;override this.Include_nested_with_optional_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_nested_with_optional_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_nested_with_optional_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_nested_with_optional_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_nested_with_optional_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_collection_order_by_reference_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_collection_order_by_reference_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_collection_order_by_reference_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_reference_collection_order_by_reference_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_collection_order_by_reference_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_collection_order_by_reference_navigation : unit -&gt; unit&#xA;override this.Include_reference_collection_order_by_reference_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_reference_collection_order_by_reference_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_collection_order_by_reference_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_collection_order_by_reference_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_collection_order_by_reference_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_reference_with_groupby_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Include_reference_with_groupby_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_reference_with_groupby_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_reference_with_groupby_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_reference_with_groupby_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Include_reference_with_groupby_in_subquery : unit -&gt; unit&#xA;override this.Include_reference_with_groupby_in_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_reference_with_groupby_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_reference_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_reference_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_reference_with_groupby_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_groupjoin_skip_and_take">
      <MemberSignature Language="C#" Value="public virtual void Include_with_groupjoin_skip_and_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_groupjoin_skip_and_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_with_groupjoin_skip_and_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_groupjoin_skip_and_take ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_groupjoin_skip_and_take : unit -&gt; unit&#xA;override this.Include_with_groupjoin_skip_and_take : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_with_groupjoin_skip_and_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_groupjoin_skip_and_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_groupjoin_skip_and_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_groupjoin_skip_and_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include_with_optional_navigation">
      <MemberSignature Language="C#" Value="public virtual void Include_with_optional_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Include_with_optional_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Include_with_optional_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Include_with_optional_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Include_with_optional_navigation : unit -&gt; unit&#xA;override this.Include_with_optional_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Include_with_optional_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Include_with_optional_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Include_with_optional_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Include_with_optional_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties">
      <MemberSignature Language="C#" Value="public virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties ()" />
      <MemberSignature Language="F#" Value="abstract member Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties : unit -&gt; unit&#xA;override this.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_multiple_properties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property">
      <MemberSignature Language="C#" Value="public virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property ()" />
      <MemberSignature Language="F#" Value="abstract member Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property : unit -&gt; unit&#xA;override this.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_condition_optimizations_applied_correctly_when_anonymous_type_with_single_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_flattening_bug_4539">
      <MemberSignature Language="C#" Value="public virtual void Join_flattening_bug_4539 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_flattening_bug_4539() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_flattening_bug_4539" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_flattening_bug_4539 ()" />
      <MemberSignature Language="F#" Value="abstract member Join_flattening_bug_4539 : unit -&gt; unit&#xA;override this.Join_flattening_bug_4539 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_flattening_bug_4539 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_flattening_bug_4539();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_flattening_bug_4539();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_flattening_bug_4539();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_in_inner_selector_translated_to_subquery">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_in_inner_selector_translated_to_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_in_inner_selector_translated_to_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_in_inner_selector_translated_to_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_in_inner_selector_translated_to_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_in_inner_selector_translated_to_subquery : unit -&gt; unit&#xA;override this.Join_navigation_in_inner_selector_translated_to_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_in_inner_selector_translated_to_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_in_inner_selector_translated_to_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_in_inner_selector_translated_to_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_in_inner_selector_translated_to_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_in_outer_selector_translated_to_extra_join">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_in_outer_selector_translated_to_extra_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_in_outer_selector_translated_to_extra_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_in_outer_selector_translated_to_extra_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_in_outer_selector_translated_to_extra_join ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_in_outer_selector_translated_to_extra_join : unit -&gt; unit&#xA;override this.Join_navigation_in_outer_selector_translated_to_extra_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_in_outer_selector_translated_to_extra_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_in_outer_selector_translated_to_extra_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_in_outer_selector_translated_to_extra_join_nested">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_in_outer_selector_translated_to_extra_join_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_in_outer_selector_translated_to_extra_join_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_in_outer_selector_translated_to_extra_join_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_in_outer_selector_translated_to_extra_join_nested : unit -&gt; unit&#xA;override this.Join_navigation_in_outer_selector_translated_to_extra_join_nested : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_in_outer_selector_translated_to_extra_join_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_in_outer_selector_translated_to_extra_join_nested2">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_in_outer_selector_translated_to_extra_join_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_in_outer_selector_translated_to_extra_join_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_in_outer_selector_translated_to_extra_join_nested2 ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_in_outer_selector_translated_to_extra_join_nested2 : unit -&gt; unit&#xA;override this.Join_navigation_in_outer_selector_translated_to_extra_join_nested2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_in_outer_selector_translated_to_extra_join_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_in_outer_selector_translated_to_extra_join_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_key_access_optional">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_key_access_optional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_key_access_optional() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_key_access_optional" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_key_access_optional ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_key_access_optional : unit -&gt; unit&#xA;override this.Join_navigation_key_access_optional : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_key_access_optional " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_key_access_optional();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_key_access_optional();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_key_access_optional();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_key_access_required">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_key_access_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_key_access_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_key_access_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_key_access_required ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_key_access_required : unit -&gt; unit&#xA;override this.Join_navigation_key_access_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_key_access_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_key_access_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_key_access_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_key_access_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_deeply_nested_non_key_join">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_deeply_nested_non_key_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_deeply_nested_non_key_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_translated_to_subquery_deeply_nested_non_key_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_deeply_nested_non_key_join ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_deeply_nested_non_key_join : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_deeply_nested_non_key_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_translated_to_subquery_deeply_nested_non_key_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_deeply_nested_non_key_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_deeply_nested_non_key_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_deeply_nested_non_key_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_deeply_nested_required">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_deeply_nested_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_deeply_nested_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_translated_to_subquery_deeply_nested_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_deeply_nested_required ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_deeply_nested_required : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_deeply_nested_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_translated_to_subquery_deeply_nested_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_deeply_nested_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_deeply_nested_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_deeply_nested_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_nested">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_translated_to_subquery_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_nested : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_nested : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_translated_to_subquery_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_non_key_join">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_non_key_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_non_key_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_translated_to_subquery_non_key_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_non_key_join ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_non_key_join : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_non_key_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_translated_to_subquery_non_key_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_non_key_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_non_key_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_non_key_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigation_translated_to_subquery_self_ref">
      <MemberSignature Language="C#" Value="public virtual void Join_navigation_translated_to_subquery_self_ref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigation_translated_to_subquery_self_ref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigation_translated_to_subquery_self_ref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigation_translated_to_subquery_self_ref ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigation_translated_to_subquery_self_ref : unit -&gt; unit&#xA;override this.Join_navigation_translated_to_subquery_self_ref : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigation_translated_to_subquery_self_ref " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_self_ref();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigation_translated_to_subquery_self_ref();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigation_translated_to_subquery_self_ref();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision">
      <MemberSignature Language="C#" Value="public virtual void Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision ()" />
      <MemberSignature Language="F#" Value="abstract member Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision : unit -&gt; unit&#xA;override this.Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Join_navigations_in_inner_selector_translated_to_multiple_subquery_without_collision();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_navigation_converted_to_FK">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_navigation_converted_to_FK ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_navigation_converted_to_FK() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_navigation_converted_to_FK" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_navigation_converted_to_FK ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_navigation_converted_to_FK : unit -&gt; unit&#xA;override this.Key_equality_navigation_converted_to_FK : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_navigation_converted_to_FK " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_navigation_converted_to_FK();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_navigation_converted_to_FK();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_navigation_converted_to_FK();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_two_conditions_on_same_navigation">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_two_conditions_on_same_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_two_conditions_on_same_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_two_conditions_on_same_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_two_conditions_on_same_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_two_conditions_on_same_navigation : unit -&gt; unit&#xA;override this.Key_equality_two_conditions_on_same_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_two_conditions_on_same_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_two_conditions_on_same_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_two_conditions_on_same_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_two_conditions_on_same_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_two_conditions_on_same_navigation2">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_two_conditions_on_same_navigation2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_two_conditions_on_same_navigation2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_two_conditions_on_same_navigation2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_two_conditions_on_same_navigation2 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_two_conditions_on_same_navigation2 : unit -&gt; unit&#xA;override this.Key_equality_two_conditions_on_same_navigation2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_two_conditions_on_same_navigation2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_two_conditions_on_same_navigation2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_two_conditions_on_same_navigation2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_two_conditions_on_same_navigation2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_and_member_expression1">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_and_member_expression1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_and_member_expression1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_and_member_expression1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_and_member_expression1 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_and_member_expression1 : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_and_member_expression1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_and_member_expression1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_and_member_expression1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_and_member_expression2">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_and_member_expression2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_and_member_expression2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_and_member_expression2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_and_member_expression2 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_and_member_expression2 : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_and_member_expression2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_and_member_expression2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_and_member_expression2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_and_member_expression3">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_and_member_expression3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_and_member_expression3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_and_member_expression3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_and_member_expression3 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_and_member_expression3 : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_and_member_expression3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_and_member_expression3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_and_member_expression3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_and_member_expression3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_nested">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_nested : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_nested : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_nested2">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_nested2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_nested2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_nested2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_nested2 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_nested2 : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_nested2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_nested2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_nested2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_nested2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_nested2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_required">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_required ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_required : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_using_property_method_required2">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_using_property_method_required2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_using_property_method_required2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_using_property_method_required2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_using_property_method_required2 ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_using_property_method_required2 : unit -&gt; unit&#xA;override this.Key_equality_using_property_method_required2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_using_property_method_required2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_using_property_method_required2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_using_property_method_required2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_using_property_method_required2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key_equality_when_sentinel_ef_property">
      <MemberSignature Language="C#" Value="public virtual void Key_equality_when_sentinel_ef_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Key_equality_when_sentinel_ef_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Key_equality_when_sentinel_ef_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Key_equality_when_sentinel_ef_property ()" />
      <MemberSignature Language="F#" Value="abstract member Key_equality_when_sentinel_ef_property : unit -&gt; unit&#xA;override this.Key_equality_when_sentinel_ef_property : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Key_equality_when_sentinel_ef_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Key_equality_when_sentinel_ef_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Key_equality_when_sentinel_ef_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Key_equality_when_sentinel_ef_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level4_Include">
      <MemberSignature Language="C#" Value="public virtual void Level4_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Level4_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Level4_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Level4_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Level4_Include : unit -&gt; unit&#xA;override this.Level4_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Level4_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Level4_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Level4_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Level4_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manually_created_left_join_propagates_nullability_to_navigations">
      <MemberSignature Language="C#" Value="public virtual void Manually_created_left_join_propagates_nullability_to_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Manually_created_left_join_propagates_nullability_to_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Manually_created_left_join_propagates_nullability_to_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Manually_created_left_join_propagates_nullability_to_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Manually_created_left_join_propagates_nullability_to_navigations : unit -&gt; unit&#xA;override this.Manually_created_left_join_propagates_nullability_to_navigations : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Manually_created_left_join_propagates_nullability_to_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Manually_created_left_join_propagates_nullability_to_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Manually_created_left_join_propagates_nullability_to_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Manually_created_left_join_propagates_nullability_to_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member_doesnt_get_pushed_down_into_subquery_with_result_operator">
      <MemberSignature Language="C#" Value="public virtual void Member_doesnt_get_pushed_down_into_subquery_with_result_operator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Member_doesnt_get_pushed_down_into_subquery_with_result_operator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Member_doesnt_get_pushed_down_into_subquery_with_result_operator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Member_doesnt_get_pushed_down_into_subquery_with_result_operator ()" />
      <MemberSignature Language="F#" Value="abstract member Member_doesnt_get_pushed_down_into_subquery_with_result_operator : unit -&gt; unit&#xA;override this.Member_doesnt_get_pushed_down_into_subquery_with_result_operator : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Member_doesnt_get_pushed_down_into_subquery_with_result_operator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Member_doesnt_get_pushed_down_into_subquery_with_result_operator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Member_doesnt_get_pushed_down_into_subquery_with_result_operator();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Member_doesnt_get_pushed_down_into_subquery_with_result_operator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments">
      <MemberSignature Language="C#" Value="public virtual void Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments ()" />
      <MemberSignature Language="F#" Value="abstract member Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments : unit -&gt; unit&#xA;override this.Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Method_call_on_optional_navigation_translates_to_null_conditional_properly_for_arguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_include_with_groupby_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Multi_include_with_groupby_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_include_with_groupby_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_include_with_groupby_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_include_with_groupby_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_include_with_groupby_in_subquery : unit -&gt; unit&#xA;override this.Multi_include_with_groupby_in_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_include_with_groupby_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_include_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_include_with_groupby_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_include_with_groupby_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times : unit -&gt; unit&#xA;override this.Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_include_correct_PK_is_chosen_as_the_join_predicate_for_queries_that_join_same_table_multiple_times();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql : unit -&gt; unit&#xA;override this.Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_include_one_to_many_optional_and_one_to_many_optional_produces_valid_sql();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack : unit -&gt; unit&#xA;override this.Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_include_reads_key_values_from_data_reader_rather_than_incorrect_reader_deep_into_the_stack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_include_with_short_circuiting">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_include_with_short_circuiting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_include_with_short_circuiting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_include_with_short_circuiting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_include_with_short_circuiting ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_include_with_short_circuiting : unit -&gt; unit&#xA;override this.Multi_level_include_with_short_circuiting : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_include_with_short_circuiting " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_include_with_short_circuiting();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_include_with_short_circuiting();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_include_with_short_circuiting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_navigation_compared_to_null">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_navigation_compared_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_navigation_compared_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_navigation_compared_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_navigation_compared_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_navigation_compared_to_null : unit -&gt; unit&#xA;override this.Multi_level_navigation_compared_to_null : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_navigation_compared_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_navigation_compared_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_navigation_compared_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_navigation_compared_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multi_level_navigation_with_same_navigation_compared_to_null">
      <MemberSignature Language="C#" Value="public virtual void Multi_level_navigation_with_same_navigation_compared_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multi_level_navigation_with_same_navigation_compared_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multi_level_navigation_with_same_navigation_compared_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multi_level_navigation_with_same_navigation_compared_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Multi_level_navigation_with_same_navigation_compared_to_null : unit -&gt; unit&#xA;override this.Multi_level_navigation_with_same_navigation_compared_to_null : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multi_level_navigation_with_same_navigation_compared_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multi_level_navigation_with_same_navigation_compared_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multi_level_navigation_with_same_navigation_compared_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multi_level_navigation_with_same_navigation_compared_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_complex_include_select">
      <MemberSignature Language="C#" Value="public virtual void Multiple_complex_include_select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_complex_include_select() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_complex_include_select" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_complex_include_select ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_complex_include_select : unit -&gt; unit&#xA;override this.Multiple_complex_include_select : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_complex_include_select " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_complex_include_select();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_complex_include_select();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_complex_include_select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_complex_includes">
      <MemberSignature Language="C#" Value="public virtual void Multiple_complex_includes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_complex_includes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_complex_includes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_complex_includes ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_complex_includes : unit -&gt; unit&#xA;override this.Multiple_complex_includes : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_complex_includes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_complex_includes();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_complex_includes();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_complex_includes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_complex_includes_self_ref">
      <MemberSignature Language="C#" Value="public virtual void Multiple_complex_includes_self_ref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_complex_includes_self_ref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_complex_includes_self_ref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_complex_includes_self_ref ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_complex_includes_self_ref : unit -&gt; unit&#xA;override this.Multiple_complex_includes_self_ref : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_complex_includes_self_ref " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_complex_includes_self_ref();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_complex_includes_self_ref();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_complex_includes_self_ref();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_include_with_multiple_optional_navigations">
      <MemberSignature Language="C#" Value="public virtual void Multiple_include_with_multiple_optional_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_include_with_multiple_optional_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_include_with_multiple_optional_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_include_with_multiple_optional_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_include_with_multiple_optional_navigations : unit -&gt; unit&#xA;override this.Multiple_include_with_multiple_optional_navigations : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_include_with_multiple_optional_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_include_with_multiple_optional_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_include_with_multiple_optional_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_include_with_multiple_optional_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_optional_navigation_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_optional_navigation_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_optional_navigation_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_optional_navigation_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_optional_navigation_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_optional_navigation_with_Include : unit -&gt; unit&#xA;override this.Multiple_optional_navigation_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_optional_navigation_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_optional_navigation_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_optional_navigation_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_optional_navigation_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_optional_navigation_with_string_based_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_optional_navigation_with_string_based_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_optional_navigation_with_string_based_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_optional_navigation_with_string_based_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_optional_navigation_with_string_based_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_optional_navigation_with_string_based_Include : unit -&gt; unit&#xA;override this.Multiple_optional_navigation_with_string_based_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_optional_navigation_with_string_based_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_optional_navigation_with_string_based_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_optional_navigation_with_string_based_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_optional_navigation_with_string_based_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_required_navigation_using_multiple_selects_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_required_navigation_using_multiple_selects_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_required_navigation_using_multiple_selects_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_required_navigation_using_multiple_selects_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_required_navigation_using_multiple_selects_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_required_navigation_using_multiple_selects_with_Include : unit -&gt; unit&#xA;override this.Multiple_required_navigation_using_multiple_selects_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_required_navigation_using_multiple_selects_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_required_navigation_using_multiple_selects_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_required_navigation_using_multiple_selects_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_required_navigation_using_multiple_selects_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_required_navigation_using_multiple_selects_with_string_based_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_required_navigation_using_multiple_selects_with_string_based_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_required_navigation_using_multiple_selects_with_string_based_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_required_navigation_using_multiple_selects_with_string_based_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_required_navigation_using_multiple_selects_with_string_based_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_required_navigation_using_multiple_selects_with_string_based_Include : unit -&gt; unit&#xA;override this.Multiple_required_navigation_using_multiple_selects_with_string_based_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_required_navigation_using_multiple_selects_with_string_based_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_required_navigation_using_multiple_selects_with_string_based_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_required_navigation_using_multiple_selects_with_string_based_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_required_navigation_using_multiple_selects_with_string_based_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_required_navigation_with_string_based_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_required_navigation_with_string_based_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_required_navigation_with_string_based_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_required_navigation_with_string_based_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_required_navigation_with_string_based_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_required_navigation_with_string_based_Include : unit -&gt; unit&#xA;override this.Multiple_required_navigation_with_string_based_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_required_navigation_with_string_based_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_required_navigation_with_string_based_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_required_navigation_with_string_based_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_required_navigation_with_string_based_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_required_navigations_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_required_navigations_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_required_navigations_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_required_navigations_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_required_navigations_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_required_navigations_with_Include : unit -&gt; unit&#xA;override this.Multiple_required_navigations_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_required_navigations_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_required_navigations_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_required_navigations_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_required_navigations_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_SelectMany_calls">
      <MemberSignature Language="C#" Value="public virtual void Multiple_SelectMany_calls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_SelectMany_calls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_SelectMany_calls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_SelectMany_calls ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_SelectMany_calls : unit -&gt; unit&#xA;override this.Multiple_SelectMany_calls : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_SelectMany_calls " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_SelectMany_calls();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_SelectMany_calls();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_SelectMany_calls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_SelectMany_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_SelectMany_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_SelectMany_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_SelectMany_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_SelectMany_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_SelectMany_with_Include : unit -&gt; unit&#xA;override this.Multiple_SelectMany_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_SelectMany_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_SelectMany_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_SelectMany_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_SelectMany_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiple_SelectMany_with_string_based_Include">
      <MemberSignature Language="C#" Value="public virtual void Multiple_SelectMany_with_string_based_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Multiple_SelectMany_with_string_based_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Multiple_SelectMany_with_string_based_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Multiple_SelectMany_with_string_based_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Multiple_SelectMany_with_string_based_Include : unit -&gt; unit&#xA;override this.Multiple_SelectMany_with_string_based_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Multiple_SelectMany_with_string_based_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Multiple_SelectMany_with_string_based_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Multiple_SelectMany_with_string_based_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Multiple_SelectMany_with_string_based_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nav_rewrite_doesnt_apply_null_protection_for_function_arguments">
      <MemberSignature Language="C#" Value="public virtual void Nav_rewrite_doesnt_apply_null_protection_for_function_arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Nav_rewrite_doesnt_apply_null_protection_for_function_arguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Nav_rewrite_doesnt_apply_null_protection_for_function_arguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Nav_rewrite_doesnt_apply_null_protection_for_function_arguments ()" />
      <MemberSignature Language="F#" Value="abstract member Nav_rewrite_doesnt_apply_null_protection_for_function_arguments : unit -&gt; unit&#xA;override this.Nav_rewrite_doesnt_apply_null_protection_for_function_arguments : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Nav_rewrite_doesnt_apply_null_protection_for_function_arguments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Nav_rewrite_doesnt_apply_null_protection_for_function_arguments();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Nav_rewrite_doesnt_apply_null_protection_for_function_arguments();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Nav_rewrite_doesnt_apply_null_protection_for_function_arguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_filter_navigation_grouping_ordering_by_group_key">
      <MemberSignature Language="C#" Value="public virtual void Navigation_filter_navigation_grouping_ordering_by_group_key ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_filter_navigation_grouping_ordering_by_group_key() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_filter_navigation_grouping_ordering_by_group_key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_filter_navigation_grouping_ordering_by_group_key ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_filter_navigation_grouping_ordering_by_group_key : unit -&gt; unit&#xA;override this.Navigation_filter_navigation_grouping_ordering_by_group_key : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_filter_navigation_grouping_ordering_by_group_key " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_filter_navigation_grouping_ordering_by_group_key();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_filter_navigation_grouping_ordering_by_group_key();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_filter_navigation_grouping_ordering_by_group_key();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_inside_method_call_translated_to_join">
      <MemberSignature Language="C#" Value="public virtual void Navigation_inside_method_call_translated_to_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_inside_method_call_translated_to_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_inside_method_call_translated_to_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_inside_method_call_translated_to_join ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_inside_method_call_translated_to_join : unit -&gt; unit&#xA;override this.Navigation_inside_method_call_translated_to_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_inside_method_call_translated_to_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_inside_method_call_translated_to_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_inside_method_call_translated_to_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_inside_method_call_translated_to_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_inside_method_call_translated_to_join2">
      <MemberSignature Language="C#" Value="public virtual void Navigation_inside_method_call_translated_to_join2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_inside_method_call_translated_to_join2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_inside_method_call_translated_to_join2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_inside_method_call_translated_to_join2 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_inside_method_call_translated_to_join2 : unit -&gt; unit&#xA;override this.Navigation_inside_method_call_translated_to_join2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_inside_method_call_translated_to_join2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_inside_method_call_translated_to_join2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_inside_method_call_translated_to_join2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_inside_method_call_translated_to_join2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_key_access_optional_comparison">
      <MemberSignature Language="C#" Value="public virtual void Navigation_key_access_optional_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_key_access_optional_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_key_access_optional_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_key_access_optional_comparison ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_key_access_optional_comparison : unit -&gt; unit&#xA;override this.Navigation_key_access_optional_comparison : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_key_access_optional_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_key_access_optional_comparison();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_key_access_optional_comparison();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_key_access_optional_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_key_access_required_comparison">
      <MemberSignature Language="C#" Value="public virtual void Navigation_key_access_required_comparison ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_key_access_required_comparison() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_key_access_required_comparison" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_key_access_required_comparison ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_key_access_required_comparison : unit -&gt; unit&#xA;override this.Navigation_key_access_required_comparison : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_key_access_required_comparison " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_key_access_required_comparison();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_key_access_required_comparison();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_key_access_required_comparison();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigation_with_same_navigation_compared_to_null">
      <MemberSignature Language="C#" Value="public virtual void Navigation_with_same_navigation_compared_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigation_with_same_navigation_compared_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigation_with_same_navigation_compared_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigation_with_same_navigation_compared_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Navigation_with_same_navigation_compared_to_null : unit -&gt; unit&#xA;override this.Navigation_with_same_navigation_compared_to_null : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigation_with_same_navigation_compared_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigation_with_same_navigation_compared_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigation_with_same_navigation_compared_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigation_with_same_navigation_compared_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigations_compared_to_each_other1">
      <MemberSignature Language="C#" Value="public virtual void Navigations_compared_to_each_other1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigations_compared_to_each_other1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigations_compared_to_each_other1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigations_compared_to_each_other1 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigations_compared_to_each_other1 : unit -&gt; unit&#xA;override this.Navigations_compared_to_each_other1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigations_compared_to_each_other1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigations_compared_to_each_other1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigations_compared_to_each_other1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigations_compared_to_each_other1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigations_compared_to_each_other2">
      <MemberSignature Language="C#" Value="public virtual void Navigations_compared_to_each_other2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigations_compared_to_each_other2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigations_compared_to_each_other2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigations_compared_to_each_other2 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigations_compared_to_each_other2 : unit -&gt; unit&#xA;override this.Navigations_compared_to_each_other2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigations_compared_to_each_other2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigations_compared_to_each_other2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigations_compared_to_each_other2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigations_compared_to_each_other2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigations_compared_to_each_other3">
      <MemberSignature Language="C#" Value="public virtual void Navigations_compared_to_each_other3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigations_compared_to_each_other3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigations_compared_to_each_other3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigations_compared_to_each_other3 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigations_compared_to_each_other3 : unit -&gt; unit&#xA;override this.Navigations_compared_to_each_other3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigations_compared_to_each_other3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigations_compared_to_each_other3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigations_compared_to_each_other3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigations_compared_to_each_other3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigations_compared_to_each_other4">
      <MemberSignature Language="C#" Value="public virtual void Navigations_compared_to_each_other4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigations_compared_to_each_other4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigations_compared_to_each_other4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigations_compared_to_each_other4 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigations_compared_to_each_other4 : unit -&gt; unit&#xA;override this.Navigations_compared_to_each_other4 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigations_compared_to_each_other4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigations_compared_to_each_other4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigations_compared_to_each_other4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigations_compared_to_each_other4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigations_compared_to_each_other5">
      <MemberSignature Language="C#" Value="public virtual void Navigations_compared_to_each_other5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Navigations_compared_to_each_other5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Navigations_compared_to_each_other5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Navigations_compared_to_each_other5 ()" />
      <MemberSignature Language="F#" Value="abstract member Navigations_compared_to_each_other5 : unit -&gt; unit&#xA;override this.Navigations_compared_to_each_other5 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Navigations_compared_to_each_other5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Navigations_compared_to_each_other5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Navigations_compared_to_each_other5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Navigations_compared_to_each_other5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nested_group_join_with_take">
      <MemberSignature Language="C#" Value="public virtual void Nested_group_join_with_take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Nested_group_join_with_take() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Nested_group_join_with_take" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Nested_group_join_with_take ()" />
      <MemberSignature Language="F#" Value="abstract member Nested_group_join_with_take : unit -&gt; unit&#xA;override this.Nested_group_join_with_take : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Nested_group_join_with_take " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Nested_group_join_with_take();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Nested_group_join_with_take();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Nested_group_join_with_take();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1">
      <MemberSignature Language="C#" Value="public virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1 : unit -&gt; unit&#xA;override this.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2">
      <MemberSignature Language="C#" Value="public virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2 ()" />
      <MemberSignature Language="F#" Value="abstract member Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2 : unit -&gt; unit&#xA;override this.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_protection_logic_work_for_inner_key_access_of_manually_created_GroupJoin2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin">
      <MemberSignature Language="C#" Value="public virtual void Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin ()" />
      <MemberSignature Language="F#" Value="abstract member Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin : unit -&gt; unit&#xA;override this.Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_protection_logic_work_for_outer_key_access_of_manually_created_GroupJoin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_reference_protection_complex">
      <MemberSignature Language="C#" Value="public virtual void Null_reference_protection_complex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_reference_protection_complex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_reference_protection_complex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_reference_protection_complex ()" />
      <MemberSignature Language="F#" Value="abstract member Null_reference_protection_complex : unit -&gt; unit&#xA;override this.Null_reference_protection_complex : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_reference_protection_complex " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_reference_protection_complex();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_reference_protection_complex();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_reference_protection_complex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_reference_protection_complex_client_eval">
      <MemberSignature Language="C#" Value="public virtual void Null_reference_protection_complex_client_eval ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_reference_protection_complex_client_eval() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_reference_protection_complex_client_eval" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_reference_protection_complex_client_eval ()" />
      <MemberSignature Language="F#" Value="abstract member Null_reference_protection_complex_client_eval : unit -&gt; unit&#xA;override this.Null_reference_protection_complex_client_eval : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_reference_protection_complex_client_eval " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_reference_protection_complex_client_eval();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_reference_protection_complex_client_eval();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_reference_protection_complex_client_eval();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null_reference_protection_complex_materialization">
      <MemberSignature Language="C#" Value="public virtual void Null_reference_protection_complex_materialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Null_reference_protection_complex_materialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Null_reference_protection_complex_materialization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Null_reference_protection_complex_materialization ()" />
      <MemberSignature Language="F#" Value="abstract member Null_reference_protection_complex_materialization : unit -&gt; unit&#xA;override this.Null_reference_protection_complex_materialization : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Null_reference_protection_complex_materialization " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Null_reference_protection_complex_materialization();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Null_reference_protection_complex_materialization();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Null_reference_protection_complex_materialization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_in_subquery_with_unrelated_projection">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_in_subquery_with_unrelated_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_in_subquery_with_unrelated_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_in_subquery_with_unrelated_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_in_subquery_with_unrelated_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_in_subquery_with_unrelated_projection : unit -&gt; unit&#xA;override this.Optional_navigation_in_subquery_with_unrelated_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_in_subquery_with_unrelated_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_in_subquery_with_unrelated_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_in_subquery_with_unrelated_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_in_subquery_with_unrelated_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_method_call_translated_to_join">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_method_call_translated_to_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_method_call_translated_to_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_method_call_translated_to_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_method_call_translated_to_join ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_method_call_translated_to_join : unit -&gt; unit&#xA;override this.Optional_navigation_inside_method_call_translated_to_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_method_call_translated_to_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_method_call_translated_to_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_method_call_translated_to_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_method_call_translated_to_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability : unit -&gt; unit&#xA;override this.Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_nested_method_call_translated_to_join">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_nested_method_call_translated_to_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_nested_method_call_translated_to_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_nested_method_call_translated_to_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_nested_method_call_translated_to_join ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_nested_method_call_translated_to_join : unit -&gt; unit&#xA;override this.Optional_navigation_inside_nested_method_call_translated_to_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_nested_method_call_translated_to_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_nested_method_call_translated_to_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability : unit -&gt; unit&#xA;override this.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments : unit -&gt; unit&#xA;override this.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_nested_method_call_translated_to_join_keeps_original_nullability_also_for_arguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_inside_property_method_translated_to_join">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_inside_property_method_translated_to_join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_inside_property_method_translated_to_join() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_inside_property_method_translated_to_join" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_inside_property_method_translated_to_join ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_inside_property_method_translated_to_join : unit -&gt; unit&#xA;override this.Optional_navigation_inside_property_method_translated_to_join : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_inside_property_method_translated_to_join " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_inside_property_method_translated_to_join();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_inside_property_method_translated_to_join();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_inside_property_method_translated_to_join();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_projected_into_DTO">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_projected_into_DTO ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_projected_into_DTO() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_projected_into_DTO" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_projected_into_DTO ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_projected_into_DTO : unit -&gt; unit&#xA;override this.Optional_navigation_projected_into_DTO : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_projected_into_DTO " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_projected_into_DTO();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_projected_into_DTO();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_projected_into_DTO();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_propagates_nullability_to_manually_created_left_join1">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_propagates_nullability_to_manually_created_left_join1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_propagates_nullability_to_manually_created_left_join1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_propagates_nullability_to_manually_created_left_join1 ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_propagates_nullability_to_manually_created_left_join1 : unit -&gt; unit&#xA;override this.Optional_navigation_propagates_nullability_to_manually_created_left_join1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_propagates_nullability_to_manually_created_left_join1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_propagates_nullability_to_manually_created_left_join2">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_propagates_nullability_to_manually_created_left_join2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_propagates_nullability_to_manually_created_left_join2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_propagates_nullability_to_manually_created_left_join2 ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_propagates_nullability_to_manually_created_left_join2 : unit -&gt; unit&#xA;override this.Optional_navigation_propagates_nullability_to_manually_created_left_join2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_propagates_nullability_to_manually_created_left_join2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_propagates_nullability_to_manually_created_left_join2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_take_optional_navigation">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_take_optional_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_take_optional_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_take_optional_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_take_optional_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_take_optional_navigation : unit -&gt; unit&#xA;override this.Optional_navigation_take_optional_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_take_optional_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_take_optional_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_take_optional_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_take_optional_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_with_Include : unit -&gt; unit&#xA;override this.Optional_navigation_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_with_Include_and_order">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_with_Include_and_order ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_with_Include_and_order() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_with_Include_and_order" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_with_Include_and_order ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_with_Include_and_order : unit -&gt; unit&#xA;override this.Optional_navigation_with_Include_and_order : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_with_Include_and_order " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_with_Include_and_order();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_with_Include_and_order();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_with_Include_and_order();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_with_Include_ThenInclude">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_with_Include_ThenInclude ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_with_Include_ThenInclude() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_with_Include_ThenInclude" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_with_Include_ThenInclude ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_with_Include_ThenInclude : unit -&gt; unit&#xA;override this.Optional_navigation_with_Include_ThenInclude : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_with_Include_ThenInclude " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_with_Include_ThenInclude();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Optional_navigation_with_order_by_and_Include">
      <MemberSignature Language="C#" Value="public virtual void Optional_navigation_with_order_by_and_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Optional_navigation_with_order_by_and_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Optional_navigation_with_order_by_and_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Optional_navigation_with_order_by_and_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Optional_navigation_with_order_by_and_Include : unit -&gt; unit&#xA;override this.Optional_navigation_with_order_by_and_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Optional_navigation_with_order_by_and_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Optional_navigation_with_order_by_and_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Optional_navigation_with_order_by_and_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Optional_navigation_with_order_by_and_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery : unit -&gt; unit&#xA;override this.Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_anonymous_type_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access : unit -&gt; unit&#xA;override this.Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_navigation_similar_to_projected_gets_optimized_into_FK_access();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery : unit -&gt; unit&#xA;override this.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1 ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1 : unit -&gt; unit&#xA;override this.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2 ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2 : unit -&gt; unit&#xA;override this.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3">
      <MemberSignature Language="C#" Value="public virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3 ()" />
      <MemberSignature Language="F#" Value="abstract member Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3 : unit -&gt; unit&#xA;override this.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Order_by_key_of_projected_navigation_doesnt_get_optimized_into_FK_access3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_nav_prop_reference_optional">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_nav_prop_reference_optional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_nav_prop_reference_optional() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.OrderBy_nav_prop_reference_optional" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_nav_prop_reference_optional ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_nav_prop_reference_optional : unit -&gt; unit&#xA;override this.OrderBy_nav_prop_reference_optional : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.OrderBy_nav_prop_reference_optional " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_nav_prop_reference_optional();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_nav_prop_reference_optional();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_nav_prop_reference_optional();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OrderBy_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_and_include">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_and_include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_and_include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_and_include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_and_include ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_and_include : unit -&gt; unit&#xA;override this.Project_collection_and_include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_and_include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_and_include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_and_include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_and_include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_and_root_entity">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_and_root_entity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_and_root_entity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_and_root_entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_and_root_entity ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_and_root_entity : unit -&gt; unit&#xA;override this.Project_collection_and_root_entity : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_and_root_entity " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_and_root_entity();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_and_root_entity();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_and_root_entity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation : unit -&gt; unit&#xA;override this.Project_collection_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_composed">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_composed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_composed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation_composed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_composed ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_composed : unit -&gt; unit&#xA;override this.Project_collection_navigation_composed : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation_composed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_composed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_composed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_composed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_count">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation_count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_count ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_count : unit -&gt; unit&#xA;override this.Project_collection_navigation_count : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation_count " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_count();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_count();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_count();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_nested">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_nested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_nested() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation_nested" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_nested ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_nested : unit -&gt; unit&#xA;override this.Project_collection_navigation_nested : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation_nested " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_nested();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_nested();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_nested();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_nested_anonymous">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_nested_anonymous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_nested_anonymous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation_nested_anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_nested_anonymous ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_nested_anonymous : unit -&gt; unit&#xA;override this.Project_collection_navigation_nested_anonymous : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation_nested_anonymous " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_nested_anonymous();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_nested_anonymous();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_nested_anonymous();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_collection_navigation_using_ef_property">
      <MemberSignature Language="C#" Value="public virtual void Project_collection_navigation_using_ef_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_collection_navigation_using_ef_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_collection_navigation_using_ef_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_collection_navigation_using_ef_property ()" />
      <MemberSignature Language="F#" Value="abstract member Project_collection_navigation_using_ef_property : unit -&gt; unit&#xA;override this.Project_collection_navigation_using_ef_property : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_collection_navigation_using_ef_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_collection_navigation_using_ef_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_collection_navigation_using_ef_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_collection_navigation_using_ef_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project_navigation_and_collection">
      <MemberSignature Language="C#" Value="public virtual void Project_navigation_and_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Project_navigation_and_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Project_navigation_and_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Project_navigation_and_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Project_navigation_and_collection : unit -&gt; unit&#xA;override this.Project_navigation_and_collection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Project_navigation_and_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Project_navigation_and_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Project_navigation_and_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Project_navigation_and_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_select_correct_table_from_subquery_when_materialization_is_not_required">
      <MemberSignature Language="C#" Value="public virtual void Projection_select_correct_table_from_subquery_when_materialization_is_not_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_select_correct_table_from_subquery_when_materialization_is_not_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Projection_select_correct_table_from_subquery_when_materialization_is_not_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_select_correct_table_from_subquery_when_materialization_is_not_required ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_select_correct_table_from_subquery_when_materialization_is_not_required : unit -&gt; unit&#xA;override this.Projection_select_correct_table_from_subquery_when_materialization_is_not_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Projection_select_correct_table_from_subquery_when_materialization_is_not_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_select_correct_table_from_subquery_when_materialization_is_not_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_select_correct_table_from_subquery_when_materialization_is_not_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_select_correct_table_from_subquery_when_materialization_is_not_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins">
      <MemberSignature Language="C#" Value="public virtual void Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins : unit -&gt; unit&#xA;override this.Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_select_correct_table_in_subquery_when_materialization_is_not_required_in_multiple_joins();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection_select_correct_table_with_anonymous_projection_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void Projection_select_correct_table_with_anonymous_projection_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Projection_select_correct_table_with_anonymous_projection_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Projection_select_correct_table_with_anonymous_projection_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Projection_select_correct_table_with_anonymous_projection_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Projection_select_correct_table_with_anonymous_projection_in_subquery : unit -&gt; unit&#xA;override this.Projection_select_correct_table_with_anonymous_projection_in_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Projection_select_correct_table_with_anonymous_projection_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Projection_select_correct_table_with_anonymous_projection_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Projection_select_correct_table_with_anonymous_projection_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Projection_select_correct_table_with_anonymous_projection_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_source_materialization_bug_4547">
      <MemberSignature Language="C#" Value="public virtual void Query_source_materialization_bug_4547 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_source_materialization_bug_4547() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Query_source_materialization_bug_4547" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_source_materialization_bug_4547 ()" />
      <MemberSignature Language="F#" Value="abstract member Query_source_materialization_bug_4547 : unit -&gt; unit&#xA;override this.Query_source_materialization_bug_4547 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Query_source_materialization_bug_4547 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_source_materialization_bug_4547();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_source_materialization_bug_4547();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_source_materialization_bug_4547();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_navigation_on_a_subquery_with_complex_projection_and_First">
      <MemberSignature Language="C#" Value="public virtual void Required_navigation_on_a_subquery_with_complex_projection_and_First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_navigation_on_a_subquery_with_complex_projection_and_First() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Required_navigation_on_a_subquery_with_complex_projection_and_First" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Required_navigation_on_a_subquery_with_complex_projection_and_First ()" />
      <MemberSignature Language="F#" Value="abstract member Required_navigation_on_a_subquery_with_complex_projection_and_First : unit -&gt; unit&#xA;override this.Required_navigation_on_a_subquery_with_complex_projection_and_First : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Required_navigation_on_a_subquery_with_complex_projection_and_First " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_complex_projection_and_First();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_complex_projection_and_First();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Required_navigation_on_a_subquery_with_complex_projection_and_First();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_navigation_on_a_subquery_with_First_in_predicate">
      <MemberSignature Language="C#" Value="public virtual void Required_navigation_on_a_subquery_with_First_in_predicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_navigation_on_a_subquery_with_First_in_predicate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Required_navigation_on_a_subquery_with_First_in_predicate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Required_navigation_on_a_subquery_with_First_in_predicate ()" />
      <MemberSignature Language="F#" Value="abstract member Required_navigation_on_a_subquery_with_First_in_predicate : unit -&gt; unit&#xA;override this.Required_navigation_on_a_subquery_with_First_in_predicate : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Required_navigation_on_a_subquery_with_First_in_predicate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_First_in_predicate();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_First_in_predicate();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Required_navigation_on_a_subquery_with_First_in_predicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_navigation_on_a_subquery_with_First_in_projection">
      <MemberSignature Language="C#" Value="public virtual void Required_navigation_on_a_subquery_with_First_in_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_navigation_on_a_subquery_with_First_in_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Required_navigation_on_a_subquery_with_First_in_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Required_navigation_on_a_subquery_with_First_in_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Required_navigation_on_a_subquery_with_First_in_projection : unit -&gt; unit&#xA;override this.Required_navigation_on_a_subquery_with_First_in_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Required_navigation_on_a_subquery_with_First_in_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_First_in_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Required_navigation_on_a_subquery_with_First_in_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Required_navigation_on_a_subquery_with_First_in_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_navigation_with_Include">
      <MemberSignature Language="C#" Value="public virtual void Required_navigation_with_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_navigation_with_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Required_navigation_with_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Required_navigation_with_Include ()" />
      <MemberSignature Language="F#" Value="abstract member Required_navigation_with_Include : unit -&gt; unit&#xA;override this.Required_navigation_with_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Required_navigation_with_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Required_navigation_with_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Required_navigation_with_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Required_navigation_with_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Required_navigation_with_Include_ThenInclude">
      <MemberSignature Language="C#" Value="public virtual void Required_navigation_with_Include_ThenInclude ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Required_navigation_with_Include_ThenInclude() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Required_navigation_with_Include_ThenInclude" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Required_navigation_with_Include_ThenInclude ()" />
      <MemberSignature Language="F#" Value="abstract member Required_navigation_with_Include_ThenInclude : unit -&gt; unit&#xA;override this.Required_navigation_with_Include_ThenInclude : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Required_navigation_with_Include_ThenInclude " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Required_navigation_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Required_navigation_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Required_navigation_with_Include_ThenInclude();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result_operator_nav_prop_reference_optional_Average">
      <MemberSignature Language="C#" Value="public virtual void Result_operator_nav_prop_reference_optional_Average ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Result_operator_nav_prop_reference_optional_Average() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Result_operator_nav_prop_reference_optional_Average" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Result_operator_nav_prop_reference_optional_Average ()" />
      <MemberSignature Language="F#" Value="abstract member Result_operator_nav_prop_reference_optional_Average : unit -&gt; unit&#xA;override this.Result_operator_nav_prop_reference_optional_Average : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Result_operator_nav_prop_reference_optional_Average " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Average();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Average();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Result_operator_nav_prop_reference_optional_Average();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result_operator_nav_prop_reference_optional_Max">
      <MemberSignature Language="C#" Value="public virtual void Result_operator_nav_prop_reference_optional_Max ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Result_operator_nav_prop_reference_optional_Max() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Result_operator_nav_prop_reference_optional_Max" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Result_operator_nav_prop_reference_optional_Max ()" />
      <MemberSignature Language="F#" Value="abstract member Result_operator_nav_prop_reference_optional_Max : unit -&gt; unit&#xA;override this.Result_operator_nav_prop_reference_optional_Max : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Result_operator_nav_prop_reference_optional_Max " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Max();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Max();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Result_operator_nav_prop_reference_optional_Max();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result_operator_nav_prop_reference_optional_Min">
      <MemberSignature Language="C#" Value="public virtual void Result_operator_nav_prop_reference_optional_Min ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Result_operator_nav_prop_reference_optional_Min() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Result_operator_nav_prop_reference_optional_Min" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Result_operator_nav_prop_reference_optional_Min ()" />
      <MemberSignature Language="F#" Value="abstract member Result_operator_nav_prop_reference_optional_Min : unit -&gt; unit&#xA;override this.Result_operator_nav_prop_reference_optional_Min : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Result_operator_nav_prop_reference_optional_Min " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Min();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Min();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Result_operator_nav_prop_reference_optional_Min();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result_operator_nav_prop_reference_optional_Sum">
      <MemberSignature Language="C#" Value="public virtual void Result_operator_nav_prop_reference_optional_Sum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Result_operator_nav_prop_reference_optional_Sum() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Result_operator_nav_prop_reference_optional_Sum" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Result_operator_nav_prop_reference_optional_Sum ()" />
      <MemberSignature Language="F#" Value="abstract member Result_operator_nav_prop_reference_optional_Sum : unit -&gt; unit&#xA;override this.Result_operator_nav_prop_reference_optional_Sum : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Result_operator_nav_prop_reference_optional_Sum " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Sum();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_Sum();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Result_operator_nav_prop_reference_optional_Sum();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Result_operator_nav_prop_reference_optional_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_join_subquery_containing_filter_and_distinct">
      <MemberSignature Language="C#" Value="public virtual void Select_join_subquery_containing_filter_and_distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_join_subquery_containing_filter_and_distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_join_subquery_containing_filter_and_distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_join_subquery_containing_filter_and_distinct ()" />
      <MemberSignature Language="F#" Value="abstract member Select_join_subquery_containing_filter_and_distinct : unit -&gt; unit&#xA;override this.Select_join_subquery_containing_filter_and_distinct : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_join_subquery_containing_filter_and_distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_join_subquery_containing_filter_and_distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_join_subquery_containing_filter_and_distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_join_subquery_containing_filter_and_distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_join_with_key_selector_being_a_subquery">
      <MemberSignature Language="C#" Value="public virtual void Select_join_with_key_selector_being_a_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_join_with_key_selector_being_a_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_join_with_key_selector_being_a_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_join_with_key_selector_being_a_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member Select_join_with_key_selector_being_a_subquery : unit -&gt; unit&#xA;override this.Select_join_with_key_selector_being_a_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_join_with_key_selector_being_a_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_join_with_key_selector_being_a_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_join_with_key_selector_being_a_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_join_with_key_selector_being_a_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_nav_prop_optional_required">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_nav_prop_optional_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_nav_prop_optional_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_multiple_nav_prop_optional_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_multiple_nav_prop_optional_required ()" />
      <MemberSignature Language="F#" Value="abstract member Select_multiple_nav_prop_optional_required : unit -&gt; unit&#xA;override this.Select_multiple_nav_prop_optional_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_multiple_nav_prop_optional_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_multiple_nav_prop_optional_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_multiple_nav_prop_optional_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_multiple_nav_prop_optional_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_nav_prop_reference_optional">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_nav_prop_reference_optional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_nav_prop_reference_optional() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_multiple_nav_prop_reference_optional" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_multiple_nav_prop_reference_optional ()" />
      <MemberSignature Language="F#" Value="abstract member Select_multiple_nav_prop_reference_optional : unit -&gt; unit&#xA;override this.Select_multiple_nav_prop_reference_optional : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_multiple_nav_prop_reference_optional " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_optional();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_optional();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_multiple_nav_prop_reference_optional();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_nav_prop_reference_required">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_nav_prop_reference_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_nav_prop_reference_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_multiple_nav_prop_reference_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_multiple_nav_prop_reference_required ()" />
      <MemberSignature Language="F#" Value="abstract member Select_multiple_nav_prop_reference_required : unit -&gt; unit&#xA;override this.Select_multiple_nav_prop_reference_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_multiple_nav_prop_reference_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_multiple_nav_prop_reference_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_multiple_nav_prop_reference_required2">
      <MemberSignature Language="C#" Value="public virtual void Select_multiple_nav_prop_reference_required2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_multiple_nav_prop_reference_required2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_multiple_nav_prop_reference_required2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_multiple_nav_prop_reference_required2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_multiple_nav_prop_reference_required2 : unit -&gt; unit&#xA;override this.Select_multiple_nav_prop_reference_required2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_multiple_nav_prop_reference_required2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_required2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_multiple_nav_prop_reference_required2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_multiple_nav_prop_reference_required2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_collection_one_to_many_required">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_collection_one_to_many_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_collection_one_to_many_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_collection_one_to_many_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_collection_one_to_many_required ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_collection_one_to_many_required : unit -&gt; unit&#xA;override this.Select_nav_prop_collection_one_to_many_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_collection_one_to_many_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_collection_one_to_many_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_collection_one_to_many_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_collection_one_to_many_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_reference_optional1">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_reference_optional1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_reference_optional1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_reference_optional1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_reference_optional1 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_reference_optional1 : unit -&gt; unit&#xA;override this.Select_nav_prop_reference_optional1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_reference_optional1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_reference_optional1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_reference_optional1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_reference_optional1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_reference_optional1_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_reference_optional1_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_reference_optional1_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_reference_optional1_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_reference_optional1_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_reference_optional1_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Select_nav_prop_reference_optional1_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_reference_optional1_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_reference_optional2">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_reference_optional2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_reference_optional2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_reference_optional2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_reference_optional2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_reference_optional2 : unit -&gt; unit&#xA;override this.Select_nav_prop_reference_optional2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_reference_optional2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_reference_optional2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_reference_optional2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_reference_optional2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_reference_optional2_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_reference_optional2_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_reference_optional2_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_reference_optional2_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_reference_optional2_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_reference_optional2_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Select_nav_prop_reference_optional2_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_reference_optional2_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_nav_prop_reference_optional3">
      <MemberSignature Language="C#" Value="public virtual void Select_nav_prop_reference_optional3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_nav_prop_reference_optional3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_nav_prop_reference_optional3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_nav_prop_reference_optional3 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_nav_prop_reference_optional3 : unit -&gt; unit&#xA;override this.Select_nav_prop_reference_optional3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_nav_prop_reference_optional3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_nav_prop_reference_optional3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_nav_prop_reference_optional3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_nav_prop_reference_optional3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_optional_navigation_property_string_concat">
      <MemberSignature Language="C#" Value="public virtual void Select_optional_navigation_property_string_concat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_optional_navigation_property_string_concat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_optional_navigation_property_string_concat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_optional_navigation_property_string_concat ()" />
      <MemberSignature Language="F#" Value="abstract member Select_optional_navigation_property_string_concat : unit -&gt; unit&#xA;override this.Select_optional_navigation_property_string_concat : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_optional_navigation_property_string_concat " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_optional_navigation_property_string_concat();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_optional_navigation_property_string_concat();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_optional_navigation_property_string_concat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_with_client_eval_and_multi_level_navigation">
      <MemberSignature Language="C#" Value="public virtual void Select_subquery_with_client_eval_and_multi_level_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_subquery_with_client_eval_and_multi_level_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_subquery_with_client_eval_and_multi_level_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_subquery_with_client_eval_and_multi_level_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_with_client_eval_and_multi_level_navigation : unit -&gt; unit&#xA;override this.Select_subquery_with_client_eval_and_multi_level_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_subquery_with_client_eval_and_multi_level_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_multi_level_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_multi_level_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_subquery_with_client_eval_and_multi_level_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8526")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_with_client_eval_and_navigation1">
      <MemberSignature Language="C#" Value="public virtual void Select_subquery_with_client_eval_and_navigation1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_subquery_with_client_eval_and_navigation1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_subquery_with_client_eval_and_navigation1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_subquery_with_client_eval_and_navigation1 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_with_client_eval_and_navigation1 : unit -&gt; unit&#xA;override this.Select_subquery_with_client_eval_and_navigation1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_subquery_with_client_eval_and_navigation1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_navigation1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_navigation1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_subquery_with_client_eval_and_navigation1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select_subquery_with_client_eval_and_navigation2">
      <MemberSignature Language="C#" Value="public virtual void Select_subquery_with_client_eval_and_navigation2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select_subquery_with_client_eval_and_navigation2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Select_subquery_with_client_eval_and_navigation2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select_subquery_with_client_eval_and_navigation2 ()" />
      <MemberSignature Language="F#" Value="abstract member Select_subquery_with_client_eval_and_navigation2 : unit -&gt; unit&#xA;override this.Select_subquery_with_client_eval_and_navigation2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Select_subquery_with_client_eval_and_navigation2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_navigation2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Select_subquery_with_client_eval_and_navigation2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Select_subquery_with_client_eval_and_navigation2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_comparison1">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_comparison1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_comparison1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_comparison1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_comparison1 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_comparison1 : unit -&gt; unit&#xA;override this.SelectMany_navigation_comparison1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_comparison1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_comparison1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_comparison1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_comparison1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_comparison2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_comparison2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_comparison2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_comparison2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_comparison2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_comparison2 : unit -&gt; unit&#xA;override this.SelectMany_navigation_comparison2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_comparison2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_comparison2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_comparison2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_comparison2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_comparison3">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_comparison3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_comparison3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_comparison3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_comparison3 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_comparison3 : unit -&gt; unit&#xA;override this.SelectMany_navigation_comparison3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_comparison3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_comparison3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_comparison3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_comparison3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_property">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_property ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_property() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_property ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_property : unit -&gt; unit&#xA;override this.SelectMany_navigation_property : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_property " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_property();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_property();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_property();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_property_and_filter_after">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_property_and_filter_after ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_property_and_filter_after() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_property_and_filter_after" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_property_and_filter_after ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_property_and_filter_after : unit -&gt; unit&#xA;override this.SelectMany_navigation_property_and_filter_after : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_property_and_filter_after " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_property_and_filter_after();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_property_and_filter_after();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_property_and_filter_after();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_property_and_filter_before">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_property_and_filter_before ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_property_and_filter_before() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_property_and_filter_before" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_property_and_filter_before ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_property_and_filter_before : unit -&gt; unit&#xA;override this.SelectMany_navigation_property_and_filter_before : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_property_and_filter_before " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_property_and_filter_before();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_property_and_filter_before();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_property_and_filter_before();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_property_and_projection">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_property_and_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_property_and_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_property_and_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_property_and_projection ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_property_and_projection : unit -&gt; unit&#xA;override this.SelectMany_navigation_property_and_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_property_and_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_property_and_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_property_and_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_property_and_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_navigation_property_with_another_navigation_in_subquery">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_navigation_property_with_another_navigation_in_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_navigation_property_with_another_navigation_in_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_navigation_property_with_another_navigation_in_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_navigation_property_with_another_navigation_in_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_navigation_property_with_another_navigation_in_subquery : unit -&gt; unit&#xA;override this.SelectMany_navigation_property_with_another_navigation_in_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_navigation_property_with_another_navigation_in_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_navigation_property_with_another_navigation_in_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_navigation_property_with_another_navigation_in_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_navigation_property_with_another_navigation_in_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_nested_navigation_property_optional_and_projection">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_nested_navigation_property_optional_and_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_nested_navigation_property_optional_and_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_nested_navigation_property_optional_and_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_nested_navigation_property_optional_and_projection ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_nested_navigation_property_optional_and_projection : unit -&gt; unit&#xA;override this.SelectMany_nested_navigation_property_optional_and_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_nested_navigation_property_optional_and_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_nested_navigation_property_optional_and_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_nested_navigation_property_optional_and_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_nested_navigation_property_optional_and_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_nested_navigation_property_required">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_nested_navigation_property_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_nested_navigation_property_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_nested_navigation_property_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_nested_navigation_property_required ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_nested_navigation_property_required : unit -&gt; unit&#xA;override this.SelectMany_nested_navigation_property_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_nested_navigation_property_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_nested_navigation_property_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_nested_navigation_property_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_nested_navigation_property_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_subquery_with_custom_projection">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_subquery_with_custom_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_subquery_with_custom_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_subquery_with_custom_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_subquery_with_custom_projection ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_subquery_with_custom_projection : unit -&gt; unit&#xA;override this.SelectMany_subquery_with_custom_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_subquery_with_custom_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_subquery_with_custom_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_subquery_with_custom_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_subquery_with_custom_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_where_with_subquery">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_where_with_subquery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_where_with_subquery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_where_with_subquery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_where_with_subquery ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_where_with_subquery : unit -&gt; unit&#xA;override this.SelectMany_where_with_subquery : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_where_with_subquery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_where_with_subquery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_where_with_subquery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_where_with_subquery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_Include_and_order_by">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_Include_and_order_by ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_Include_and_order_by() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_Include_and_order_by" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_Include_and_order_by ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_Include_and_order_by : unit -&gt; unit&#xA;override this.SelectMany_with_Include_and_order_by : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_Include_and_order_by " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_Include_and_order_by();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_Include_and_order_by();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_Include_and_order_by();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_Include_ThenInclude">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_Include_ThenInclude ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_Include_ThenInclude() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_Include_ThenInclude" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_Include_ThenInclude ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_Include_ThenInclude : unit -&gt; unit&#xA;override this.SelectMany_with_Include_ThenInclude : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_Include_ThenInclude " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_Include_ThenInclude();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_Include_ThenInclude();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_Include1">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_Include1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_Include1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_Include1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_Include1 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_Include1 : unit -&gt; unit&#xA;override this.SelectMany_with_Include1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_Include1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_Include1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_Include1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_Include1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_Include2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_Include2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_Include2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_Include2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_Include2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_Include2 : unit -&gt; unit&#xA;override this.SelectMany_with_Include2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_Include2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_Include2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_Include2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_Include2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_navigation_and_Distinct">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_navigation_and_Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_navigation_and_Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_navigation_and_Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_navigation_and_Distinct ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_navigation_and_Distinct : unit -&gt; unit&#xA;override this.SelectMany_with_navigation_and_Distinct : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_navigation_and_Distinct " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_navigation_and_Distinct();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_navigation_and_Distinct();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_navigation_and_Distinct();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_navigation_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_navigation_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_navigation_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_navigation_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_navigation_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_with_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_navigation_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_navigation_filter_paging_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_nested_navigation_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty : unit -&gt; unit&#xA;override this.SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_nested_navigation_filter_and_explicit_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_order_by_and_Include">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_order_by_and_Include ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_order_by_and_Include() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_order_by_and_Include" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_order_by_and_Include ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_order_by_and_Include : unit -&gt; unit&#xA;override this.SelectMany_with_order_by_and_Include : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_order_by_and_Include " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_order_by_and_Include();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_order_by_and_Include();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_order_by_and_Include();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_string_based_Include1">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_string_based_Include1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_string_based_Include1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_string_based_Include1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_string_based_Include1 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_string_based_Include1 : unit -&gt; unit&#xA;override this.SelectMany_with_string_based_Include1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_string_based_Include1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_string_based_Include1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_string_based_Include1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_string_based_Include1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany_with_string_based_Include2">
      <MemberSignature Language="C#" Value="public virtual void SelectMany_with_string_based_Include2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectMany_with_string_based_Include2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.SelectMany_with_string_based_Include2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SelectMany_with_string_based_Include2 ()" />
      <MemberSignature Language="F#" Value="abstract member SelectMany_with_string_based_Include2 : unit -&gt; unit&#xA;override this.SelectMany_with_string_based_Include2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.SelectMany_with_string_based_Include2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SelectMany_with_string_based_Include2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SelectMany_with_string_based_Include2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SelectMany_with_string_based_Include2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_owned_level1">
      <MemberSignature Language="C#" Value="public virtual void Simple_owned_level1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Simple_owned_level1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Simple_owned_level1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Simple_owned_level1 ()" />
      <MemberSignature Language="F#" Value="abstract member Simple_owned_level1 : unit -&gt; unit&#xA;override this.Simple_owned_level1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Simple_owned_level1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Simple_owned_level1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Simple_owned_level1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Simple_owned_level1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_owned_level1_convention">
      <MemberSignature Language="C#" Value="public virtual void Simple_owned_level1_convention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Simple_owned_level1_convention() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Simple_owned_level1_convention" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Simple_owned_level1_convention ()" />
      <MemberSignature Language="F#" Value="abstract member Simple_owned_level1_convention : unit -&gt; unit&#xA;override this.Simple_owned_level1_convention : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Simple_owned_level1_convention " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Simple_owned_level1_convention();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Simple_owned_level1_convention();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Simple_owned_level1_convention();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_owned_level1_level2">
      <MemberSignature Language="C#" Value="public virtual void Simple_owned_level1_level2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Simple_owned_level1_level2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Simple_owned_level1_level2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Simple_owned_level1_level2 ()" />
      <MemberSignature Language="F#" Value="abstract member Simple_owned_level1_level2 : unit -&gt; unit&#xA;override this.Simple_owned_level1_level2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Simple_owned_level1_level2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Simple_owned_level1_level2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Simple_owned_level1_level2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Simple_owned_level1_level2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Simple_owned_level1_level2_level3">
      <MemberSignature Language="C#" Value="public virtual void Simple_owned_level1_level2_level3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Simple_owned_level1_level2_level3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Simple_owned_level1_level2_level3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Simple_owned_level1_level2_level3 ()" />
      <MemberSignature Language="F#" Value="abstract member Simple_owned_level1_level2_level3 : unit -&gt; unit&#xA;override this.Simple_owned_level1_level2_level3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Simple_owned_level1_level2_level3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Simple_owned_level1_level2_level3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Simple_owned_level1_level2_level3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Simple_owned_level1_level2_level3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_collection_navigation_with_same_name_and_different_type">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_collection_navigation_with_same_name_and_different_type ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_collection_navigation_with_same_name_and_different_type : unit -&gt; unit&#xA;override this.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains : unit -&gt; unit&#xA;override this.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_collection_navigation_with_same_name_and_same_type">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_same_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_collection_navigation_with_same_name_and_same_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_collection_navigation_with_same_name_and_same_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_collection_navigation_with_same_name_and_same_type ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_collection_navigation_with_same_name_and_same_type : unit -&gt; unit&#xA;override this.String_include_multiple_derived_collection_navigation_with_same_name_and_same_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_collection_navigation_with_same_name_and_same_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_same_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_same_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_collection_navigation_with_same_name_and_same_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_navigation_with_same_name_and_different_type">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_navigation_with_same_name_and_different_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_navigation_with_same_name_and_different_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_navigation_with_same_name_and_different_type ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_navigation_with_same_name_and_different_type : unit -&gt; unit&#xA;override this.String_include_multiple_derived_navigation_with_same_name_and_different_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_navigation_with_same_name_and_different_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains : unit -&gt; unit&#xA;override this.String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_navigation_with_same_name_and_different_type_nested_also_includes_partially_matching_navigation_chains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_navigation_with_same_name_and_same_type">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_navigation_with_same_name_and_same_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_navigation_with_same_name_and_same_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_navigation_with_same_name_and_same_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_navigation_with_same_name_and_same_type ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_navigation_with_same_name_and_same_type : unit -&gt; unit&#xA;override this.String_include_multiple_derived_navigation_with_same_name_and_same_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_navigation_with_same_name_and_same_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_same_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_navigation_with_same_name_and_same_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_navigation_with_same_name_and_same_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="String_include_multiple_derived_navigations_complex">
      <MemberSignature Language="C#" Value="public virtual void String_include_multiple_derived_navigations_complex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void String_include_multiple_derived_navigations_complex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.String_include_multiple_derived_navigations_complex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub String_include_multiple_derived_navigations_complex ()" />
      <MemberSignature Language="F#" Value="abstract member String_include_multiple_derived_navigations_complex : unit -&gt; unit&#xA;override this.String_include_multiple_derived_navigations_complex : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.String_include_multiple_derived_navigations_complex " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void String_include_multiple_derived_navigations_complex();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void String_include_multiple_derived_navigations_complex();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void String_include_multiple_derived_navigations_complex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy">
      <MemberSignature Language="C#" Value="public virtual void Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy ()" />
      <MemberSignature Language="F#" Value="abstract member Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy : unit -&gt; unit&#xA;override this.Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Subquery_with_Distinct_Skip_FirstOrDefault_without_OrderBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact(Skip="issue #8523")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_predicate_with_with_nav_prop_and_OrElse1">
      <MemberSignature Language="C#" Value="public virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_complex_predicate_with_with_nav_prop_and_OrElse1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_complex_predicate_with_with_nav_prop_and_OrElse1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_complex_predicate_with_with_nav_prop_and_OrElse1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_predicate_with_with_nav_prop_and_OrElse1 : unit -&gt; unit&#xA;override this.Where_complex_predicate_with_with_nav_prop_and_OrElse1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_complex_predicate_with_with_nav_prop_and_OrElse1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_predicate_with_with_nav_prop_and_OrElse2">
      <MemberSignature Language="C#" Value="public virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_complex_predicate_with_with_nav_prop_and_OrElse2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_complex_predicate_with_with_nav_prop_and_OrElse2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_complex_predicate_with_with_nav_prop_and_OrElse2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_predicate_with_with_nav_prop_and_OrElse2 : unit -&gt; unit&#xA;override this.Where_complex_predicate_with_with_nav_prop_and_OrElse2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_complex_predicate_with_with_nav_prop_and_OrElse2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_predicate_with_with_nav_prop_and_OrElse3">
      <MemberSignature Language="C#" Value="public virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_complex_predicate_with_with_nav_prop_and_OrElse3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_complex_predicate_with_with_nav_prop_and_OrElse3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_complex_predicate_with_with_nav_prop_and_OrElse3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_predicate_with_with_nav_prop_and_OrElse3 : unit -&gt; unit&#xA;override this.Where_complex_predicate_with_with_nav_prop_and_OrElse3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_complex_predicate_with_with_nav_prop_and_OrElse3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_complex_predicate_with_with_nav_prop_and_OrElse4">
      <MemberSignature Language="C#" Value="public virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_complex_predicate_with_with_nav_prop_and_OrElse4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_complex_predicate_with_with_nav_prop_and_OrElse4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_complex_predicate_with_with_nav_prop_and_OrElse4 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_complex_predicate_with_with_nav_prop_and_OrElse4 : unit -&gt; unit&#xA;override this.Where_complex_predicate_with_with_nav_prop_and_OrElse4 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_complex_predicate_with_with_nav_prop_and_OrElse4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_complex_predicate_with_with_nav_prop_and_OrElse4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_optional_required">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_optional_required ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_optional_required() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_optional_required" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_optional_required ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_optional_required : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_optional_required : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_optional_required " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_optional_required();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_optional_required();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_optional_required();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_compared_to_null1">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_compared_to_null1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_compared_to_null1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_compared_to_null1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_compared_to_null1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_compared_to_null1 : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_compared_to_null1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_compared_to_null1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_compared_to_null1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_compared_to_null2">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_compared_to_null2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_compared_to_null2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_compared_to_null2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_compared_to_null2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_compared_to_null2 : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_compared_to_null2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_compared_to_null2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_compared_to_null2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_compared_to_null3">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_compared_to_null3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_compared_to_null3() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_compared_to_null3" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_compared_to_null3 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_compared_to_null3 : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_compared_to_null3 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_compared_to_null3 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null3();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null3();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_compared_to_null3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_compared_to_null4">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_compared_to_null4 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_compared_to_null4() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_compared_to_null4" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_compared_to_null4 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_compared_to_null4 : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_compared_to_null4 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_compared_to_null4 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null4();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null4();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_compared_to_null4();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_compared_to_null5">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_compared_to_null5 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_compared_to_null5() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_compared_to_null5" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_compared_to_null5 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_compared_to_null5 : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_compared_to_null5 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_compared_to_null5 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null5();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_compared_to_null5();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_compared_to_null5();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_member_compared_to_null">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_null ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_member_compared_to_null() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_member_compared_to_null" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_member_compared_to_null ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_member_compared_to_null : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_member_compared_to_null : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_member_compared_to_null " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_null();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_null();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_null();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_multiple_nav_prop_reference_optional_member_compared_to_value">
      <MemberSignature Language="C#" Value="public virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_value ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_multiple_nav_prop_reference_optional_member_compared_to_value() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_multiple_nav_prop_reference_optional_member_compared_to_value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_multiple_nav_prop_reference_optional_member_compared_to_value ()" />
      <MemberSignature Language="F#" Value="abstract member Where_multiple_nav_prop_reference_optional_member_compared_to_value : unit -&gt; unit&#xA;override this.Where_multiple_nav_prop_reference_optional_member_compared_to_value : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_multiple_nav_prop_reference_optional_member_compared_to_value " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_value();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_value();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_multiple_nav_prop_reference_optional_member_compared_to_value();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nav_prop_reference_optional1">
      <MemberSignature Language="C#" Value="public virtual void Where_nav_prop_reference_optional1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nav_prop_reference_optional1() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_nav_prop_reference_optional1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nav_prop_reference_optional1 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nav_prop_reference_optional1 : unit -&gt; unit&#xA;override this.Where_nav_prop_reference_optional1 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_nav_prop_reference_optional1 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nav_prop_reference_optional1();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nav_prop_reference_optional1();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nav_prop_reference_optional1();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nav_prop_reference_optional1_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Where_nav_prop_reference_optional1_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nav_prop_reference_optional1_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_nav_prop_reference_optional1_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nav_prop_reference_optional1_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nav_prop_reference_optional1_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Where_nav_prop_reference_optional1_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_nav_prop_reference_optional1_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nav_prop_reference_optional1_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nav_prop_reference_optional2">
      <MemberSignature Language="C#" Value="public virtual void Where_nav_prop_reference_optional2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nav_prop_reference_optional2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_nav_prop_reference_optional2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nav_prop_reference_optional2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nav_prop_reference_optional2 : unit -&gt; unit&#xA;override this.Where_nav_prop_reference_optional2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_nav_prop_reference_optional2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nav_prop_reference_optional2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nav_prop_reference_optional2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nav_prop_reference_optional2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_nav_prop_reference_optional2_via_DefaultIfEmpty">
      <MemberSignature Language="C#" Value="public virtual void Where_nav_prop_reference_optional2_via_DefaultIfEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_nav_prop_reference_optional2_via_DefaultIfEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_nav_prop_reference_optional2_via_DefaultIfEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_nav_prop_reference_optional2_via_DefaultIfEmpty ()" />
      <MemberSignature Language="F#" Value="abstract member Where_nav_prop_reference_optional2_via_DefaultIfEmpty : unit -&gt; unit&#xA;override this.Where_nav_prop_reference_optional2_via_DefaultIfEmpty : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_nav_prop_reference_optional2_via_DefaultIfEmpty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_nav_prop_reference_optional2_via_DefaultIfEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_navigation_property_to_collection">
      <MemberSignature Language="C#" Value="public virtual void Where_navigation_property_to_collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_navigation_property_to_collection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_navigation_property_to_collection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_navigation_property_to_collection ()" />
      <MemberSignature Language="F#" Value="abstract member Where_navigation_property_to_collection : unit -&gt; unit&#xA;override this.Where_navigation_property_to_collection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_navigation_property_to_collection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_navigation_property_to_collection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_navigation_property_to_collection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_navigation_property_to_collection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_navigation_property_to_collection_of_original_entity_type">
      <MemberSignature Language="C#" Value="public virtual void Where_navigation_property_to_collection_of_original_entity_type ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_navigation_property_to_collection_of_original_entity_type() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_navigation_property_to_collection_of_original_entity_type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_navigation_property_to_collection_of_original_entity_type ()" />
      <MemberSignature Language="F#" Value="abstract member Where_navigation_property_to_collection_of_original_entity_type : unit -&gt; unit&#xA;override this.Where_navigation_property_to_collection_of_original_entity_type : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_navigation_property_to_collection_of_original_entity_type " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_navigation_property_to_collection_of_original_entity_type();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_navigation_property_to_collection_of_original_entity_type();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_navigation_property_to_collection_of_original_entity_type();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_navigation_property_to_collection2">
      <MemberSignature Language="C#" Value="public virtual void Where_navigation_property_to_collection2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_navigation_property_to_collection2() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_navigation_property_to_collection2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_navigation_property_to_collection2 ()" />
      <MemberSignature Language="F#" Value="abstract member Where_navigation_property_to_collection2 : unit -&gt; unit&#xA;override this.Where_navigation_property_to_collection2 : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_navigation_property_to_collection2 " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_navigation_property_to_collection2();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_navigation_property_to_collection2();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_navigation_property_to_collection2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_on_multilevel_reference_in_subquery_with_outer_projection">
      <MemberSignature Language="C#" Value="public virtual void Where_on_multilevel_reference_in_subquery_with_outer_projection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_on_multilevel_reference_in_subquery_with_outer_projection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_on_multilevel_reference_in_subquery_with_outer_projection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_on_multilevel_reference_in_subquery_with_outer_projection ()" />
      <MemberSignature Language="F#" Value="abstract member Where_on_multilevel_reference_in_subquery_with_outer_projection : unit -&gt; unit&#xA;override this.Where_on_multilevel_reference_in_subquery_with_outer_projection : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_on_multilevel_reference_in_subquery_with_outer_projection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_on_multilevel_reference_in_subquery_with_outer_projection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_on_multilevel_reference_in_subquery_with_outer_projection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_on_multilevel_reference_in_subquery_with_outer_projection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where_predicate_on_optional_reference_navigation">
      <MemberSignature Language="C#" Value="public virtual void Where_predicate_on_optional_reference_navigation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Where_predicate_on_optional_reference_navigation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ComplexNavigationsQueryTestBase`1.Where_predicate_on_optional_reference_navigation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Where_predicate_on_optional_reference_navigation ()" />
      <MemberSignature Language="F#" Value="abstract member Where_predicate_on_optional_reference_navigation : unit -&gt; unit&#xA;override this.Where_predicate_on_optional_reference_navigation : unit -&gt; unit" Usage="complexNavigationsQueryTestBase.Where_predicate_on_optional_reference_navigation " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Where_predicate_on_optional_reference_navigation();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Where_predicate_on_optional_reference_navigation();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Where_predicate_on_optional_reference_navigation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalFact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>