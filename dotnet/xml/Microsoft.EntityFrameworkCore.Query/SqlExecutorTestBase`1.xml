<Type Name="SqlExecutorTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class SqlExecutorTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SqlExecutorTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SqlExecutorTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryRelationalFixture&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryRelationalFixture&lt;NoopModelCustomizer ^&gt;gcnew()public ref class SqlExecutorTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SqlExecutorTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SqlExecutorTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; SqlExecutorTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" SqlExecutorTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="sqlExecutorTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.DbParameter CreateDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbParameter CreateDbParameter(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.CreateDbParameter(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDbParameter (name As String, value As Object) As DbParameter" />
      <MemberSignature Language="F#" Value="abstract member CreateDbParameter : string * obj -&gt; System.Data.Common.DbParameter" Usage="sqlExecutorTestBase.CreateDbParameter (name, value)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::DbParameter ^ CreateDbParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomerOrderHistorySproc">
      <MemberSignature Language="C#" Value="protected abstract string CustomerOrderHistorySproc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomerOrderHistorySproc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.CustomerOrderHistorySproc" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CustomerOrderHistorySproc As String" />
      <MemberSignature Language="F#" Value="member this.CustomerOrderHistorySproc : string" Usage="Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.CustomerOrderHistorySproc" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ CustomerOrderHistorySproc { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ CustomerOrderHistorySproc { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomerOrderHistoryWithGeneratedParameterSproc">
      <MemberSignature Language="C#" Value="protected abstract string CustomerOrderHistoryWithGeneratedParameterSproc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomerOrderHistoryWithGeneratedParameterSproc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.CustomerOrderHistoryWithGeneratedParameterSproc" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CustomerOrderHistoryWithGeneratedParameterSproc As String" />
      <MemberSignature Language="F#" Value="member this.CustomerOrderHistoryWithGeneratedParameterSproc : string" Usage="Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.CustomerOrderHistoryWithGeneratedParameterSproc" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ CustomerOrderHistoryWithGeneratedParameterSproc { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ CustomerOrderHistoryWithGeneratedParameterSproc { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure">
      <MemberSignature Language="C#" Value="public virtual void Executes_stored_procedure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Executes_stored_procedure() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Executes_stored_procedure ()" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure : unit -&gt; unit&#xA;override this.Executes_stored_procedure : unit -&gt; unit" Usage="sqlExecutorTestBase.Executes_stored_procedure " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Executes_stored_procedure();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Executes_stored_procedure();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Executes_stored_procedure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Executes_stored_procedure_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Executes_stored_procedure_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Executes_stored_procedure_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Executes_stored_procedure_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Executes_stored_procedure_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Executes_stored_procedure_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Executes_stored_procedure_async&gt;d__14))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure_with_generated_parameter">
      <MemberSignature Language="C#" Value="public virtual void Executes_stored_procedure_with_generated_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Executes_stored_procedure_with_generated_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure_with_generated_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Executes_stored_procedure_with_generated_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure_with_generated_parameter : unit -&gt; unit&#xA;override this.Executes_stored_procedure_with_generated_parameter : unit -&gt; unit" Usage="sqlExecutorTestBase.Executes_stored_procedure_with_generated_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Executes_stored_procedure_with_generated_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Executes_stored_procedure_with_generated_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Executes_stored_procedure_with_generated_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure_with_generated_parameter_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Executes_stored_procedure_with_generated_parameter_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Executes_stored_procedure_with_generated_parameter_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure_with_generated_parameter_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Executes_stored_procedure_with_generated_parameter_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure_with_generated_parameter_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Executes_stored_procedure_with_generated_parameter_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Executes_stored_procedure_with_generated_parameter_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Executes_stored_procedure_with_generated_parameter_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Executes_stored_procedure_with_generated_parameter_async&gt;d__16))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure_with_parameter">
      <MemberSignature Language="C#" Value="public virtual void Executes_stored_procedure_with_parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Executes_stored_procedure_with_parameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure_with_parameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Executes_stored_procedure_with_parameter ()" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure_with_parameter : unit -&gt; unit&#xA;override this.Executes_stored_procedure_with_parameter : unit -&gt; unit" Usage="sqlExecutorTestBase.Executes_stored_procedure_with_parameter " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Executes_stored_procedure_with_parameter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Executes_stored_procedure_with_parameter();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Executes_stored_procedure_with_parameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Executes_stored_procedure_with_parameter_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Executes_stored_procedure_with_parameter_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Executes_stored_procedure_with_parameter_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Executes_stored_procedure_with_parameter_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Executes_stored_procedure_with_parameter_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Executes_stored_procedure_with_parameter_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Executes_stored_procedure_with_parameter_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Executes_stored_procedure_with_parameter_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Executes_stored_procedure_with_parameter_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Executes_stored_procedure_with_parameter_async&gt;d__15))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_dbParameter_with_name">
      <MemberSignature Language="C#" Value="public virtual void Query_with_dbParameter_with_name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_dbParameter_with_name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_dbParameter_with_name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_dbParameter_with_name ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_dbParameter_with_name : unit -&gt; unit&#xA;override this.Query_with_dbParameter_with_name : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_dbParameter_with_name " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_dbParameter_with_name();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_dbParameter_with_name();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_dbParameter_with_name();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_dbParameters_mixed">
      <MemberSignature Language="C#" Value="public virtual void Query_with_dbParameters_mixed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_dbParameters_mixed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_dbParameters_mixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_dbParameters_mixed ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_dbParameters_mixed : unit -&gt; unit&#xA;override this.Query_with_dbParameters_mixed : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_dbParameters_mixed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_dbParameters_mixed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_dbParameters_mixed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_dbParameters_mixed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_parameters">
      <MemberSignature Language="C#" Value="public virtual void Query_with_parameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_parameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_parameters ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_parameters : unit -&gt; unit&#xA;override this.Query_with_parameters : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_parameters " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_parameters();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_parameters();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_parameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_parameters_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_with_parameters_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_with_parameters_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_parameters_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_with_parameters_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_with_parameters_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_with_parameters_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Query_with_parameters_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_with_parameters_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Query_with_parameters_async&gt;d__19))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_parameters_interpolated">
      <MemberSignature Language="C#" Value="public virtual void Query_with_parameters_interpolated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_parameters_interpolated() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_parameters_interpolated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_parameters_interpolated ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_parameters_interpolated : unit -&gt; unit&#xA;override this.Query_with_parameters_interpolated : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_parameters_interpolated " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_parameters_interpolated();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_parameters_interpolated();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_parameters_interpolated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_parameters_interpolated_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Query_with_parameters_interpolated_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Query_with_parameters_interpolated_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_parameters_interpolated_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query_with_parameters_interpolated_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Query_with_parameters_interpolated_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Query_with_parameters_interpolated_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Query_with_parameters_interpolated_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Query_with_parameters_interpolated_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Query_with_parameters_interpolated_async&gt;d__20))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_positional_dbParameter_with_name">
      <MemberSignature Language="C#" Value="public virtual void Query_with_positional_dbParameter_with_name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_positional_dbParameter_with_name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_positional_dbParameter_with_name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_positional_dbParameter_with_name ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_positional_dbParameter_with_name : unit -&gt; unit&#xA;override this.Query_with_positional_dbParameter_with_name : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_positional_dbParameter_with_name " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_positional_dbParameter_with_name();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_positional_dbParameter_with_name();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_positional_dbParameter_with_name();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_with_positional_dbParameter_without_name">
      <MemberSignature Language="C#" Value="public virtual void Query_with_positional_dbParameter_without_name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_with_positional_dbParameter_without_name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Query_with_positional_dbParameter_without_name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_with_positional_dbParameter_without_name ()" />
      <MemberSignature Language="F#" Value="abstract member Query_with_positional_dbParameter_without_name : unit -&gt; unit&#xA;override this.Query_with_positional_dbParameter_without_name : unit -&gt; unit" Usage="sqlExecutorTestBase.Query_with_positional_dbParameter_without_name " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_with_positional_dbParameter_without_name();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_with_positional_dbParameter_without_name();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_with_positional_dbParameter_without_name();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TenMostExpensiveProductsSproc">
      <MemberSignature Language="C#" Value="protected abstract string TenMostExpensiveProductsSproc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TenMostExpensiveProductsSproc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.TenMostExpensiveProductsSproc" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TenMostExpensiveProductsSproc As String" />
      <MemberSignature Language="F#" Value="member this.TenMostExpensiveProductsSproc : string" Usage="Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryRelationalFixture&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.TenMostExpensiveProductsSproc" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ TenMostExpensiveProductsSproc { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ TenMostExpensiveProductsSproc { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_command">
      <MemberSignature Language="C#" Value="public virtual void Throws_on_concurrent_command ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Throws_on_concurrent_command() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Throws_on_concurrent_command" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Throws_on_concurrent_command ()" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_command : unit -&gt; unit&#xA;override this.Throws_on_concurrent_command : unit -&gt; unit" Usage="sqlExecutorTestBase.Throws_on_concurrent_command " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Throws_on_concurrent_command();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Throws_on_concurrent_command();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Throws_on_concurrent_command();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throws_on_concurrent_command_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Throws_on_concurrent_command_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Throws_on_concurrent_command_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1.Throws_on_concurrent_command_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Throws_on_concurrent_command_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Throws_on_concurrent_command_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Throws_on_concurrent_command_async : unit -&gt; System.Threading.Tasks.Task" Usage="sqlExecutorTestBase.Throws_on_concurrent_command_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Throws_on_concurrent_command_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.SqlExecutorTestBase`1/&lt;Throws_on_concurrent_command_async&gt;d__17))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>