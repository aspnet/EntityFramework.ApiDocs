<Type Name="QueryContextDependencies" FullName="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies">
  <TypeSignature Language="C#" Value="public sealed class QueryContextDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QueryContextDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QueryContextDependencies" />
  <TypeSignature Language="F#" Value="type QueryContextDependencies = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContextDependencies sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class QueryContextDependencies sealed" />
  <TypeSignature Language="C++ WINRT" Value="class QueryContextDependencies sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContextDependencies (Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentContext As ICurrentDbContext, concurrencyDetector As IConcurrencyDetector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryContextDependencies : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.QueryContextDependencies (currentContext, concurrencyDetector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContextDependencies(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; QueryContextDependencies(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ WINRT" Value=" QueryContextDependencies(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext const &amp; currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector const &amp; concurrencyDetector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="currentContext">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeDetector">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector ChangeDetector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector ChangeDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.ChangeDetector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeDetector As IChangeDetector" />
      <MemberSignature Language="F#" Value="member this.ChangeDetector : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector" Usage="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.ChangeDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ ChangeDetector { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ ChangeDetector { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the change detector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetector">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.ConcurrencyDetector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConcurrencyDetector As IConcurrencyDetector" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" Usage="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.ConcurrencyDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the concurrency detector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDbContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentDbContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentDbContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.CurrentDbContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDbContext As ICurrentDbContext" />
      <MemberSignature Language="F#" Value="member this.CurrentDbContext : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" Usage="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.CurrentDbContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ CurrentDbContext { Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ CurrentDbContext { Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The cache being used to store value generator instances.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryProvider">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryProvider QueryProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider QueryProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.QueryProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryProvider As IQueryProvider" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : System.Linq.IQueryProvider" Usage="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.QueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::IQueryProvider ^ QueryProvider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the query provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateManager">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.StateManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StateManager As IStateManager" />
      <MemberSignature Language="F#" Value="member this.StateManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Usage="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.StateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the state manager.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.QueryContextDependencies With (Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies With(class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.With(Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (concurrencyDetector As IConcurrencyDetector) As QueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" Usage="queryContextDependencies.With concurrencyDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::QueryContextDependencies With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector const &amp; concurrencyDetector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryContextDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="concurrencyDetector"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.QueryContextDependencies With (Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentDbContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies With(class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentDbContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContextDependencies.With(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (currentDbContext As ICurrentDbContext) As QueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext -&gt; Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" Usage="queryContextDependencies.With currentDbContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentDbContext);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentDbContext);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::QueryContextDependencies With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext const &amp; currentDbContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryContextDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentDbContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
      </Parameters>
      <Docs>
        <param name="currentDbContext"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>