<Type Name="QueryContext" FullName="Microsoft.EntityFrameworkCore.Query.QueryContext">
  <TypeSignature Language="C#" Value="public class QueryContext : IDisposable, Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContext extends System.Object implements class Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QueryContext" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContext&#xA;Implements IDisposable, IParameterValues" />
  <TypeSignature Language="F#" Value="type QueryContext = class&#xA;    interface IDisposable&#xA;    interface IParameterValues" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContext : IDisposable, Microsoft::EntityFrameworkCore::Query::Internal::IParameterValues" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class QueryContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                The principal data structure used by a compiled query during execution.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContext (Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies,System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryContextDependencies, queryBufferFactory As Func(Of IQueryBuffer))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryContext : Microsoft.EntityFrameworkCore.Query.QueryContextDependencies * Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; -&gt; Microsoft.EntityFrameworkCore.Query.QueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryContext (dependencies, queryBufferFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContext(Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ dependencies, Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" />
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="queryBufferFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContext (Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryBufferFactory As Func(Of IQueryBuffer), stateManager As IStateManager, concurrencyDetector As IConcurrencyDetector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryContext : Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.Query.QueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryContext (queryBufferFactory, stateManager, concurrencyDetector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContext(Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="queryBufferFactory">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContext (Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; queryBufferFactory, class Microsoft.EntityFrameworkCore.Internal.LazyRef`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryBufferFactory As Func(Of IQueryBuffer), stateManager As LazyRef(Of IStateManager), concurrencyDetector As IConcurrencyDetector)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QueryContext : Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt; * Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.Query.QueryContext" Usage="new Microsoft.EntityFrameworkCore.Query.QueryContext (queryBufferFactory, stateManager, concurrencyDetector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContext(Func&lt;Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^&gt; ^ queryBufferFactory, Microsoft::EntityFrameworkCore::Internal::LazyRef&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryBufferFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer&gt;" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="queryBufferFactory">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public virtual void AddParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddParameter(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddParameter (name As String, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member AddParameter : string * obj -&gt; unit&#xA;override this.AddParameter : string * obj -&gt; unit" Usage="queryContext.AddParameter (name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AddParameter(Platform::String ^ name, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddParameter(std::wstring const &amp; name, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues.AddParameter(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"> The name. </param>
        <param name="value"> The value. </param>
        <summary>
                Adds a parameter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrackingQuery">
      <MemberSignature Language="C#" Value="public virtual void BeginTrackingQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTrackingQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTrackingQuery ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTrackingQuery : unit -&gt; unit&#xA;override this.BeginTrackingQuery : unit -&gt; unit" Usage="queryContext.BeginTrackingQuery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTrackingQuery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTrackingQuery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTrackingQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Notify the state manager that a tracking query is starting.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the cancellation token.
            </summary>
        <value>
                The cancellation token.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetector">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConcurrencyDetector As IConcurrencyDetector" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the concurrency detector.
            </summary>
        <value>
                The concurrency detector.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.DbContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Context As DbContext" />
      <MemberSignature Language="F#" Value="member this.Context : Microsoft.EntityFrameworkCore.DbContext" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::DbContext ^ Context { Microsoft::EntityFrameworkCore::DbContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the current DbContext.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.QueryContextDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As QueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.Dependencies" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ Dependencies { Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ Dependencies { Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryContextDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Parameter object containing dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="queryContext.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; ParameterValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; ParameterValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterValues As IReadOnlyDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="member this.ParameterValues : System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ ParameterValues { System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues.ParameterValues</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The parameter values.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryBuffer">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer QueryBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer QueryBuffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryBuffer As IQueryBuffer" />
      <MemberSignature Language="F#" Value="member this.QueryBuffer : Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^ QueryBuffer { Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^ QueryBuffer { Microsoft::EntityFrameworkCore::Query::Internal::IQueryBuffer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query buffer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryProvider">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryProvider QueryProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider QueryProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryProvider As IQueryProvider" />
      <MemberSignature Language="F#" Value="member this.QueryProvider : System.Linq.IQueryProvider" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryProvider ^ QueryProvider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The query provider.
            </summary>
        <value>
                The query provider.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameter">
      <MemberSignature Language="C#" Value="public virtual object RemoveParameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveParameter(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveParameter (name As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member RemoveParameter : string -&gt; obj&#xA;override this.RemoveParameter : string -&gt; obj" Usage="queryContext.RemoveParameter name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ RemoveParameter(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ RemoveParameter(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable RemoveParameter(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues.RemoveParameter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name. </param>
        <summary>
                Removes a parameter by name.
            </summary>
        <returns>
                The parameter value.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public virtual void SetParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameter(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.SetParameter(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetParameter (name As String, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetParameter : string * obj -&gt; unit&#xA;override this.SetParameter : string * obj -&gt; unit" Usage="queryContext.SetParameter (name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SetParameter(Platform::String ^ name, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetParameter(std::wstring const &amp; name, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Query.Internal.IParameterValues.SetParameter(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"> The name. </param>
        <param name="value"> The value. </param>
        <summary>
                Sets a parameter value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public virtual void StartTracking (object entity, Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(object entity, class Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo entityTrackingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : obj * Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo -&gt; unit&#xA;override this.StartTracking : obj * Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo -&gt; unit" Usage="queryContext.StartTracking (entity, entityTrackingInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartTracking(System::Object ^ entity, Microsoft::EntityFrameworkCore::Query::Internal::EntityTrackingInfo ^ entityTrackingInfo);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void StartTracking(winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Query::Internal::EntityTrackingInfo const &amp; entityTrackingInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityTrackingInfo" Type="Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo" />
      </Parameters>
      <Docs>
        <param name="entity"> The entity. </param>
        <param name="entityTrackingInfo"> Information describing how to track the entity. </param>
        <summary>
                Start tracking an entity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateManager">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StateManager As IStateManager" />
      <MemberSignature Language="F#" Value="member this.StateManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Usage="Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The state manager.
            </summary>
        <value>
                The state manager.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>