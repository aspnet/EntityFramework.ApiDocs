<Type Name="LazyRef&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;T&gt;">
  <TypeSignature Language="C#" Value="public sealed class LazyRef&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LazyRef`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.LazyRef`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LazyRef(Of T)" />
  <TypeSignature Language="F#" Value="type LazyRef&lt;'T&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class LazyRef sealed" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA;class LazyRef sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyRef (Func&lt;T&gt; initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initializer As Func(Of T))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt; : Func&lt;'T&gt; -&gt; Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt; initializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyRef(Func&lt;T&gt; ^ initializer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initializer" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="initializer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyRef (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt; : 'T -&gt; Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt;" Usage="new Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt; value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyRef(T value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LazyRef(T value);" />
      <MemberSignature Language="C++ WINRT" Value=" LazyRef(T value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt;.HasValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (Func&lt;T&gt; initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.Func`1&lt;!T&gt; initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.Reset(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (initializer As Func(Of T))" />
      <MemberSignature Language="F#" Value="member this.Reset : Func&lt;'T&gt; -&gt; unit" Usage="lazyRef.Reset initializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(Func&lt;T&gt; ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="initializer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="F#" Value="member this.Value : 'T with get, set" Usage="Microsoft.EntityFrameworkCore.Internal.LazyRef&lt;'T&gt;.Value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>