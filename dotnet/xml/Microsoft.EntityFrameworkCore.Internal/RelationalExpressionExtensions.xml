<Type Name="RelationalExpressionExtensions" FullName="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalExpressionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalExpressionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalExpressionExtensions" />
  <TypeSignature Language="F#" Value="type RelationalExpressionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationalExpressionExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class RelationalExpressionExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class RelationalExpressionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindProperty">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IProperty FindProperty (this System.Linq.Expressions.Expression expression, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IProperty FindProperty(class System.Linq.Expressions.Expression expression, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.FindProperty(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="F#" Value="static member FindProperty : System.Linq.Expressions.Expression * Type -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.FindProperty (expression, targetType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Metadata::IProperty ^ FindProperty(System::Linq::Expressions::Expression ^ expression, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnExpression">
      <MemberSignature Language="C#" Value="public static bool HasColumnExpression (this Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasColumnExpression(class Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.HasColumnExpression(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)" />
      <MemberSignature Language="F#" Value="static member HasColumnExpression : Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.HasColumnExpression aliasExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasColumnExpression(Microsoft::EntityFrameworkCore::Query::Expressions::AliasExpression ^ aliasExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="aliasExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAliasWithColumnExpression">
      <MemberSignature Language="C#" Value="public static bool IsAliasWithColumnExpression (this System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAliasWithColumnExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsAliasWithColumnExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="static member IsAliasWithColumnExpression : System.Linq.Expressions.Expression -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsAliasWithColumnExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsAliasWithColumnExpression(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAliasWithSelectExpression">
      <MemberSignature Language="C#" Value="public static bool IsAliasWithSelectExpression (this System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAliasWithSelectExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsAliasWithSelectExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="static member IsAliasWithSelectExpression : System.Linq.Expressions.Expression -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsAliasWithSelectExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsAliasWithSelectExpression(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSimpleExpression">
      <MemberSignature Language="C#" Value="public static bool IsSimpleExpression (this System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSimpleExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsSimpleExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="static member IsSimpleExpression : System.Linq.Expressions.Expression -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.IsSimpleExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsSimpleExpression(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LiftExpressionFromSubquery">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression LiftExpressionFromSubquery (this System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression LiftExpressionFromSubquery(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase table) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.LiftExpressionFromSubquery(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)" />
      <MemberSignature Language="F#" Value="static member LiftExpressionFromSubquery : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase -&gt; Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.LiftExpressionFromSubquery (expression, table)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Query::Expressions::ColumnReferenceExpression ^ LiftExpressionFromSubquery(System::Linq::Expressions::Expression ^ expression, Microsoft::EntityFrameworkCore::Query::Expressions::TableExpressionBase ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Expressions.ColumnReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
        <Parameter Name="table" Type="Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="table">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumnExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression TryGetColumnExpression (this Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression TryGetColumnExpression(class Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression aliasExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.TryGetColumnExpression(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)" />
      <MemberSignature Language="F#" Value="static member TryGetColumnExpression : Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression -&gt; Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.TryGetColumnExpression aliasExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Query::Expressions::ColumnExpression ^ TryGetColumnExpression(Microsoft::EntityFrameworkCore::Query::Expressions::AliasExpression ^ aliasExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aliasExpression" Type="Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="aliasExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumnExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression TryGetColumnExpression (this System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression TryGetColumnExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.TryGetColumnExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="static member TryGetColumnExpression : System.Linq.Expressions.Expression -&gt; Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.TryGetColumnExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Query::Expressions::ColumnExpression ^ TryGetColumnExpression(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwrapNullableExpression">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression UnwrapNullableExpression (this System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression UnwrapNullableExpression(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.UnwrapNullableExpression(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="static member UnwrapNullableExpression : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalExpressionExtensions.UnwrapNullableExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::Expressions::Expression ^ UnwrapNullableExpression(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>