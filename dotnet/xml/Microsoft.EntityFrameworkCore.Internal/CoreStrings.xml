<Type Name="CoreStrings" FullName="Microsoft.EntityFrameworkCore.Internal.CoreStrings">
  <TypeSignature Language="C#" Value="public static class CoreStrings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CoreStrings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.CoreStrings" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreStrings" />
  <TypeSignature Language="F#" Value="type CoreStrings = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoreStrings abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class CoreStrings abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class CoreStrings abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AbstractLeafEntityType">
      <MemberSignature Language="C#" Value="public static string AbstractLeafEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AbstractLeafEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AbstractLeafEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AbstractLeafEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AbstractLeafEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AbstractLeafEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AbstractLeafEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AbstractLeafEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AbstractLeafEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The corresponding CLR type for entity type '{entityType}' is not instantiable and there is no derived entity type in the model that corresponds to a concrete CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousDependentEntity">
      <MemberSignature Language="C#" Value="public static string AmbiguousDependentEntity (object entityType, object targetEntryCall);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousDependentEntity(object entityType, object targetEntryCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousDependentEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousDependentEntity (entityType As Object, targetEntryCall As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousDependentEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousDependentEntity (entityType, targetEntryCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AmbiguousDependentEntity(System::Object ^ entityType, System::Object ^ targetEntryCall);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AmbiguousDependentEntity(Platform::Object ^ entityType, Platform::Object ^ targetEntryCall);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AmbiguousDependentEntity(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; targetEntryCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="targetEntryCall" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="targetEntryCall">To be added.</param>
        <summary>
                The entity type '{entityType}' has a defining navigation and the supplied entity is currently referenced from several owner entities. To access the entry for a particular reference call '{targetEntryCall}' on the owner entry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousForeignKeyPropertyCandidates">
      <MemberSignature Language="C#" Value="public static string AmbiguousForeignKeyPropertyCandidates (object firstDependentToPrincipalNavigationSpecification, object firstPrincipalToDependentNavigationSpecification, object secondDependentToPrincipalNavigationSpecification, object secondPrincipalToDependentNavigationSpecification, object foreignKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousForeignKeyPropertyCandidates(object firstDependentToPrincipalNavigationSpecification, object firstPrincipalToDependentNavigationSpecification, object secondDependentToPrincipalNavigationSpecification, object secondPrincipalToDependentNavigationSpecification, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousForeignKeyPropertyCandidates(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousForeignKeyPropertyCandidates (firstDependentToPrincipalNavigationSpecification As Object, firstPrincipalToDependentNavigationSpecification As Object, secondDependentToPrincipalNavigationSpecification As Object, secondPrincipalToDependentNavigationSpecification As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousForeignKeyPropertyCandidates : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousForeignKeyPropertyCandidates (firstDependentToPrincipalNavigationSpecification, firstPrincipalToDependentNavigationSpecification, secondDependentToPrincipalNavigationSpecification, secondPrincipalToDependentNavigationSpecification, foreignKeyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AmbiguousForeignKeyPropertyCandidates(System::Object ^ firstDependentToPrincipalNavigationSpecification, System::Object ^ firstPrincipalToDependentNavigationSpecification, System::Object ^ secondDependentToPrincipalNavigationSpecification, System::Object ^ secondPrincipalToDependentNavigationSpecification, System::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AmbiguousForeignKeyPropertyCandidates(Platform::Object ^ firstDependentToPrincipalNavigationSpecification, Platform::Object ^ firstPrincipalToDependentNavigationSpecification, Platform::Object ^ secondDependentToPrincipalNavigationSpecification, Platform::Object ^ secondPrincipalToDependentNavigationSpecification, Platform::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AmbiguousForeignKeyPropertyCandidates(winrt::Windows::Foundation::IInspectable const &amp; firstDependentToPrincipalNavigationSpecification, winrt::Windows::Foundation::IInspectable const &amp; firstPrincipalToDependentNavigationSpecification, winrt::Windows::Foundation::IInspectable const &amp; secondDependentToPrincipalNavigationSpecification, winrt::Windows::Foundation::IInspectable const &amp; secondPrincipalToDependentNavigationSpecification, winrt::Windows::Foundation::IInspectable const &amp; foreignKeyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstDependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="firstPrincipalToDependentNavigationSpecification" Type="System.Object" />
        <Parameter Name="secondDependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="secondPrincipalToDependentNavigationSpecification" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstDependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="firstPrincipalToDependentNavigationSpecification">To be added.</param>
        <param name="secondDependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="secondPrincipalToDependentNavigationSpecification">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                Both relationships between '{firstDependentToPrincipalNavigationSpecification}' and '{firstPrincipalToDependentNavigationSpecification}' and between '{secondDependentToPrincipalNavigationSpecification}' and '{secondPrincipalToDependentNavigationSpecification}' could use {foreignKeyProperties} as the foreign key. To resolve this configure the foreign key properties explicitly on at least one of the relationships.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousOneToOneRelationship">
      <MemberSignature Language="C#" Value="public static string AmbiguousOneToOneRelationship (object dependentToPrincipalNavigationSpecification, object principalToDependentNavigationSpecification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousOneToOneRelationship(object dependentToPrincipalNavigationSpecification, object principalToDependentNavigationSpecification) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousOneToOneRelationship(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousOneToOneRelationship (dependentToPrincipalNavigationSpecification As Object, principalToDependentNavigationSpecification As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousOneToOneRelationship : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousOneToOneRelationship (dependentToPrincipalNavigationSpecification, principalToDependentNavigationSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AmbiguousOneToOneRelationship(System::Object ^ dependentToPrincipalNavigationSpecification, System::Object ^ principalToDependentNavigationSpecification);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AmbiguousOneToOneRelationship(Platform::Object ^ dependentToPrincipalNavigationSpecification, Platform::Object ^ principalToDependentNavigationSpecification);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AmbiguousOneToOneRelationship(winrt::Windows::Foundation::IInspectable const &amp; dependentToPrincipalNavigationSpecification, winrt::Windows::Foundation::IInspectable const &amp; principalToDependentNavigationSpecification);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentToPrincipalNavigationSpecification" Type="System.Object" />
        <Parameter Name="principalToDependentNavigationSpecification" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentToPrincipalNavigationSpecification">To be added.</param>
        <param name="principalToDependentNavigationSpecification">To be added.</param>
        <summary>
                The child/dependent side could not be determined for the one-to-one relationship between '{dependentToPrincipalNavigationSpecification}' and '{principalToDependentNavigationSpecification}'. To identify the child/dependent side of the relationship, configure the foreign key property. If these navigations should not be part of the same relationship configure them without specifying the inverse. See http://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbiguousServiceProperty">
      <MemberSignature Language="C#" Value="public static string AmbiguousServiceProperty (object property, object serviceType, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AmbiguousServiceProperty(object property, object serviceType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousServiceProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AmbiguousServiceProperty (property As Object, serviceType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member AmbiguousServiceProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousServiceProperty (property, serviceType, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AmbiguousServiceProperty(System::Object ^ property, System::Object ^ serviceType, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AmbiguousServiceProperty(Platform::Object ^ property, Platform::Object ^ serviceType, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AmbiguousServiceProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; serviceType, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="serviceType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="serviceType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The service property '{property}' of type '{serviceType}' cannot be added to the entity type '{entityType}' because there is another property of the same type. Ignore one of the properties using the NotMappedAttribute or 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationNotFound">
      <MemberSignature Language="C#" Value="public static string AnnotationNotFound (object annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AnnotationNotFound(object annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AnnotationNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnnotationNotFound (annotation As Object) As String" />
      <MemberSignature Language="F#" Value="static member AnnotationNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.AnnotationNotFound annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AnnotationNotFound(System::Object ^ annotation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ AnnotationNotFound(Platform::Object ^ annotation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring AnnotationNotFound(winrt::Windows::Foundation::IInspectable const &amp; annotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <summary>
                The annotation '{annotation}' was not found. Ensure that the annotation has been added.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentIsEmpty">
      <MemberSignature Language="C#" Value="public static string ArgumentIsEmpty (object argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ArgumentIsEmpty(object argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentIsEmpty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArgumentIsEmpty (argumentName As Object) As String" />
      <MemberSignature Language="F#" Value="static member ArgumentIsEmpty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentIsEmpty argumentName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ArgumentIsEmpty(System::Object ^ argumentName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ArgumentIsEmpty(Platform::Object ^ argumentName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ArgumentIsEmpty(winrt::Windows::Foundation::IInspectable const &amp; argumentName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentName">To be added.</param>
        <summary>
                The string argument '{argumentName}' cannot be empty.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentPropertyNull">
      <MemberSignature Language="C#" Value="public static string ArgumentPropertyNull (object property, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ArgumentPropertyNull(object property, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentPropertyNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArgumentPropertyNull (property As Object, argument As Object) As String" />
      <MemberSignature Language="F#" Value="static member ArgumentPropertyNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentPropertyNull (property, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ArgumentPropertyNull(System::Object ^ property, System::Object ^ argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ArgumentPropertyNull(Platform::Object ^ property, Platform::Object ^ argument);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ArgumentPropertyNull(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>
                The property '{property}' of the argument '{argument}' cannot be null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadBackingFieldType">
      <MemberSignature Language="C#" Value="public static string BadBackingFieldType (object field, object fieldType, object entityType, object property, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadBackingFieldType(object field, object fieldType, object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadBackingFieldType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadBackingFieldType (field As Object, fieldType As Object, entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadBackingFieldType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadBackingFieldType (field, fieldType, entityType, property, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ BadBackingFieldType(System::Object ^ field, System::Object ^ fieldType, System::Object ^ entityType, System::Object ^ property, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ BadBackingFieldType(Platform::Object ^ field, Platform::Object ^ fieldType, Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring BadBackingFieldType(winrt::Windows::Foundation::IInspectable const &amp; field, winrt::Windows::Foundation::IInspectable const &amp; fieldType, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="fieldType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="fieldType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The specified field '{field}' of type '{fieldType}' cannot be used for the property '{entityType}.{property}' of type '{propertyType}'. Only backing fields of types that are assignable from the property type can be used.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadDependencyRegistration">
      <MemberSignature Language="C#" Value="public static string BadDependencyRegistration (object dependenciesType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadDependencyRegistration(object dependenciesType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadDependencyRegistration(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadDependencyRegistration (dependenciesType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadDependencyRegistration : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadDependencyRegistration dependenciesType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ BadDependencyRegistration(System::Object ^ dependenciesType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ BadDependencyRegistration(Platform::Object ^ dependenciesType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring BadDependencyRegistration(winrt::Windows::Foundation::IInspectable const &amp; dependenciesType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependenciesType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependenciesType">To be added.</param>
        <summary>
                The service dependencies type '{dependenciesType}' has been registered inappropriately in the service collection. Service dependencies types must only be registered by Entity Framework, or in rare cases by database providers and then only to change the service lifetime.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterDerivedType">
      <MemberSignature Language="C#" Value="public static string BadFilterDerivedType (object filter, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterDerivedType(object filter, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadFilterDerivedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterDerivedType (filter As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterDerivedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadFilterDerivedType (filter, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ BadFilterDerivedType(System::Object ^ filter, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ BadFilterDerivedType(Platform::Object ^ filter, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring BadFilterDerivedType(winrt::Windows::Foundation::IInspectable const &amp; filter, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The filter expression '{filter}' cannot be specified for entity type '{entityType}'. A filter may only be applied to the root entity type in a hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadFilterExpression">
      <MemberSignature Language="C#" Value="public static string BadFilterExpression (object filter, object entityType, object clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadFilterExpression(object filter, object entityType, object clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadFilterExpression(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadFilterExpression (filter As Object, entityType As Object, clrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadFilterExpression : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadFilterExpression (filter, entityType, clrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ BadFilterExpression(System::Object ^ filter, System::Object ^ entityType, System::Object ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ BadFilterExpression(Platform::Object ^ filter, Platform::Object ^ entityType, Platform::Object ^ clrType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring BadFilterExpression(winrt::Windows::Foundation::IInspectable const &amp; filter, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; clrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <summary>
                The filter expression '{filter}' specified for entity type '{entityType}' is invalid. The expression must accept a single parameter of type '{clrType}', return bool, and may not contain references to navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValueGeneratorType">
      <MemberSignature Language="C#" Value="public static string BadValueGeneratorType (object givenType, object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BadValueGeneratorType(object givenType, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadValueGeneratorType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BadValueGeneratorType (givenType As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member BadValueGeneratorType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadValueGeneratorType (givenType, expectedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ BadValueGeneratorType(System::Object ^ givenType, System::Object ^ expectedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ BadValueGeneratorType(Platform::Object ^ givenType, Platform::Object ^ expectedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring BadValueGeneratorType(winrt::Windows::Foundation::IInspectable const &amp; givenType, winrt::Windows::Foundation::IInspectable const &amp; expectedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="givenType" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="givenType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                The type '{givenType}' cannot be used a a value generator because it does not inherit from '{expectedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotAccessEntityAsQuery">
      <MemberSignature Language="C#" Value="public static string CannotAccessEntityAsQuery (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotAccessEntityAsQuery(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotAccessEntityAsQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotAccessEntityAsQuery (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotAccessEntityAsQuery : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotAccessEntityAsQuery type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotAccessEntityAsQuery(System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotAccessEntityAsQuery(Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotAccessEntityAsQuery(winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Cannot access type '{type}' as a query type because it has already been declared as an entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotAccessQueryAsEntity">
      <MemberSignature Language="C#" Value="public static string CannotAccessQueryAsEntity (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotAccessQueryAsEntity(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotAccessQueryAsEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotAccessQueryAsEntity (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotAccessQueryAsEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotAccessQueryAsEntity type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotAccessQueryAsEntity(System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotAccessQueryAsEntity(Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotAccessQueryAsEntity(winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Cannot access type '{type}' as an entity type because it has already been declared as a query type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotBeNullable">
      <MemberSignature Language="C#" Value="public static string CannotBeNullable (object property, object entityType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotBeNullable(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullable(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotBeNullable (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotBeNullable : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullable (property, entityType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotBeNullable(System::Object ^ property, System::Object ^ entityType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotBeNullable(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotBeNullable(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' cannot be marked as nullable/optional because the type of the property is '{propertyType}' which is not a nullable type. Any property can be marked as non-nullable/required, but only properties of nullable types and which are not part of primary key can be marked as nullable/optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotBeNullablePK">
      <MemberSignature Language="C#" Value="public static string CannotBeNullablePK (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotBeNullablePK(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullablePK(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotBeNullablePK (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotBeNullablePK : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullablePK (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotBeNullablePK(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotBeNullablePK(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotBeNullablePK(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' cannot be marked as nullable/optional because the property is a part of a key. Any property can be marked as non-nullable/required, but only properties of nullable types and which are not part of a key can be marked as nullable/optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotCreateValueGenerator">
      <MemberSignature Language="C#" Value="public static string CannotCreateValueGenerator (object generatorType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotCreateValueGenerator(object generatorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotCreateValueGenerator(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotCreateValueGenerator (generatorType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotCreateValueGenerator : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotCreateValueGenerator generatorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotCreateValueGenerator(System::Object ^ generatorType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotCreateValueGenerator(Platform::Object ^ generatorType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotCreateValueGenerator(winrt::Windows::Foundation::IInspectable const &amp; generatorType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="generatorType">To be added.</param>
        <summary>
                Cannot create instance of value generator type '{generatorType}'. Ensure that the type is instantiable and has a parameterless constructor, or use the overload of HasValueGenerator that accepts a delegate.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotLoadDetached">
      <MemberSignature Language="C#" Value="public static string CannotLoadDetached (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotLoadDetached(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotLoadDetached(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotLoadDetached (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotLoadDetached : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotLoadDetached (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotLoadDetached(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotLoadDetached(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotLoadDetached(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Navigation property '{navigation}' on entity of type '{entityType}' cannot be loaded because the entity is not being tracked. Navigation properties can only be loaded for tracked entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CannotMaterializeAbstractType">
      <MemberSignature Language="C#" Value="public static string CannotMaterializeAbstractType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CannotMaterializeAbstractType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotMaterializeAbstractType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CannotMaterializeAbstractType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CannotMaterializeAbstractType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotMaterializeAbstractType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CannotMaterializeAbstractType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CannotMaterializeAbstractType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CannotMaterializeAbstractType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to create an instance of type entity type '{entityType}' because it is abstract. Either make it non-abstract or consider mapping at least one derived type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeTrackingInterfaceMissing">
      <MemberSignature Language="C#" Value="public static string ChangeTrackingInterfaceMissing (object entityType, object changeTrackingStrategy, object notificationInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeTrackingInterfaceMissing(object entityType, object changeTrackingStrategy, object notificationInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ChangeTrackingInterfaceMissing(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeTrackingInterfaceMissing (entityType As Object, changeTrackingStrategy As Object, notificationInterface As Object) As String" />
      <MemberSignature Language="F#" Value="static member ChangeTrackingInterfaceMissing : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ChangeTrackingInterfaceMissing (entityType, changeTrackingStrategy, notificationInterface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeTrackingInterfaceMissing(System::Object ^ entityType, System::Object ^ changeTrackingStrategy, System::Object ^ notificationInterface);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ChangeTrackingInterfaceMissing(Platform::Object ^ entityType, Platform::Object ^ changeTrackingStrategy, Platform::Object ^ notificationInterface);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ChangeTrackingInterfaceMissing(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; changeTrackingStrategy, winrt::Windows::Foundation::IInspectable const &amp; notificationInterface);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" />
        <Parameter Name="notificationInterface" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <param name="notificationInterface">To be added.</param>
        <summary>
                The entity type '{entityType}' is configured to use the '{changeTrackingStrategy}' change tracking strategy but does not implement the required '{notificationInterface}' interface.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularDependency">
      <MemberSignature Language="C#" Value="public static string CircularDependency (object cycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CircularDependency(object cycle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularDependency(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CircularDependency (cycle As Object) As String" />
      <MemberSignature Language="F#" Value="static member CircularDependency : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularDependency cycle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CircularDependency(System::Object ^ cycle);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CircularDependency(Platform::Object ^ cycle);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CircularDependency(winrt::Windows::Foundation::IInspectable const &amp; cycle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cycle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="cycle">To be added.</param>
        <summary>
                Unable to save changes because a circular dependency was detected in the data to be saved: '{cycle}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularInheritance">
      <MemberSignature Language="C#" Value="public static string CircularInheritance (object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CircularInheritance(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularInheritance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CircularInheritance (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CircularInheritance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularInheritance (entityType, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CircularInheritance(System::Object ^ entityType, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CircularInheritance(Platform::Object ^ entityType, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CircularInheritance(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a descendant of '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingDependentEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingDependentEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingDependentEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingDependentEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingDependentEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingDependentEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingDependentEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClashingDependentEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClashingDependentEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClashingDependentEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because a dependent entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonDependentEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonDependentEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonDependentEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonDependentEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonDependentEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonDependentEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonDependentEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClashingNonDependentEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClashingNonDependentEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClashingNonDependentEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The dependent entity type '{entityType}' cannot be added to the model because an entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonOwnedEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonOwnedEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonOwnedEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonOwnedEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonOwnedEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonOwnedEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonOwnedEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClashingNonOwnedEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClashingNonOwnedEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClashingNonOwnedEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The type '{entityType}' cannot be marked as owned because a non-owned entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingNonWeakEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingNonWeakEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingNonWeakEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonWeakEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingNonWeakEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingNonWeakEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingNonWeakEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClashingNonWeakEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClashingNonWeakEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClashingNonWeakEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The weak entity type '{entityType}' cannot be added to the model because an entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClashingWeakEntityType">
      <MemberSignature Language="C#" Value="public static string ClashingWeakEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClashingWeakEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingWeakEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClashingWeakEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClashingWeakEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClashingWeakEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClashingWeakEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClashingWeakEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClashingWeakEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because a weak entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrPropertyOnShadowEntity">
      <MemberSignature Language="C#" Value="public static string ClrPropertyOnShadowEntity (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ClrPropertyOnShadowEntity(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClrPropertyOnShadowEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClrPropertyOnShadowEntity (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ClrPropertyOnShadowEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClrPropertyOnShadowEntity (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ClrPropertyOnShadowEntity(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ClrPropertyOnShadowEntity(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ClrPropertyOnShadowEntity(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' cannot exist on type '{entityType}' because the type is marked as shadow state while the property is not. Shadow state types can only contain shadow state properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionArgumentIsEmpty">
      <MemberSignature Language="C#" Value="public static string CollectionArgumentIsEmpty (object argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CollectionArgumentIsEmpty(object argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionArgumentIsEmpty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionArgumentIsEmpty (argumentName As Object) As String" />
      <MemberSignature Language="F#" Value="static member CollectionArgumentIsEmpty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionArgumentIsEmpty argumentName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CollectionArgumentIsEmpty(System::Object ^ argumentName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CollectionArgumentIsEmpty(Platform::Object ^ argumentName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CollectionArgumentIsEmpty(winrt::Windows::Foundation::IInspectable const &amp; argumentName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentName">To be added.</param>
        <summary>
                The collection argument '{argumentName}' must contain at least one element.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionIsReference">
      <MemberSignature Language="C#" Value="public static string CollectionIsReference (object property, object entityType, object CollectionMethod, object ReferenceMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CollectionIsReference(object property, object entityType, object CollectionMethod, object ReferenceMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionIsReference(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CollectionIsReference (property As Object, entityType As Object, CollectionMethod As Object, ReferenceMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member CollectionIsReference : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionIsReference (property, entityType, CollectionMethod, ReferenceMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CollectionIsReference(System::Object ^ property, System::Object ^ entityType, System::Object ^ CollectionMethod, System::Object ^ ReferenceMethod);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CollectionIsReference(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ CollectionMethod, Platform::Object ^ ReferenceMethod);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CollectionIsReference(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; CollectionMethod, winrt::Windows::Foundation::IInspectable const &amp; ReferenceMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="CollectionMethod" Type="System.Object" />
        <Parameter Name="ReferenceMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is being accessed using the '{CollectionMethod}' method, but is defined in the model as a non-collection, reference navigation property. Use the '{ReferenceMethod}' method to access reference navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparerPropertyMismatch">
      <MemberSignature Language="C#" Value="public static string ComparerPropertyMismatch (object type, object entityType, object propertyName, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ComparerPropertyMismatch(object type, object entityType, object propertyName, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ComparerPropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparerPropertyMismatch (type As Object, entityType As Object, propertyName As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ComparerPropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ComparerPropertyMismatch (type, entityType, propertyName, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ComparerPropertyMismatch(System::Object ^ type, System::Object ^ entityType, System::Object ^ propertyName, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ComparerPropertyMismatch(Platform::Object ^ type, Platform::Object ^ entityType, Platform::Object ^ propertyName, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ComparerPropertyMismatch(winrt::Windows::Foundation::IInspectable const &amp; type, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyName, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Comparer for type '{type}' cannot be used for '{entityType}.{propertyName}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeFkOnProperty">
      <MemberSignature Language="C#" Value="public static string CompositeFkOnProperty (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompositeFkOnProperty(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositeFkOnProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompositeFkOnProperty (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompositeFkOnProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositeFkOnProperty (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CompositeFkOnProperty(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CompositeFkOnProperty(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CompositeFkOnProperty(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                There are multiple properties pointing to navigation '{navigation}' in entity type '{entityType}'. To define composite foreign key using data annotations, use ForeignKeyAttribute on navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositePKWithDataAnnotation">
      <MemberSignature Language="C#" Value="public static string CompositePKWithDataAnnotation (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CompositePKWithDataAnnotation(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositePKWithDataAnnotation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompositePKWithDataAnnotation (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CompositePKWithDataAnnotation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositePKWithDataAnnotation entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CompositePKWithDataAnnotation(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CompositePKWithDataAnnotation(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CompositePKWithDataAnnotation(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Entity type '{entityType}' has composite primary key defined with data annotations. To set composite primary key, use fluent API.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrentMethodInvocation">
      <MemberSignature Language="C#" Value="public static string ConcurrentMethodInvocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConcurrentMethodInvocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConcurrentMethodInvocation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConcurrentMethodInvocation As String" />
      <MemberSignature Language="F#" Value="member this.ConcurrentMethodInvocation : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConcurrentMethodInvocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ConcurrentMethodInvocation { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ConcurrentMethodInvocation { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingNavigation (object property, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingNavigation(object property, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingNavigation (property As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingNavigation (property, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConflictingNavigation(System::Object ^ property, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConflictingNavigation(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConflictingNavigation(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the entity type '{entityType}' because a navigation property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingProperty">
      <MemberSignature Language="C#" Value="public static string ConflictingProperty (object navigation, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingProperty(object navigation, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingProperty (navigation As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingProperty (navigation, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConflictingProperty(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConflictingProperty(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConflictingProperty(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because a property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingPropertyOrNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingPropertyOrNavigation (object member, object entityType, object conflictingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingPropertyOrNavigation(object member, object entityType, object conflictingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingPropertyOrNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingPropertyOrNavigation (member As Object, entityType As Object, conflictingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingPropertyOrNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingPropertyOrNavigation (member, entityType, conflictingEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConflictingPropertyOrNavigation(System::Object ^ member, System::Object ^ entityType, System::Object ^ conflictingEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConflictingPropertyOrNavigation(Platform::Object ^ member, Platform::Object ^ entityType, Platform::Object ^ conflictingEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConflictingPropertyOrNavigation(winrt::Windows::Foundation::IInspectable const &amp; member, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; conflictingEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="conflictingEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="conflictingEntityType">To be added.</param>
        <summary>
                The property or navigation '{member}' cannot be added to the entity type '{entityType}' because a property or navigation with the same name already exists on entity type '{conflictingEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictingRelationshipNavigation">
      <MemberSignature Language="C#" Value="public static string ConflictingRelationshipNavigation (object newPrincipalEntityType, object newPrincipalNavigation, object newDependentEntityType, object newDependentNavigation, object existingPrincipalEntityType, object existingPrincipalNavigation, object existingDependentEntityType, object existingDependentNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConflictingRelationshipNavigation(object newPrincipalEntityType, object newPrincipalNavigation, object newDependentEntityType, object newDependentNavigation, object existingPrincipalEntityType, object existingPrincipalNavigation, object existingDependentEntityType, object existingDependentNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingRelationshipNavigation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConflictingRelationshipNavigation (newPrincipalEntityType As Object, newPrincipalNavigation As Object, newDependentEntityType As Object, newDependentNavigation As Object, existingPrincipalEntityType As Object, existingPrincipalNavigation As Object, existingDependentEntityType As Object, existingDependentNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConflictingRelationshipNavigation : obj * obj * obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingRelationshipNavigation (newPrincipalEntityType, newPrincipalNavigation, newDependentEntityType, newDependentNavigation, existingPrincipalEntityType, existingPrincipalNavigation, existingDependentEntityType, existingDependentNavigation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConflictingRelationshipNavigation(System::Object ^ newPrincipalEntityType, System::Object ^ newPrincipalNavigation, System::Object ^ newDependentEntityType, System::Object ^ newDependentNavigation, System::Object ^ existingPrincipalEntityType, System::Object ^ existingPrincipalNavigation, System::Object ^ existingDependentEntityType, System::Object ^ existingDependentNavigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConflictingRelationshipNavigation(Platform::Object ^ newPrincipalEntityType, Platform::Object ^ newPrincipalNavigation, Platform::Object ^ newDependentEntityType, Platform::Object ^ newDependentNavigation, Platform::Object ^ existingPrincipalEntityType, Platform::Object ^ existingPrincipalNavigation, Platform::Object ^ existingDependentEntityType, Platform::Object ^ existingDependentNavigation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConflictingRelationshipNavigation(winrt::Windows::Foundation::IInspectable const &amp; newPrincipalEntityType, winrt::Windows::Foundation::IInspectable const &amp; newPrincipalNavigation, winrt::Windows::Foundation::IInspectable const &amp; newDependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; newDependentNavigation, winrt::Windows::Foundation::IInspectable const &amp; existingPrincipalEntityType, winrt::Windows::Foundation::IInspectable const &amp; existingPrincipalNavigation, winrt::Windows::Foundation::IInspectable const &amp; existingDependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; existingDependentNavigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPrincipalEntityType" Type="System.Object" />
        <Parameter Name="newPrincipalNavigation" Type="System.Object" />
        <Parameter Name="newDependentEntityType" Type="System.Object" />
        <Parameter Name="newDependentNavigation" Type="System.Object" />
        <Parameter Name="existingPrincipalEntityType" Type="System.Object" />
        <Parameter Name="existingPrincipalNavigation" Type="System.Object" />
        <Parameter Name="existingDependentEntityType" Type="System.Object" />
        <Parameter Name="existingDependentNavigation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newPrincipalEntityType">To be added.</param>
        <param name="newPrincipalNavigation">To be added.</param>
        <param name="newDependentEntityType">To be added.</param>
        <param name="newDependentNavigation">To be added.</param>
        <param name="existingPrincipalEntityType">To be added.</param>
        <param name="existingPrincipalNavigation">To be added.</param>
        <param name="existingDependentEntityType">To be added.</param>
        <param name="existingDependentNavigation">To be added.</param>
        <summary>
                Cannot create a relationship between '{newPrincipalEntityType}.{newPrincipalNavigation}' and '{newDependentEntityType}.{newDependentNavigation}', because there already is a relationship between '{existingPrincipalEntityType}.{existingPrincipalNavigation}' and '{existingDependentEntityType}.{existingDependentNavigation}'. Navigation properties can only participate in a single relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorConflict">
      <MemberSignature Language="C#" Value="public static string ConstructorConflict (object firstConstructor, object secondConstructor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConstructorConflict(object firstConstructor, object secondConstructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConstructorConflict(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConstructorConflict (firstConstructor As Object, secondConstructor As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConstructorConflict : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConstructorConflict (firstConstructor, secondConstructor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConstructorConflict(System::Object ^ firstConstructor, System::Object ^ secondConstructor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConstructorConflict(Platform::Object ^ firstConstructor, Platform::Object ^ secondConstructor);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConstructorConflict(winrt::Windows::Foundation::IInspectable const &amp; firstConstructor, winrt::Windows::Foundation::IInspectable const &amp; secondConstructor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstConstructor" Type="System.Object" />
        <Parameter Name="secondConstructor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstConstructor">To be added.</param>
        <param name="secondConstructor">To be added.</param>
        <summary>
                Two constructors were found with the same number of parameters that could both be used by Entity Framework. The constructor to use must be configured explicitly. The two constructors are '{firstConstructor}' and '{secondConstructor}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorNotFound">
      <MemberSignature Language="C#" Value="public static string ConstructorNotFound (object entityType, object parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConstructorNotFound(object entityType, object parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConstructorNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConstructorNotFound (entityType As Object, parameters As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConstructorNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConstructorNotFound (entityType, parameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConstructorNotFound(System::Object ^ entityType, System::Object ^ parameters);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConstructorNotFound(Platform::Object ^ entityType, Platform::Object ^ parameters);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConstructorNotFound(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>
                No suitable constructor found for entity type '{entityType}'. The following parameters could not be bound to properties of the entity: '{parameters}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposed">
      <MemberSignature Language="C#" Value="public static string ContextDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ContextDisposed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ContextDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextDisposed As String" />
      <MemberSignature Language="F#" Value="member this.ContextDisposed : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ContextDisposed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ContextDisposed { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ContextDisposed { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Cannot access a disposed object. A common cause of this error is disposing a context that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling Dispose() on the context, or wrapping the context in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConventionsInfiniteLoop">
      <MemberSignature Language="C#" Value="public static string ConventionsInfiniteLoop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ConventionsInfiniteLoop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConventionsInfiniteLoop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConventionsInfiniteLoop As String" />
      <MemberSignature Language="F#" Value="member this.ConventionsInfiniteLoop : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConventionsInfiniteLoop" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ConventionsInfiniteLoop { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ConventionsInfiniteLoop { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The convention invocations have reached the recursion limit. This is likely an issue in EF Core, please report it.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterBadType">
      <MemberSignature Language="C#" Value="public static string ConverterBadType (object converter, object type, object allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterBadType(object converter, object type, object allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterBadType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterBadType (converter As Object, type As Object, allowed As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterBadType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterBadType (converter, type, allowed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConverterBadType(System::Object ^ converter, System::Object ^ type, System::Object ^ allowed);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConverterBadType(Platform::Object ^ converter, Platform::Object ^ type, Platform::Object ^ allowed);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConverterBadType(winrt::Windows::Foundation::IInspectable const &amp; converter, winrt::Windows::Foundation::IInspectable const &amp; type, winrt::Windows::Foundation::IInspectable const &amp; allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="allowed" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="converter">To be added.</param>
        <param name="type">To be added.</param>
        <param name="allowed">To be added.</param>
        <summary>
                The value converter '{converter}' cannot be used with type '{type}'. This converter can only be used with {allowed}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCloneNotImplemented">
      <MemberSignature Language="C#" Value="public static string ConverterCloneNotImplemented (object mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterCloneNotImplemented(object mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterCloneNotImplemented(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterCloneNotImplemented (mapping As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterCloneNotImplemented : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterCloneNotImplemented mapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConverterCloneNotImplemented(System::Object ^ mapping);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConverterCloneNotImplemented(Platform::Object ^ mapping);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConverterCloneNotImplemented(winrt::Windows::Foundation::IInspectable const &amp; mapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mapping">To be added.</param>
        <summary>
                The '{mapping}' does not support value conversions. Support for value conversions typically requires changes in the database provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterPropertyMismatch">
      <MemberSignature Language="C#" Value="public static string ConverterPropertyMismatch (object converterType, object entityType, object propertyName, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConverterPropertyMismatch(object converterType, object entityType, object propertyName, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterPropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConverterPropertyMismatch (converterType As Object, entityType As Object, propertyName As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConverterPropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConverterPropertyMismatch (converterType, entityType, propertyName, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConverterPropertyMismatch(System::Object ^ converterType, System::Object ^ entityType, System::Object ^ propertyName, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConverterPropertyMismatch(Platform::Object ^ converterType, Platform::Object ^ entityType, Platform::Object ^ propertyName, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConverterPropertyMismatch(winrt::Windows::Foundation::IInspectable const &amp; converterType, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyName, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converterType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="converterType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Converter for model type '{converterType}' cannot be used for '{entityType}.{propertyName}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertersCannotBeComposed">
      <MemberSignature Language="C#" Value="public static string ConvertersCannotBeComposed (object typeOneIn, object typeOneOut, object typeTwoIn, object typeTwoOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertersCannotBeComposed(object typeOneIn, object typeOneOut, object typeTwoIn, object typeTwoOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConvertersCannotBeComposed(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertersCannotBeComposed (typeOneIn As Object, typeOneOut As Object, typeTwoIn As Object, typeTwoOut As Object) As String" />
      <MemberSignature Language="F#" Value="static member ConvertersCannotBeComposed : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConvertersCannotBeComposed (typeOneIn, typeOneOut, typeTwoIn, typeTwoOut)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertersCannotBeComposed(System::Object ^ typeOneIn, System::Object ^ typeOneOut, System::Object ^ typeTwoIn, System::Object ^ typeTwoOut);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ConvertersCannotBeComposed(Platform::Object ^ typeOneIn, Platform::Object ^ typeOneOut, Platform::Object ^ typeTwoIn, Platform::Object ^ typeTwoOut);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ConvertersCannotBeComposed(winrt::Windows::Foundation::IInspectable const &amp; typeOneIn, winrt::Windows::Foundation::IInspectable const &amp; typeOneOut, winrt::Windows::Foundation::IInspectable const &amp; typeTwoIn, winrt::Windows::Foundation::IInspectable const &amp; typeTwoOut);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeOneIn" Type="System.Object" />
        <Parameter Name="typeOneOut" Type="System.Object" />
        <Parameter Name="typeTwoIn" Type="System.Object" />
        <Parameter Name="typeTwoOut" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeOneIn">To be added.</param>
        <param name="typeOneOut">To be added.</param>
        <param name="typeTwoIn">To be added.</param>
        <param name="typeTwoOut">To be added.</param>
        <summary>
                Cannot compose converter from '{typeOneIn}' to '{typeOneOut}' with converter from '{typeTwoIn}' to '{typeTwoOut}' because the output type of the first converter is different from the input type of the second converter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomMetadata">
      <MemberSignature Language="C#" Value="public static string CustomMetadata (object method, object interfaceType, object concreteType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CustomMetadata(object method, object interfaceType, object concreteType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CustomMetadata(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomMetadata (method As Object, interfaceType As Object, concreteType As Object) As String" />
      <MemberSignature Language="F#" Value="static member CustomMetadata : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.CustomMetadata (method, interfaceType, concreteType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CustomMetadata(System::Object ^ method, System::Object ^ interfaceType, System::Object ^ concreteType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ CustomMetadata(Platform::Object ^ method, Platform::Object ^ interfaceType, Platform::Object ^ concreteType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CustomMetadata(winrt::Windows::Foundation::IInspectable const &amp; method, winrt::Windows::Foundation::IInspectable const &amp; interfaceType, winrt::Windows::Foundation::IInspectable const &amp; concreteType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Object" />
        <Parameter Name="interfaceType" Type="System.Object" />
        <Parameter Name="concreteType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="interfaceType">To be added.</param>
        <param name="concreteType">To be added.</param>
        <summary>
                The extension method '{method}' is being used with a custom implementation of '{interfaceType}'. Use of custom implementations of the Entity Framework metadata interfaces is not supported. Consider deriving from '{concreteType}' instead. Please contact the Entity Framework team if you have a compelling case for a custom implementation of the metadata interfaces so that we can consider ways to achieve this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseGeneratedNull">
      <MemberSignature Language="C#" Value="public static string DatabaseGeneratedNull (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DatabaseGeneratedNull(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DatabaseGeneratedNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DatabaseGeneratedNull (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DatabaseGeneratedNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DatabaseGeneratedNull (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DatabaseGeneratedNull(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DatabaseGeneratedNull(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DatabaseGeneratedNull(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The database generated a null value for non-nullable property '{property}' of entity type '{entityType}'. Ensure value generation configuration in the database matches the configuration in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingWithIListSource">
      <MemberSignature Language="C#" Value="public static string DataBindingWithIListSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DataBindingWithIListSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DataBindingWithIListSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DataBindingWithIListSource As String" />
      <MemberSignature Language="F#" Value="member this.DataBindingWithIListSource : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DataBindingWithIListSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DataBindingWithIListSource { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ DataBindingWithIListSource { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Data binding directly to a store query is not supported. Instead populate a DbSet with data, for example by calling Load on the DbSet, and then bind to local data to avoid sending a query to the database each time the databound control iterates the data. For WPF bind to 'DbSet.Local.ToObservableCollection()'. For WinForms bind to 'DbSet.Local.ToBindingList()'. For ASP.NET WebForms bind to 'DbSet.ToList()' or use Model Binding.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbContextMissingConstructor">
      <MemberSignature Language="C#" Value="public static string DbContextMissingConstructor (object contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DbContextMissingConstructor(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DbContextMissingConstructor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DbContextMissingConstructor (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DbContextMissingConstructor : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DbContextMissingConstructor contextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DbContextMissingConstructor(System::Object ^ contextType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DbContextMissingConstructor(Platform::Object ^ contextType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DbContextMissingConstructor(winrt::Windows::Foundation::IInspectable const &amp; contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                AddDbContext was called with configuration, but the context type '{contextType}' only declares a parameterless constructor. This means that the configuration passed to AddDbContext will never be used. If configuration is passed to AddDbContext, then '{contextType}' should declare a constructor that accepts a DbContextOptions&lt;{contextType}&gt; and must pass it to the base constructor for DbContext.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentBaseType">
      <MemberSignature Language="C#" Value="public static string DependentBaseType (object entityType, object baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DependentBaseType(object entityType, object baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependentBaseType (entityType As Object, baseType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DependentBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentBaseType (entityType, baseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DependentBaseType(System::Object ^ entityType, System::Object ^ baseType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DependentBaseType(Platform::Object ^ entityType, Platform::Object ^ baseType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DependentBaseType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The type '{entityType}' cannot have dependent entity type '{baseType}' as the base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentDerivedType">
      <MemberSignature Language="C#" Value="public static string DependentDerivedType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DependentDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependentDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DependentDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentDerivedType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DependentDerivedType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DependentDerivedType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DependentDerivedType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The dependent entity type '{entityType}' cannot have a base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentEntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string DependentEntityTypeNotInRelationship (object dependentEntityType, object principalEntityType, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DependentEntityTypeNotInRelationship(object dependentEntityType, object principalEntityType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentEntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DependentEntityTypeNotInRelationship (dependentEntityType As Object, principalEntityType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DependentEntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentEntityTypeNotInRelationship (dependentEntityType, principalEntityType, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DependentEntityTypeNotInRelationship(System::Object ^ dependentEntityType, System::Object ^ principalEntityType, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DependentEntityTypeNotInRelationship(Platform::Object ^ dependentEntityType, Platform::Object ^ principalEntityType, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DependentEntityTypeNotInRelationship(winrt::Windows::Foundation::IInspectable const &amp; dependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}' but have specified a foreign key on '{entityType}'. The foreign key must be defined on a type that is part of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityCannotHaveKeys">
      <MemberSignature Language="C#" Value="public static string DerivedEntityCannotHaveKeys (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityCannotHaveKeys(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityCannotHaveKeys(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityCannotHaveKeys (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityCannotHaveKeys : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityCannotHaveKeys entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DerivedEntityCannotHaveKeys(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DerivedEntityCannotHaveKeys(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DerivedEntityCannotHaveKeys(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Unable to set a base type for entity type '{entityType}' because it has one or more keys defined.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedEntityTypeKey">
      <MemberSignature Language="C#" Value="public static string DerivedEntityTypeKey (object derivedType, object rootType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DerivedEntityTypeKey(object derivedType, object rootType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityTypeKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DerivedEntityTypeKey (derivedType As Object, rootType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DerivedEntityTypeKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityTypeKey (derivedType, rootType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DerivedEntityTypeKey(System::Object ^ derivedType, System::Object ^ rootType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DerivedEntityTypeKey(Platform::Object ^ derivedType, Platform::Object ^ rootType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DerivedEntityTypeKey(winrt::Windows::Foundation::IInspectable const &amp; derivedType, winrt::Windows::Foundation::IInspectable const &amp; rootType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" />
        <Parameter Name="rootType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="rootType">To be added.</param>
        <summary>
                A key cannot be configured on '{derivedType}' because it is a derived type. The key must be configured on the root type '{rootType}'. If you did not intend for '{rootType}' to be included in the model, ensure that it is not included in a DbSet property on your context, referenced in a configuration call to ModelBuilder, or referenced from a navigation property on a type that is included in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateAnnotation">
      <MemberSignature Language="C#" Value="public static string DuplicateAnnotation (object annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateAnnotation(object annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateAnnotation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateAnnotation (annotation As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateAnnotation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateAnnotation annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateAnnotation(System::Object ^ annotation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateAnnotation(Platform::Object ^ annotation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateAnnotation(winrt::Windows::Foundation::IInspectable const &amp; annotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="annotation">To be added.</param>
        <summary>
                The annotation '{annotation}' cannot be added because an annotation with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateEntityType">
      <MemberSignature Language="C#" Value="public static string DuplicateEntityType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateEntityType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateEntityType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateEntityType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateEntityType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateEntityType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be added to the model because an entity type with the same name already exists.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateForeignKey">
      <MemberSignature Language="C#" Value="public static string DuplicateForeignKey (object foreignKey, object entityType, object duplicateEntityType, object key, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateForeignKey(object foreignKey, object entityType, object duplicateEntityType, object key, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateForeignKey(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateForeignKey (foreignKey As Object, entityType As Object, duplicateEntityType As Object, key As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateForeignKey : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateForeignKey (foreignKey, entityType, duplicateEntityType, key, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateForeignKey(System::Object ^ foreignKey, System::Object ^ entityType, System::Object ^ duplicateEntityType, System::Object ^ key, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateForeignKey(Platform::Object ^ foreignKey, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType, Platform::Object ^ key, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateForeignKey(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType, winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The foreign key {foreignKey} cannot be added to the entity type '{entityType}' because a foreign key on the same properties already exists on entity type '{duplicateEntityType}' and also targets the key {key} on '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateIndex">
      <MemberSignature Language="C#" Value="public static string DuplicateIndex (object index, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateIndex(object index, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateIndex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateIndex (index As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateIndex : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateIndex (index, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateIndex(System::Object ^ index, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateIndex(Platform::Object ^ index, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateIndex(winrt::Windows::Foundation::IInspectable const &amp; index, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The index {index} cannot be added to the entity type '{entityType}' because an index on the same properties already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateKey">
      <MemberSignature Language="C#" Value="public static string DuplicateKey (object key, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateKey(object key, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateKey (key As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateKey (key, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateKey(System::Object ^ key, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateKey(Platform::Object ^ key, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateKey(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The key {key} cannot be added to the entity type '{entityType}' because a key on the same properties already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateNavigation">
      <MemberSignature Language="C#" Value="public static string DuplicateNavigation (object navigation, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateNavigation(object navigation, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateNavigation (navigation As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigation (navigation, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateNavigation(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateNavigation(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateNavigation(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because a navigation property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateNavigationsOnBase">
      <MemberSignature Language="C#" Value="public static string DuplicateNavigationsOnBase (object entityType, object baseType, object navigations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateNavigationsOnBase(object entityType, object baseType, object navigations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigationsOnBase(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateNavigationsOnBase (entityType As Object, baseType As Object, navigations As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateNavigationsOnBase : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigationsOnBase (entityType, baseType, navigations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateNavigationsOnBase(System::Object ^ entityType, System::Object ^ baseType, System::Object ^ navigations);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateNavigationsOnBase(Platform::Object ^ entityType, Platform::Object ^ baseType, Platform::Object ^ navigations);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateNavigationsOnBase(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseType, winrt::Windows::Foundation::IInspectable const &amp; navigations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
        <Parameter Name="navigations" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="navigations">To be added.</param>
        <summary>
                The type '{entityType}' cannot have base type '{baseType}' because both types include the navigations: {navigations}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertiesOnBase">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertiesOnBase (object entityType, object baseType, object properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertiesOnBase(object entityType, object baseType, object properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertiesOnBase(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertiesOnBase (entityType As Object, baseType As Object, properties As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertiesOnBase : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertiesOnBase (entityType, baseType, properties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicatePropertiesOnBase(System::Object ^ entityType, System::Object ^ baseType, System::Object ^ properties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicatePropertiesOnBase(Platform::Object ^ entityType, Platform::Object ^ baseType, Platform::Object ^ properties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicatePropertiesOnBase(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseType, winrt::Windows::Foundation::IInspectable const &amp; properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
        <Parameter Name="properties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="properties">To be added.</param>
        <summary>
            The type '{entityType}' cannot have base type '{baseType}' because both types include the properties: {properties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertiesOnBase">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertiesOnBase (object entityType, object baseType, object derivedPropertyType, object derivedProperty, object basePropertyType, object baseProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertiesOnBase(object entityType, object baseType, object derivedPropertyType, object derivedProperty, object basePropertyType, object baseProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertiesOnBase(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertiesOnBase (entityType As Object, baseType As Object, derivedPropertyType As Object, derivedProperty As Object, basePropertyType As Object, baseProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertiesOnBase : obj * obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertiesOnBase (entityType, baseType, derivedPropertyType, derivedProperty, basePropertyType, baseProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicatePropertiesOnBase(System::Object ^ entityType, System::Object ^ baseType, System::Object ^ derivedPropertyType, System::Object ^ derivedProperty, System::Object ^ basePropertyType, System::Object ^ baseProperty);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicatePropertiesOnBase(Platform::Object ^ entityType, Platform::Object ^ baseType, Platform::Object ^ derivedPropertyType, Platform::Object ^ derivedProperty, Platform::Object ^ basePropertyType, Platform::Object ^ baseProperty);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicatePropertiesOnBase(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseType, winrt::Windows::Foundation::IInspectable const &amp; derivedPropertyType, winrt::Windows::Foundation::IInspectable const &amp; derivedProperty, winrt::Windows::Foundation::IInspectable const &amp; basePropertyType, winrt::Windows::Foundation::IInspectable const &amp; baseProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
        <Parameter Name="derivedPropertyType" Type="System.Object" />
        <Parameter Name="derivedProperty" Type="System.Object" />
        <Parameter Name="basePropertyType" Type="System.Object" />
        <Parameter Name="baseProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <param name="derivedPropertyType">To be added.</param>
        <param name="derivedProperty">To be added.</param>
        <param name="basePropertyType">To be added.</param>
        <param name="baseProperty">To be added.</param>
        <summary>
                The type '{entityType}' cannot have base type '{baseType}' because the properties '{derivedPropertyType}.{derivedProperty}' and '{basePropertyType}.{baseProperty}' are conflicting.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateProperty">
      <MemberSignature Language="C#" Value="public static string DuplicateProperty (object property, object entityType, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateProperty(object property, object entityType, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateProperty (property As Object, entityType As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateProperty (property, entityType, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateProperty(System::Object ^ property, System::Object ^ entityType, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateProperty(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the entity type '{entityType}' because a property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicatePropertyInList">
      <MemberSignature Language="C#" Value="public static string DuplicatePropertyInList (object propertyList, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicatePropertyInList(object propertyList, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertyInList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicatePropertyInList (propertyList As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicatePropertyInList : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertyInList (propertyList, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicatePropertyInList(System::Object ^ propertyList, System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicatePropertyInList(Platform::Object ^ propertyList, Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicatePropertyInList(winrt::Windows::Foundation::IInspectable const &amp; propertyList, winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyList" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyList">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The property list {propertyList} cannot be used, because it contains a duplicate - '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateServicePropertyType">
      <MemberSignature Language="C#" Value="public static string DuplicateServicePropertyType (object property, object serviceType, object entityType, object duplicateName, object duplicateEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DuplicateServicePropertyType(object property, object serviceType, object entityType, object duplicateName, object duplicateEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateServicePropertyType(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DuplicateServicePropertyType (property As Object, serviceType As Object, entityType As Object, duplicateName As Object, duplicateEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member DuplicateServicePropertyType : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateServicePropertyType (property, serviceType, entityType, duplicateName, duplicateEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DuplicateServicePropertyType(System::Object ^ property, System::Object ^ serviceType, System::Object ^ entityType, System::Object ^ duplicateName, System::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ DuplicateServicePropertyType(Platform::Object ^ property, Platform::Object ^ serviceType, Platform::Object ^ entityType, Platform::Object ^ duplicateName, Platform::Object ^ duplicateEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring DuplicateServicePropertyType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; serviceType, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; duplicateName, winrt::Windows::Foundation::IInspectable const &amp; duplicateEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="serviceType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="duplicateName" Type="System.Object" />
        <Parameter Name="duplicateEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="serviceType">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="duplicateName">To be added.</param>
        <param name="duplicateEntityType">To be added.</param>
        <summary>
                The service property '{property}' of type '{serviceType}' cannot be added to the entity type '{entityType}' because service property '{duplicateName}' of the same type already exists on entity type '{duplicateEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityRequiresKey">
      <MemberSignature Language="C#" Value="public static string EntityRequiresKey (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityRequiresKey(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityRequiresKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityRequiresKey (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityRequiresKey : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityRequiresKey entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityRequiresKey(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityRequiresKey(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityRequiresKey(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' requires a primary key to be defined.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByDerived">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByDerived (object entityType, object derivedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByDerived(object entityType, object derivedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByDerived(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByDerived (entityType As Object, derivedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByDerived : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByDerived (entityType, derivedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeInUseByDerived(System::Object ^ entityType, System::Object ^ derivedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeInUseByDerived(Platform::Object ^ entityType, Platform::Object ^ derivedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeInUseByDerived(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; derivedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="derivedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because '{derivedEntityType}' is derived from it. All derived entity types must be removed or redefined before the entity type can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByForeignKey">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByForeignKey (object entityType, object referencedEntityType, object foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByForeignKey(object entityType, object referencedEntityType, object foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByForeignKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByForeignKey (entityType As Object, referencedEntityType As Object, foreignKey As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByForeignKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByForeignKey (entityType, referencedEntityType, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeInUseByForeignKey(System::Object ^ entityType, System::Object ^ referencedEntityType, System::Object ^ foreignKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeInUseByForeignKey(Platform::Object ^ entityType, Platform::Object ^ referencedEntityType, Platform::Object ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeInUseByForeignKey(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
        <Parameter Name="foreignKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because it is referencing '{referencedEntityType}' by foreign key {foreignKey}. All foreign keys must be removed before the entity type can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeInUseByReferencingForeignKey">
      <MemberSignature Language="C#" Value="public static string EntityTypeInUseByReferencingForeignKey (object entityType, object foreignKey, object referencingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeInUseByReferencingForeignKey(object entityType, object foreignKey, object referencingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByReferencingForeignKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeInUseByReferencingForeignKey (entityType As Object, foreignKey As Object, referencingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeInUseByReferencingForeignKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByReferencingForeignKey (entityType, foreignKey, referencingEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeInUseByReferencingForeignKey(System::Object ^ entityType, System::Object ^ foreignKey, System::Object ^ referencingEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeInUseByReferencingForeignKey(Platform::Object ^ entityType, Platform::Object ^ foreignKey, Platform::Object ^ referencingEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeInUseByReferencingForeignKey(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; referencingEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="referencingEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot be removed because it is being referenced by foreign key {foreignKey} on '{referencingEntityType}'. All referencing foreign keys must be removed or redefined before the entity type can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeModelMismatch">
      <MemberSignature Language="C#" Value="public static string EntityTypeModelMismatch (object firstEntityType, object secondEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeModelMismatch(object firstEntityType, object secondEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeModelMismatch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeModelMismatch (firstEntityType As Object, secondEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeModelMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeModelMismatch (firstEntityType, secondEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeModelMismatch(System::Object ^ firstEntityType, System::Object ^ secondEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeModelMismatch(Platform::Object ^ firstEntityType, Platform::Object ^ secondEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeModelMismatch(winrt::Windows::Foundation::IInspectable const &amp; firstEntityType, winrt::Windows::Foundation::IInspectable const &amp; secondEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstEntityType" Type="System.Object" />
        <Parameter Name="secondEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstEntityType">To be added.</param>
        <param name="secondEntityType">To be added.</param>
        <summary>
                The entity types '{firstEntityType}' and '{secondEntityType}' do not belong to the same model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotFound">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotFound (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotFound(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotFound (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotFound entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeNotFound(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeNotFound(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeNotFound(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' was not found. Ensure that the entity type has been added to the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationship (object entityType, object dependentType, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotInRelationship(object entityType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotInRelationship (entityType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationship (entityType, dependentType, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeNotInRelationship(System::Object ^ entityType, System::Object ^ dependentType, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeNotInRelationship(Platform::Object ^ entityType, Platform::Object ^ dependentType, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeNotInRelationship(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; dependentType, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The specified entity type '{entityType}' is invalid. It should be either the dependent entity type '{dependentType}' or the principal entity type '{principalType}' or an entity type derived from one of them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeNotInRelationshipStrict">
      <MemberSignature Language="C#" Value="public static string EntityTypeNotInRelationshipStrict (object entityType, object dependentType, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypeNotInRelationshipStrict(object entityType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationshipStrict(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypeNotInRelationshipStrict (entityType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypeNotInRelationshipStrict : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationshipStrict (entityType, dependentType, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypeNotInRelationshipStrict(System::Object ^ entityType, System::Object ^ dependentType, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypeNotInRelationshipStrict(Platform::Object ^ entityType, Platform::Object ^ dependentType, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypeNotInRelationshipStrict(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; dependentType, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The specified entity type '{entityType}' is invalid. It should be either the dependent entity type '{dependentType}' or the principal entity type '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypesNotInRelationship">
      <MemberSignature Language="C#" Value="public static string EntityTypesNotInRelationship (object invalidDependentType, object invalidPrincipalType, object dependentType, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EntityTypesNotInRelationship(object invalidDependentType, object invalidPrincipalType, object dependentType, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypesNotInRelationship(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EntityTypesNotInRelationship (invalidDependentType As Object, invalidPrincipalType As Object, dependentType As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member EntityTypesNotInRelationship : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypesNotInRelationship (invalidDependentType, invalidPrincipalType, dependentType, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EntityTypesNotInRelationship(System::Object ^ invalidDependentType, System::Object ^ invalidPrincipalType, System::Object ^ dependentType, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ EntityTypesNotInRelationship(Platform::Object ^ invalidDependentType, Platform::Object ^ invalidPrincipalType, Platform::Object ^ dependentType, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring EntityTypesNotInRelationship(winrt::Windows::Foundation::IInspectable const &amp; invalidDependentType, winrt::Windows::Foundation::IInspectable const &amp; invalidPrincipalType, winrt::Windows::Foundation::IInspectable const &amp; dependentType, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidDependentType" Type="System.Object" />
        <Parameter Name="invalidPrincipalType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="invalidDependentType">To be added.</param>
        <param name="invalidPrincipalType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The specified entity types '{invalidDependentType}' and '{invalidPrincipalType}' are invalid. They should be '{dependentType}' and '{principalType}' or entity types in the same hierarchy.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingProperty">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingProperty (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingProperty(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingProperty (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingProperty (entityType, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMaterializingProperty(System::Object ^ entityType, System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMaterializingProperty(Platform::Object ^ entityType, Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMaterializingProperty(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                An exception occurred while reading a database value for property '{entityType}.{property}'. See the inner exception for more information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingPropertyInvalidCast">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingPropertyInvalidCast (object entityType, object property, object expectedType, object actualType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingPropertyInvalidCast(object entityType, object property, object expectedType, object actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyInvalidCast(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingPropertyInvalidCast (entityType As Object, property As Object, expectedType As Object, actualType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingPropertyInvalidCast : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyInvalidCast (entityType, property, expectedType, actualType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMaterializingPropertyInvalidCast(System::Object ^ entityType, System::Object ^ property, System::Object ^ expectedType, System::Object ^ actualType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMaterializingPropertyInvalidCast(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ expectedType, Platform::Object ^ actualType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMaterializingPropertyInvalidCast(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; expectedType, winrt::Windows::Foundation::IInspectable const &amp; actualType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
        <Parameter Name="actualType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>
                An exception occurred while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingPropertyNullReference">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingPropertyNullReference (object entityType, object property, object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingPropertyNullReference(object entityType, object property, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyNullReference(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingPropertyNullReference (entityType As Object, property As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingPropertyNullReference : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyNullReference (entityType, property, expectedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMaterializingPropertyNullReference(System::Object ^ entityType, System::Object ^ property, System::Object ^ expectedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMaterializingPropertyNullReference(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ expectedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMaterializingPropertyNullReference(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; expectedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                An exception occurred while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValue">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ErrorMaterializingValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ErrorMaterializingValue As String" />
      <MemberSignature Language="F#" Value="member this.ErrorMaterializingValue : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ErrorMaterializingValue { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ErrorMaterializingValue { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception occurred while reading a database value. See the inner exception for more information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValueInvalidCast">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValueInvalidCast (object expectedType, object actualType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingValueInvalidCast(object expectedType, object actualType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueInvalidCast(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingValueInvalidCast (expectedType As Object, actualType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingValueInvalidCast : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueInvalidCast (expectedType, actualType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMaterializingValueInvalidCast(System::Object ^ expectedType, System::Object ^ actualType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMaterializingValueInvalidCast(Platform::Object ^ expectedType, Platform::Object ^ actualType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMaterializingValueInvalidCast(winrt::Windows::Foundation::IInspectable const &amp; expectedType, winrt::Windows::Foundation::IInspectable const &amp; actualType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Object" />
        <Parameter Name="actualType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <param name="actualType">To be added.</param>
        <summary>
                An exception occurred while reading a database value. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMaterializingValueNullReference">
      <MemberSignature Language="C#" Value="public static string ErrorMaterializingValueNullReference (object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMaterializingValueNullReference(object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueNullReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMaterializingValueNullReference (expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMaterializingValueNullReference : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueNullReference expectedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMaterializingValueNullReference(System::Object ^ expectedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMaterializingValueNullReference(Platform::Object ^ expectedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMaterializingValueNullReference(winrt::Windows::Foundation::IInspectable const &amp; expectedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expectedType">To be added.</param>
        <summary>
                An exception occurred while reading a database value. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMixedQueryEntityTypeInheritance">
      <MemberSignature Language="C#" Value="public static string ErrorMixedQueryEntityTypeInheritance (object baseType, object derivedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorMixedQueryEntityTypeInheritance(object baseType, object derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMixedQueryEntityTypeInheritance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorMixedQueryEntityTypeInheritance (baseType As Object, derivedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorMixedQueryEntityTypeInheritance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMixedQueryEntityTypeInheritance (baseType, derivedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorMixedQueryEntityTypeInheritance(System::Object ^ baseType, System::Object ^ derivedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorMixedQueryEntityTypeInheritance(Platform::Object ^ baseType, Platform::Object ^ derivedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorMixedQueryEntityTypeInheritance(winrt::Windows::Foundation::IInspectable const &amp; baseType, winrt::Windows::Foundation::IInspectable const &amp; derivedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Object" />
        <Parameter Name="derivedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="baseType">To be added.</param>
        <param name="derivedType">To be added.</param>
        <summary>
                Cannot set '{baseType}' as the base type of '{derivedType}'. Inheritance hierarchies cannot contain a mix of entity types and query types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorNavCannotTargetQueryType">
      <MemberSignature Language="C#" Value="public static string ErrorNavCannotTargetQueryType (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ErrorNavCannotTargetQueryType(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorNavCannotTargetQueryType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ErrorNavCannotTargetQueryType (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member ErrorNavCannotTargetQueryType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorNavCannotTargetQueryType type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorNavCannotTargetQueryType(System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ErrorNavCannotTargetQueryType(Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ErrorNavCannotTargetQueryType(winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Cannot create a navigation targeting type '{type}' because it is a query type. Only entity types can be used as navigation target types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyExistingTransaction">
      <MemberSignature Language="C#" Value="public static string ExecutionStrategyExistingTransaction (object strategy, object getExecutionStrategyMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExecutionStrategyExistingTransaction(object strategy, object getExecutionStrategyMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExecutionStrategyExistingTransaction(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecutionStrategyExistingTransaction (strategy As Object, getExecutionStrategyMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member ExecutionStrategyExistingTransaction : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExecutionStrategyExistingTransaction (strategy, getExecutionStrategyMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ExecutionStrategyExistingTransaction(System::Object ^ strategy, System::Object ^ getExecutionStrategyMethod);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ExecutionStrategyExistingTransaction(Platform::Object ^ strategy, Platform::Object ^ getExecutionStrategyMethod);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ExecutionStrategyExistingTransaction(winrt::Windows::Foundation::IInspectable const &amp; strategy, winrt::Windows::Foundation::IInspectable const &amp; getExecutionStrategyMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strategy" Type="System.Object" />
        <Parameter Name="getExecutionStrategyMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="strategy">To be added.</param>
        <param name="getExecutionStrategyMethod">To be added.</param>
        <summary>
                The configured execution strategy '{strategy}' does not support user initiated transactions. Use the execution strategy returned by '{getExecutionStrategyMethod}' to execute all the operations in the transaction as a retriable unit.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionParameterizationException">
      <MemberSignature Language="C#" Value="public static string ExpressionParameterizationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExpressionParameterizationException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExpressionParameterizationException As String" />
      <MemberSignature Language="F#" Value="member this.ExpressionParameterizationException : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ExpressionParameterizationException { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ExpressionParameterizationException { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionParameterizationExceptionSensitive">
      <MemberSignature Language="C#" Value="public static string ExpressionParameterizationExceptionSensitive (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpressionParameterizationExceptionSensitive(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationExceptionSensitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpressionParameterizationExceptionSensitive (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member ExpressionParameterizationExceptionSensitive : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationExceptionSensitive expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ExpressionParameterizationExceptionSensitive(System::Object ^ expression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ExpressionParameterizationExceptionSensitive(Platform::Object ^ expression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ExpressionParameterizationExceptionSensitive(winrt::Windows::Foundation::IInspectable const &amp; expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                An exception was thrown while attempting to evaluate the LINQ query parameter expression '{expression}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNotCompositeKey">
      <MemberSignature Language="C#" Value="public static string FindNotCompositeKey (object entityType, object valuesCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindNotCompositeKey(object entityType, object valuesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindNotCompositeKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindNotCompositeKey (entityType As Object, valuesCount As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindNotCompositeKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindNotCompositeKey (entityType, valuesCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FindNotCompositeKey(System::Object ^ entityType, System::Object ^ valuesCount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ FindNotCompositeKey(Platform::Object ^ entityType, Platform::Object ^ valuesCount);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring FindNotCompositeKey(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; valuesCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valuesCount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="valuesCount">To be added.</param>
        <summary>
                Entity type '{entityType}' is defined with a single key property, but {valuesCount} values were passed to the 'DbSet.Find' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindValueCountMismatch">
      <MemberSignature Language="C#" Value="public static string FindValueCountMismatch (object entityType, object propertiesCount, object valuesCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindValueCountMismatch(object entityType, object propertiesCount, object valuesCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueCountMismatch(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindValueCountMismatch (entityType As Object, propertiesCount As Object, valuesCount As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindValueCountMismatch : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueCountMismatch (entityType, propertiesCount, valuesCount)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FindValueCountMismatch(System::Object ^ entityType, System::Object ^ propertiesCount, System::Object ^ valuesCount);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ FindValueCountMismatch(Platform::Object ^ entityType, Platform::Object ^ propertiesCount, Platform::Object ^ valuesCount);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring FindValueCountMismatch(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertiesCount, winrt::Windows::Foundation::IInspectable const &amp; valuesCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertiesCount" Type="System.Object" />
        <Parameter Name="valuesCount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertiesCount">To be added.</param>
        <param name="valuesCount">To be added.</param>
        <summary>
                Entity type '{entityType}' is defined with a {propertiesCount}-part composite key, but {valuesCount} values were passed to the 'DbSet.Find' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindValueTypeMismatch">
      <MemberSignature Language="C#" Value="public static string FindValueTypeMismatch (object index, object entityType, object valueType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindValueTypeMismatch(object index, object entityType, object valueType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueTypeMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindValueTypeMismatch (index As Object, entityType As Object, valueType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FindValueTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueTypeMismatch (index, entityType, valueType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FindValueTypeMismatch(System::Object ^ index, System::Object ^ entityType, System::Object ^ valueType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ FindValueTypeMismatch(Platform::Object ^ index, Platform::Object ^ entityType, Platform::Object ^ valueType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring FindValueTypeMismatch(winrt::Windows::Foundation::IInspectable const &amp; index, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; valueType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valueType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The key value at position {index} of the call to 'DbSet&lt;{entityType}&gt;.Find' was of type '{valueType}', which does not match the property type of '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FkAttributeOnPropertyNavigationMismatch">
      <MemberSignature Language="C#" Value="public static string FkAttributeOnPropertyNavigationMismatch (object property, object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FkAttributeOnPropertyNavigationMismatch(object property, object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FkAttributeOnPropertyNavigationMismatch(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FkAttributeOnPropertyNavigationMismatch (property As Object, navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member FkAttributeOnPropertyNavigationMismatch : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.FkAttributeOnPropertyNavigationMismatch (property, navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FkAttributeOnPropertyNavigationMismatch(System::Object ^ property, System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ FkAttributeOnPropertyNavigationMismatch(Platform::Object ^ property, Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring FkAttributeOnPropertyNavigationMismatch(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The ForeignKeyAttributes on property '{property}' and navigation '{navigation}' in entity type '{entityType}' do not point at each other. The value of ForeignKeyAttribute on property should be navigation name and the value of ForeignKeyAttribute on navigation should be the foreign key property name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyCannotBeOptional">
      <MemberSignature Language="C#" Value="public static string ForeignKeyCannotBeOptional (object foreignKey, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyCannotBeOptional(object foreignKey, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCannotBeOptional(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyCannotBeOptional (foreignKey As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyCannotBeOptional : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCannotBeOptional (foreignKey, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyCannotBeOptional(System::Object ^ foreignKey, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyCannotBeOptional(Platform::Object ^ foreignKey, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyCannotBeOptional(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The foreign key {foreignKey} on entity type '{entityType}' cannot be marked as optional because it does not contain any property of a nullable type. Any foreign key can be marked as required, but only foreign keys with at least one property of a nullable type and which is not part of primary key can be marked as optional.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyCountMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyCountMismatch (object foreignKey, object dependentType, object principalKey, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyCountMismatch(object foreignKey, object dependentType, object principalKey, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCountMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyCountMismatch (foreignKey As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyCountMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCountMismatch (foreignKey, dependentType, principalKey, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyCountMismatch(System::Object ^ foreignKey, System::Object ^ dependentType, System::Object ^ principalKey, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyCountMismatch(Platform::Object ^ foreignKey, Platform::Object ^ dependentType, Platform::Object ^ principalKey, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyCountMismatch(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; dependentType, winrt::Windows::Foundation::IInspectable const &amp; principalKey, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalKey" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalKey">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The number of properties specified for the foreign key {foreignKey} on entity type '{dependentType}' does not match the number of properties in the principal key {principalKey} on entity type '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertiesWrongEntity (object foreignKey, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertiesWrongEntity(object foreignKey, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertiesWrongEntity (foreignKey As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertiesWrongEntity (foreignKey, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyPropertiesWrongEntity(System::Object ^ foreignKey, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyPropertiesWrongEntity(Platform::Object ^ foreignKey, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyPropertiesWrongEntity(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified foreign key properties {foreignKey} are not declared on the entity type '{entityType}'. Ensure foreign key properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertyInKey">
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertyInKey (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertyInKey(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertyInKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertyInKey (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertyInKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertyInKey (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyPropertyInKey(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyPropertyInKey(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyPropertyInKey(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            The property '{property}' cannot be part of a foreign key on '{entityType}' because it is contained in a key defined on a base entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyPropertyInKey">
      <MemberSignature Language="C#" Value="public static string ForeignKeyPropertyInKey (object property, object entityType, object key, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyPropertyInKey(object property, object entityType, object key, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertyInKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyPropertyInKey (property As Object, entityType As Object, key As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyPropertyInKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertyInKey (property, entityType, key, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyPropertyInKey(System::Object ^ property, System::Object ^ entityType, System::Object ^ key, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyPropertyInKey(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ key, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyPropertyInKey(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The property '{property}' cannot be part of a foreign key on '{entityType}' because it has value generation enabled and is contained in the key {key} defined on a base entity type '{baseEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyReferencedEntityKeyMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyReferencedEntityKeyMismatch (object principalKey, object principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyReferencedEntityKeyMismatch(object principalKey, object principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyReferencedEntityKeyMismatch(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyReferencedEntityKeyMismatch (principalKey As Object, principalEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyReferencedEntityKeyMismatch : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyReferencedEntityKeyMismatch (principalKey, principalEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyReferencedEntityKeyMismatch(System::Object ^ principalKey, System::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyReferencedEntityKeyMismatch(Platform::Object ^ principalKey, Platform::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyReferencedEntityKeyMismatch(winrt::Windows::Foundation::IInspectable const &amp; principalKey, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalKey" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principalKey">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The provided principal entity key '{principalKey}' is not a key on the entity type '{principalEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeySelfReferencingDependentEntityType">
      <MemberSignature Language="C#" Value="public static string ForeignKeySelfReferencingDependentEntityType (object dependentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeySelfReferencingDependentEntityType(object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeySelfReferencingDependentEntityType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeySelfReferencingDependentEntityType (dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeySelfReferencingDependentEntityType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeySelfReferencingDependentEntityType dependentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeySelfReferencingDependentEntityType(System::Object ^ dependentType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeySelfReferencingDependentEntityType(Platform::Object ^ dependentType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeySelfReferencingDependentEntityType(winrt::Windows::Foundation::IInspectable const &amp; dependentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentType">To be added.</param>
        <summary>
                The foreign keys on entity type '{dependentType}' cannot target the same entity type because it is a weak entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyTypeMismatch">
      <MemberSignature Language="C#" Value="public static string ForeignKeyTypeMismatch (object foreignKey, object dependentType, object principalKey, object principalType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ForeignKeyTypeMismatch(object foreignKey, object dependentType, object principalKey, object principalType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyTypeMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForeignKeyTypeMismatch (foreignKey As Object, dependentType As Object, principalKey As Object, principalType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ForeignKeyTypeMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyTypeMismatch (foreignKey, dependentType, principalKey, principalType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ForeignKeyTypeMismatch(System::Object ^ foreignKey, System::Object ^ dependentType, System::Object ^ principalKey, System::Object ^ principalType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ForeignKeyTypeMismatch(Platform::Object ^ foreignKey, Platform::Object ^ dependentType, Platform::Object ^ principalKey, Platform::Object ^ principalType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ForeignKeyTypeMismatch(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; dependentType, winrt::Windows::Foundation::IInspectable const &amp; principalKey, winrt::Windows::Foundation::IInspectable const &amp; principalType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
        <Parameter Name="principalKey" Type="System.Object" />
        <Parameter Name="principalType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="dependentType">To be added.</param>
        <param name="principalKey">To be added.</param>
        <param name="principalType">To be added.</param>
        <summary>
                The types of the properties specified for the foreign key {foreignKey} on entity type '{dependentType}' do not match the types of the properties in the principal key {principalKey} on entity type '{principalType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphDoesNotContainVertex">
      <MemberSignature Language="C#" Value="public static string GraphDoesNotContainVertex (object vertex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GraphDoesNotContainVertex(object vertex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.GraphDoesNotContainVertex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GraphDoesNotContainVertex (vertex As Object) As String" />
      <MemberSignature Language="F#" Value="static member GraphDoesNotContainVertex : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.GraphDoesNotContainVertex vertex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GraphDoesNotContainVertex(System::Object ^ vertex);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ GraphDoesNotContainVertex(Platform::Object ^ vertex);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GraphDoesNotContainVertex(winrt::Windows::Foundation::IInspectable const &amp; vertex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vertex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vertex">To be added.</param>
        <summary>
                The edge cannot be added because the graph does not contain vertex '{vertex}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HiLoBadBlockSize">
      <MemberSignature Language="C#" Value="public static string HiLoBadBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HiLoBadBlockSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.HiLoBadBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HiLoBadBlockSize As String" />
      <MemberSignature Language="F#" Value="member this.HiLoBadBlockSize : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.HiLoBadBlockSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HiLoBadBlockSize { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ HiLoBadBlockSize { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The block size used for Hi-Lo value generation must be positive. When the Hi-Lo generator is backed by a SQL sequence this means that the sequence increment must be positive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyingRelationshipCycle">
      <MemberSignature Language="C#" Value="public static string IdentifyingRelationshipCycle (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentifyingRelationshipCycle(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentifyingRelationshipCycle(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentifyingRelationshipCycle (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentifyingRelationshipCycle : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentifyingRelationshipCycle entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentifyingRelationshipCycle(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentifyingRelationshipCycle(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentifyingRelationshipCycle(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is part of a relationship cycle involving its primary key.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflict">
      <MemberSignature Language="C#" Value="public static string IdentityConflict (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflict(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflict(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflict (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflict : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflict entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentityConflict(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentityConflict(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentityConflict(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
            The instance of entity type '{entityType}' cannot be tracked because another instance of this type with the same key is already being tracked. When adding new entities, for most key types a unique temporary key value will be created if no key is set (i.e. if the key property is assigned the default value for its type). If you are explicitly setting key values for new entities, ensure they do not collide with existing entities or temporary values generated for other new entities. When attaching existing entities, ensure that only one entity instance with a given key value is attached to the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflict">
      <MemberSignature Language="C#" Value="public static string IdentityConflict (object entityType, object keyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflict(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflict(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflict (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflict : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflict (entityType, keyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentityConflict(System::Object ^ entityType, System::Object ^ keyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentityConflict(Platform::Object ^ entityType, Platform::Object ^ keyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentityConflict(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the same key value for {keyProperties} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictOwned">
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwned (object entityType, object keyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictOwned(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictOwned(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictOwned (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictOwned : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictOwned (entityType, keyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentityConflictOwned(System::Object ^ entityType, System::Object ^ keyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentityConflictOwned(Platform::Object ^ entityType, Platform::Object ^ keyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentityConflictOwned(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the same key value for {keyProperties} is already being tracked. When replacing owned entities modify the properties without changing the instance or detach the previous owned entity entry first. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictOwnedSensitive">
      <MemberSignature Language="C#" Value="public static string IdentityConflictOwnedSensitive (object entityType, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictOwnedSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictOwnedSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictOwnedSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictOwnedSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictOwnedSensitive (entityType, keyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentityConflictOwnedSensitive(System::Object ^ entityType, System::Object ^ keyValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentityConflictOwnedSensitive(Platform::Object ^ entityType, Platform::Object ^ keyValue);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentityConflictOwnedSensitive(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the key value '{keyValue}' is already being tracked. When replacing owned entities modify the properties without changing the instance or detach the previous owned entity entry first.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConflictSensitive">
      <MemberSignature Language="C#" Value="public static string IdentityConflictSensitive (object entityType, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IdentityConflictSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IdentityConflictSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member IdentityConflictSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflictSensitive (entityType, keyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IdentityConflictSensitive(System::Object ^ entityType, System::Object ^ keyValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IdentityConflictSensitive(Platform::Object ^ entityType, Platform::Object ^ keyValue);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IdentityConflictSensitive(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The instance of entity type '{entityType}' cannot be tracked because another instance with the key value '{keyValue}' is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationTypeRequired">
      <MemberSignature Language="C#" Value="public static string ImplementationTypeRequired (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ImplementationTypeRequired(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ImplementationTypeRequired(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImplementationTypeRequired (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member ImplementationTypeRequired : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ImplementationTypeRequired service" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ImplementationTypeRequired(System::Object ^ service);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ImplementationTypeRequired(Platform::Object ^ service);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ImplementationTypeRequired(winrt::Windows::Foundation::IInspectable const &amp; service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                The implementation type for the registration of the '{service}' service could not be determined. Specific implementation types must be used for services that expect multiple registrations so as to avoid duplicates.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBadNavigation">
      <MemberSignature Language="C#" Value="public static string IncludeBadNavigation (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeBadNavigation(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeBadNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeBadNavigation (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeBadNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeBadNavigation (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IncludeBadNavigation(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IncludeBadNavigation(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IncludeBadNavigation(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' is not a navigation property of entity type '{entityType}'. The 'Include(string)' method can only be used with a '.' separated list of navigation property names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNonBindableExpression">
      <MemberSignature Language="C#" Value="public static string IncludeNonBindableExpression (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeNonBindableExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNonBindableExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeNonBindableExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeNonBindableExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNonBindableExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IncludeNonBindableExpression(System::Object ^ expression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IncludeNonBindableExpression(Platform::Object ^ expression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IncludeNonBindableExpression(winrt::Windows::Foundation::IInspectable const &amp; expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
            The expression '{expression}' passed to the Include operator could not be bound.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNotImplemented">
      <MemberSignature Language="C#" Value="public static string IncludeNotImplemented { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IncludeNotImplemented" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNotImplemented" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncludeNotImplemented As String" />
      <MemberSignature Language="F#" Value="member this.IncludeNotImplemented : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNotImplemented" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ IncludeNotImplemented { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ IncludeNotImplemented { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Include operator is not implemented by the current database provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNotSpecifiedDirectlyOnEntityType">
      <MemberSignature Language="C#" Value="public static string IncludeNotSpecifiedDirectlyOnEntityType (object include, object invalidNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncludeNotSpecifiedDirectlyOnEntityType(object include, object invalidNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNotSpecifiedDirectlyOnEntityType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncludeNotSpecifiedDirectlyOnEntityType (include As Object, invalidNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncludeNotSpecifiedDirectlyOnEntityType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNotSpecifiedDirectlyOnEntityType (include, invalidNavigation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IncludeNotSpecifiedDirectlyOnEntityType(System::Object ^ include, System::Object ^ invalidNavigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IncludeNotSpecifiedDirectlyOnEntityType(Platform::Object ^ include, Platform::Object ^ invalidNavigation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IncludeNotSpecifiedDirectlyOnEntityType(winrt::Windows::Foundation::IInspectable const &amp; include, winrt::Windows::Foundation::IInspectable const &amp; invalidNavigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="include" Type="System.Object" />
        <Parameter Name="invalidNavigation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="include">To be added.</param>
        <param name="invalidNavigation">To be added.</param>
        <summary>
                The Include operation '{include}' is not supported. '{invalidNavigation}' must be a navigation property defined on an entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatiblePrincipalEntry">
      <MemberSignature Language="C#" Value="public static string IncompatiblePrincipalEntry (object foreignKey, object dependentEntityType, object foundPrincipalEntityType, object principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatiblePrincipalEntry(object foreignKey, object dependentEntityType, object foundPrincipalEntityType, object principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncompatiblePrincipalEntry(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatiblePrincipalEntry (foreignKey As Object, dependentEntityType As Object, foundPrincipalEntityType As Object, principalEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatiblePrincipalEntry : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncompatiblePrincipalEntry (foreignKey, dependentEntityType, foundPrincipalEntityType, principalEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IncompatiblePrincipalEntry(System::Object ^ foreignKey, System::Object ^ dependentEntityType, System::Object ^ foundPrincipalEntityType, System::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IncompatiblePrincipalEntry(Platform::Object ^ foreignKey, Platform::Object ^ dependentEntityType, Platform::Object ^ foundPrincipalEntityType, Platform::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IncompatiblePrincipalEntry(winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; dependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; foundPrincipalEntityType, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="foundPrincipalEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKey">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="foundPrincipalEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The foreign key {foreignKey} set on '{dependentEntityType}' matches an entity of type '{foundPrincipalEntityType}', however the principal entity type should be assignable to '{principalEntityType}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncompatiblePrincipalEntrySensitive">
      <MemberSignature Language="C#" Value="public static string IncompatiblePrincipalEntrySensitive (object foreignKeyValues, object dependentEntityType, object keyValue, object foundPrincipalEntityType, object principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IncompatiblePrincipalEntrySensitive(object foreignKeyValues, object dependentEntityType, object keyValue, object foundPrincipalEntityType, object principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncompatiblePrincipalEntrySensitive(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IncompatiblePrincipalEntrySensitive (foreignKeyValues As Object, dependentEntityType As Object, keyValue As Object, foundPrincipalEntityType As Object, principalEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IncompatiblePrincipalEntrySensitive : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncompatiblePrincipalEntrySensitive (foreignKeyValues, dependentEntityType, keyValue, foundPrincipalEntityType, principalEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IncompatiblePrincipalEntrySensitive(System::Object ^ foreignKeyValues, System::Object ^ dependentEntityType, System::Object ^ keyValue, System::Object ^ foundPrincipalEntityType, System::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IncompatiblePrincipalEntrySensitive(Platform::Object ^ foreignKeyValues, Platform::Object ^ dependentEntityType, Platform::Object ^ keyValue, Platform::Object ^ foundPrincipalEntityType, Platform::Object ^ principalEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IncompatiblePrincipalEntrySensitive(winrt::Windows::Foundation::IInspectable const &amp; foreignKeyValues, winrt::Windows::Foundation::IInspectable const &amp; dependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue, winrt::Windows::Foundation::IInspectable const &amp; foundPrincipalEntityType, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKeyValues" Type="System.Object" />
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
        <Parameter Name="foundPrincipalEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="foreignKeyValues">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="foundPrincipalEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <summary>
                The foreign key '{foreignKeyValues}' set on '{dependentEntityType}' with the key value '{keyValue}' matches an entity of type '{foundPrincipalEntityType}', however the principal entity type should be assignable to '{principalEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconsistentInheritance">
      <MemberSignature Language="C#" Value="public static string InconsistentInheritance (object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InconsistentInheritance(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InconsistentInheritance(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InconsistentInheritance (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InconsistentInheritance : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InconsistentInheritance (entityType, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InconsistentInheritance(System::Object ^ entityType, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InconsistentInheritance(Platform::Object ^ entityType, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InconsistentInheritance(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' should derive from '{baseEntityType}' to reflect the hierarchy of the corresponding CLR types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconsistentOwnership">
      <MemberSignature Language="C#" Value="public static string InconsistentOwnership (object ownedEntityType, object nonOwnedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InconsistentOwnership(object ownedEntityType, object nonOwnedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InconsistentOwnership(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InconsistentOwnership (ownedEntityType As Object, nonOwnedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InconsistentOwnership : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InconsistentOwnership (ownedEntityType, nonOwnedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InconsistentOwnership(System::Object ^ ownedEntityType, System::Object ^ nonOwnedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InconsistentOwnership(Platform::Object ^ ownedEntityType, Platform::Object ^ nonOwnedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InconsistentOwnership(winrt::Windows::Foundation::IInspectable const &amp; ownedEntityType, winrt::Windows::Foundation::IInspectable const &amp; nonOwnedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedEntityType" Type="System.Object" />
        <Parameter Name="nonOwnedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ownedEntityType">To be added.</param>
        <param name="nonOwnedEntityType">To be added.</param>
        <summary>
                The entity type '{ownedEntityType}' is configured as owned, but the entity type '{nonOwnedEntityType}' is not. All entity types sharing a CLR type must be configured as owned.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string IndexPropertiesWrongEntity (object index, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IndexPropertiesWrongEntity(object index, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IndexPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexPropertiesWrongEntity (index As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IndexPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IndexPropertiesWrongEntity (index, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IndexPropertiesWrongEntity(System::Object ^ index, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IndexPropertiesWrongEntity(Platform::Object ^ index, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IndexPropertiesWrongEntity(winrt::Windows::Foundation::IInspectable const &amp; index, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified index properties {index} are not declared on the entity type '{entityType}'. Ensure index properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritedPropertyCannotBeIgnored">
      <MemberSignature Language="C#" Value="public static string InheritedPropertyCannotBeIgnored (object property, object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InheritedPropertyCannotBeIgnored(object property, object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InheritedPropertyCannotBeIgnored(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InheritedPropertyCannotBeIgnored (property As Object, entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InheritedPropertyCannotBeIgnored : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InheritedPropertyCannotBeIgnored (property, entityType, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InheritedPropertyCannotBeIgnored(System::Object ^ property, System::Object ^ entityType, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InheritedPropertyCannotBeIgnored(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InheritedPropertyCannotBeIgnored(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The property '{property}' cannot be ignored on entity type '{entityType}', because it's declared on the base entity type '{baseEntityType}'. To exclude this property from your model, use NotMappedAttribute or Ignore method on the base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfacePropertyNotAdded">
      <MemberSignature Language="C#" Value="public static string InterfacePropertyNotAdded (object entityType, object navigation, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InterfacePropertyNotAdded(object entityType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InterfacePropertyNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InterfacePropertyNotAdded (entityType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InterfacePropertyNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InterfacePropertyNotAdded (entityType, navigation, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InterfacePropertyNotAdded(System::Object ^ entityType, System::Object ^ navigation, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InterfacePropertyNotAdded(Platform::Object ^ entityType, Platform::Object ^ navigation, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InterfacePropertyNotAdded(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{navigation}' is of an interface type ('{propertyType}'). If it is a navigation property manually configure the relationship for this property by casting it to a mapped entity type, otherwise ignore the property using the NotMappedAttribute or 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntraHierarchicalAmbiguousTargetEntityType">
      <MemberSignature Language="C#" Value="public static string IntraHierarchicalAmbiguousTargetEntityType (object entityType, object foreignKey, object principalEntityType, object dependentEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IntraHierarchicalAmbiguousTargetEntityType(object entityType, object foreignKey, object principalEntityType, object dependentEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntraHierarchicalAmbiguousTargetEntityType (entityType As Object, foreignKey As Object, principalEntityType As Object, dependentEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member IntraHierarchicalAmbiguousTargetEntityType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType (entityType, foreignKey, principalEntityType, dependentEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IntraHierarchicalAmbiguousTargetEntityType(System::Object ^ entityType, System::Object ^ foreignKey, System::Object ^ principalEntityType, System::Object ^ dependentEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IntraHierarchicalAmbiguousTargetEntityType(Platform::Object ^ entityType, Platform::Object ^ foreignKey, Platform::Object ^ principalEntityType, Platform::Object ^ dependentEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IntraHierarchicalAmbiguousTargetEntityType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType, winrt::Windows::Foundation::IInspectable const &amp; dependentEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="dependentEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="dependentEntityType">To be added.</param>
        <summary>
                The entity type related to '{entityType}' cannot be determined because the specified foreign key {foreignKey} references entity type '{principalEntityType}' that it is in the same hierarchy as the entity type that it is declared on '{dependentEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidAlternateKeyValue">
      <MemberSignature Language="C#" Value="public static string InvalidAlternateKeyValue (object entityType, object keyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidAlternateKeyValue(object entityType, object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidAlternateKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidAlternateKeyValue (entityType As Object, keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidAlternateKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidAlternateKeyValue (entityType, keyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidAlternateKeyValue(System::Object ^ entityType, System::Object ^ keyProperty);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidAlternateKeyValue(Platform::Object ^ entityType, Platform::Object ^ keyProperty);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidAlternateKeyValue(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperty">To be added.</param>
        <summary>
                Unable to track an entity of type '{entityType}' because alternate key property '{keyProperty}' is null. If the alternate key is not used in a relationship, then consider using a unique index instead. Unique indexes may contain nulls, while alternate keys must not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidComplexPropertyExpression">
      <MemberSignature Language="C#" Value="public static string InvalidComplexPropertyExpression (object propertyAccessExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidComplexPropertyExpression(object propertyAccessExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidComplexPropertyExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidComplexPropertyExpression (propertyAccessExpression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidComplexPropertyExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidComplexPropertyExpression propertyAccessExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidComplexPropertyExpression(System::Object ^ propertyAccessExpression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidComplexPropertyExpression(Platform::Object ^ propertyAccessExpression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidComplexPropertyExpression(winrt::Windows::Foundation::IInspectable const &amp; propertyAccessExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessExpression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyAccessExpression">To be added.</param>
        <summary>
                The property expression '{propertyAccessExpression}' is not valid. The expression should represent a property access: 't =&gt; t.MyProperty'. For more information on including related data, see http://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEntityType">
      <MemberSignature Language="C#" Value="public static string InvalidEntityType (object type, object argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEntityType(object type, object argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEntityType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEntityType (type As Object, argumentName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEntityType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEntityType (type, argumentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidEntityType(System::Object ^ type, System::Object ^ argumentName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidEntityType(Platform::Object ^ type, Platform::Object ^ argumentName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidEntityType(winrt::Windows::Foundation::IInspectable const &amp; type, winrt::Windows::Foundation::IInspectable const &amp; argumentName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
        <Parameter Name="argumentName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="argumentName">To be added.</param>
        <summary>
                The entity type '{type}' provided for the argument '{argumentName}' must be a reference type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEnumValue">
      <MemberSignature Language="C#" Value="public static string InvalidEnumValue (object argumentName, object enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidEnumValue(object argumentName, object enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEnumValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidEnumValue (argumentName As Object, enumType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidEnumValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEnumValue (argumentName, enumType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidEnumValue(System::Object ^ argumentName, System::Object ^ enumType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidEnumValue(Platform::Object ^ argumentName, Platform::Object ^ enumType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidEnumValue(winrt::Windows::Foundation::IInspectable const &amp; argumentName, winrt::Windows::Foundation::IInspectable const &amp; enumType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentName" Type="System.Object" />
        <Parameter Name="enumType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentName">To be added.</param>
        <param name="enumType">To be added.</param>
        <summary>
                The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidIncludeLambdaExpression">
      <MemberSignature Language="C#" Value="public static string InvalidIncludeLambdaExpression (object methodName, object includeLambdaExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidIncludeLambdaExpression(object methodName, object includeLambdaExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidIncludeLambdaExpression(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidIncludeLambdaExpression (methodName As Object, includeLambdaExpression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidIncludeLambdaExpression : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidIncludeLambdaExpression (methodName, includeLambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidIncludeLambdaExpression(System::Object ^ methodName, System::Object ^ includeLambdaExpression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidIncludeLambdaExpression(Platform::Object ^ methodName, Platform::Object ^ includeLambdaExpression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidIncludeLambdaExpression(winrt::Windows::Foundation::IInspectable const &amp; methodName, winrt::Windows::Foundation::IInspectable const &amp; includeLambdaExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.Object" />
        <Parameter Name="includeLambdaExpression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="includeLambdaExpression">To be added.</param>
        <summary>
                The {methodName} property lambda expression '{includeLambdaExpression}' is invalid. The expression should represent a property access: 't =&gt; t.MyProperty'. To target navigations declared on derived types, specify an explicitly typed lambda parameter of the target type, E.g. '(Derived d) =&gt; d.MyProperty'. For more information on including related data, see http://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidKeyValue">
      <MemberSignature Language="C#" Value="public static string InvalidKeyValue (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidKeyValue(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidKeyValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidKeyValue (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidKeyValue : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidKeyValue entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidKeyValue(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidKeyValue(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidKeyValue(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
            Unable to create or track an entity of type '{entityType}' because it has a null primary or alternate key value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidKeyValue">
      <MemberSignature Language="C#" Value="public static string InvalidKeyValue (object entityType, object keyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidKeyValue(object entityType, object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidKeyValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidKeyValue (entityType As Object, keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidKeyValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidKeyValue (entityType, keyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidKeyValue(System::Object ^ entityType, System::Object ^ keyProperty);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidKeyValue(Platform::Object ^ entityType, Platform::Object ^ keyProperty);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidKeyValue(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperty">To be added.</param>
        <summary>
                Unable to track an entity of type '{entityType}' because primary key property '{keyProperty}' is null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidMemberInitBinding">
      <MemberSignature Language="C#" Value="public static string InvalidMemberInitBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidMemberInitBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidMemberInitBinding" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidMemberInitBinding As String" />
      <MemberSignature Language="F#" Value="member this.InvalidMemberInitBinding : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidMemberInitBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ InvalidMemberInitBinding { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ InvalidMemberInitBinding { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unhandled operation: MemberInitExpression binding is not a MemberAssignment
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidNavigationWithInverseProperty">
      <MemberSignature Language="C#" Value="public static string InvalidNavigationWithInverseProperty (object property, object entityType, object referencedProperty, object referencedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidNavigationWithInverseProperty(object property, object entityType, object referencedProperty, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidNavigationWithInverseProperty (property As Object, entityType As Object, referencedProperty As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidNavigationWithInverseProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidNavigationWithInverseProperty (property, entityType, referencedProperty, referencedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidNavigationWithInverseProperty(System::Object ^ property, System::Object ^ entityType, System::Object ^ referencedProperty, System::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidNavigationWithInverseProperty(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ referencedProperty, Platform::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidNavigationWithInverseProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; referencedProperty, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedProperty" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedProperty">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                The InversePropertyAttribute on property '{property}' on type '{entityType}' is not valid. The property '{referencedProperty}' is not a valid navigation property on the related type '{referencedEntityType}'. Ensure that the property exists and is a valid reference or collection navigation property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoolSize">
      <MemberSignature Language="C#" Value="public static string InvalidPoolSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string InvalidPoolSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvalidPoolSize As String" />
      <MemberSignature Language="F#" Value="member this.InvalidPoolSize : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPoolSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ InvalidPoolSize { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ InvalidPoolSize { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The specified poolSize must be greater than 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertiesExpression">
      <MemberSignature Language="C#" Value="public static string InvalidPropertiesExpression (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertiesExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertiesExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertiesExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertiesExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertiesExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidPropertiesExpression(System::Object ^ expression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidPropertiesExpression(Platform::Object ^ expression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidPropertiesExpression(winrt::Windows::Foundation::IInspectable const &amp; expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The properties expression '{expression}' is not valid. The expression should represent a simple property access: 't =&gt; t.MyProperty'. When specifying multiple properties use an anonymous type: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertyExpression">
      <MemberSignature Language="C#" Value="public static string InvalidPropertyExpression (object expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertyExpression(object expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyExpression(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertyExpression (expression As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertyExpression : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidPropertyExpression(System::Object ^ expression);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidPropertyExpression(Platform::Object ^ expression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidPropertyExpression(winrt::Windows::Foundation::IInspectable const &amp; expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                The expression '{expression}' is not a valid property expression. The expression should represent a simple property access: 't =&gt; t.MyProperty'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPropertyListOnNavigation">
      <MemberSignature Language="C#" Value="public static string InvalidPropertyListOnNavigation (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidPropertyListOnNavigation(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyListOnNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidPropertyListOnNavigation (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidPropertyListOnNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyListOnNavigation (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidPropertyListOnNavigation(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidPropertyListOnNavigation(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidPropertyListOnNavigation(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property list specified using ForeignKeyAttribute on navigation '{navigation}' in entity type '{entityType}' is incorrect. The attribute value should be comma-separated list of property names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidRelationshipUsingDataAnnotations">
      <MemberSignature Language="C#" Value="public static string InvalidRelationshipUsingDataAnnotations (object navigation, object entityType, object referencedNavigation, object referencedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidRelationshipUsingDataAnnotations(object navigation, object entityType, object referencedNavigation, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidRelationshipUsingDataAnnotations(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidRelationshipUsingDataAnnotations (navigation As Object, entityType As Object, referencedNavigation As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidRelationshipUsingDataAnnotations : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidRelationshipUsingDataAnnotations (navigation, entityType, referencedNavigation, referencedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidRelationshipUsingDataAnnotations(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ referencedNavigation, System::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidRelationshipUsingDataAnnotations(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ referencedNavigation, Platform::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidRelationshipUsingDataAnnotations(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; referencedNavigation, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedNavigation">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                Invalid relationship has been specified using InversePropertyAttribute and ForeignKeyAttribute. The navigation '{navigation}' in entity type '{entityType}' and the navigation '{referencedNavigation}' in entity type '{referencedEntityType}' are related by InversePropertyAttribute but the ForeignKeyAttribute specified for both navigations have different values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidReplaceService">
      <MemberSignature Language="C#" Value="public static string InvalidReplaceService (object replaceService, object useInternalServiceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidReplaceService(object replaceService, object useInternalServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidReplaceService(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidReplaceService (replaceService As Object, useInternalServiceProvider As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidReplaceService : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidReplaceService (replaceService, useInternalServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidReplaceService(System::Object ^ replaceService, System::Object ^ useInternalServiceProvider);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidReplaceService(Platform::Object ^ replaceService, Platform::Object ^ useInternalServiceProvider);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidReplaceService(winrt::Windows::Foundation::IInspectable const &amp; replaceService, winrt::Windows::Foundation::IInspectable const &amp; useInternalServiceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replaceService" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="replaceService">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <summary>
                A call was made to '{replaceService}', but Entity Framework is not building its own internal service provider. Either allow EF to build the service provider by removing the call to '{useInternalServiceProvider}', or build replacement services into the service provider before passing it to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetType">
      <MemberSignature Language="C#" Value="public static string InvalidSetType (object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetType(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetType (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetType typeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidSetType(System::Object ^ typeName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidSetType(Platform::Object ^ typeName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidSetType(winrt::Windows::Foundation::IInspectable const &amp; typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because this type is not included in the model for the context.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeEntity">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeEntity (object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeEntity(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeEntity (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeEntity typeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidSetTypeEntity(System::Object ^ typeName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidSetTypeEntity(Platform::Object ^ typeName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidSetTypeEntity(winrt::Windows::Foundation::IInspectable const &amp; typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbQuery for '{typeName}' because it is not a query type. Use the DbContext.Set method to create a DbSet instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeQuery">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeQuery (object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeQuery(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeQuery (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeQuery : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeQuery typeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidSetTypeQuery(System::Object ^ typeName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidSetTypeQuery(Platform::Object ^ typeName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidSetTypeQuery(winrt::Windows::Foundation::IInspectable const &amp; typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is a query type. Use the DbContext.Query method to create a DbQuery instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidSetTypeWeak">
      <MemberSignature Language="C#" Value="public static string InvalidSetTypeWeak (object typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidSetTypeWeak(object typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeWeak(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidSetTypeWeak (typeName As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidSetTypeWeak : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetTypeWeak typeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidSetTypeWeak(System::Object ^ typeName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidSetTypeWeak(Platform::Object ^ typeName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidSetTypeWeak(winrt::Windows::Foundation::IInspectable const &amp; typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
                Cannot create a DbSet for '{typeName}' because it is mapped to multiple entity types and should they should be accessed through the defining entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidType">
      <MemberSignature Language="C#" Value="public static string InvalidType (object property, object entityType, object valueType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidType(object property, object entityType, object valueType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidType (property As Object, entityType As Object, valueType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidType (property, entityType, valueType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidType(System::Object ^ property, System::Object ^ entityType, System::Object ^ valueType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidType(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ valueType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; valueType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="valueType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="valueType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The value for property '{property}' of entity type '{entityType}' cannot be set to a value of type '{valueType}' because its type is '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidUseService">
      <MemberSignature Language="C#" Value="public static string InvalidUseService (object useService, object useInternalServiceProvider, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidUseService(object useService, object useInternalServiceProvider, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidUseService(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidUseService (useService As Object, useInternalServiceProvider As Object, service As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidUseService : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidUseService (useService, useInternalServiceProvider, service)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidUseService(System::Object ^ useService, System::Object ^ useInternalServiceProvider, System::Object ^ service);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidUseService(Platform::Object ^ useService, Platform::Object ^ useInternalServiceProvider, Platform::Object ^ service);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidUseService(winrt::Windows::Foundation::IInspectable const &amp; useService, winrt::Windows::Foundation::IInspectable const &amp; useInternalServiceProvider, winrt::Windows::Foundation::IInspectable const &amp; service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useService" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="useService">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <param name="service">To be added.</param>
        <summary>
                A call was made to '{useService}', but Entity Framework is not building its own internal service provider. Either allow EF to build the service provider by removing the call to '{useInternalServiceProvider}', or build the '{service}' services to use into the service provider before passing it to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidValueGeneratorFactoryProperty">
      <MemberSignature Language="C#" Value="public static string InvalidValueGeneratorFactoryProperty (object factory, object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InvalidValueGeneratorFactoryProperty(object factory, object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidValueGeneratorFactoryProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InvalidValueGeneratorFactoryProperty (factory As Object, property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InvalidValueGeneratorFactoryProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidValueGeneratorFactoryProperty (factory, property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InvalidValueGeneratorFactoryProperty(System::Object ^ factory, System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InvalidValueGeneratorFactoryProperty(Platform::Object ^ factory, Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InvalidValueGeneratorFactoryProperty(winrt::Windows::Foundation::IInspectable const &amp; factory, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The '{factory}' cannot create a value generator for property '{property}' on entity type '{entityType}'. Only integer properties are supported.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InversePropertyMismatch">
      <MemberSignature Language="C#" Value="public static string InversePropertyMismatch (object navigation, object entityType, object referencedNavigation, object referencedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InversePropertyMismatch(object navigation, object entityType, object referencedNavigation, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InversePropertyMismatch(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InversePropertyMismatch (navigation As Object, entityType As Object, referencedNavigation As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InversePropertyMismatch : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InversePropertyMismatch (navigation, entityType, referencedNavigation, referencedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InversePropertyMismatch(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ referencedNavigation, System::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InversePropertyMismatch(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ referencedNavigation, Platform::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InversePropertyMismatch(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; referencedNavigation, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedNavigation">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                InversePropertyAttributes on navigation '{navigation}' in entity type '{entityType}' and on navigation '{referencedNavigation}' in entity type '{referencedEntityType}' are not pointing to each other.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseToOwnedType">
      <MemberSignature Language="C#" Value="public static string InverseToOwnedType (object principalEntityType, object navigation, object ownedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InverseToOwnedType(object principalEntityType, object navigation, object ownedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InverseToOwnedType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InverseToOwnedType (principalEntityType As Object, navigation As Object, ownedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InverseToOwnedType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InverseToOwnedType (principalEntityType, navigation, ownedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InverseToOwnedType(System::Object ^ principalEntityType, System::Object ^ navigation, System::Object ^ ownedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InverseToOwnedType(Platform::Object ^ principalEntityType, Platform::Object ^ navigation, Platform::Object ^ ownedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InverseToOwnedType(winrt::Windows::Foundation::IInspectable const &amp; principalEntityType, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; ownedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="ownedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="ownedType">To be added.</param>
        <summary>
                The navigation '{principalEntityType}.{navigation}' is not supported because it is pointing to an owned entity type '{ownedType}'. Only the owner entity type can declare a navigation to an owned entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseToOwnedType">
      <MemberSignature Language="C#" Value="public static string InverseToOwnedType (object principalEntityType, object navigation, object ownedType, object ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string InverseToOwnedType(object principalEntityType, object navigation, object ownedType, object ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InverseToOwnedType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InverseToOwnedType (principalEntityType As Object, navigation As Object, ownedType As Object, ownerType As Object) As String" />
      <MemberSignature Language="F#" Value="static member InverseToOwnedType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.InverseToOwnedType (principalEntityType, navigation, ownedType, ownerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ InverseToOwnedType(System::Object ^ principalEntityType, System::Object ^ navigation, System::Object ^ ownedType, System::Object ^ ownerType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ InverseToOwnedType(Platform::Object ^ principalEntityType, Platform::Object ^ navigation, Platform::Object ^ ownedType, Platform::Object ^ ownerType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring InverseToOwnedType(winrt::Windows::Foundation::IInspectable const &amp; principalEntityType, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; ownedType, winrt::Windows::Foundation::IInspectable const &amp; ownerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="ownedType" Type="System.Object" />
        <Parameter Name="ownerType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principalEntityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="ownedType">To be added.</param>
        <param name="ownerType">To be added.</param>
        <summary>
                The navigation '{principalEntityType}.{navigation}' is not supported because it is pointing to an owned entity type '{ownedType}'. Only the ownership navigation from the entity type '{ownerType}' can point to the owned entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IQueryableNotAsync">
      <MemberSignature Language="C#" Value="public static string IQueryableNotAsync (object genericParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IQueryableNotAsync(object genericParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableNotAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IQueryableNotAsync (genericParameter As Object) As String" />
      <MemberSignature Language="F#" Value="static member IQueryableNotAsync : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableNotAsync genericParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IQueryableNotAsync(System::Object ^ genericParameter);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ IQueryableNotAsync(Platform::Object ^ genericParameter);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring IQueryableNotAsync(winrt::Windows::Foundation::IInspectable const &amp; genericParameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericParameter">To be added.</param>
        <summary>
                The source IQueryable doesn't implement IAsyncEnumerable&lt;{genericParameter}&gt;. Only sources that implement IAsyncEnumerable can be used for Entity Framework asynchronous operations.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IQueryableProviderNotAsync">
      <MemberSignature Language="C#" Value="public static string IQueryableProviderNotAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string IQueryableProviderNotAsync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableProviderNotAsync" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IQueryableProviderNotAsync As String" />
      <MemberSignature Language="F#" Value="member this.IQueryableProviderNotAsync : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableProviderNotAsync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ IQueryableProviderNotAsync { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ IQueryableProviderNotAsync { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The provider for the source IQueryable doesn't implement IAsyncQueryProvider. Only providers that implement IEntityQueryProvider can be used for Entity Framework asynchronous operations.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAttributeOnDerivedEntity">
      <MemberSignature Language="C#" Value="public static string KeyAttributeOnDerivedEntity (object derivedType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyAttributeOnDerivedEntity(object derivedType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyAttributeOnDerivedEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyAttributeOnDerivedEntity (derivedType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyAttributeOnDerivedEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyAttributeOnDerivedEntity (derivedType, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyAttributeOnDerivedEntity(System::Object ^ derivedType, System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyAttributeOnDerivedEntity(Platform::Object ^ derivedType, Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyAttributeOnDerivedEntity(winrt::Windows::Foundation::IInspectable const &amp; derivedType, winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="derivedType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The derived type '{derivedType}' cannot have KeyAttribute on property '{property}' since primary key can only be declared on the root type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInUse">
      <MemberSignature Language="C#" Value="public static string KeyInUse (object key, object entityType, object dependentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyInUse(object key, object entityType, object dependentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyInUse(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyInUse (key As Object, entityType As Object, dependentType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyInUse : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyInUse (key, entityType, dependentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyInUse(System::Object ^ key, System::Object ^ entityType, System::Object ^ dependentType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyInUse(Platform::Object ^ key, Platform::Object ^ entityType, Platform::Object ^ dependentType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyInUse(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; dependentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="dependentType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="dependentType">To be added.</param>
        <summary>
                Cannot remove key {key} from entity type '{entityType}' because it is referenced by a foreign key in entity type '{dependentType}'. All foreign keys must be removed or redefined before the referenced key can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertiesWrongEntity">
      <MemberSignature Language="C#" Value="public static string KeyPropertiesWrongEntity (object key, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertiesWrongEntity(object key, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertiesWrongEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertiesWrongEntity (key As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertiesWrongEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertiesWrongEntity (key, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyPropertiesWrongEntity(System::Object ^ key, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyPropertiesWrongEntity(Platform::Object ^ key, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyPropertiesWrongEntity(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The specified key properties {key} are not declared on the entity type '{entityType}'. Ensure key properties are declared on the target entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyCannotBeNullable">
      <MemberSignature Language="C#" Value="public static string KeyPropertyCannotBeNullable (object property, object entityType, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyCannotBeNullable(object property, object entityType, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyCannotBeNullable(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyCannotBeNullable (property As Object, entityType As Object, key As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertyCannotBeNullable : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyCannotBeNullable (property, entityType, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyPropertyCannotBeNullable(System::Object ^ property, System::Object ^ entityType, System::Object ^ key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyPropertyCannotBeNullable(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ key);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyPropertyCannotBeNullable(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' cannot be marked as nullable/optional because it has been included in a key {key}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyInForeignKey">
      <MemberSignature Language="C#" Value="public static string KeyPropertyInForeignKey (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyInForeignKey(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyInForeignKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyInForeignKey (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertyInForeignKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyInForeignKey (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyPropertyInForeignKey(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyPropertyInForeignKey(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyPropertyInForeignKey(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' cannot be part of a key on '{entityType}' because it has value generation enabled and is contained in a foreign key defined on a derived entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPropertyMustBeReadOnly">
      <MemberSignature Language="C#" Value="public static string KeyPropertyMustBeReadOnly (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyPropertyMustBeReadOnly(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyMustBeReadOnly(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyPropertyMustBeReadOnly (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyPropertyMustBeReadOnly : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyMustBeReadOnly (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyPropertyMustBeReadOnly(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyPropertyMustBeReadOnly(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyPropertyMustBeReadOnly(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' must be marked as read-only after it has been saved because it is part of a key. Key properties are always read-only once an entity has been saved for the first time.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyReadOnly">
      <MemberSignature Language="C#" Value="public static string KeyReadOnly (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyReadOnly(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyReadOnly(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KeyReadOnly (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member KeyReadOnly : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyReadOnly (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ KeyReadOnly(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ KeyReadOnly(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring KeyReadOnly(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key first delete the dependent and invoke 'SaveChanges' then associate the dependent with the new principal.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDelete">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDelete;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDelete" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDelete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCascadeDelete As EventDefinition(Of String, EntityState, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCascadeDelete : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDelete" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, Microsoft::EntityFrameworkCore::EntityState, System::String ^&gt; ^ LogCascadeDelete;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, Microsoft::EntityFrameworkCore::EntityState, std::wstring const &amp;&gt; LogCascadeDelete;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Cascade state change of '{entityType}' entity to '{state}' due to deletion of parent '{parentType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteOrphan">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDeleteOrphan;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDeleteOrphan" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteOrphan" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCascadeDeleteOrphan As EventDefinition(Of String, EntityState, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCascadeDeleteOrphan : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteOrphan" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, Microsoft::EntityFrameworkCore::EntityState, System::String ^&gt; ^ LogCascadeDeleteOrphan;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, Microsoft::EntityFrameworkCore::EntityState, std::wstring const &amp;&gt; LogCascadeDeleteOrphan;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{entityType}' entity changed to '{state}' state due to severed required relationship to parent '{parentType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteOrphanSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,string&gt; LogCascadeDeleteOrphanSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, string&gt; LogCascadeDeleteOrphanSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteOrphanSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCascadeDeleteOrphanSensitive As EventDefinition(Of String, String, EntityState, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCascadeDeleteOrphanSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteOrphanSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, Microsoft::EntityFrameworkCore::EntityState, System::String ^&gt; ^ LogCascadeDeleteOrphanSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, Microsoft::EntityFrameworkCore::EntityState, std::wstring const &amp;&gt; LogCascadeDeleteOrphanSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{entityType}' entity with key '{keyValues}' changed to '{state}' state due to severed required relationship to parent '{parentType}' entity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCascadeDeleteSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,string,string&gt; LogCascadeDeleteSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, string, string&gt; LogCascadeDeleteSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCascadeDeleteSensitive As EventDefinition(Of String, String, EntityState, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCascadeDeleteSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCascadeDeleteSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, Microsoft::EntityFrameworkCore::EntityState, System::String ^, System::String ^&gt; ^ LogCascadeDeleteSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, Microsoft::EntityFrameworkCore::EntityState, std::wstring const &amp;, std::wstring const &amp;&gt; LogCascadeDeleteSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Cascade state change of '{entityType}' entity with key '{keyValues}' to '{state}' due to deletion of parent '{parentType}' entity with key '{parentKeyValues}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCollectionChangeDetected">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string&gt; LogCollectionChangeDetected;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;int32, int32, string, string&gt; LogCollectionChangeDetected" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCollectionChangeDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCollectionChangeDetected As EventDefinition(Of Integer, Integer, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCollectionChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCollectionChangeDetected" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, int, System::String ^, System::String ^&gt; ^ LogCollectionChangeDetected;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, int, std::wstring const &amp;, std::wstring const &amp;&gt; LogCollectionChangeDetected;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Detected {addedCount} entities added and {removedCount} entities removed from navigation property '{entityType}.{property}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCollectionChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,int,string,string,string&gt; LogCollectionChangeDetectedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;int32, int32, string, string, string&gt; LogCollectionChangeDetectedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCollectionChangeDetectedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCollectionChangeDetectedSensitive As EventDefinition(Of Integer, Integer, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCollectionChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, int, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCollectionChangeDetectedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, int, System::String ^, System::String ^, System::String ^&gt; ^ LogCollectionChangeDetectedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, int, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogCollectionChangeDetectedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.Int32,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Detected {addedCount} entities added and {removedCount} entities removed from navigation property '{entityType}.{property}' on entity with key '{keyValues}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCompilingQueryModel">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogCompilingQueryModel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogCompilingQueryModel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogCompilingQueryModel As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogCompilingQueryModel : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogCompilingQueryModel;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogCompilingQueryModel;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Compiling query model: {newline}'{queryModel}'
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCompilingQueryModel">
      <MemberSignature Language="C#" Value="public static string LogCompilingQueryModel (object queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogCompilingQueryModel(object queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCompilingQueryModel (queryModel As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogCompilingQueryModel : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel queryModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogCompilingQueryModel(System::Object ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogCompilingQueryModel(Platform::Object ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogCompilingQueryModel(winrt::Windows::Foundation::IInspectable const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queryModel">To be added.</param>
        <summary>
            Compiling query model: '{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCompilingQueryModel">
      <MemberSignature Language="C#" Value="public static string LogCompilingQueryModel (object newline, object queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogCompilingQueryModel(object newline, object queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogCompilingQueryModel (newline As Object, queryModel As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogCompilingQueryModel : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel (newline, queryModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogCompilingQueryModel(System::Object ^ newline, System::Object ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogCompilingQueryModel(Platform::Object ^ newline, Platform::Object ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogCompilingQueryModel(winrt::Windows::Foundation::IInspectable const &amp; newline, winrt::Windows::Foundation::IInspectable const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newline" Type="System.Object" />
        <Parameter Name="queryModel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newline">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
            Compiling query model: {newline}'{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogConflictingForeignKeyAttributesOnNavigationAndProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogConflictingForeignKeyAttributesOnNavigationAndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogConflictingForeignKeyAttributesOnNavigationAndProperty As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogConflictingForeignKeyAttributesOnNavigationAndProperty : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogConflictingForeignKeyAttributesOnNavigationAndProperty" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogConflictingForeignKeyAttributesOnNavigationAndProperty;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogConflictingForeignKeyAttributesOnNavigationAndProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relationship was separated into two relationships because ForeignKeyAttribute specified on the navigation '{navigationEntityType}.{navigation}' doesn't match the ForeignKeyAttribute specified on the property '{propertyEntityType}.{property}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogConflictingShadowForeignKeys">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogConflictingShadowForeignKeys;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogConflictingShadowForeignKeys" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogConflictingShadowForeignKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogConflictingShadowForeignKeys As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogConflictingShadowForeignKeys : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogConflictingShadowForeignKeys" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogConflictingShadowForeignKeys;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogConflictingShadowForeignKeys;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                There are multiple relationships between '{dependentEntityType}' and '{principalEntityType}' without configured foreign key properties causing EF to create shadow properties on '{dependentType}' with names dependent on the discovery order.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogContextDisposed">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogContextDisposed;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogContextDisposed" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogContextDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogContextDisposed As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogContextDisposed : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogContextDisposed" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogContextDisposed;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogContextDisposed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{contextType}' disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogContextInitialized">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogContextInitialized;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogContextInitialized" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogContextInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogContextInitialized As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogContextInitialized : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogContextInitialized" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogContextInitialized;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogContextInitialized;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Entity Framework Core {version} initialized '{contextType}' using provider '{provider}' with options: {options}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDetectChangesCompleted">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogDetectChangesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogDetectChangesCompleted" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDetectChangesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDetectChangesCompleted As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDetectChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDetectChangesCompleted" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogDetectChangesCompleted;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogDetectChangesCompleted;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                DetectChanges completed for '{contextType}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDetectChangesStarting">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogDetectChangesStarting;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogDetectChangesStarting" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDetectChangesStarting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDetectChangesStarting As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDetectChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDetectChangesStarting" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogDetectChangesStarting;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogDetectChangesStarting;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                DetectChanges starting for '{contextType}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogDuplicateDependentEntityTypeInstance">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogDuplicateDependentEntityTypeInstance;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogDuplicateDependentEntityTypeInstance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDuplicateDependentEntityTypeInstance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogDuplicateDependentEntityTypeInstance As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogDuplicateDependentEntityTypeInstance : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogDuplicateDependentEntityTypeInstance" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogDuplicateDependentEntityTypeInstance;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogDuplicateDependentEntityTypeInstance;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The same entity is being tracked as different weak entity types '{dependent1}' and '{dependent2}'. If a property value changes it will result in two store changes, which might not be the desired outcome.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringQueryIteration">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type,string,Exception&gt; LogExceptionDuringQueryIteration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;class System.Type, string, class System.Exception&gt; LogExceptionDuringQueryIteration" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringQueryIteration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogExceptionDuringQueryIteration As EventDefinition(Of Type, String, Exception) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogExceptionDuringQueryIteration : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringQueryIteration" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;Type ^, System::String ^, Exception ^&gt; ^ LogExceptionDuringQueryIteration;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;Type, std::wstring const &amp;, Exception const &amp;&gt; LogExceptionDuringQueryIteration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception occurred in the database while iterating the results of a query for context type '{contextType}'.{newline}{error}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringQueryIteration">
      <MemberSignature Language="C#" Value="public static string LogExceptionDuringQueryIteration (object newline, object error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogExceptionDuringQueryIteration(object newline, object error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringQueryIteration(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionDuringQueryIteration (newline As Object, error As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogExceptionDuringQueryIteration : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringQueryIteration (newline, error)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogExceptionDuringQueryIteration(System::Object ^ newline, System::Object ^ error);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogExceptionDuringQueryIteration(Platform::Object ^ newline, Platform::Object ^ error);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogExceptionDuringQueryIteration(winrt::Windows::Foundation::IInspectable const &amp; newline, winrt::Windows::Foundation::IInspectable const &amp; error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newline" Type="System.Object" />
        <Parameter Name="error" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newline">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
            An exception occurred in the database while iterating the results of a query.{newline}{error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringSaveChanges">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type,string,Exception&gt; LogExceptionDuringSaveChanges;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;class System.Type, string, class System.Exception&gt; LogExceptionDuringSaveChanges" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogExceptionDuringSaveChanges As EventDefinition(Of Type, String, Exception) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogExceptionDuringSaveChanges : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;Type, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringSaveChanges" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;Type ^, System::String ^, Exception ^&gt; ^ LogExceptionDuringSaveChanges;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;Type, std::wstring const &amp;, Exception const &amp;&gt; LogExceptionDuringSaveChanges;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Type,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An exception occurred in the database while saving changes for context type '{contextType}'.{newline}{error}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExceptionDuringSaveChanges">
      <MemberSignature Language="C#" Value="public static string LogExceptionDuringSaveChanges (object newline, object error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogExceptionDuringSaveChanges(object newline, object error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringSaveChanges(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogExceptionDuringSaveChanges (newline As Object, error As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogExceptionDuringSaveChanges : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringSaveChanges (newline, error)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogExceptionDuringSaveChanges(System::Object ^ newline, System::Object ^ error);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogExceptionDuringSaveChanges(Platform::Object ^ newline, Platform::Object ^ error);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogExceptionDuringSaveChanges(winrt::Windows::Foundation::IInspectable const &amp; newline, winrt::Windows::Foundation::IInspectable const &amp; error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newline" Type="System.Object" />
        <Parameter Name="error" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newline">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
            An exception occurred in the database while saving changes.{newline}{error}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExecutionStrategyRetrying">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int,string,Exception&gt; LogExecutionStrategyRetrying;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;int32, string, class System.Exception&gt; LogExecutionStrategyRetrying" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExecutionStrategyRetrying" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogExecutionStrategyRetrying As EventDefinition(Of Integer, String, Exception) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogExecutionStrategyRetrying : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;int, string, Exception&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExecutionStrategyRetrying" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, System::String ^, Exception ^&gt; ^ LogExecutionStrategyRetrying;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;int, std::wstring const &amp;, Exception const &amp;&gt; LogExecutionStrategyRetrying;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Int32,System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A transient exception has been encountered during execution and the operation will be retried after {delay}ms.{newline}{error}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFirstWithoutOrderByAndFilter">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogFirstWithoutOrderByAndFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogFirstWithoutOrderByAndFilter" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogFirstWithoutOrderByAndFilter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogFirstWithoutOrderByAndFilter As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogFirstWithoutOrderByAndFilter : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogFirstWithoutOrderByAndFilter" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogFirstWithoutOrderByAndFilter;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogFirstWithoutOrderByAndFilter;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Query: '{queryModel}' uses First/FirstOrDefault/Last/LastOrDefault operation without OrderBy and filter which may lead to unpredictable results.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyAttributesOnBothNavigations">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogForeignKeyAttributesOnBothNavigations;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogForeignKeyAttributesOnBothNavigations" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyAttributesOnBothNavigations" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyAttributesOnBothNavigations As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyAttributesOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyAttributesOnBothNavigations" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogForeignKeyAttributesOnBothNavigations;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogForeignKeyAttributesOnBothNavigations;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Navigations '{dependentEntityType}.{dependentNavigation}' and '{principalEntityType}.{principalNavigation}' were separated into two relationships as ForeignKeyAttribute was specified on navigations on both sides.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyAttributesOnBothProperties">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string,string&gt; LogForeignKeyAttributesOnBothProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`6&lt;string, string, string, string, string, string&gt; LogForeignKeyAttributesOnBothProperties" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyAttributesOnBothProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyAttributesOnBothProperties As EventDefinition(Of String, String, String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyAttributesOnBothProperties : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyAttributesOnBothProperties" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogForeignKeyAttributesOnBothProperties;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogForeignKeyAttributesOnBothProperties;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Navigations '{dependentEntityType}.{dependentNavigation}' and '{principalEntityType}.{principalNavigation}' were separated into two relationships as ForeignKeyAttribute was specified on properties '{dependentProperty}' and '{principalProperty}' on both sides.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyChangeDetected">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogForeignKeyChangeDetected;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogForeignKeyChangeDetected" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyChangeDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyChangeDetected As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyChangeDetected" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogForeignKeyChangeDetected;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogForeignKeyChangeDetected;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Foreign key property '{entityType}.{property}' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogForeignKeyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object,object,string&gt; LogForeignKeyChangeDetectedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, object, object, string&gt; LogForeignKeyChangeDetectedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyChangeDetectedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogForeignKeyChangeDetectedSensitive As EventDefinition(Of String, String, Object, Object, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogForeignKeyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, obj, obj, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogForeignKeyChangeDetectedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::Object ^, System::Object ^, System::String ^&gt; ^ LogForeignKeyChangeDetectedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, winrt::Windows::Foundation::IInspectable const &amp;, winrt::Windows::Foundation::IInspectable const &amp;, std::wstring const &amp;&gt; LogForeignKeyChangeDetectedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Object,System.Object,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Foreign key property '{entityType}.{property}' detected as changed from '{oldValue}' to '{newValue}' for entity with key '{keyValues}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIgnoredInclude">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogIgnoredInclude;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogIgnoredInclude" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIgnoredInclude" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogIgnoredInclude As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogIgnoredInclude : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIgnoredInclude" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogIgnoredInclude;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogIgnoredInclude;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The Include operation for navigation '{include}' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIgnoredInclude">
      <MemberSignature Language="C#" Value="public static string LogIgnoredInclude (object navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogIgnoredInclude(object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIgnoredInclude(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIgnoredInclude (navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogIgnoredInclude : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIgnoredInclude navigation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogIgnoredInclude(System::Object ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogIgnoredInclude(Platform::Object ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogIgnoredInclude(winrt::Windows::Foundation::IInspectable const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
            The Include operation for navigation: '{navigation}' was ignored because the target navigation is not reachable in the final query results.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIncludingNavigation">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogIncludingNavigation;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogIncludingNavigation" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncludingNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogIncludingNavigation As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogIncludingNavigation : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncludingNavigation" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogIncludingNavigation;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogIncludingNavigation;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Including navigation: '{navigation}'
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIncludingNavigation">
      <MemberSignature Language="C#" Value="public static string LogIncludingNavigation (object navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogIncludingNavigation(object navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncludingNavigation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogIncludingNavigation (navigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogIncludingNavigation : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncludingNavigation navigation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogIncludingNavigation(System::Object ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogIncludingNavigation(Platform::Object ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogIncludingNavigation(winrt::Windows::Foundation::IInspectable const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
            Including navigation: '{navigation}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIncompatibleMatchingForeignKeyProperties">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogIncompatibleMatchingForeignKeyProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogIncompatibleMatchingForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncompatibleMatchingForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogIncompatibleMatchingForeignKeyProperties As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogIncompatibleMatchingForeignKeyProperties : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncompatibleMatchingForeignKeyProperties" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogIncompatibleMatchingForeignKeyProperties;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogIncompatibleMatchingForeignKeyProperties;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The foreign key properties haven't been configured by convention because the best match {foreignKey} are incompatible with the current principal key {principalKey}. This message can be disregarded if explicit configuration has been specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogLazyLoadOnDisposedContext">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogLazyLoadOnDisposedContext;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogLazyLoadOnDisposedContext" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogLazyLoadOnDisposedContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogLazyLoadOnDisposedContext As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogLazyLoadOnDisposedContext : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogLazyLoadOnDisposedContext" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogLazyLoadOnDisposedContext;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogLazyLoadOnDisposedContext;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An attempt was made to lazy-load navigation property '{navigation}' on entity type '{entityType}' after the associated DbContext was disposed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogManyServiceProvidersCreated">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogManyServiceProvidersCreated;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogManyServiceProvidersCreated" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogManyServiceProvidersCreated" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogManyServiceProvidersCreated As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogManyServiceProvidersCreated : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogManyServiceProvidersCreated" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition ^ LogManyServiceProvidersCreated;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition LogManyServiceProvidersCreated;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. This is commonly caused by injection of a new singleton service instance into every DbContext instance. For example, calling UseLoggerFactory passing in a new instance each time--see https://go.microsoft.com/fwlink/?linkid=869049 for more details. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultipleInversePropertiesSameTarget">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogMultipleInversePropertiesSameTarget;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogMultipleInversePropertiesSameTarget" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultipleInversePropertiesSameTarget" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMultipleInversePropertiesSameTarget As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMultipleInversePropertiesSameTarget : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultipleInversePropertiesSameTarget" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogMultipleInversePropertiesSameTarget;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogMultipleInversePropertiesSameTarget;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                There are multiple navigations ({navigations}) configured with InversePropertyAttribute that point to the same inverse navigation '{inverseNavigation}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultipleNavigationProperties">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogMultipleNavigationProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogMultipleNavigationProperties" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultipleNavigationProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMultipleNavigationProperties As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMultipleNavigationProperties : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultipleNavigationProperties" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogMultipleNavigationProperties;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogMultipleNavigationProperties;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No relationship from '{firstEntityType}' to '{secondEntityType}' has been configured by convention because there are multiple properties on one entity type {navigationProperties} that could be matched with the properties on the other entity type {inverseNavigations}. This message can be disregarded if explicit configuration has been specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMultiplePrimaryKeyCandidates">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogMultiplePrimaryKeyCandidates;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogMultiplePrimaryKeyCandidates" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultiplePrimaryKeyCandidates" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogMultiplePrimaryKeyCandidates As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogMultiplePrimaryKeyCandidates : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogMultiplePrimaryKeyCandidates" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogMultiplePrimaryKeyCandidates;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogMultiplePrimaryKeyCandidates;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Primary key hasn't been configured by convention as both properties '{firstProperty}' and '{secondProperty}' could be used as the primary key for the entity type '{entityType}'. This message can be disregarded if explicit configuration has been specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNavigationLazyLoading">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogNavigationLazyLoading;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogNavigationLazyLoading" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNavigationLazyLoading" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogNavigationLazyLoading As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogNavigationLazyLoading : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNavigationLazyLoading" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogNavigationLazyLoading;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogNavigationLazyLoading;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Navigation property '{navigation}' of entity type '{entityType}' is being lazy-loaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonDefiningInverseNavigation">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string&gt; LogNonDefiningInverseNavigation;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, string, string&gt; LogNonDefiningInverseNavigation" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNonDefiningInverseNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogNonDefiningInverseNavigation As EventDefinition(Of String, String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogNonDefiningInverseNavigation : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNonDefiningInverseNavigation" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogNonDefiningInverseNavigation;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogNonDefiningInverseNavigation;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The navigation '{targetEntityType}.{inverseNavigation}' cannot be used as the inverse of '{weakEntityType}.{navigation}' because it's not the defining navigation '{definingNavigation}'
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNonOwnershipInverseNavigation">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string,string&gt; LogNonOwnershipInverseNavigation;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, string, string&gt; LogNonOwnershipInverseNavigation" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNonOwnershipInverseNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogNonOwnershipInverseNavigation As EventDefinition(Of String, String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogNonOwnershipInverseNavigation : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogNonOwnershipInverseNavigation" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogNonOwnershipInverseNavigation;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogNonOwnershipInverseNavigation;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The navigation '{targetEntityType}.{inverseNavigation}' cannot be used as the inverse of '{ownedEntityType}.{navigation}' because it's not the ownership navigation '{ownershipNavigation}'
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOptimizedQueryModel">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogOptimizedQueryModel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogOptimizedQueryModel" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogOptimizedQueryModel As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogOptimizedQueryModel : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogOptimizedQueryModel;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogOptimizedQueryModel;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Optimized query model: {newline}'{queryModel}'
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOptimizedQueryModel">
      <MemberSignature Language="C#" Value="public static string LogOptimizedQueryModel (object queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogOptimizedQueryModel(object queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOptimizedQueryModel (queryModel As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogOptimizedQueryModel : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel queryModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogOptimizedQueryModel(System::Object ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogOptimizedQueryModel(Platform::Object ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogOptimizedQueryModel(winrt::Windows::Foundation::IInspectable const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queryModel">To be added.</param>
        <summary>
            Optimized query model: '{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogOptimizedQueryModel">
      <MemberSignature Language="C#" Value="public static string LogOptimizedQueryModel (object newline, object queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string LogOptimizedQueryModel(object newline, object queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LogOptimizedQueryModel (newline As Object, queryModel As Object) As String" />
      <MemberSignature Language="F#" Value="static member LogOptimizedQueryModel : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel (newline, queryModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LogOptimizedQueryModel(System::Object ^ newline, System::Object ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ LogOptimizedQueryModel(Platform::Object ^ newline, Platform::Object ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring LogOptimizedQueryModel(winrt::Windows::Foundation::IInspectable const &amp; newline, winrt::Windows::Foundation::IInspectable const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newline" Type="System.Object" />
        <Parameter Name="queryModel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newline">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
            Optimized query model: {newline}'{queryModel}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleUnintendedCollectionNavigationNullComparison">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogPossibleUnintendedCollectionNavigationNullComparison;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogPossibleUnintendedCollectionNavigationNullComparison" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPossibleUnintendedCollectionNavigationNullComparison" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPossibleUnintendedCollectionNavigationNullComparison As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPossibleUnintendedCollectionNavigationNullComparison : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPossibleUnintendedCollectionNavigationNullComparison" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogPossibleUnintendedCollectionNavigationNullComparison;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogPossibleUnintendedCollectionNavigationNullComparison;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Collection navigations are only considered null if their parent entity is null. Use '.Any()' to check whether collection navigation '{navigationPath}' is empty.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPossibleUnintendedReferenceComparison">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;object,object&gt; LogPossibleUnintendedReferenceComparison;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;object, object&gt; LogPossibleUnintendedReferenceComparison" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPossibleUnintendedReferenceComparison" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPossibleUnintendedReferenceComparison As EventDefinition(Of Object, Object) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPossibleUnintendedReferenceComparison : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPossibleUnintendedReferenceComparison" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::Object ^, System::Object ^&gt; ^ LogPossibleUnintendedReferenceComparison;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;winrt::Windows::Foundation::IInspectable, winrt::Windows::Foundation::IInspectable const &amp;&gt; LogPossibleUnintendedReferenceComparison;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Possible unintended reference comparison between '{left}' and '{right}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPropertyChangeDetected">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogPropertyChangeDetected;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogPropertyChangeDetected" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPropertyChangeDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPropertyChangeDetected As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPropertyChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPropertyChangeDetected" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogPropertyChangeDetected;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogPropertyChangeDetected;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unchanged '{entityType}.{property}' detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPropertyChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,object,object,string&gt; LogPropertyChangeDetectedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, object, object, string&gt; LogPropertyChangeDetectedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPropertyChangeDetectedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogPropertyChangeDetectedSensitive As EventDefinition(Of String, String, Object, Object, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogPropertyChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, obj, obj, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogPropertyChangeDetectedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::Object ^, System::Object ^, System::String ^&gt; ^ LogPropertyChangeDetectedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, winrt::Windows::Foundation::IInspectable const &amp;, winrt::Windows::Foundation::IInspectable const &amp;, std::wstring const &amp;&gt; LogPropertyChangeDetectedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.Object,System.Object,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Unchanged '{entityType}.{property}' detected as changed from '{oldValue}' to '{newValue}' and will be marked as modified for entity with key '{keyValues}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogQueryExecutionPlanned">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogQueryExecutionPlanned;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogQueryExecutionPlanned" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogQueryExecutionPlanned" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogQueryExecutionPlanned As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogQueryExecutionPlanned : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogQueryExecutionPlanned" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogQueryExecutionPlanned;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogQueryExecutionPlanned;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                {plan}
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRedundantIndexRemoved">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRedundantIndexRemoved;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRedundantIndexRemoved" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRedundantIndexRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRedundantIndexRemoved As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRedundantIndexRemoved : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRedundantIndexRemoved" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogRedundantIndexRemoved;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogRedundantIndexRemoved;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The index {redundantIndex} was not created as the properties are already covered by the index {otherIndex}.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogReferenceChangeDetected">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogReferenceChangeDetected;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogReferenceChangeDetected" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogReferenceChangeDetected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogReferenceChangeDetected As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogReferenceChangeDetected : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogReferenceChangeDetected" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogReferenceChangeDetected;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogReferenceChangeDetected;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Navigation property '{entityType}.{property}' detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogReferenceChangeDetectedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogReferenceChangeDetectedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogReferenceChangeDetectedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogReferenceChangeDetectedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogReferenceChangeDetectedSensitive As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogReferenceChangeDetectedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogReferenceChangeDetectedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogReferenceChangeDetectedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogReferenceChangeDetectedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Navigation property '{entityType}.{property}' for entity with key '{keyValues}' detected as changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnBothNavigations">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,string&gt; LogRequiredAttributeOnBothNavigations;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, string, string&gt; LogRequiredAttributeOnBothNavigations" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRequiredAttributeOnBothNavigations" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRequiredAttributeOnBothNavigations As EventDefinition(Of String, String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRequiredAttributeOnBothNavigations : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRequiredAttributeOnBothNavigations" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, System::String ^&gt; ^ LogRequiredAttributeOnBothNavigations;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogRequiredAttributeOnBothNavigations;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The RequiredAttribute on '{principalEntityType}.{principalNavigation}' was ignored because there is also a RequiredAttribute on '{dependentEntityType}.{dependentNavigation}'. RequiredAttribute should only be specified on the dependent side of the relationship.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequiredAttributeOnDependent">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogRequiredAttributeOnDependent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogRequiredAttributeOnDependent" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRequiredAttributeOnDependent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRequiredAttributeOnDependent As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRequiredAttributeOnDependent : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRequiredAttributeOnDependent" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogRequiredAttributeOnDependent;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogRequiredAttributeOnDependent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The navigation property '{navigation}' has a RequiredAttribute causing the entity type '{entityType}' to be configured as the dependent side in the corresponding relationship.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRowLimitingOperationWithoutOrderBy">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogRowLimitingOperationWithoutOrderBy;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogRowLimitingOperationWithoutOrderBy" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRowLimitingOperationWithoutOrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogRowLimitingOperationWithoutOrderBy As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogRowLimitingOperationWithoutOrderBy : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogRowLimitingOperationWithoutOrderBy" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogRowLimitingOperationWithoutOrderBy;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogRowLimitingOperationWithoutOrderBy;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Query: '{queryModel}' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSaveChangesCompleted">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,int&gt; LogSaveChangesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, int32&gt; LogSaveChangesCompleted" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSaveChangesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSaveChangesCompleted As EventDefinition(Of String, Integer) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSaveChangesCompleted : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, int&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSaveChangesCompleted" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, int&gt; ^ LogSaveChangesCompleted;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, int&gt; LogSaveChangesCompleted;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SaveChanges completed for '{contextType}' with {savedCount} entities written to the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSaveChangesStarting">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt; LogSaveChangesStarting;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`1&lt;string&gt; LogSaveChangesStarting" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSaveChangesStarting" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSaveChangesStarting As EventDefinition(Of String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSaveChangesStarting : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSaveChangesStarting" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^&gt; ^ LogSaveChangesStarting;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring&gt; LogSaveChangesStarting;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                SaveChanges starting for '{contextType}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSensitiveDataLoggingEnabled">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSensitiveDataLoggingEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogSensitiveDataLoggingEnabled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSensitiveDataLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogSensitiveDataLoggingEnabled As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogSensitiveDataLoggingEnabled : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogSensitiveDataLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition ^ LogSensitiveDataLoggingEnabled;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition LogSensitiveDataLoggingEnabled;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data, this mode should only be enabled during development.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogServiceProviderCreated">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogServiceProviderCreated;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition LogServiceProviderCreated" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogServiceProviderCreated" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogServiceProviderCreated As EventDefinition " />
      <MemberSignature Language="F#" Value=" staticval mutable LogServiceProviderCreated : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogServiceProviderCreated" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition ^ LogServiceProviderCreated;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition LogServiceProviderCreated;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An 'IServiceProvider' was created for internal use by Entity Framework.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogShadowPropertyCreated">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogShadowPropertyCreated;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogShadowPropertyCreated" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogShadowPropertyCreated" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogShadowPropertyCreated As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogShadowPropertyCreated : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogShadowPropertyCreated" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogShadowPropertyCreated;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogShadowPropertyCreated;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The property '{property}' on entity type '{entityType}' was created in shadow state because there are no eligible CLR members with a matching name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStartedTracking">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string&gt; LogStartedTracking;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`2&lt;string, string&gt; LogStartedTracking" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStartedTracking" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogStartedTracking As EventDefinition(Of String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogStartedTracking : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStartedTracking" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^&gt; ^ LogStartedTracking;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;&gt; LogStartedTracking;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Context '{contextType}' started tracking '{entityType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStartedTrackingSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogStartedTrackingSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogStartedTrackingSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStartedTrackingSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogStartedTrackingSensitive As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogStartedTrackingSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStartedTrackingSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogStartedTrackingSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogStartedTrackingSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Context '{contextType}' started tracking '{entityType}' entity with key '{keyValues}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStateChanged">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, valuetype Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChanged" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogStateChanged As EventDefinition(Of String, String, EntityState, EntityState) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogStateChanged : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, Microsoft.EntityFrameworkCore.EntityState, Microsoft.EntityFrameworkCore.EntityState&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStateChanged" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, Microsoft::EntityFrameworkCore::EntityState, Microsoft::EntityFrameworkCore::EntityState&gt; ^ LogStateChanged;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, Microsoft::EntityFrameworkCore::EntityState, Microsoft::EntityFrameworkCore::EntityState&gt; LogStateChanged;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An '{entityType}' entity tracked by '{contextType}' changed from '{oldState}' to '{newState}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStateChangedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChangedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`5&lt;string, string, string, valuetype Microsoft.EntityFrameworkCore.EntityState, valuetype Microsoft.EntityFrameworkCore.EntityState&gt; LogStateChangedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStateChangedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogStateChangedSensitive As EventDefinition(Of String, String, String, EntityState, EntityState) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogStateChangedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string, Microsoft.EntityFrameworkCore.EntityState, Microsoft.EntityFrameworkCore.EntityState&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogStateChangedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^, Microsoft::EntityFrameworkCore::EntityState, Microsoft::EntityFrameworkCore::EntityState&gt; ^ LogStateChangedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;, Microsoft::EntityFrameworkCore::EntityState, Microsoft::EntityFrameworkCore::EntityState&gt; LogStateChangedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The '{entityType}' entity with key '{keyValues}' tracked by '{contextType}' changed from '{oldState}' to '{newState}'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTempValueGenerated">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogTempValueGenerated;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogTempValueGenerated" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogTempValueGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogTempValueGenerated As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogTempValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogTempValueGenerated" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogTempValueGenerated;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogTempValueGenerated;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{contextType}' generated a temporary value for the '{property}' property of new '{entityType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogTempValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object,string,string&gt; LogTempValueGeneratedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, object, string, string&gt; LogTempValueGeneratedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogTempValueGeneratedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogTempValueGeneratedSensitive As EventDefinition(Of String, Object, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogTempValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, obj, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogTempValueGeneratedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::Object ^, System::String ^, System::String ^&gt; ^ LogTempValueGeneratedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, winrt::Windows::Foundation::IInspectable const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogTempValueGeneratedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Object,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{contextType}' generated temporary value '{keyValue}' for the '{property}' property of new '{entityType}' entity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogValueGenerated">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,string,string&gt; LogValueGenerated;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`3&lt;string, string, string&gt; LogValueGenerated" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogValueGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogValueGenerated As EventDefinition(Of String, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogValueGenerated : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogValueGenerated" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::String ^, System::String ^&gt; ^ LogValueGenerated;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, std::wstring const &amp;, std::wstring const &amp;&gt; LogValueGenerated;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{contextType}' generated a value for the '{property}' property of new '{entityType}' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogValueGeneratedSensitive">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string,object,string,string&gt; LogValueGeneratedSensitive;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition`4&lt;string, object, string, string&gt; LogValueGeneratedSensitive" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogValueGeneratedSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LogValueGeneratedSensitive As EventDefinition(Of String, Object, String, String) " />
      <MemberSignature Language="F#" Value=" staticval mutable LogValueGeneratedSensitive : Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;string, obj, string, string&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogValueGeneratedSensitive" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;System::String ^, System::Object ^, System::String ^, System::String ^&gt; ^ LogValueGeneratedSensitive;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly Microsoft::EntityFrameworkCore::Diagnostics::EventDefinition&lt;std::wstring, winrt::Windows::Foundation::IInspectable const &amp;, std::wstring const &amp;, std::wstring const &amp;&gt; LogValueGeneratedSensitive;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.EventDefinition&lt;System.String,System.Object,System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                '{contextType}' generated value '{keyValue}' for the '{property}' property of new '{entityType}' entity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingBackingField">
      <MemberSignature Language="C#" Value="public static string MissingBackingField (object field, object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MissingBackingField(object field, object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MissingBackingField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MissingBackingField (field As Object, property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MissingBackingField : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MissingBackingField (field, property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MissingBackingField(System::Object ^ field, System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MissingBackingField(Platform::Object ^ field, Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MissingBackingField(winrt::Windows::Foundation::IInspectable const &amp; field, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="field" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="field">To be added.</param>
        <summary>
                The specified field '{field}' could not be found for property '{property}' on entity type '{entityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoreThanOneElement">
      <MemberSignature Language="C#" Value="public static string MoreThanOneElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MoreThanOneElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MoreThanOneElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoreThanOneElement As String" />
      <MemberSignature Language="F#" Value="member this.MoreThanOneElement : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MoreThanOneElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ MoreThanOneElement { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ MoreThanOneElement { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sequence contains more than one element
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleEntries">
      <MemberSignature Language="C#" Value="public static string MultipleEntries (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleEntries(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleEntries(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleEntries (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleEntries : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleEntries entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MultipleEntries(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MultipleEntries(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MultipleEntries(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot start tracking InternalEntityEntry for entity type '{entityType}' because another InternalEntityEntry is already tracking the same entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleNavigationsSameFk">
      <MemberSignature Language="C#" Value="public static string MultipleNavigationsSameFk (object entityType, object propertyList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleNavigationsSameFk(object entityType, object propertyList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleNavigationsSameFk(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleNavigationsSameFk (entityType As Object, propertyList As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleNavigationsSameFk : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleNavigationsSameFk (entityType, propertyList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MultipleNavigationsSameFk(System::Object ^ entityType, System::Object ^ propertyList);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MultipleNavigationsSameFk(Platform::Object ^ entityType, Platform::Object ^ propertyList);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MultipleNavigationsSameFk(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyList" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="propertyList">To be added.</param>
        <summary>
                There are multiple navigations in entity type '{entityType}' which are pointing to same set of properties - '{propertyList}' using ForeignKeyAttribute.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleOwnerships">
      <MemberSignature Language="C#" Value="public static string MultipleOwnerships (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleOwnerships(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleOwnerships(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleOwnerships (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleOwnerships : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleOwnerships entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MultipleOwnerships(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MultipleOwnerships(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MultipleOwnerships(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The entity type '{entityType}' is the target of multiple ownership relationships.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleProvidersAvailable">
      <MemberSignature Language="C#" Value="public static string MultipleProvidersAvailable (object storeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleProvidersAvailable(object storeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersAvailable(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleProvidersAvailable (storeNames As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleProvidersAvailable : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersAvailable storeNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MultipleProvidersAvailable(System::Object ^ storeNames);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MultipleProvidersAvailable(Platform::Object ^ storeNames);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MultipleProvidersAvailable(winrt::Windows::Foundation::IInspectable const &amp; storeNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeNames" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeNames">To be added.</param>
        <summary>
            The database providers {storeNames}are available. A context can only be configured to use a single database provider. Configure a database provider by overriding OnConfiguring in your DbContext class or in the AddDbContext method when setting up services.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleProvidersConfigured">
      <MemberSignature Language="C#" Value="public static string MultipleProvidersConfigured (object storeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MultipleProvidersConfigured(object storeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersConfigured(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultipleProvidersConfigured (storeNames As Object) As String" />
      <MemberSignature Language="F#" Value="static member MultipleProvidersConfigured : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersConfigured storeNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MultipleProvidersConfigured(System::Object ^ storeNames);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MultipleProvidersConfigured(Platform::Object ^ storeNames);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MultipleProvidersConfigured(winrt::Windows::Foundation::IInspectable const &amp; storeNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeNames" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeNames">To be added.</param>
        <summary>
                Services for database providers {storeNames} have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to UseInternalServiceProvider. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MutableKeyProperty">
      <MemberSignature Language="C#" Value="public static string MutableKeyProperty (object keyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MutableKeyProperty(object keyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MutableKeyProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MutableKeyProperty (keyProperty As Object) As String" />
      <MemberSignature Language="F#" Value="static member MutableKeyProperty : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.MutableKeyProperty keyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MutableKeyProperty(System::Object ^ keyProperty);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MutableKeyProperty(Platform::Object ^ keyProperty);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MutableKeyProperty(winrt::Windows::Foundation::IInspectable const &amp; keyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyProperty" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyProperty">To be added.</param>
        <summary>
                The property '{keyProperty}' cannot be configured as 'ValueGeneratedOnUpdate' or 'ValueGeneratedOnAddOrUpdate' because the key value cannot be changed after the entity has been added to the store.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationArray">
      <MemberSignature Language="C#" Value="public static string NavigationArray (object navigation, object entityType, object foundType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationArray(object navigation, object entityType, object foundType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationArray(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationArray (navigation As Object, entityType As Object, foundType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationArray : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationArray (navigation, entityType, foundType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationArray(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ foundType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationArray(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ foundType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationArray(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foundType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <summary>
                The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' which is an array type.. Collection navigation properties cannot be arrays.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBadType">
      <MemberSignature Language="C#" Value="public static string NavigationBadType (object navigation, object entityType, object foundType, object targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationBadType(object navigation, object entityType, object foundType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationBadType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationBadType (navigation As Object, entityType As Object, foundType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationBadType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationBadType (navigation, entityType, foundType, targetType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationBadType(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ foundType, System::Object ^ targetType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationBadType(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ foundType, Platform::Object ^ targetType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationBadType(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foundType, winrt::Windows::Foundation::IInspectable const &amp; targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' which does not implement ICollection&lt;{targetType}&gt;. Collection navigation properties must implement ICollection&lt;&gt; of the target type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCannotCreateType">
      <MemberSignature Language="C#" Value="public static string NavigationCannotCreateType (object navigation, object entityType, object foundType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationCannotCreateType(object navigation, object entityType, object foundType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCannotCreateType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationCannotCreateType (navigation As Object, entityType As Object, foundType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationCannotCreateType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCannotCreateType (navigation, entityType, foundType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationCannotCreateType(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ foundType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationCannotCreateType(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ foundType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationCannotCreateType(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foundType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foundType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foundType">To be added.</param>
        <summary>
                The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' for which it was not possible to create a concrete instance. Either initialize the property before use, add a public parameterless constructor to the type, or use a type which can be assigned a HashSet&lt;&gt; or List&lt;&gt;.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCollectionWrongClrType">
      <MemberSignature Language="C#" Value="public static string NavigationCollectionWrongClrType (object navigation, object entityType, object clrType, object targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationCollectionWrongClrType(object navigation, object entityType, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCollectionWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationCollectionWrongClrType (navigation As Object, entityType As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationCollectionWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCollectionWrongClrType (navigation, entityType, clrType, targetType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationCollectionWrongClrType(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ clrType, System::Object ^ targetType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationCollectionWrongClrType(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ clrType, Platform::Object ^ targetType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationCollectionWrongClrType(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; clrType, winrt::Windows::Foundation::IInspectable const &amp; targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The collection navigation property '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not implement 'IEnumerable&lt;{targetType}&gt;'. Collection navigation properties must implement IEnumerable&lt;&gt; of the related entity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationForWrongForeignKey">
      <MemberSignature Language="C#" Value="public static string NavigationForWrongForeignKey (object navigation, object entityType, object targetFk, object actualFk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationForWrongForeignKey(object navigation, object entityType, object targetFk, object actualFk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationForWrongForeignKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationForWrongForeignKey (navigation As Object, entityType As Object, targetFk As Object, actualFk As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationForWrongForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationForWrongForeignKey (navigation, entityType, targetFk, actualFk)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationForWrongForeignKey(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ targetFk, System::Object ^ actualFk);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationForWrongForeignKey(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ targetFk, Platform::Object ^ actualFk);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationForWrongForeignKey(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; targetFk, winrt::Windows::Foundation::IInspectable const &amp; actualFk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="targetFk" Type="System.Object" />
        <Parameter Name="actualFk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="targetFk">To be added.</param>
        <param name="actualFk">To be added.</param>
        <summary>
                The navigation property '{navigation}' on entity type '{entityType}' cannot be associated with foreign key {targetFk} because it was created for foreign key {actualFk}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationIsProperty">
      <MemberSignature Language="C#" Value="public static string NavigationIsProperty (object property, object entityType, object ReferenceMethod, object CollectionMethod, object PropertyMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationIsProperty(object property, object entityType, object ReferenceMethod, object CollectionMethod, object PropertyMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationIsProperty(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationIsProperty (property As Object, entityType As Object, ReferenceMethod As Object, CollectionMethod As Object, PropertyMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationIsProperty : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationIsProperty (property, entityType, ReferenceMethod, CollectionMethod, PropertyMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationIsProperty(System::Object ^ property, System::Object ^ entityType, System::Object ^ ReferenceMethod, System::Object ^ CollectionMethod, System::Object ^ PropertyMethod);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationIsProperty(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ ReferenceMethod, Platform::Object ^ CollectionMethod, Platform::Object ^ PropertyMethod);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationIsProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; ReferenceMethod, winrt::Windows::Foundation::IInspectable const &amp; CollectionMethod, winrt::Windows::Foundation::IInspectable const &amp; PropertyMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="ReferenceMethod" Type="System.Object" />
        <Parameter Name="CollectionMethod" Type="System.Object" />
        <Parameter Name="PropertyMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <param name="PropertyMethod">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is being accessed using the '{ReferenceMethod}' or '{CollectionMethod}' method, but is defined in the model as a non-navigation property. Use the '{PropertyMethod}' method to access non-navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNoGetter">
      <MemberSignature Language="C#" Value="public static string NavigationNoGetter (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNoGetter(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNoGetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNoGetter (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNoGetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNoGetter (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationNoGetter(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationNoGetter(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationNoGetter(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            The navigation property '{navigation}' on the entity type '{entityType}' does not have a getter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNoSetter">
      <MemberSignature Language="C#" Value="public static string NavigationNoSetter (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNoSetter(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNoSetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNoSetter (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNoSetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNoSetter (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationNoSetter(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationNoSetter(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationNoSetter(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation property '{navigation}' on the entity type '{entityType}' does not have a setter and no writable backing field was found or specified. Read-only collection navigation properties must be initialized before use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationNotAdded">
      <MemberSignature Language="C#" Value="public static string NavigationNotAdded (object entityType, object navigation, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationNotAdded(object entityType, object navigation, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationNotAdded (entityType As Object, navigation As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNotAdded (entityType, navigation, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationNotAdded(System::Object ^ entityType, System::Object ^ navigation, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationNotAdded(Platform::Object ^ entityType, Platform::Object ^ navigation, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationNotAdded(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                Unable to determine the relationship represented by navigation property '{entityType}.{navigation}' of type '{propertyType}'. Either manually configure the relationship, or ignore this property using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationSingleWrongClrType">
      <MemberSignature Language="C#" Value="public static string NavigationSingleWrongClrType (object navigation, object entityType, object clrType, object targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationSingleWrongClrType(object navigation, object entityType, object clrType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationSingleWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationSingleWrongClrType (navigation As Object, entityType As Object, clrType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationSingleWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationSingleWrongClrType (navigation, entityType, clrType, targetType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationSingleWrongClrType(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ clrType, System::Object ^ targetType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationSingleWrongClrType(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ clrType, Platform::Object ^ targetType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationSingleWrongClrType(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; clrType, winrt::Windows::Foundation::IInspectable const &amp; targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not match the expected CLR type '{targetType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationToShadowEntity">
      <MemberSignature Language="C#" Value="public static string NavigationToShadowEntity (object navigation, object entityType, object targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NavigationToShadowEntity(object navigation, object entityType, object targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationToShadowEntity(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NavigationToShadowEntity (navigation As Object, entityType As Object, targetType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NavigationToShadowEntity : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationToShadowEntity (navigation, entityType, targetType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NavigationToShadowEntity(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ targetType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NavigationToShadowEntity(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ targetType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NavigationToShadowEntity(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="targetType">To be added.</param>
        <summary>
                The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because the target entity type '{targetType}' is defined in shadow state and navigations properties cannot point to shadow state entities.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBackingField">
      <MemberSignature Language="C#" Value="public static string NoBackingField (object property, object entity, object pam);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingField(object property, object entity, object pam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoBackingField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingField (property As Object, entity As Object, pam As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoBackingField : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoBackingField (property, entity, pam)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoBackingField(System::Object ^ property, System::Object ^ entity, System::Object ^ pam);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoBackingField(Platform::Object ^ property, Platform::Object ^ entity, Platform::Object ^ pam);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoBackingField(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity, winrt::Windows::Foundation::IInspectable const &amp; pam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="pam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="pam">To be added.</param>
        <summary>
                No field was found backing property '{property}' of entity type '{entity}'. Either name the backing field so that it is picked up by convention, configure the backing field to use, or use a different '{pam}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoBackingFieldLazyLoading">
      <MemberSignature Language="C#" Value="public static string NoBackingFieldLazyLoading (object property, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoBackingFieldLazyLoading(object property, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoBackingFieldLazyLoading(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoBackingFieldLazyLoading (property As Object, entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoBackingFieldLazyLoading : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoBackingFieldLazyLoading (property, entity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoBackingFieldLazyLoading(System::Object ^ property, System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoBackingFieldLazyLoading(Platform::Object ^ property, Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoBackingFieldLazyLoading(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                No field was found backing property '{property}' of entity type '{entity}'. Lazy-loaded navigation properties must have backing fields. Either name the backing field so that it is picked up by convention or configure the backing field to use.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrNavigation">
      <MemberSignature Language="C#" Value="public static string NoClrNavigation (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrNavigation(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrNavigation (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrNavigation (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoClrNavigation(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoClrNavigation(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoClrNavigation(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because there is no corresponding CLR property on the underlying type and navigations properties cannot be added to shadow state.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrProperty">
      <MemberSignature Language="C#" Value="public static string NoClrProperty (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrProperty(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrProperty(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrProperty (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrProperty : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrProperty (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoClrProperty(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoClrProperty(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoClrProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            The property '{property}' cannot be added to entity type '{entityType}' because the property is not marked as shadow state and no corresponding CLR property exists on the underlying type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrSetter">
      <MemberSignature Language="C#" Value="public static string NoClrSetter (object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrSetter(object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrSetter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrSetter (property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrSetter : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrSetter property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoClrSetter(System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoClrSetter(Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoClrSetter(winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
            Could not find setter for property {property}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoClrType">
      <MemberSignature Language="C#" Value="public static string NoClrType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoClrType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoClrType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoClrType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoClrType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoClrType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoClrType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The CLR entity materializer cannot be used for entity type '{entityType}' because it is a shadow state entity type.  Materialization to a CLR type is only possible for entity types that have a corresponding CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDefiningNavigation">
      <MemberSignature Language="C#" Value="public static string NoDefiningNavigation (object navigation, object entityType, object definingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoDefiningNavigation(object navigation, object entityType, object definingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoDefiningNavigation(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoDefiningNavigation (navigation As Object, entityType As Object, definingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoDefiningNavigation : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoDefiningNavigation (navigation, entityType, definingEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoDefiningNavigation(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ definingEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoDefiningNavigation(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ definingEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoDefiningNavigation(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; definingEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="definingEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="definingEntityType">To be added.</param>
        <summary>
                The navigation '{navigation}' used to define the entity type '{entityType}' is not present on '{definingEntityType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEfServices">
      <MemberSignature Language="C#" Value="public static string NoEfServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoEfServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoEfServices" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoEfServices As String" />
      <MemberSignature Language="F#" Value="member this.NoEfServices : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoEfServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NoEfServices { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ NoEfServices { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Entity Framework services have not been added to the internal service provider. Either remove the call to UseInternalServiceProvider so that EF will manage its own internal services, or use the method from your database provider to add the required services to the service provider (e.g. AddEntityFrameworkSqlServer).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoElements">
      <MemberSignature Language="C#" Value="public static string NoElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoElements" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoElements As String" />
      <MemberSignature Language="F#" Value="member this.NoElements : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoElements" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NoElements { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ NoElements { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sequence contains no elements
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoFieldOrGetter">
      <MemberSignature Language="C#" Value="public static string NoFieldOrGetter (object property, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrGetter(object property, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrGetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrGetter (property As Object, entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoFieldOrGetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrGetter (property, entity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoFieldOrGetter(System::Object ^ property, System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoFieldOrGetter(Platform::Object ^ property, Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoFieldOrGetter(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                No backing field could be found for property '{property}' of entity type '{entity}' and the property does not have a getter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoFieldOrSetter">
      <MemberSignature Language="C#" Value="public static string NoFieldOrSetter (object property, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoFieldOrSetter(object property, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrSetter(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoFieldOrSetter (property As Object, entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoFieldOrSetter : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrSetter (property, entity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoFieldOrSetter(System::Object ^ property, System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoFieldOrSetter(Platform::Object ^ property, Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoFieldOrSetter(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                No backing field could be found for property '{property}' of entity type '{entity}' and the property does not have a setter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoGetter">
      <MemberSignature Language="C#" Value="public static string NoGetter (object property, object entity, object pam);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoGetter(object property, object entity, object pam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoGetter(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoGetter (property As Object, entity As Object, pam As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoGetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoGetter (property, entity, pam)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoGetter(System::Object ^ property, System::Object ^ entity, System::Object ^ pam);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoGetter(Platform::Object ^ property, Platform::Object ^ entity, Platform::Object ^ pam);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoGetter(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity, winrt::Windows::Foundation::IInspectable const &amp; pam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="pam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="pam">To be added.</param>
        <summary>
                The property '{property}' of entity type '{entity}' does not have a getter. Either make the property readable or use a different '{pam}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonClrBaseType">
      <MemberSignature Language="C#" Value="public static string NonClrBaseType (object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonClrBaseType(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonClrBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonClrBaseType (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonClrBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonClrBaseType (entityType, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NonClrBaseType(System::Object ^ entityType, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NonClrBaseType(Platform::Object ^ entityType, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NonClrBaseType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a shadow state entity type while '{entityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonDefiningOwnership">
      <MemberSignature Language="C#" Value="public static string NonDefiningOwnership (object ownershipNavigation, object definingNavigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonDefiningOwnership(object ownershipNavigation, object definingNavigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonDefiningOwnership(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonDefiningOwnership (ownershipNavigation As Object, definingNavigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonDefiningOwnership : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonDefiningOwnership (ownershipNavigation, definingNavigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NonDefiningOwnership(System::Object ^ ownershipNavigation, System::Object ^ definingNavigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NonDefiningOwnership(Platform::Object ^ ownershipNavigation, Platform::Object ^ definingNavigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NonDefiningOwnership(winrt::Windows::Foundation::IInspectable const &amp; ownershipNavigation, winrt::Windows::Foundation::IInspectable const &amp; definingNavigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownershipNavigation" Type="System.Object" />
        <Parameter Name="definingNavigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ownershipNavigation">To be added.</param>
        <param name="definingNavigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The ownership by '{ownershipNavigation}' should use defining navigation '{definingNavigation}' for the owned type '{entityType}'
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonGenericOptions">
      <MemberSignature Language="C#" Value="public static string NonGenericOptions (object contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonGenericOptions(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonGenericOptions(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonGenericOptions (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonGenericOptions : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonGenericOptions contextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NonGenericOptions(System::Object ^ contextType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NonGenericOptions(Platform::Object ^ contextType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NonGenericOptions(winrt::Windows::Foundation::IInspectable const &amp; contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                The DbContextOptions passed to the {contextType} constructor must be a DbContextOptions&lt;{contextType}&gt;. When registering multiple DbContext types make sure that the constructor for each context type has a DbContextOptions&lt;TContext&gt; parameter rather than a non-generic DbContextOptions parameter.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonNotifyingCollection">
      <MemberSignature Language="C#" Value="public static string NonNotifyingCollection (object navigation, object entityType, object changeTrackingStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonNotifyingCollection(object navigation, object entityType, object changeTrackingStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonNotifyingCollection(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonNotifyingCollection (navigation As Object, entityType As Object, changeTrackingStrategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonNotifyingCollection : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonNotifyingCollection (navigation, entityType, changeTrackingStrategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NonNotifyingCollection(System::Object ^ navigation, System::Object ^ entityType, System::Object ^ changeTrackingStrategy);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NonNotifyingCollection(Platform::Object ^ navigation, Platform::Object ^ entityType, Platform::Object ^ changeTrackingStrategy);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NonNotifyingCollection(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; changeTrackingStrategy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="changeTrackingStrategy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="changeTrackingStrategy">To be added.</param>
        <summary>
                The collection type being used for navigation property '{navigation}' on entity type '{entityType}' does not implement 'INotifyCollectionChanged'. Any entity type configured to use the '{changeTrackingStrategy}' change tracking strategy must use collections that implement 'INotifyCollectionChanged'. Consider using 'ObservableCollection&lt;T&gt;' for this.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonShadowBaseType">
      <MemberSignature Language="C#" Value="public static string NonShadowBaseType (object entityType, object baseEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NonShadowBaseType(object entityType, object baseEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonShadowBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonShadowBaseType (entityType As Object, baseEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NonShadowBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonShadowBaseType (entityType, baseEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NonShadowBaseType(System::Object ^ entityType, System::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NonShadowBaseType(Platform::Object ^ entityType, Platform::Object ^ baseEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NonShadowBaseType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{entityType}' is a shadow state entity type while '{baseEntityType}' is not.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoParameterlessConstructor">
      <MemberSignature Language="C#" Value="public static string NoParameterlessConstructor (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoParameterlessConstructor(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoParameterlessConstructor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoParameterlessConstructor (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoParameterlessConstructor : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoParameterlessConstructor entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoParameterlessConstructor(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoParameterlessConstructor(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoParameterlessConstructor(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                A parameterless constructor was not found on entity type '{entityType}'. In order to create an instance of '{entityType}' EF requires that a parameterless constructor be declared.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProperty">
      <MemberSignature Language="C#" Value="public static string NoProperty (object field, object entity, object pam);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoProperty(object field, object entity, object pam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProperty(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoProperty (field As Object, entity As Object, pam As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoProperty : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProperty (field, entity, pam)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoProperty(System::Object ^ field, System::Object ^ entity, System::Object ^ pam);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoProperty(Platform::Object ^ field, Platform::Object ^ entity, Platform::Object ^ pam);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoProperty(winrt::Windows::Foundation::IInspectable const &amp; field, winrt::Windows::Foundation::IInspectable const &amp; entity, winrt::Windows::Foundation::IInspectable const &amp; pam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="pam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="pam">To be added.</param>
        <summary>
                No property was associated with field '{field}' of entity type '{entity}'. Either configure a property or use a different '{pam}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoPropertyType">
      <MemberSignature Language="C#" Value="public static string NoPropertyType (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoPropertyType(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoPropertyType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoPropertyType (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoPropertyType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoPropertyType (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoPropertyType(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoPropertyType(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoPropertyType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to the type '{entityType}' because there was no property type specified and there is no corresponding CLR property or field. To add a shadow state property the property type must be specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProviderConfigured">
      <MemberSignature Language="C#" Value="public static string NoProviderConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NoProviderConfigured" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoProviderConfigured As String" />
      <MemberSignature Language="F#" Value="member this.NoProviderConfigured : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfigured" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NoProviderConfigured { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ NoProviderConfigured { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                No database provider has been configured for this DbContext. A provider can be configured by overriding the DbContext.OnConfiguring method or by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoProviderConfiguredFailedToResolveService">
      <MemberSignature Language="C#" Value="public static string NoProviderConfiguredFailedToResolveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoProviderConfiguredFailedToResolveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfiguredFailedToResolveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoProviderConfiguredFailedToResolveService (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoProviderConfiguredFailedToResolveService : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfiguredFailedToResolveService service" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoProviderConfiguredFailedToResolveService(System::Object ^ service);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoProviderConfiguredFailedToResolveService(Platform::Object ^ service);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoProviderConfiguredFailedToResolveService(winrt::Windows::Foundation::IInspectable const &amp; service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                Unable to resolve service for type '{service}'. This is often because no database provider has been configured for this DbContext. A provider can be configured by overriding the DbContext.OnConfiguring method or by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSetter">
      <MemberSignature Language="C#" Value="public static string NoSetter (object property, object entity, object pam);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoSetter(object property, object entity, object pam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoSetter(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoSetter (property As Object, entity As Object, pam As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoSetter : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoSetter (property, entity, pam)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoSetter(System::Object ^ property, System::Object ^ entity, System::Object ^ pam);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoSetter(Platform::Object ^ property, Platform::Object ^ entity, Platform::Object ^ pam);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoSetter(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entity, winrt::Windows::Foundation::IInspectable const &amp; pam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="pam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="pam">To be added.</param>
        <summary>
                The property '{property}' of entity type '{entity}' does not have a setter. Either make the property writable or use a different '{pam}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotAnEFService">
      <MemberSignature Language="C#" Value="public static string NotAnEFService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotAnEFService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NotAnEFService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotAnEFService (service As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotAnEFService : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NotAnEFService service" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NotAnEFService(System::Object ^ service);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NotAnEFService(Platform::Object ^ service);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NotAnEFService(winrt::Windows::Foundation::IInspectable const &amp; service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service">To be added.</param>
        <summary>
                The database provider attempted to register an implementation of the '{service}' service. This is not a service defined by EF and as such must be registered as a provider-specific service using the 'TryAddProviderSpecificServices' method.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotAssignableClrBaseType">
      <MemberSignature Language="C#" Value="public static string NotAssignableClrBaseType (object entityType, object baseEntityType, object clrType, object baseClrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NotAssignableClrBaseType(object entityType, object baseEntityType, object clrType, object baseClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NotAssignableClrBaseType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotAssignableClrBaseType (entityType As Object, baseEntityType As Object, clrType As Object, baseClrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NotAssignableClrBaseType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NotAssignableClrBaseType (entityType, baseEntityType, clrType, baseClrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NotAssignableClrBaseType(System::Object ^ entityType, System::Object ^ baseEntityType, System::Object ^ clrType, System::Object ^ baseClrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NotAssignableClrBaseType(Platform::Object ^ entityType, Platform::Object ^ baseEntityType, Platform::Object ^ clrType, Platform::Object ^ baseClrType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NotAssignableClrBaseType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseEntityType, winrt::Windows::Foundation::IInspectable const &amp; clrType, winrt::Windows::Foundation::IInspectable const &amp; baseClrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseEntityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="baseClrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseEntityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="baseClrType">To be added.</param>
        <summary>
                The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{clrType}' is not a descendant of '{baseClrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoValueGenerator">
      <MemberSignature Language="C#" Value="public static string NoValueGenerator (object property, object entityType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NoValueGenerator(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoValueGenerator(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoValueGenerator (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member NoValueGenerator : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoValueGenerator (property, entityType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NoValueGenerator(System::Object ^ property, System::Object ^ entityType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NoValueGenerator(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NoValueGenerator(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The '{property}' on entity type '{entityType}' does not have a value set and no value generator is available for properties of type '{propertyType}'. Either set a value for the property before adding the entity or configure a value generator for properties of type '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullableKey">
      <MemberSignature Language="C#" Value="public static string NullableKey (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NullableKey(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NullableKey(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NullableKey (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member NullableKey : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.NullableKey (entityType, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ NullableKey(System::Object ^ entityType, System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ NullableKey(Platform::Object ^ entityType, Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring NullableKey(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                A key on entity type '{entityType}' cannot contain the property '{property}' because it is nullable/optional. All properties on which a key is declared must be marked as non-nullable/required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObservableCollectionReentrancy">
      <MemberSignature Language="C#" Value="public static string ObservableCollectionReentrancy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ObservableCollectionReentrancy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ObservableCollectionReentrancy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ObservableCollectionReentrancy As String" />
      <MemberSignature Language="F#" Value="member this.ObservableCollectionReentrancy : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ObservableCollectionReentrancy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ObservableCollectionReentrancy { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ObservableCollectionReentrancy { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Cannot change ObservableHashSet during a CollectionChanged event.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionsExtensionNotFound">
      <MemberSignature Language="C#" Value="public static string OptionsExtensionNotFound (object optionsExtension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OptionsExtensionNotFound(object optionsExtension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.OptionsExtensionNotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OptionsExtensionNotFound (optionsExtension As Object) As String" />
      <MemberSignature Language="F#" Value="static member OptionsExtensionNotFound : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.OptionsExtensionNotFound optionsExtension" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ OptionsExtensionNotFound(System::Object ^ optionsExtension);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ OptionsExtensionNotFound(Platform::Object ^ optionsExtension);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring OptionsExtensionNotFound(winrt::Windows::Foundation::IInspectable const &amp; optionsExtension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsExtension" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="optionsExtension">To be added.</param>
        <summary>
                Options extension of type '{optionsExtension}' not found.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValueNotTracked">
      <MemberSignature Language="C#" Value="public static string OriginalValueNotTracked (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OriginalValueNotTracked(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.OriginalValueNotTracked(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OriginalValueNotTracked (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OriginalValueNotTracked : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.OriginalValueNotTracked (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ OriginalValueNotTracked(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ OriginalValueNotTracked(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring OriginalValueNotTracked(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The original value for property '{property}' of entity type '{entityType}' cannot be accessed because it is not being tracked. Original values are not recorded for most properties of entities when the 'ChangingAndChangedNotifications' strategy is used. To access all original values use a different change tracking strategy such as 'ChangingAndChangedNotificationsWithOriginalValues'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnedDerivedType">
      <MemberSignature Language="C#" Value="public static string OwnedDerivedType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string OwnedDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.OwnedDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OwnedDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member OwnedDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.OwnedDerivedType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ OwnedDerivedType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ OwnedDerivedType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring OwnedDerivedType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The owned entity type '{entityType}' cannot have a base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoolingContextCtorError">
      <MemberSignature Language="C#" Value="public static string PoolingContextCtorError (object contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PoolingContextCtorError(object contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PoolingContextCtorError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PoolingContextCtorError (contextType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PoolingContextCtorError : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PoolingContextCtorError contextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PoolingContextCtorError(System::Object ^ contextType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PoolingContextCtorError(Platform::Object ^ contextType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PoolingContextCtorError(winrt::Windows::Foundation::IInspectable const &amp; contextType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contextType">To be added.</param>
        <summary>
                The DbContext of type '{contextType}' cannot be pooled because it does not have a single public constructor accepting a single parameter of type DbContextOptions.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PoolingOptionsModified">
      <MemberSignature Language="C#" Value="public static string PoolingOptionsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PoolingOptionsModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PoolingOptionsModified" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PoolingOptionsModified As String" />
      <MemberSignature Language="F#" Value="member this.PoolingOptionsModified : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PoolingOptionsModified" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PoolingOptionsModified { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ PoolingOptionsModified { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                OnConfiguring cannot be used to modify DbContextOptions when DbContext pooling is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalEntityTypeNotInRelationship">
      <MemberSignature Language="C#" Value="public static string PrincipalEntityTypeNotInRelationship (object dependentEntityType, object principalEntityType, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalEntityTypeNotInRelationship(object dependentEntityType, object principalEntityType, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PrincipalEntityTypeNotInRelationship(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalEntityTypeNotInRelationship (dependentEntityType As Object, principalEntityType As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalEntityTypeNotInRelationship : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PrincipalEntityTypeNotInRelationship (dependentEntityType, principalEntityType, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PrincipalEntityTypeNotInRelationship(System::Object ^ dependentEntityType, System::Object ^ principalEntityType, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PrincipalEntityTypeNotInRelationship(Platform::Object ^ dependentEntityType, Platform::Object ^ principalEntityType, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PrincipalEntityTypeNotInRelationship(winrt::Windows::Foundation::IInspectable const &amp; dependentEntityType, winrt::Windows::Foundation::IInspectable const &amp; principalEntityType, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntityType" Type="System.Object" />
        <Parameter Name="principalEntityType" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentEntityType">To be added.</param>
        <param name="principalEntityType">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}' but have specified a foreign key targeting '{entityType}'. The foreign key must be targeting a type that is part of the relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalOwnedType">
      <MemberSignature Language="C#" Value="public static string PrincipalOwnedType (object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object ownedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PrincipalOwnedType(object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object ownedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PrincipalOwnedType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrincipalOwnedType (referencingEntityTypeOrNavigation As Object, referencedEntityTypeOrNavigation As Object, ownedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PrincipalOwnedType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PrincipalOwnedType (referencingEntityTypeOrNavigation, referencedEntityTypeOrNavigation, ownedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PrincipalOwnedType(System::Object ^ referencingEntityTypeOrNavigation, System::Object ^ referencedEntityTypeOrNavigation, System::Object ^ ownedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PrincipalOwnedType(Platform::Object ^ referencingEntityTypeOrNavigation, Platform::Object ^ referencedEntityTypeOrNavigation, Platform::Object ^ ownedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PrincipalOwnedType(winrt::Windows::Foundation::IInspectable const &amp; referencingEntityTypeOrNavigation, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityTypeOrNavigation, winrt::Windows::Foundation::IInspectable const &amp; ownedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencingEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="ownedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="referencingEntityTypeOrNavigation">To be added.</param>
        <param name="referencedEntityTypeOrNavigation">To be added.</param>
        <param name="ownedType">To be added.</param>
        <summary>
                The relationship from '{referencingEntityTypeOrNavigation}' to '{referencedEntityTypeOrNavigation}' is not supported because the owned entity type '{ownedType}' cannot be on the principal side of a non-ownership relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCalledOnNavigation">
      <MemberSignature Language="C#" Value="public static string PropertyCalledOnNavigation (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyCalledOnNavigation(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyCalledOnNavigation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyCalledOnNavigation (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyCalledOnNavigation : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyCalledOnNavigation (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyCalledOnNavigation(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyCalledOnNavigation(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyCalledOnNavigation(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                '{property}' cannot be used as a property on entity type '{entityType}' because it is configured as a navigation.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyConceptualNull">
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNull (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyConceptualNull(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyConceptualNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyConceptualNull (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyConceptualNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyConceptualNull (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyConceptualNull(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyConceptualNull(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyConceptualNull(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is marked as null, but this cannot be saved because the property is marked as required.  Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyConceptualNullSensitive">
      <MemberSignature Language="C#" Value="public static string PropertyConceptualNullSensitive (object property, object entityType, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyConceptualNullSensitive(object property, object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyConceptualNullSensitive(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyConceptualNullSensitive (property As Object, entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyConceptualNullSensitive : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyConceptualNullSensitive (property, entityType, keyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyConceptualNullSensitive(System::Object ^ property, System::Object ^ entityType, System::Object ^ keyValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyConceptualNullSensitive(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ keyValue);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyConceptualNullSensitive(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The property '{property}'  is marked as null on entity '{entityType}' with the key value '{keyValue}', but this cannot be saved because the property is marked as required.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDoesNotBelong">
      <MemberSignature Language="C#" Value="public static string PropertyDoesNotBelong (object property, object entityType, object expectedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyDoesNotBelong(object property, object entityType, object expectedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyDoesNotBelong(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyDoesNotBelong (property As Object, entityType As Object, expectedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyDoesNotBelong : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyDoesNotBelong (property, entityType, expectedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyDoesNotBelong(System::Object ^ property, System::Object ^ entityType, System::Object ^ expectedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyDoesNotBelong(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ expectedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyDoesNotBelong(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; expectedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="expectedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="expectedType">To be added.</param>
        <summary>
                The property '{property}' belongs to entity type '{entityType}' but is being used with an instance of entity type '{expectedType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUse">
      <MemberSignature Language="C#" Value="public static string PropertyInUse (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUse(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUse (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyInUse : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUse (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyInUse(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyInUse(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyInUse(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
            The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in an index or key. All indexes and keys must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseForeignKey">
      <MemberSignature Language="C#" Value="public static string PropertyInUseForeignKey (object property, object entityType, object foreignKey, object foreignKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseForeignKey(object property, object entityType, object foreignKey, object foreignKeyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseForeignKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseForeignKey (property As Object, entityType As Object, foreignKey As Object, foreignKeyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyInUseForeignKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseForeignKey (property, entityType, foreignKey, foreignKeyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyInUseForeignKey(System::Object ^ property, System::Object ^ entityType, System::Object ^ foreignKey, System::Object ^ foreignKeyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyInUseForeignKey(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ foreignKey, Platform::Object ^ foreignKeyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyInUseForeignKey(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; foreignKeyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="foreignKeyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="foreignKeyType">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the foreign key {foreignKey} on '{foreignKeyType}'. All containing foreign keys must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseIndex">
      <MemberSignature Language="C#" Value="public static string PropertyInUseIndex (object property, object entityType, object index, object indexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseIndex(object property, object entityType, object index, object indexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseIndex(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseIndex (property As Object, entityType As Object, index As Object, indexType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyInUseIndex : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseIndex (property, entityType, index, indexType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyInUseIndex(System::Object ^ property, System::Object ^ entityType, System::Object ^ index, System::Object ^ indexType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyInUseIndex(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ index, Platform::Object ^ indexType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyInUseIndex(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; index, winrt::Windows::Foundation::IInspectable const &amp; indexType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="index" Type="System.Object" />
        <Parameter Name="indexType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="index">To be added.</param>
        <param name="indexType">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the index {index} on '{indexType}'. All containing indexes must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInUseKey">
      <MemberSignature Language="C#" Value="public static string PropertyInUseKey (object property, object entityType, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyInUseKey(object property, object entityType, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyInUseKey (property As Object, entityType As Object, key As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyInUseKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseKey (property, entityType, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyInUseKey(System::Object ^ property, System::Object ^ entityType, System::Object ^ key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyInUseKey(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ key);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyInUseKey(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the key {key}. All containing keys must be removed or redefined before the property can be removed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIsNavigation">
      <MemberSignature Language="C#" Value="public static string PropertyIsNavigation (object property, object entityType, object PropertyMethod, object ReferenceMethod, object CollectionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyIsNavigation(object property, object entityType, object PropertyMethod, object ReferenceMethod, object CollectionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyIsNavigation(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyIsNavigation (property As Object, entityType As Object, PropertyMethod As Object, ReferenceMethod As Object, CollectionMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyIsNavigation : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyIsNavigation (property, entityType, PropertyMethod, ReferenceMethod, CollectionMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyIsNavigation(System::Object ^ property, System::Object ^ entityType, System::Object ^ PropertyMethod, System::Object ^ ReferenceMethod, System::Object ^ CollectionMethod);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyIsNavigation(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ PropertyMethod, Platform::Object ^ ReferenceMethod, Platform::Object ^ CollectionMethod);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyIsNavigation(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; PropertyMethod, winrt::Windows::Foundation::IInspectable const &amp; ReferenceMethod, winrt::Windows::Foundation::IInspectable const &amp; CollectionMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="PropertyMethod" Type="System.Object" />
        <Parameter Name="ReferenceMethod" Type="System.Object" />
        <Parameter Name="CollectionMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="PropertyMethod">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is being accessed using the '{PropertyMethod}' method, but is defined in the model as a navigation property. Use either the '{ReferenceMethod}' or '{CollectionMethod}' method to access navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMethodInvoked">
      <MemberSignature Language="C#" Value="public static string PropertyMethodInvoked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PropertyMethodInvoked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyMethodInvoked" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PropertyMethodInvoked As String" />
      <MemberSignature Language="F#" Value="member this.PropertyMethodInvoked : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyMethodInvoked" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PropertyMethodInvoked { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ PropertyMethodInvoked { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The EF.Property&lt;T&gt; method may only be used within LINQ queries.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotAdded">
      <MemberSignature Language="C#" Value="public static string PropertyNotAdded (object entityType, object property, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotAdded(object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotAdded(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotAdded (entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotAdded : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotAdded (entityType, property, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyNotAdded(System::Object ^ entityType, System::Object ^ property, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyNotAdded(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyNotAdded(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{property}' could not be mapped, because it is of type '{propertyType}' which is not a supported primitive type or a valid entity type. Either explicitly map this property, or ignore it using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotFound">
      <MemberSignature Language="C#" Value="public static string PropertyNotFound (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotFound(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotFound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotFound (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotFound : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotFound (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyNotFound(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyNotFound(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyNotFound(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' could not be found. Ensure that the property exists and has been included in the model.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNotMapped">
      <MemberSignature Language="C#" Value="public static string PropertyNotMapped (object entityType, object property, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyNotMapped(object entityType, object property, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotMapped(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyNotMapped (entityType As Object, property As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyNotMapped : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotMapped (entityType, property, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyNotMapped(System::Object ^ entityType, System::Object ^ property, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyNotMapped(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyNotMapped(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{entityType}.{property}' is of type '{propertyType}' which is not supported by current database provider. Either change the property CLR type or ignore the property using the '[NotMapped]' attribute or by using 'EntityTypeBuilder.Ignore' in 'OnModelCreating'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyReadOnlyAfterSave">
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyAfterSave (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyReadOnlyAfterSave(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyAfterSave(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyReadOnlyAfterSave (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyReadOnlyAfterSave : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyAfterSave (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyReadOnlyAfterSave(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyReadOnlyAfterSave(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyReadOnlyAfterSave(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is defined to be read-only after it has been saved, but its value has been modified or marked as modified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyReadOnlyBeforeSave">
      <MemberSignature Language="C#" Value="public static string PropertyReadOnlyBeforeSave (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyReadOnlyBeforeSave(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyBeforeSave(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyReadOnlyBeforeSave (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyReadOnlyBeforeSave : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyBeforeSave (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyReadOnlyBeforeSave(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyReadOnlyBeforeSave(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyReadOnlyBeforeSave(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is defined to be read-only before it is saved, but its value has been set to something other than a temporary or default value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongClrType">
      <MemberSignature Language="C#" Value="public static string PropertyWrongClrType (object property, object entityType, object clrType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongClrType(object property, object entityType, object clrType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongClrType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongClrType (property As Object, entityType As Object, clrType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyWrongClrType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongClrType (property, entityType, clrType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyWrongClrType(System::Object ^ property, System::Object ^ entityType, System::Object ^ clrType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyWrongClrType(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ clrType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyWrongClrType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; clrType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The property '{property}' cannot be added to type '{entityType}' because the type of the corresponding CLR property or field '{clrType}' does not match the specified type '{propertyType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyWrongEntityClrType">
      <MemberSignature Language="C#" Value="public static string PropertyWrongEntityClrType (object property, object entityType, object clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PropertyWrongEntityClrType(object property, object entityType, object clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongEntityClrType(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PropertyWrongEntityClrType (property As Object, entityType As Object, clrType As Object) As String" />
      <MemberSignature Language="F#" Value="static member PropertyWrongEntityClrType : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongEntityClrType (property, entityType, clrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PropertyWrongEntityClrType(System::Object ^ property, System::Object ^ entityType, System::Object ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ PropertyWrongEntityClrType(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ clrType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring PropertyWrongEntityClrType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; clrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="clrType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="clrType">To be added.</param>
        <summary>
                CLR property '{property}' cannot be added to entity type '{entityType}' because it is declared on the CLR type '{clrType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTypeCannotBePrincipal">
      <MemberSignature Language="C#" Value="public static string QueryTypeCannotBePrincipal (object queryType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryTypeCannotBePrincipal(object queryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.QueryTypeCannotBePrincipal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryTypeCannotBePrincipal (queryType As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryTypeCannotBePrincipal : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.QueryTypeCannotBePrincipal queryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ QueryTypeCannotBePrincipal(System::Object ^ queryType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ QueryTypeCannotBePrincipal(Platform::Object ^ queryType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring QueryTypeCannotBePrincipal(winrt::Windows::Foundation::IInspectable const &amp; queryType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queryType">To be added.</param>
        <summary>
                Unable to create a foreign key with the query type '{queryType}' as the principal type. Only entity types are allowed as foreign key principal types.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTypeNotValid">
      <MemberSignature Language="C#" Value="public static string QueryTypeNotValid (object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QueryTypeNotValid(object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.QueryTypeNotValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryTypeNotValid (type As Object) As String" />
      <MemberSignature Language="F#" Value="static member QueryTypeNotValid : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.QueryTypeNotValid type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ QueryTypeNotValid(System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ QueryTypeNotValid(Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring QueryTypeNotValid(winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
                Unable to track an instance of type '{type}' because it is a query type. Only entity types may be tracked.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadonlyField">
      <MemberSignature Language="C#" Value="public static string ReadonlyField (object field, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadonlyField(object field, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReadonlyField(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadonlyField (field As Object, entity As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReadonlyField : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReadonlyField (field, entity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadonlyField(System::Object ^ field, System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReadonlyField(Platform::Object ^ field, Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReadonlyField(winrt::Windows::Foundation::IInspectable const &amp; field, winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Object" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="field">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                Field '{field}' of entity type '{entity}' is readonly and so cannot be set.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursiveOnConfiguring">
      <MemberSignature Language="C#" Value="public static string RecursiveOnConfiguring { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RecursiveOnConfiguring" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnConfiguring" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RecursiveOnConfiguring As String" />
      <MemberSignature Language="F#" Value="member this.RecursiveOnConfiguring : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnConfiguring" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RecursiveOnConfiguring { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ RecursiveOnConfiguring { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An attempt was made to use the context while it is being configured. A DbContext instance cannot be used inside OnConfiguring since it is still being configured at this point. This can happen if a second operation is started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursiveOnModelCreating">
      <MemberSignature Language="C#" Value="public static string RecursiveOnModelCreating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RecursiveOnModelCreating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnModelCreating" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RecursiveOnModelCreating As String" />
      <MemberSignature Language="F#" Value="member this.RecursiveOnModelCreating : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnModelCreating" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RecursiveOnModelCreating { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ RecursiveOnModelCreating { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                An attempt was made to use the model while it was being created. A DbContext instance cannot be used inside OnModelCreating in any way that makes use of the model that is being created.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedShadowKey">
      <MemberSignature Language="C#" Value="public static string ReferencedShadowKey (object key, object referencingEntityTypeWithNavigation, object referencedEntityTypeWithNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferencedShadowKey(object key, object referencingEntityTypeWithNavigation, object referencedEntityTypeWithNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferencedShadowKey (key As Object, referencingEntityTypeWithNavigation As Object, referencedEntityTypeWithNavigation As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferencedShadowKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKey (key, referencingEntityTypeWithNavigation, referencedEntityTypeWithNavigation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReferencedShadowKey(System::Object ^ key, System::Object ^ referencingEntityTypeWithNavigation, System::Object ^ referencedEntityTypeWithNavigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReferencedShadowKey(Platform::Object ^ key, Platform::Object ^ referencingEntityTypeWithNavigation, Platform::Object ^ referencedEntityTypeWithNavigation);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReferencedShadowKey(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; referencingEntityTypeWithNavigation, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityTypeWithNavigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="referencingEntityTypeWithNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityTypeWithNavigation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="referencingEntityTypeWithNavigation">To be added.</param>
        <param name="referencedEntityTypeWithNavigation">To be added.</param>
        <summary>
            The key {key} contains properties in shadow state and is referenced by a relationship from '{referencingEntityTypeWithNavigation}' to '{referencedEntityTypeWithNavigation}'. Configure a non-shadow principal key for this relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedShadowKey">
      <MemberSignature Language="C#" Value="public static string ReferencedShadowKey (object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object foreignKeyPropertiesWithTypes, object primaryKeyPropertiesWithTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferencedShadowKey(object referencingEntityTypeOrNavigation, object referencedEntityTypeOrNavigation, object foreignKeyPropertiesWithTypes, object primaryKeyPropertiesWithTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKey(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferencedShadowKey (referencingEntityTypeOrNavigation As Object, referencedEntityTypeOrNavigation As Object, foreignKeyPropertiesWithTypes As Object, primaryKeyPropertiesWithTypes As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferencedShadowKey : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKey (referencingEntityTypeOrNavigation, referencedEntityTypeOrNavigation, foreignKeyPropertiesWithTypes, primaryKeyPropertiesWithTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReferencedShadowKey(System::Object ^ referencingEntityTypeOrNavigation, System::Object ^ referencedEntityTypeOrNavigation, System::Object ^ foreignKeyPropertiesWithTypes, System::Object ^ primaryKeyPropertiesWithTypes);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReferencedShadowKey(Platform::Object ^ referencingEntityTypeOrNavigation, Platform::Object ^ referencedEntityTypeOrNavigation, Platform::Object ^ foreignKeyPropertiesWithTypes, Platform::Object ^ primaryKeyPropertiesWithTypes);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReferencedShadowKey(winrt::Windows::Foundation::IInspectable const &amp; referencingEntityTypeOrNavigation, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityTypeOrNavigation, winrt::Windows::Foundation::IInspectable const &amp; foreignKeyPropertiesWithTypes, winrt::Windows::Foundation::IInspectable const &amp; primaryKeyPropertiesWithTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencingEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="referencedEntityTypeOrNavigation" Type="System.Object" />
        <Parameter Name="foreignKeyPropertiesWithTypes" Type="System.Object" />
        <Parameter Name="primaryKeyPropertiesWithTypes" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="referencingEntityTypeOrNavigation">To be added.</param>
        <param name="referencedEntityTypeOrNavigation">To be added.</param>
        <param name="foreignKeyPropertiesWithTypes">To be added.</param>
        <param name="primaryKeyPropertiesWithTypes">To be added.</param>
        <summary>
                The relationship from '{referencingEntityTypeOrNavigation}' to '{referencedEntityTypeOrNavigation}' with foreign key properties {foreignKeyPropertiesWithTypes} cannot target the primary key {primaryKeyPropertiesWithTypes} because it is not compatible. Configure a principal key or a set of compatible foreign key properties for this relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedShadowKeyWithoutNavigations">
      <MemberSignature Language="C#" Value="public static string ReferencedShadowKeyWithoutNavigations (object key, object entityType, object foreignKey, object referencingEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferencedShadowKeyWithoutNavigations(object key, object entityType, object foreignKey, object referencingEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKeyWithoutNavigations(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferencedShadowKeyWithoutNavigations (key As Object, entityType As Object, foreignKey As Object, referencingEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferencedShadowKeyWithoutNavigations : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKeyWithoutNavigations (key, entityType, foreignKey, referencingEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReferencedShadowKeyWithoutNavigations(System::Object ^ key, System::Object ^ entityType, System::Object ^ foreignKey, System::Object ^ referencingEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReferencedShadowKeyWithoutNavigations(Platform::Object ^ key, Platform::Object ^ entityType, Platform::Object ^ foreignKey, Platform::Object ^ referencingEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReferencedShadowKeyWithoutNavigations(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKey, winrt::Windows::Foundation::IInspectable const &amp; referencingEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="foreignKey" Type="System.Object" />
        <Parameter Name="referencingEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="referencingEntityType">To be added.</param>
        <summary>
            The key {key} on entity type '{entityType}' contains properties in shadow state and is referenced by the foreign key {foreignKey} from entity type '{referencingEntityType}'. Configure a non-shadow principal key for this relationship.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceIsCollection">
      <MemberSignature Language="C#" Value="public static string ReferenceIsCollection (object property, object entityType, object ReferenceMethod, object CollectionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferenceIsCollection(object property, object entityType, object ReferenceMethod, object CollectionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceIsCollection(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceIsCollection (property As Object, entityType As Object, ReferenceMethod As Object, CollectionMethod As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferenceIsCollection : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceIsCollection (property, entityType, ReferenceMethod, CollectionMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReferenceIsCollection(System::Object ^ property, System::Object ^ entityType, System::Object ^ ReferenceMethod, System::Object ^ CollectionMethod);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReferenceIsCollection(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ ReferenceMethod, Platform::Object ^ CollectionMethod);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReferenceIsCollection(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; ReferenceMethod, winrt::Windows::Foundation::IInspectable const &amp; CollectionMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="ReferenceMethod" Type="System.Object" />
        <Parameter Name="CollectionMethod" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="ReferenceMethod">To be added.</param>
        <param name="CollectionMethod">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' is being accessed using the '{ReferenceMethod}' method, but is defined in the model as a collection navigation property. Use the '{CollectionMethod}' method to access collection navigation properties.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceMustBeLoaded">
      <MemberSignature Language="C#" Value="public static string ReferenceMustBeLoaded (object navigation, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReferenceMustBeLoaded(object navigation, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceMustBeLoaded(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMustBeLoaded (navigation As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ReferenceMustBeLoaded : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceMustBeLoaded (navigation, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReferenceMustBeLoaded(System::Object ^ navigation, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReferenceMustBeLoaded(Platform::Object ^ navigation, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReferenceMustBeLoaded(winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                Navigation property '{navigation}' on entity type '{entityType}' cannot have 'IsLoaded' set to false because the referenced entity is non-null and therefore is loaded.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipCannotBeInverted">
      <MemberSignature Language="C#" Value="public static string RelationshipCannotBeInverted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string RelationshipCannotBeInverted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipCannotBeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RelationshipCannotBeInverted As String" />
      <MemberSignature Language="F#" Value="member this.RelationshipCannotBeInverted : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipCannotBeInverted" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ RelationshipCannotBeInverted { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ RelationshipCannotBeInverted { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The principal and dependent ends of the relationship cannot be flipped once foreign key or principal key properties have been specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipConceptualNull">
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNull (object firstType, object secondType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationshipConceptualNull(object firstType, object secondType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipConceptualNull(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationshipConceptualNull (firstType As Object, secondType As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationshipConceptualNull : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipConceptualNull (firstType, secondType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RelationshipConceptualNull(System::Object ^ firstType, System::Object ^ secondType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ RelationshipConceptualNull(Platform::Object ^ firstType, Platform::Object ^ secondType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring RelationshipConceptualNull(winrt::Windows::Foundation::IInspectable const &amp; firstType, winrt::Windows::Foundation::IInspectable const &amp; secondType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstType" Type="System.Object" />
        <Parameter Name="secondType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstType">To be added.</param>
        <param name="secondType">To be added.</param>
        <summary>
                The association between entity types '{firstType}' and '{secondType}' has been severed but the relationship is either marked as 'Required' or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, then setup the relationship to use cascade deletes.  Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipConceptualNullSensitive">
      <MemberSignature Language="C#" Value="public static string RelationshipConceptualNullSensitive (object firstType, object secondType, object secondKeyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RelationshipConceptualNullSensitive(object firstType, object secondType, object secondKeyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipConceptualNullSensitive(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RelationshipConceptualNullSensitive (firstType As Object, secondType As Object, secondKeyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member RelationshipConceptualNullSensitive : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipConceptualNullSensitive (firstType, secondType, secondKeyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RelationshipConceptualNullSensitive(System::Object ^ firstType, System::Object ^ secondType, System::Object ^ secondKeyValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ RelationshipConceptualNullSensitive(Platform::Object ^ firstType, Platform::Object ^ secondType, Platform::Object ^ secondKeyValue);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring RelationshipConceptualNullSensitive(winrt::Windows::Foundation::IInspectable const &amp; firstType, winrt::Windows::Foundation::IInspectable const &amp; secondType, winrt::Windows::Foundation::IInspectable const &amp; secondKeyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstType" Type="System.Object" />
        <Parameter Name="secondType" Type="System.Object" />
        <Parameter Name="secondKeyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="firstType">To be added.</param>
        <param name="secondType">To be added.</param>
        <param name="secondKeyValue">To be added.</param>
        <summary>
                The association between entities '{firstType}' and '{secondType}' with the key value '{secondKeyValue}' has been severed but the relationship is either marked as 'Required' or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, then setup the relationship to use cascade deletes.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetNotSupported">
      <MemberSignature Language="C#" Value="public static string ResetNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ResetNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ResetNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ResetNotSupported As String" />
      <MemberSignature Language="F#" Value="member this.ResetNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ResetNotSupported" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ResetNotSupported { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ ResetNotSupported { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                'ObservableCollection&lt;T&gt;.Clear()' is not supported because it uses the 'INotifyCollectionChanged' 'Reset' operation, which does not supply the items removed. Either use multiple calls to 'Remove' or use a notifying collection that supports 'Clear', such as 'Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet&lt;T&gt;'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryLimitExceeded">
      <MemberSignature Language="C#" Value="public static string RetryLimitExceeded (object retryLimit, object strategy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RetryLimitExceeded(object retryLimit, object strategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RetryLimitExceeded(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RetryLimitExceeded (retryLimit As Object, strategy As Object) As String" />
      <MemberSignature Language="F#" Value="static member RetryLimitExceeded : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.RetryLimitExceeded (retryLimit, strategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RetryLimitExceeded(System::Object ^ retryLimit, System::Object ^ strategy);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ RetryLimitExceeded(Platform::Object ^ retryLimit, Platform::Object ^ strategy);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring RetryLimitExceeded(winrt::Windows::Foundation::IInspectable const &amp; retryLimit, winrt::Windows::Foundation::IInspectable const &amp; strategy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="retryLimit" Type="System.Object" />
        <Parameter Name="strategy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="retryLimit">To be added.</param>
        <param name="strategy">To be added.</param>
        <summary>
                Maximum number of retries ({retryLimit}) exceeded while executing database operations with '{strategy}'. See inner exception for the most recent failure.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDerivedType">
      <MemberSignature Language="C#" Value="public static string SeedDatumDerivedType (object entityType, object derivedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDerivedType(object entityType, object derivedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDerivedType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDerivedType (entityType As Object, derivedType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDerivedType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDerivedType (entityType, derivedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumDerivedType(System::Object ^ entityType, System::Object ^ derivedType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumDerivedType(Platform::Object ^ entityType, Platform::Object ^ derivedType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumDerivedType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; derivedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="derivedType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="derivedType">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value provided is of a derived type '{derivedType}'. Add the derived seed entities to the corresponding entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDuplicate">
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicate (object entityType, object keyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDuplicate(object entityType, object keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDuplicate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDuplicate (entityType As Object, keyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDuplicate : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDuplicate (entityType, keyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumDuplicate(System::Object ^ entityType, System::Object ^ keyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumDuplicate(Platform::Object ^ entityType, Platform::Object ^ keyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumDuplicate(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because another seed entity with the same key value for {keyProperties} has already been added. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumDuplicateSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumDuplicateSensitive (object entityType, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumDuplicateSensitive(object entityType, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDuplicateSensitive(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumDuplicateSensitive (entityType As Object, keyValue As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumDuplicateSensitive : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumDuplicateSensitive (entityType, keyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumDuplicateSensitive(System::Object ^ entityType, System::Object ^ keyValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumDuplicateSensitive(Platform::Object ^ entityType, Platform::Object ^ keyValue);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumDuplicateSensitive(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because another seed entity with the key value '{keyValue}' has already been added.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumIncompatibleValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValue (object entityType, object property, object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumIncompatibleValue(object entityType, object property, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumIncompatibleValue(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumIncompatibleValue (entityType As Object, property As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumIncompatibleValue : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumIncompatibleValue (entityType, property, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumIncompatibleValue(System::Object ^ entityType, System::Object ^ property, System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumIncompatibleValue(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumIncompatibleValue(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value provided for the property '{property}' is not of the type '{type}'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the involved property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumIncompatibleValueSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumIncompatibleValueSensitive (object entityType, object value, object property, object type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumIncompatibleValueSensitive(object entityType, object value, object property, object type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumIncompatibleValueSensitive(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumIncompatibleValueSensitive (entityType As Object, value As Object, property As Object, type As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumIncompatibleValueSensitive : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumIncompatibleValueSensitive (entityType, value, property, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumIncompatibleValueSensitive(System::Object ^ entityType, System::Object ^ value, System::Object ^ property, System::Object ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumIncompatibleValueSensitive(Platform::Object ^ entityType, Platform::Object ^ value, Platform::Object ^ property, Platform::Object ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumIncompatibleValueSensitive(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; value, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="property">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because the value '{value}' provided for the property '{property}' is not of the type '{type}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumMissingValue">
      <MemberSignature Language="C#" Value="public static string SeedDatumMissingValue (object entityType, object property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumMissingValue(object entityType, object property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumMissingValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumMissingValue (entityType As Object, property As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumMissingValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumMissingValue (entityType, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumMissingValue(System::Object ^ entityType, System::Object ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumMissingValue(Platform::Object ^ entityType, Platform::Object ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumMissingValue(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because there was no value provided for the required property '{property}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumNavigation">
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigation (object entityType, object navigation, object relatedEntityType, object foreignKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumNavigation(object entityType, object navigation, object relatedEntityType, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumNavigation(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumNavigation (entityType As Object, navigation As Object, relatedEntityType As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumNavigation : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumNavigation (entityType, navigation, relatedEntityType, foreignKeyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumNavigation(System::Object ^ entityType, System::Object ^ navigation, System::Object ^ relatedEntityType, System::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumNavigation(Platform::Object ^ entityType, Platform::Object ^ navigation, Platform::Object ^ relatedEntityType, Platform::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumNavigation(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; relatedEntityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKeyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="relatedEntityType" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' cannot be added because it has the navigation '{navigation}' set. To seed relationships you need to add the related entity seed to '{relatedEntityType}' and specify the foreign key values {foreignKeyProperties}. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the involved property values.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeedDatumNavigationSensitive">
      <MemberSignature Language="C#" Value="public static string SeedDatumNavigationSensitive (object entityType, object keyValue, object navigation, object relatedEntityType, object foreignKeyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SeedDatumNavigationSensitive(object entityType, object keyValue, object navigation, object relatedEntityType, object foreignKeyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumNavigationSensitive(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SeedDatumNavigationSensitive (entityType As Object, keyValue As Object, navigation As Object, relatedEntityType As Object, foreignKeyProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member SeedDatumNavigationSensitive : obj * obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SeedDatumNavigationSensitive (entityType, keyValue, navigation, relatedEntityType, foreignKeyProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SeedDatumNavigationSensitive(System::Object ^ entityType, System::Object ^ keyValue, System::Object ^ navigation, System::Object ^ relatedEntityType, System::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SeedDatumNavigationSensitive(Platform::Object ^ entityType, Platform::Object ^ keyValue, Platform::Object ^ navigation, Platform::Object ^ relatedEntityType, Platform::Object ^ foreignKeyProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SeedDatumNavigationSensitive(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; keyValue, winrt::Windows::Foundation::IInspectable const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; relatedEntityType, winrt::Windows::Foundation::IInspectable const &amp; foreignKeyProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="keyValue" Type="System.Object" />
        <Parameter Name="navigation" Type="System.Object" />
        <Parameter Name="relatedEntityType" Type="System.Object" />
        <Parameter Name="foreignKeyProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="keyValue">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="foreignKeyProperties">To be added.</param>
        <summary>
                The seed entity for entity type '{entityType}' with the key value '{keyValue}' cannot be added because it has the navigation '{navigation}' set. To seed relationships you need to add the related entity seed to '{relatedEntityType}' and specify the foreign key values {foreignKeyProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelfReferencingNavigationWithInverseProperty">
      <MemberSignature Language="C#" Value="public static string SelfReferencingNavigationWithInverseProperty (object property, object entityType, object referencedProperty, object referencedEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SelfReferencingNavigationWithInverseProperty(object property, object entityType, object referencedProperty, object referencedEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SelfReferencingNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SelfReferencingNavigationWithInverseProperty (property As Object, entityType As Object, referencedProperty As Object, referencedEntityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member SelfReferencingNavigationWithInverseProperty : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SelfReferencingNavigationWithInverseProperty (property, entityType, referencedProperty, referencedEntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SelfReferencingNavigationWithInverseProperty(System::Object ^ property, System::Object ^ entityType, System::Object ^ referencedProperty, System::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SelfReferencingNavigationWithInverseProperty(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ referencedProperty, Platform::Object ^ referencedEntityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SelfReferencingNavigationWithInverseProperty(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; referencedProperty, winrt::Windows::Foundation::IInspectable const &amp; referencedEntityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="referencedProperty" Type="System.Object" />
        <Parameter Name="referencedEntityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="referencedProperty">To be added.</param>
        <param name="referencedEntityType">To be added.</param>
        <summary>
                A relationship cannot be established from property '{property}' on type '{entityType}' to property '{referencedProperty}' on type '{referencedEntityType}'. Check the values in the InversePropertyAttribute to ensure relationship definitions are unique and reference from one navigation property to its corresponding inverse navigation property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitiveDataLoggingEnabled">
      <MemberSignature Language="C#" Value="public static string SensitiveDataLoggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SensitiveDataLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SensitiveDataLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SensitiveDataLoggingEnabled As String" />
      <MemberSignature Language="F#" Value="member this.SensitiveDataLoggingEnabled : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SensitiveDataLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SensitiveDataLoggingEnabled { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ SensitiveDataLoggingEnabled { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data, this mode should only be enabled during development.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowEntity">
      <MemberSignature Language="C#" Value="public static string ShadowEntity (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShadowEntity(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowEntity(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShadowEntity (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ShadowEntity : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowEntity entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ShadowEntity(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ShadowEntity(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ShadowEntity(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Entity type '{entityType}' is in shadow-state. A valid model requires all entity types to have corresponding CLR type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowKey">
      <MemberSignature Language="C#" Value="public static string ShadowKey (object key, object entityType, object shadowProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ShadowKey(object key, object entityType, object shadowProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowKey(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShadowKey (key As Object, entityType As Object, shadowProperties As Object) As String" />
      <MemberSignature Language="F#" Value="static member ShadowKey : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowKey (key, entityType, shadowProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ShadowKey(System::Object ^ key, System::Object ^ entityType, System::Object ^ shadowProperties);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ShadowKey(Platform::Object ^ key, Platform::Object ^ entityType, Platform::Object ^ shadowProperties);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ShadowKey(winrt::Windows::Foundation::IInspectable const &amp; key, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; shadowProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="shadowProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="shadowProperties">To be added.</param>
        <summary>
            The key {key} on entity type '{entityType}' contains properties in shadow state - {shadowProperties}.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonOptionChanged">
      <MemberSignature Language="C#" Value="public static string SingletonOptionChanged (object optionCall, object useInternalServiceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SingletonOptionChanged(object optionCall, object useInternalServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SingletonOptionChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingletonOptionChanged (optionCall As Object, useInternalServiceProvider As Object) As String" />
      <MemberSignature Language="F#" Value="static member SingletonOptionChanged : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SingletonOptionChanged (optionCall, useInternalServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SingletonOptionChanged(System::Object ^ optionCall, System::Object ^ useInternalServiceProvider);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SingletonOptionChanged(Platform::Object ^ optionCall, Platform::Object ^ useInternalServiceProvider);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SingletonOptionChanged(winrt::Windows::Foundation::IInspectable const &amp; optionCall, winrt::Windows::Foundation::IInspectable const &amp; useInternalServiceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionCall" Type="System.Object" />
        <Parameter Name="useInternalServiceProvider" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="optionCall">To be added.</param>
        <param name="useInternalServiceProvider">To be added.</param>
        <summary>
                A call was made to '{optionCall}' that changed an option that must be constant within a service provider, but Entity Framework is not building its own internal service provider. Either allow EF to build the service provider by removing the call to '{useInternalServiceProvider}', or ensure that the configuration for '{optionCall}' does not change for all uses of a given service provider passed to '{useInternalServiceProvider}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonRequired">
      <MemberSignature Language="C#" Value="public static string SingletonRequired (object scope, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SingletonRequired(object scope, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SingletonRequired(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingletonRequired (scope As Object, service As Object) As String" />
      <MemberSignature Language="F#" Value="static member SingletonRequired : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.SingletonRequired (scope, service)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SingletonRequired(System::Object ^ scope, System::Object ^ service);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ SingletonRequired(Platform::Object ^ scope, Platform::Object ^ service);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring SingletonRequired(winrt::Windows::Foundation::IInspectable const &amp; scope, winrt::Windows::Foundation::IInspectable const &amp; service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Object" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="service">To be added.</param>
        <summary>
                An attempt was made to register an instance for the '{scope}' service '{service}'. Instances can only be registered for 'Singleton' services.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StillUsingTypeMapper">
      <MemberSignature Language="C#" Value="public static string StillUsingTypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StillUsingTypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.StillUsingTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StillUsingTypeMapper As String" />
      <MemberSignature Language="F#" Value="member this.StillUsingTypeMapper : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.StillUsingTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ StillUsingTypeMapper { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ StillUsingTypeMapper { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The application or database provider is using an Obsolete TypeMapper API even after the provider has implemented a TypeMappingSource. The code must be updated to use the non-obsolete replacement APIs, as indicated by the Obsolete compiler warnings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempValue">
      <MemberSignature Language="C#" Value="public static string TempValue (object property, object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TempValue(object property, object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TempValue (property As Object, entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member TempValue : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValue (property, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TempValue(System::Object ^ property, System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ TempValue(Platform::Object ^ property, Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring TempValue(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' has a temporary value. Either set a permanent value explicitly or ensure that the database is configured to generate values for this property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TempValuePersists">
      <MemberSignature Language="C#" Value="public static string TempValuePersists (object property, object entityType, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TempValuePersists(object property, object entityType, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValuePersists(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TempValuePersists (property As Object, entityType As Object, state As Object) As String" />
      <MemberSignature Language="F#" Value="static member TempValuePersists : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValuePersists (property, entityType, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TempValuePersists(System::Object ^ property, System::Object ^ entityType, System::Object ^ state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ TempValuePersists(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ state);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring TempValuePersists(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
                The property '{property}' on entity type '{entityType}' has a temporary value while attempting to change the entity's state to '{state}'. Either set a permanent value explicitly or ensure that the database is configured to generate values for this property.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionsNotSupported">
      <MemberSignature Language="C#" Value="public static string TransactionsNotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TransactionsNotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.TransactionsNotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionsNotSupported As String" />
      <MemberSignature Language="F#" Value="member this.TransactionsNotSupported : string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.TransactionsNotSupported" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TransactionsNotSupported { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property Platform::String ^ TransactionsNotSupported { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Current provider doesn't support System.Transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledExpressionType">
      <MemberSignature Language="C#" Value="public static string UnhandledExpressionType (object expressionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnhandledExpressionType(object expressionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.UnhandledExpressionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnhandledExpressionType (expressionType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnhandledExpressionType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.UnhandledExpressionType expressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UnhandledExpressionType(System::Object ^ expressionType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ UnhandledExpressionType(Platform::Object ^ expressionType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring UnhandledExpressionType(winrt::Windows::Foundation::IInspectable const &amp; expressionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expressionType">To be added.</param>
        <summary>
            Unhandled expression type: {expressionType}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledNodeType">
      <MemberSignature Language="C#" Value="public static string UnhandledNodeType (object nodeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UnhandledNodeType(object nodeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.UnhandledNodeType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnhandledNodeType (nodeType As Object) As String" />
      <MemberSignature Language="F#" Value="static member UnhandledNodeType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.UnhandledNodeType nodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UnhandledNodeType(System::Object ^ nodeType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ UnhandledNodeType(Platform::Object ^ nodeType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring UnhandledNodeType(winrt::Windows::Foundation::IInspectable const &amp; nodeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nodeType">To be added.</param>
        <summary>
            Unhandled node type: {nodeType}
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntrackedDependentEntity">
      <MemberSignature Language="C#" Value="public static string UntrackedDependentEntity (object entityType, object targetEntryCall);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UntrackedDependentEntity(object entityType, object targetEntryCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.UntrackedDependentEntity(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UntrackedDependentEntity (entityType As Object, targetEntryCall As Object) As String" />
      <MemberSignature Language="F#" Value="static member UntrackedDependentEntity : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.UntrackedDependentEntity (entityType, targetEntryCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UntrackedDependentEntity(System::Object ^ entityType, System::Object ^ targetEntryCall);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ UntrackedDependentEntity(Platform::Object ^ entityType, Platform::Object ^ targetEntryCall);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring UntrackedDependentEntity(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; targetEntryCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="targetEntryCall" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="targetEntryCall">To be added.</param>
        <summary>
                The entity type '{entityType}' has a defining navigation and the supplied entity is currently not being tracked. To start tracking this entity call '{targetEntryCall}' on the owner entry.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueCannotBeNull">
      <MemberSignature Language="C#" Value="public static string ValueCannotBeNull (object property, object entityType, object propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ValueCannotBeNull(object property, object entityType, object propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ValueCannotBeNull(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueCannotBeNull (property As Object, entityType As Object, propertyType As Object) As String" />
      <MemberSignature Language="F#" Value="static member ValueCannotBeNull : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ValueCannotBeNull (property, entityType, propertyType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ValueCannotBeNull(System::Object ^ property, System::Object ^ entityType, System::Object ^ propertyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ValueCannotBeNull(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ propertyType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ValueCannotBeNull(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; propertyType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="propertyType">To be added.</param>
        <summary>
                The value for property '{property}' of entity type '{entityType}' cannot be set to null because its type is '{propertyType}' which is not a nullable type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenWithConversion">
      <MemberSignature Language="C#" Value="public static string ValueGenWithConversion (object entityType, object property, object converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ValueGenWithConversion(object entityType, object property, object converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ValueGenWithConversion(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValueGenWithConversion (entityType As Object, property As Object, converter As Object) As String" />
      <MemberSignature Language="F#" Value="static member ValueGenWithConversion : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.ValueGenWithConversion (entityType, property, converter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ValueGenWithConversion(System::Object ^ entityType, System::Object ^ property, System::Object ^ converter);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ValueGenWithConversion(Platform::Object ^ entityType, Platform::Object ^ property, Platform::Object ^ converter);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ValueGenWithConversion(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="converter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="property">To be added.</param>
        <param name="converter">To be added.</param>
        <summary>
                Value generation is not supported for property '{entityType}.{property}' because it has a '{converter}' converter configured. Configure the property to not use value generation using 'ValueGenerated.Never' or 'DatabaseGeneratedOption.None' and specify explict values instead.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningAsErrorTemplate">
      <MemberSignature Language="C#" Value="public static string WarningAsErrorTemplate (object eventId, object message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WarningAsErrorTemplate(object eventId, object message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningAsErrorTemplate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WarningAsErrorTemplate (eventId As Object, message As Object) As String" />
      <MemberSignature Language="F#" Value="static member WarningAsErrorTemplate : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningAsErrorTemplate (eventId, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WarningAsErrorTemplate(System::Object ^ eventId, System::Object ^ message);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WarningAsErrorTemplate(Platform::Object ^ eventId, Platform::Object ^ message);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WarningAsErrorTemplate(winrt::Windows::Foundation::IInspectable const &amp; eventId, winrt::Windows::Foundation::IInspectable const &amp; message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Object" />
        <Parameter Name="message" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventId">To be added.</param>
        <param name="message">To be added.</param>
        <summary>
                Warning as error exception for warning '{eventId}': {message} To suppress this Exception use the DbContextOptionsBuilder.ConfigureWarnings API. ConfigureWarnings can be used when overriding the DbContext.OnConfiguring method or using AddDbContext on the application service provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningAsErrorTemplate">
      <MemberSignature Language="C#" Value="public static string WarningAsErrorTemplate (object eventName, object message, object eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WarningAsErrorTemplate(object eventName, object message, object eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningAsErrorTemplate(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WarningAsErrorTemplate (eventName As Object, message As Object, eventId As Object) As String" />
      <MemberSignature Language="F#" Value="static member WarningAsErrorTemplate : obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningAsErrorTemplate (eventName, message, eventId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WarningAsErrorTemplate(System::Object ^ eventName, System::Object ^ message, System::Object ^ eventId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WarningAsErrorTemplate(Platform::Object ^ eventName, Platform::Object ^ message, Platform::Object ^ eventId);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WarningAsErrorTemplate(winrt::Windows::Foundation::IInspectable const &amp; eventName, winrt::Windows::Foundation::IInspectable const &amp; message, winrt::Windows::Foundation::IInspectable const &amp; eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.Object" />
        <Parameter Name="message" Type="System.Object" />
        <Parameter Name="eventId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventName">To be added.</param>
        <param name="message">To be added.</param>
        <param name="eventId">To be added.</param>
        <summary>
                Error generated for warning '{eventName}: {message}'. This exception can be suppressed or logged by passing event ID '{eventId}' to the 'ConfigureWarnings' method in 'DbContext.OnConfiguring' or 'AddDbContext'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningLogTemplate">
      <MemberSignature Language="C#" Value="public static string WarningLogTemplate (object message, object eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WarningLogTemplate(object message, object eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningLogTemplate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WarningLogTemplate (message As Object, eventId As Object) As String" />
      <MemberSignature Language="F#" Value="static member WarningLogTemplate : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningLogTemplate (message, eventId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WarningLogTemplate(System::Object ^ message, System::Object ^ eventId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WarningLogTemplate(Platform::Object ^ message, Platform::Object ^ eventId);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WarningLogTemplate(winrt::Windows::Foundation::IInspectable const &amp; message, winrt::Windows::Foundation::IInspectable const &amp; eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Object" />
        <Parameter Name="eventId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="eventId">To be added.</param>
        <summary>
            {message} To configure this warning use the DbContextOptionsBuilder.ConfigureWarnings API (event id '{eventId}'). ConfigureWarnings can be used when overriding the DbContext.OnConfiguring method or using AddDbContext on the application service provider.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakBaseType">
      <MemberSignature Language="C#" Value="public static string WeakBaseType (object entityType, object baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeakBaseType(object entityType, object baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WeakBaseType(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeakBaseType (entityType As Object, baseType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WeakBaseType : obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WeakBaseType (entityType, baseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WeakBaseType(System::Object ^ entityType, System::Object ^ baseType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WeakBaseType(Platform::Object ^ entityType, Platform::Object ^ baseType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WeakBaseType(winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; baseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="baseType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>
                The type '{entityType}' cannot have weak entity type '{baseType}' as the base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDerivedType">
      <MemberSignature Language="C#" Value="public static string WeakDerivedType (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WeakDerivedType(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WeakDerivedType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WeakDerivedType (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WeakDerivedType : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WeakDerivedType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WeakDerivedType(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WeakDerivedType(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WeakDerivedType(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                The weak entity type '{entityType}' cannot have a base type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrongGenericPropertyType">
      <MemberSignature Language="C#" Value="public static string WrongGenericPropertyType (object property, object entityType, object actualType, object genericType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WrongGenericPropertyType(object property, object entityType, object actualType, object genericType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongGenericPropertyType(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WrongGenericPropertyType (property As Object, entityType As Object, actualType As Object, genericType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WrongGenericPropertyType : obj * obj * obj * obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongGenericPropertyType (property, entityType, actualType, genericType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WrongGenericPropertyType(System::Object ^ property, System::Object ^ entityType, System::Object ^ actualType, System::Object ^ genericType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WrongGenericPropertyType(Platform::Object ^ property, Platform::Object ^ entityType, Platform::Object ^ actualType, Platform::Object ^ genericType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WrongGenericPropertyType(winrt::Windows::Foundation::IInspectable const &amp; property, winrt::Windows::Foundation::IInspectable const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; actualType, winrt::Windows::Foundation::IInspectable const &amp; genericType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Object" />
        <Parameter Name="entityType" Type="System.Object" />
        <Parameter Name="actualType" Type="System.Object" />
        <Parameter Name="genericType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="actualType">To be added.</param>
        <param name="genericType">To be added.</param>
        <summary>
                Property '{property}' on entity type '{entityType}' is of type '{actualType}' but the generic type provided is of type '{genericType}'.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrongStateManager">
      <MemberSignature Language="C#" Value="public static string WrongStateManager (object entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string WrongStateManager(object entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongStateManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function WrongStateManager (entityType As Object) As String" />
      <MemberSignature Language="F#" Value="static member WrongStateManager : obj -&gt; string" Usage="Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongStateManager entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ WrongStateManager(System::Object ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ WrongStateManager(Platform::Object ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring WrongStateManager(winrt::Windows::Foundation::IInspectable const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                Cannot start tracking InternalEntityEntry for entity type '{entityType}' because it was created by a different StateManager instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>