<Type Name="DiagnosticsLogger&lt;TLoggerCategory&gt;" FullName="Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;TLoggerCategory&gt;">
  <TypeSignature Language="C#" Value="public class DiagnosticsLogger&lt;TLoggerCategory&gt; : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt; where TLoggerCategory : LoggerCategory&lt;TLoggerCategory&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiagnosticsLogger`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory`1&lt;!TLoggerCategory&gt;) TLoggerCategory&gt; extends System.Object implements class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;!TLoggerCategory&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DiagnosticsLogger(Of TLoggerCategory)&#xA;Implements IDiagnosticsLogger(Of TLoggerCategory)" />
  <TypeSignature Language="F#" Value="type DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; = class&#xA;    interface IDiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TLoggerCategory&gt;&#xA; where TLoggerCategory : LoggerCategory&lt;TLoggerCategory&gt;gcnew()public ref class DiagnosticsLogger : Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;TLoggerCategory&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TLoggerCategory">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;TLoggerCategory&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;TLoggerCategory&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TLoggerCategory">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiagnosticsLogger (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, System.Diagnostics.DiagnosticSource diagnosticSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class System.Diagnostics.DiagnosticSource diagnosticSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,System.Diagnostics.DiagnosticSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; : Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * System.Diagnostics.DiagnosticSource -&gt; Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt;" Usage="new Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt; (loggerFactory, loggingOptions, diagnosticSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiagnosticsLogger(Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory, Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions, System::Diagnostics::DiagnosticSource ^ diagnosticSource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="diagnosticSource" Type="System.Diagnostics.DiagnosticSource" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="diagnosticSource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagnosticSource">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.DiagnosticSource DiagnosticSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.DiagnosticSource DiagnosticSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.DiagnosticSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DiagnosticSource As DiagnosticSource" />
      <MemberSignature Language="F#" Value="member this.DiagnosticSource : System.Diagnostics.DiagnosticSource" Usage="Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt;.DiagnosticSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::DiagnosticSource ^ DiagnosticSource { System::Diagnostics::DiagnosticSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1.DiagnosticSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.DiagnosticSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.WarningBehavior GetLogBehavior (Microsoft.Extensions.Logging.EventId eventId, Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.WarningBehavior GetLogBehavior(valuetype Microsoft.Extensions.Logging.EventId eventId, valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.GetLogBehavior(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="F#" Value="abstract member GetLogBehavior : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.EntityFrameworkCore.WarningBehavior&#xA;override this.GetLogBehavior : Microsoft.Extensions.Logging.EventId * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.EntityFrameworkCore.WarningBehavior" Usage="diagnosticsLogger.GetLogBehavior (eventId, logLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::WarningBehavior GetLogBehavior(Microsoft::Extensions::Logging::EventId eventId, Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::WarningBehavior GetLogBehavior(Microsoft::Extensions::Logging::EventId eventId, Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::WarningBehavior GetLogBehavior(Microsoft::Extensions::Logging::EventId eventId, Microsoft::Extensions::Logging::LogLevel logLevel);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1.GetLogBehavior(Microsoft.Extensions.Logging.EventId,Microsoft.Extensions.Logging.LogLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.WarningBehavior</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="eventId">To be added.</param>
        <param name="logLevel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.Logger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As ILogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt;.Logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1.Logger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.Options" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Options As ILoggingOptions" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Usage="Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger&lt;'LoggerCategory (requires 'LoggerCategory :&gt; Microsoft.EntityFrameworkCore.Diagnostics.LoggerCategory&lt;'LoggerCategory&gt; and 'LoggerCategory : (new : unit -&gt; 'LoggerCategory))&gt;.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ Options { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ Options { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1.Options</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldLogSensitiveData">
      <MemberSignature Language="C#" Value="public virtual bool ShouldLogSensitiveData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldLogSensitiveData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.DiagnosticsLogger`1.ShouldLogSensitiveData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldLogSensitiveData () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldLogSensitiveData : unit -&gt; bool&#xA;override this.ShouldLogSensitiveData : unit -&gt; bool" Usage="diagnosticsLogger.ShouldLogSensitiveData " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldLogSensitiveData();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool ShouldLogSensitiveData();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool ShouldLogSensitiveData();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1.ShouldLogSensitiveData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>