<Type Name="IEntityFinder" FullName="Microsoft.EntityFrameworkCore.Internal.IEntityFinder">
  <TypeSignature Language="C#" Value="public interface IEntityFinder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityFinder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityFinder" />
  <TypeSignature Language="F#" Value="type IEntityFinder = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEntityFinder" />
  <TypeSignature Language="C++ CX" Value="public interface class IEntityFinder" />
  <TypeSignature Language="C++ WINRT" Value="__interface IEntityFinder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public object Find (object[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Find(object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (keyValues As Object()) As Object" />
      <MemberSignature Language="F#" Value="abstract member Find : obj[] -&gt; obj" Usage="iEntityFinder.Find keyValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Find(cli::array &lt;System::Object ^&gt; ^ keyValues);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Object ^ Find(Platform::Array &lt;Platform::Object ^&gt; ^ keyValues);" />
      <MemberSignature Language="C++ WINRT" Value="winrt::Windows::Foundation::IInspectable Find(std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object&gt; FindAsync (object[] keyValues, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; FindAsync(object[] keyValues, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FindAsync : obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="iEntityFinder.FindAsync (keyValues, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValues" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keyValues">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseValues">
      <MemberSignature Language="C#" Value="public object[] GetDatabaseValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetDatabaseValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseValues (entry As InternalEntityEntry) As Object()" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; obj[]" Usage="iEntityFinder.GetDatabaseValues entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetDatabaseValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;Platform::Object ^&gt; ^ GetDatabaseValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; GetDatabaseValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseValuesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object[]&gt; GetDatabaseValuesAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object[]&gt; GetDatabaseValuesAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseValuesAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj[]&gt;" Usage="iEntityFinder.GetDatabaseValuesAsync (entry, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (navigation As INavigation, entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member Load : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iEntityFinder.Load (navigation, entry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Load(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value="void Load(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iEntityFinder.LoadAsync (navigation, entry, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entry">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable Query (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable Query(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Query (navigation As INavigation, entry As InternalEntityEntry) As IQueryable" />
      <MemberSignature Language="F#" Value="abstract member Query : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; System.Linq.IQueryable" Usage="iEntityFinder.Query (navigation, entry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::IQueryable ^ Query(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>