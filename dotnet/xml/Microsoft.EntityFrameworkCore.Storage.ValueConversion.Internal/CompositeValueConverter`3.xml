<Type Name="CompositeValueConverter&lt;TModel,TMiddle,TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter&lt;TModel,TMiddle,TProvider&gt;">
  <TypeSignature Language="C#" Value="public class CompositeValueConverter&lt;TModel,TMiddle,TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TModel,TProvider&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeValueConverter`3&lt;TModel, TMiddle, TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TModel, !TProvider&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter`3" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeValueConverter(Of TModel, TMiddle, TProvider)&#xA;Inherits ValueConverter(Of TModel, TProvider)" />
  <TypeSignature Language="F#" Value="type CompositeValueConverter&lt;'Model, 'Middle, 'Provider&gt; = class&#xA;    inherit ValueConverter&lt;'Model, 'Provider&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TModel, typename TMiddle, typename TProvider&gt;&#xA;public ref class CompositeValueConverter : Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter&lt;TModel, TProvider&gt;" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TModel, typename TMiddle, typename TProvider&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CompositeValueConverter : Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter&lt;TModel, TProvider&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel" />
    <TypeParameter Name="TMiddle" />
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TModel,TProvider&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">TModel</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">TProvider</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TModel">To be added.</typeparam>
    <typeparam name="TMiddle">To be added.</typeparam>
    <typeparam name="TProvider">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeValueConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter1, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter2, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter1, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter2, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter`3.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converter1 As ValueConverter, converter2 As ValueConverter, Optional mappingHints As ConverterMappingHints = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter&lt;'Model, 'Middle, 'Provider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter&lt;'Model, 'Middle, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal.CompositeValueConverter&lt;'Model, 'Middle, 'Provider&gt; (converter1, converter2, mappingHints)" />
      <MemberSignature Language="C++ WINRT" Value=" CompositeValueConverter(Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter const &amp; converter1, Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter const &amp; converter2, Microsoft::EntityFrameworkCore::Storage::ValueConversion::ConverterMappingHints const &amp; mappingHints = null);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converter1" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
        <Parameter Name="converter2" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="converter1">To be added.</param>
        <param name="converter2">To be added.</param>
        <param name="mappingHints">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>