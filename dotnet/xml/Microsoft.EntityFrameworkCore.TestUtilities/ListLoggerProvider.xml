<Type Name="ListLoggerProvider" FullName="Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider">
  <TypeSignature Language="C#" Value="public class ListLoggerProvider : IDisposable, Microsoft.Extensions.Logging.ILoggerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListLoggerProvider extends System.Object implements class Microsoft.Extensions.Logging.ILoggerProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ListLoggerProvider&#xA;Implements IDisposable, ILoggerProvider" />
  <TypeSignature Language="F#" Value="type ListLoggerProvider = class&#xA;    interface ILoggerProvider&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListLoggerProvider : IDisposable, Microsoft::Extensions::Logging::ILoggerProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListLoggerProvider (System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,string&gt;&gt; log);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;valuetype System.ValueTuple`3&lt;valuetype Microsoft.Extensions.Logging.LogLevel, valuetype Microsoft.Extensions.Logging.EventId, string&gt;&gt; log) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider.#ctor(System.Collections.Generic.List{System.ValueTuple{Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (log As List(Of ValueTuple(Of LogLevel, EventId, String)))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider : System.Collections.Generic.List&lt;ValueTuple&lt;Microsoft.Extensions.Logging.LogLevel, Microsoft.Extensions.Logging.EventId, string&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider" Usage="new Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListLoggerProvider(System::Collections::Generic::List&lt;ValueTuple&lt;Microsoft::Extensions::Logging::LogLevel, Microsoft::Extensions::Logging::EventId, System::String ^&gt;&gt; ^ log);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="log" Type="System.Collections.Generic.List&lt;System.ValueTuple&lt;Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="log">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.ILogger CreateLogger (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.ILogger CreateLogger(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider.CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogger (categoryName As String) As ILogger" />
      <MemberSignature Language="F#" Value="abstract member CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger&#xA;override this.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger" Usage="listLoggerProvider.CreateLogger categoryName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::ILogger ^ CreateLogger(System::String ^ categoryName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Extensions::Logging::ILogger ^ CreateLogger(Platform::String ^ categoryName);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Extensions::Logging::ILogger CreateLogger(std::wstring const &amp; categoryName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ListLoggerProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="listLoggerProvider.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>