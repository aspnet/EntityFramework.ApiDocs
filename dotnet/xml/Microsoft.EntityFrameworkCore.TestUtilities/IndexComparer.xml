<Type Name="IndexComparer" FullName="Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer">
  <TypeSignature Language="C#" Value="public class IndexComparer : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;, System.Collections.Generic.IEqualityComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;, class System.Collections.Generic.IEqualityComparer`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexComparer&#xA;Implements IComparer(Of IIndex), IEqualityComparer(Of IIndex)" />
  <TypeSignature Language="F#" Value="type IndexComparer = class&#xA;    interface IEqualityComparer&lt;IIndex&gt;&#xA;    interface IComparer&lt;IIndex&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class IndexComparer : System::Collections::Generic::IComparer&lt;Microsoft::EntityFrameworkCore::Metadata::IIndex ^&gt;, System::Collections::Generic::IEqualityComparer&lt;Microsoft::EntityFrameworkCore::Metadata::IIndex ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexComparer (bool compareAnnotations = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool compareAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional compareAnnotations As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer : bool -&gt; Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer" Usage="new Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer compareAnnotations" />
      <MemberSignature Language="C++ WINRT" Value=" IndexComparer(bool compareAnnotations = true);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="compareAnnotations" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="compareAnnotations">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (Microsoft.EntityFrameworkCore.Metadata.IIndex x, Microsoft.EntityFrameworkCore.Metadata.IIndex y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class Microsoft.EntityFrameworkCore.Metadata.IIndex x, class Microsoft.EntityFrameworkCore.Metadata.IIndex y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As IIndex, y As IIndex) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; int&#xA;override this.Compare : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; int" Usage="indexComparer.Compare (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ x, Microsoft::EntityFrameworkCore::Metadata::IIndex ^ y);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int Compare(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ x, Microsoft::EntityFrameworkCore::Metadata::IIndex ^ y);" />
      <MemberSignature Language="C++ WINRT" Value="int Compare(Microsoft::EntityFrameworkCore::Metadata::IIndex const &amp; x, Microsoft::EntityFrameworkCore::Metadata::IIndex const &amp; y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Metadata.IIndex x, Microsoft.EntityFrameworkCore.Metadata.IIndex y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Metadata.IIndex x, class Microsoft.EntityFrameworkCore.Metadata.IIndex y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As IIndex, y As IIndex) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; bool" Usage="indexComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ x, Microsoft::EntityFrameworkCore::Metadata::IIndex ^ y);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Equals(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ x, Microsoft::EntityFrameworkCore::Metadata::IIndex ^ y);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(Microsoft::EntityFrameworkCore::Metadata::IIndex const &amp; x, Microsoft::EntityFrameworkCore::Metadata::IIndex const &amp; y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
        <Parameter Name="y" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (Microsoft.EntityFrameworkCore.Metadata.IIndex obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class Microsoft.EntityFrameworkCore.Metadata.IIndex obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IndexComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As IIndex) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; int" Usage="indexComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int GetHashCode(Microsoft::EntityFrameworkCore::Metadata::IIndex ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value="int GetHashCode(Microsoft::EntityFrameworkCore::Metadata::IIndex const &amp; obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>