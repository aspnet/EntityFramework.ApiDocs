<Type Name="TestHelpers" FullName="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers">
  <TypeSignature Language="C#" Value="public abstract class TestHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TestHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TestHelpers" />
  <TypeSignature Language="F#" Value="type TestHelpers = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class TestHelpers abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class TestHelpers abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class TestHelpers abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TestHelpers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TestHelpers();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; TestHelpers();" />
      <MemberSignature Language="C++ WINRT" Value=" TestHelpers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProviderOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContextOptionsBuilder AddProviderOptions (Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder AddProviderOptions(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AddProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProviderOptions (optionsBuilder As DbContextOptionsBuilder) As DbContextOptionsBuilder" />
      <MemberSignature Language="F#" Value="member this.AddProviderOptions : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" Usage="testHelpers.AddProviderOptions optionsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContextOptionsBuilder ^ AddProviderOptions(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder ^ optionsBuilder);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::DbContextOptionsBuilder AddProviderOptions(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder const &amp; optionsBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptionsBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProviderServices">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Extensions.DependencyInjection.IServiceCollection AddProviderServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection AddProviderServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddProviderServices (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member AddProviderServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="testHelpers.AddProviderServices services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddProviderServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertResults&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int AssertResults&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; expected, System.Collections.Generic.IList&lt;T&gt; actual, bool assertOrder, Action&lt;System.Collections.Generic.IList&lt;T&gt;,System.Collections.Generic.IList&lt;T&gt;&gt; asserter = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AssertResults&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; expected, class System.Collections.Generic.IList`1&lt;!!T&gt; actual, bool assertOrder, class System.Action`2&lt;class System.Collections.Generic.IList`1&lt;!!T&gt;, class System.Collections.Generic.IList`1&lt;!!T&gt;&gt; asserter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Boolean,System.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssertResults(Of T) (expected As IList(Of T), actual As IList(Of T), assertOrder As Boolean, Optional asserter As Action(Of IList(Of T), IList(Of T)) = null) As Integer" />
      <MemberSignature Language="F#" Value="static member AssertResults : System.Collections.Generic.IList&lt;'T&gt; * System.Collections.Generic.IList&lt;'T&gt; * bool * Action&lt;System.Collections.Generic.IList&lt;'T&gt;, System.Collections.Generic.IList&lt;'T&gt;&gt; -&gt; int" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults (expected, actual, assertOrder, asserter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="actual" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="assertOrder" Type="System.Boolean" />
        <Parameter Name="asserter" Type="System.Action&lt;System.Collections.Generic.IList&lt;T&gt;,System.Collections.Generic.IList&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="assertOrder">To be added.</param>
        <param name="asserter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertResults&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int AssertResults&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; expected, System.Collections.Generic.IList&lt;T&gt; actual, Func&lt;T,object&gt; elementSorter, Action&lt;T,T&gt; elementAsserter, bool verifyOrdered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AssertResults&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; expected, class System.Collections.Generic.IList`1&lt;!!T&gt; actual, class System.Func`2&lt;!!T, object&gt; elementSorter, class System.Action`2&lt;!!T, !!T&gt; elementAsserter, bool verifyOrdered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Func{``0,System.Object},System.Action{``0,``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssertResults(Of T) (expected As IList(Of T), actual As IList(Of T), elementSorter As Func(Of T, Object), elementAsserter As Action(Of T, T), verifyOrdered As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="static member AssertResults : System.Collections.Generic.IList&lt;'T&gt; * System.Collections.Generic.IList&lt;'T&gt; * Func&lt;'T, obj&gt; * Action&lt;'T, 'T&gt; * bool -&gt; int" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults (expected, actual, elementSorter, elementAsserter, verifyOrdered)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int AssertResults(System::Collections::Generic::IList&lt;T&gt; ^ expected, System::Collections::Generic::IList&lt;T&gt; ^ actual, Func&lt;T, System::Object ^&gt; ^ elementSorter, Action&lt;T, T&gt; ^ elementAsserter, bool verifyOrdered);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="actual" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="elementSorter" Type="System.Func&lt;T,System.Object&gt;" />
        <Parameter Name="elementAsserter" Type="System.Action&lt;T,T&gt;" />
        <Parameter Name="verifyOrdered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="elementSorter">To be added.</param>
        <param name="elementAsserter">To be added.</param>
        <param name="verifyOrdered">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertResults&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int AssertResults&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; expected, System.Collections.Generic.IList&lt;T&gt; actual, Func&lt;T,T&gt; elementSorter, Action&lt;T,T&gt; elementAsserter, bool verifyOrdered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AssertResults&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; expected, class System.Collections.Generic.IList`1&lt;!!T&gt; actual, class System.Func`2&lt;!!T, !!T&gt; elementSorter, class System.Action`2&lt;!!T, !!T&gt; elementAsserter, bool verifyOrdered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0},System.Func{``0,``0},System.Action{``0,``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssertResults(Of T) (expected As IList(Of T), actual As IList(Of T), elementSorter As Func(Of T, T), elementAsserter As Action(Of T, T), verifyOrdered As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="static member AssertResults : System.Collections.Generic.IList&lt;'T&gt; * System.Collections.Generic.IList&lt;'T&gt; * Func&lt;'T, 'T&gt; * Action&lt;'T, 'T&gt; * bool -&gt; int" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResults (expected, actual, elementSorter, elementAsserter, verifyOrdered)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int AssertResults(System::Collections::Generic::IList&lt;T&gt; ^ expected, System::Collections::Generic::IList&lt;T&gt; ^ actual, Func&lt;T, T&gt; ^ elementSorter, Action&lt;T, T&gt; ^ elementAsserter, bool verifyOrdered);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="actual" Type="System.Collections.Generic.IList&lt;T&gt;" />
        <Parameter Name="elementSorter" Type="System.Func&lt;T,T&gt;" />
        <Parameter Name="elementAsserter" Type="System.Action&lt;T,T&gt;" />
        <Parameter Name="verifyOrdered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="elementSorter">To be added.</param>
        <param name="elementAsserter">To be added.</param>
        <param name="verifyOrdered">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertResultsNullable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int AssertResultsNullable&lt;T&gt; (System.Collections.Generic.IList&lt;Nullable&lt;T&gt;&gt; expected, System.Collections.Generic.IList&lt;Nullable&lt;T&gt;&gt; actual, Func&lt;Nullable&lt;T&gt;,Nullable&lt;T&gt;&gt; elementSorter, Action&lt;Nullable&lt;T&gt;,Nullable&lt;T&gt;&gt; elementAsserter, bool verifyOrdered) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AssertResultsNullable&lt;struct .ctor (class System.ValueType) T&gt;(class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;!!T&gt;&gt; expected, class System.Collections.Generic.IList`1&lt;valuetype System.Nullable`1&lt;!!T&gt;&gt; actual, class System.Func`2&lt;valuetype System.Nullable`1&lt;!!T&gt;, valuetype System.Nullable`1&lt;!!T&gt;&gt; elementSorter, class System.Action`2&lt;valuetype System.Nullable`1&lt;!!T&gt;, valuetype System.Nullable`1&lt;!!T&gt;&gt; elementAsserter, bool verifyOrdered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResultsNullable``1(System.Collections.Generic.IList{System.Nullable{``0}},System.Collections.Generic.IList{System.Nullable{``0}},System.Func{System.Nullable{``0},System.Nullable{``0}},System.Action{System.Nullable{``0},System.Nullable{``0}},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AssertResultsNullable(Of T As Structure) (expected As IList(Of Nullable(Of T)), actual As IList(Of Nullable(Of T)), elementSorter As Func(Of Nullable(Of T), Nullable(Of T)), elementAsserter As Action(Of Nullable(Of T), Nullable(Of T)), verifyOrdered As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="static member AssertResultsNullable : System.Collections.Generic.IList&lt;Nullable&lt;'T&gt;&gt; * System.Collections.Generic.IList&lt;Nullable&lt;'T&gt;&gt; * Func&lt;Nullable&lt;'T&gt;, Nullable&lt;'T&gt;&gt; * Action&lt;Nullable&lt;'T&gt;, Nullable&lt;'T&gt;&gt; * bool -&gt; int (requires 'T : struct)" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.AssertResultsNullable (expected, actual, elementSorter, elementAsserter, verifyOrdered)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static int AssertResultsNullable(System::Collections::Generic::IList&lt;Nullable&lt;T&gt;&gt; ^ expected, System::Collections::Generic::IList&lt;Nullable&lt;T&gt;&gt; ^ actual, Func&lt;Nullable&lt;T&gt;, Nullable&lt;T&gt;&gt; ^ elementSorter, Action&lt;Nullable&lt;T&gt;, Nullable&lt;T&gt;&gt; ^ elementAsserter, bool verifyOrdered);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;T&gt;&gt;" />
        <Parameter Name="actual" Type="System.Collections.Generic.IList&lt;System.Nullable&lt;T&gt;&gt;" />
        <Parameter Name="elementSorter" Type="System.Func&lt;System.Nullable&lt;T&gt;,System.Nullable&lt;T&gt;&gt;" />
        <Parameter Name="elementAsserter" Type="System.Action&lt;System.Nullable&lt;T&gt;,System.Nullable&lt;T&gt;&gt;" />
        <Parameter Name="verifyOrdered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="elementSorter">To be added.</param>
        <param name="elementAsserter">To be added.</param>
        <param name="verifyOrdered">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildModelFor&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IMutableModel BuildModelFor&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Metadata.IMutableModel BuildModelFor&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.BuildModelFor``1" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildModelFor(Of TEntity As Class) () As IMutableModel" />
      <MemberSignature Language="F#" Value="member this.BuildModelFor : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableModel (requires 'Entity : null)" Usage="testHelpers.BuildModelFor " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class Microsoft::EntityFrameworkCore::Metadata::IMutableModel ^ BuildModelFor();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class Microsoft::EntityFrameworkCore::Metadata::IMutableModel ^ BuildModelFor();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TEntity&gt;&#xA; where TEntity : class Microsoft::EntityFrameworkCore::Metadata::IMutableModel BuildModelFor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableModel</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext () As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (options As DbContextOptions) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : Microsoft.EntityFrameworkCore.DbContextOptions -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (model As IModel) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (customServices As IServiceCollection) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext customServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (serviceProvider As IServiceProvider) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext serviceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (customServices As IServiceCollection, options As DbContextOptions) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext (customServices, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices, Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (customServices As IServiceCollection, model As IModel) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext (customServices, model)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices, Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (serviceProvider As IServiceProvider, options As DbContextOptions) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext (serviceProvider, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(IServiceProvider ^ serviceProvider, Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext CreateContext (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContext(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContext (serviceProvider As IServiceProvider, model As IModel) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : IServiceProvider * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="testHelpers.CreateContext (serviceProvider, model)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext(IServiceProvider ^ serviceProvider, Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices () As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : unit -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (options As DbContextOptions) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : Microsoft.EntityFrameworkCore.DbContextOptions -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (model As IModel) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (customServices As IServiceCollection) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices customServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (serviceProvider As IServiceProvider) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : IServiceProvider -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices serviceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (customServices As IServiceCollection, options As DbContextOptions) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices (customServices, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices, Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (customServices As IServiceCollection, model As IModel) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices (customServices, model)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ customServices, Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.DbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.DbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (serviceProvider As IServiceProvider, options As DbContextOptions) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : IServiceProvider * Microsoft.EntityFrameworkCore.DbContextOptions -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices (serviceProvider, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(IServiceProvider ^ serviceProvider, Microsoft::EntityFrameworkCore::DbContextOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.DbContextOptions" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextServices">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateContextServices (IServiceProvider serviceProvider, Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateContextServices(class System.IServiceProvider serviceProvider, class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateContextServices(System.IServiceProvider,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateContextServices (serviceProvider As IServiceProvider, model As IModel) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateContextServices : IServiceProvider * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; IServiceProvider" Usage="testHelpers.CreateContextServices (serviceProvider, model)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IServiceProvider ^ CreateContextServices(IServiceProvider ^ serviceProvider, Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConventionBuilder">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ModelBuilder CreateConventionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ModelBuilder CreateConventionBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateConventionBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConventionBuilder () As ModelBuilder" />
      <MemberSignature Language="F#" Value="member this.CreateConventionBuilder : unit -&gt; Microsoft.EntityFrameworkCore.ModelBuilder" Usage="testHelpers.CreateConventionBuilder " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ModelBuilder ^ CreateConventionBuilder();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ModelBuilder CreateConventionBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInternalEntry&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry CreateInternalEntry&lt;TEntity&gt; (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.EntityState entityState = Microsoft.EntityFrameworkCore.EntityState.Detached, TEntity entity = null) where TEntity : class, new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry CreateInternalEntry&lt;class .ctor TEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.IModel model, valuetype Microsoft.EntityFrameworkCore.EntityState entityState, !!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateInternalEntry``1(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.EntityState,``0)" />
      <MemberSignature Language="F#" Value="member this.CreateInternalEntry : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.EntityState * 'Entity -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry (requires 'Entity : null and 'Entity : (new : unit -&gt; 'Entity))" Usage="testHelpers.CreateInternalEntry (model, entityState, entity)" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TEntity&gt;&#xA; where TEntity : class, gcnew() Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry CreateInternalEntry(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; model, Microsoft::EntityFrameworkCore::EntityState entityState = Microsoft.EntityFrameworkCore.EntityState.Detached, TEntity entity = null);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="model">To be added.</param>
        <param name="entityState">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContextOptions CreateOptions (IServiceProvider serviceProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContextOptions CreateOptions(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateOptions(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOptions (Optional serviceProvider As IServiceProvider = null) As DbContextOptions" />
      <MemberSignature Language="F#" Value="member this.CreateOptions : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.DbContextOptions" Usage="testHelpers.CreateOptions serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContextOptions CreateOptions (Microsoft.EntityFrameworkCore.Metadata.IModel model, IServiceProvider serviceProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.DbContextOptions CreateOptions(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateOptions(Microsoft.EntityFrameworkCore.Metadata.IModel,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOptions (model As IModel, Optional serviceProvider As IServiceProvider = null) As DbContextOptions" />
      <MemberSignature Language="F#" Value="member this.CreateOptions : Microsoft.EntityFrameworkCore.Metadata.IModel * IServiceProvider -&gt; Microsoft.EntityFrameworkCore.DbContextOptions" Usage="testHelpers.CreateOptions (model, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="serviceProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider CreateServiceProvider (Microsoft.Extensions.DependencyInjection.IServiceCollection customServices = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IServiceProvider CreateServiceProvider(class Microsoft.Extensions.DependencyInjection.IServiceCollection customServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.CreateServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateServiceProvider (Optional customServices As IServiceCollection = null) As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.CreateServiceProvider : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; IServiceProvider" Usage="testHelpers.CreateServiceProvider customServices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customServices" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="customServices">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWithStrategyInTransaction&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static void ExecuteWithStrategyInTransaction&lt;TContext&gt; (Func&lt;TContext&gt; createContext, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; useTransaction, Action&lt;TContext&gt; testOperation, Action&lt;TContext&gt; nestedTestOperation1 = null, Action&lt;TContext&gt; nestedTestOperation2 = null, Action&lt;TContext&gt; nestedTestOperation3 = null) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExecuteWithStrategyInTransaction&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class System.Func`1&lt;!!TContext&gt; createContext, class System.Action`2&lt;class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; useTransaction, class System.Action`1&lt;!!TContext&gt; testOperation, class System.Action`1&lt;!!TContext&gt; nestedTestOperation1, class System.Action`1&lt;!!TContext&gt; nestedTestOperation2, class System.Action`1&lt;!!TContext&gt; nestedTestOperation3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.ExecuteWithStrategyInTransaction``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Action{``0},System.Action{``0},System.Action{``0},System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExecuteWithStrategyInTransaction(Of TContext As DbContext) (createContext As Func(Of TContext), useTransaction As Action(Of DatabaseFacade, IDbContextTransaction), testOperation As Action(Of TContext), Optional nestedTestOperation1 As Action(Of TContext) = null, Optional nestedTestOperation2 As Action(Of TContext) = null, Optional nestedTestOperation3 As Action(Of TContext) = null)" />
      <MemberSignature Language="F#" Value="static member ExecuteWithStrategyInTransaction : Func&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; * Action&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; -&gt; unit (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.ExecuteWithStrategyInTransaction (createContext, useTransaction, testOperation, nestedTestOperation1, nestedTestOperation2, nestedTestOperation3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="createContext" Type="System.Func&lt;TContext&gt;" />
        <Parameter Name="useTransaction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt;" />
        <Parameter Name="testOperation" Type="System.Action&lt;TContext&gt;" />
        <Parameter Name="nestedTestOperation1" Type="System.Action&lt;TContext&gt;" />
        <Parameter Name="nestedTestOperation2" Type="System.Action&lt;TContext&gt;" />
        <Parameter Name="nestedTestOperation3" Type="System.Action&lt;TContext&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">To be added.</typeparam>
        <param name="createContext">To be added.</param>
        <param name="useTransaction">To be added.</param>
        <param name="testOperation">To be added.</param>
        <param name="nestedTestOperation1">To be added.</param>
        <param name="nestedTestOperation2">To be added.</param>
        <param name="nestedTestOperation3">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWithStrategyInTransactionAsync&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ExecuteWithStrategyInTransactionAsync&lt;TContext&gt; (Func&lt;TContext&gt; createContext, Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; useTransaction, Func&lt;TContext,System.Threading.Tasks.Task&gt; testOperation, Func&lt;TContext,System.Threading.Tasks.Task&gt; nestedTestOperation1 = null, Func&lt;TContext,System.Threading.Tasks.Task&gt; nestedTestOperation2 = null, Func&lt;TContext,System.Threading.Tasks.Task&gt; nestedTestOperation3 = null) where TContext : Microsoft.EntityFrameworkCore.DbContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ExecuteWithStrategyInTransactionAsync&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt;(class System.Func`1&lt;!!TContext&gt; createContext, class System.Action`2&lt;class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; useTransaction, class System.Func`2&lt;!!TContext, class System.Threading.Tasks.Task&gt; testOperation, class System.Func`2&lt;!!TContext, class System.Threading.Tasks.Task&gt; nestedTestOperation1, class System.Func`2&lt;!!TContext, class System.Threading.Tasks.Task&gt; nestedTestOperation2, class System.Func`2&lt;!!TContext, class System.Threading.Tasks.Task&gt; nestedTestOperation3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.ExecuteWithStrategyInTransactionAsync``1(System.Func{``0},System.Action{Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExecuteWithStrategyInTransactionAsync(Of TContext As DbContext) (createContext As Func(Of TContext), useTransaction As Action(Of DatabaseFacade, IDbContextTransaction), testOperation As Func(Of TContext, Task), Optional nestedTestOperation1 As Func(Of TContext, Task) = null, Optional nestedTestOperation2 As Func(Of TContext, Task) = null, Optional nestedTestOperation3 As Func(Of TContext, Task) = null) As Task" />
      <MemberSignature Language="F#" Value="static member ExecuteWithStrategyInTransactionAsync : Func&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; * Func&lt;'Context, System.Threading.Tasks.Task (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Func&lt;'Context, System.Threading.Tasks.Task (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Func&lt;'Context, System.Threading.Tasks.Task (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; * Func&lt;'Context, System.Threading.Tasks.Task (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; -&gt; System.Threading.Tasks.Task (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)" Usage="Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.ExecuteWithStrategyInTransactionAsync (createContext, useTransaction, testOperation, nestedTestOperation1, nestedTestOperation2, nestedTestOperation3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers/&lt;ExecuteWithStrategyInTransactionAsync&gt;d__36`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext">
          <Constraints>
            <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="createContext" Type="System.Func&lt;TContext&gt;" />
        <Parameter Name="useTransaction" Type="System.Action&lt;Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt;" />
        <Parameter Name="testOperation" Type="System.Func&lt;TContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="nestedTestOperation1" Type="System.Func&lt;TContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="nestedTestOperation2" Type="System.Func&lt;TContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="nestedTestOperation3" Type="System.Func&lt;TContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">To be added.</typeparam>
        <param name="createContext">To be added.</param>
        <param name="useTransaction">To be added.</param>
        <param name="testOperation">To be added.</param>
        <param name="nestedTestOperation1">To be added.</param>
        <param name="nestedTestOperation2">To be added.</param>
        <param name="nestedTestOperation3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestDependenciesClone&lt;TDependencies&gt;">
      <MemberSignature Language="C#" Value="public void TestDependenciesClone&lt;TDependencies&gt; (params string[] ignoreProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TestDependenciesClone&lt;TDependencies&gt;(string[] ignoreProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.TestDependenciesClone``1(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TestDependenciesClone(Of TDependencies) (ParamArray ignoreProperties As String())" />
      <MemberSignature Language="F#" Value="member this.TestDependenciesClone : string[] -&gt; unit" Usage="testHelpers.TestDependenciesClone ignoreProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDependencies&gt;&#xA; void TestDependenciesClone(... cli::array &lt;System::String ^&gt; ^ ignoreProperties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDependencies" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ignoreProperties" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDependencies">To be added.</typeparam>
        <param name="ignoreProperties">To be added.</param>
        <summary>
                Tests that calling the 'With' method for each constructor-injected service creates a clone
                of TDependencies with only that service replaced.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProviderOptions">
      <MemberSignature Language="C#" Value="protected abstract void UseProviderOptions (Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UseProviderOptions(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.TestHelpers.UseProviderOptions(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UseProviderOptions (optionsBuilder As DbContextOptionsBuilder)" />
      <MemberSignature Language="F#" Value="abstract member UseProviderOptions : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; unit" Usage="testHelpers.UseProviderOptions optionsBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UseProviderOptions(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder ^ optionsBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract void UseProviderOptions(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder const &amp; optionsBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>