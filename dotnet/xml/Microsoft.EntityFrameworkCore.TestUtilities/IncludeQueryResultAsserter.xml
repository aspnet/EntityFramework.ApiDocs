<Type Name="IncludeQueryResultAsserter" FullName="Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter">
  <TypeSignature Language="C#" Value="public class IncludeQueryResultAsserter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IncludeQueryResultAsserter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter" />
  <TypeSignature Language="VB.NET" Value="Public Class IncludeQueryResultAsserter" />
  <TypeSignature Language="F#" Value="type IncludeQueryResultAsserter = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncludeQueryResultAsserter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class IncludeQueryResultAsserter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeQueryResultAsserter (System.Collections.Generic.Dictionary&lt;Type,Func&lt;dynamic,object&gt;&gt; entitySorters, System.Collections.Generic.Dictionary&lt;Type,Action&lt;dynamic,dynamic&gt;&gt; entityAsserters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.Dictionary`2&lt;class System.Type, class System.Func`2&lt;object, object&gt;&gt; entitySorters, class System.Collections.Generic.Dictionary`2&lt;class System.Type, class System.Action`2&lt;object, object&gt;&gt; entityAsserters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.#ctor(System.Collections.Generic.Dictionary{System.Type,System.Func{System.Object,System.Object}},System.Collections.Generic.Dictionary{System.Type,System.Action{System.Object,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entitySorters As Dictionary(Of Type, Func(Of Object, Object)), entityAsserters As Dictionary(Of Type, Action(Of Object, Object)))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter : System.Collections.Generic.Dictionary&lt;Type, Func&lt;obj, obj&gt;&gt; * System.Collections.Generic.Dictionary&lt;Type, Action&lt;obj, obj&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter" Usage="new Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter (entitySorters, entityAsserters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IncludeQueryResultAsserter(System::Collections::Generic::Dictionary&lt;Type ^, Func&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ entitySorters, System::Collections::Generic::Dictionary&lt;Type ^, Action&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ entityAsserters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySorters" Type="System.Collections.Generic.Dictionary&lt;System.Type,System.Func&lt;System.Object,System.Object&gt;&gt;" />
        <Parameter Name="entityAsserters" Type="System.Collections.Generic.Dictionary&lt;System.Type,System.Action&lt;System.Object,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySorters">To be added.</param>
        <param name="entityAsserters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertCollection&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="protected virtual void AssertCollection&lt;TElement&gt; (System.Collections.Generic.IEnumerable&lt;TElement&gt; expected, System.Collections.Generic.IEnumerable&lt;TElement&gt; actual, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AssertCollection&lt;TElement&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; expected, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; actual, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.AssertCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AssertCollection(Of TElement) (expected As IEnumerable(Of TElement), actual As IEnumerable(Of TElement), expectedIncludes As IEnumerable(Of IExpectedInclude))" />
      <MemberSignature Language="F#" Value="abstract member AssertCollection : seq&lt;'Element&gt; * seq&lt;'Element&gt; * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit&#xA;override this.AssertCollection : seq&lt;'Element&gt; * seq&lt;'Element&gt; * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit" Usage="includeQueryResultAsserter.AssertCollection (expected, actual, expectedIncludes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TElement&gt;&#xA; virtual void AssertCollection(System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ expected, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ actual, System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::TestUtilities::IExpectedInclude ^&gt; ^ expectedIncludes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
        <Parameter Name="actual" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
        <Parameter Name="expectedIncludes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="expectedIncludes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertElement&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="protected virtual void AssertElement&lt;TElement&gt; (TElement expected, TElement actual, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AssertElement&lt;TElement&gt;(!!TElement expected, !!TElement actual, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.AssertElement``1(``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AssertElement(Of TElement) (expected As TElement, actual As TElement, expectedIncludes As IEnumerable(Of IExpectedInclude))" />
      <MemberSignature Language="F#" Value="abstract member AssertElement : 'Element * 'Element * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit&#xA;override this.AssertElement : 'Element * 'Element * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit" Usage="includeQueryResultAsserter.AssertElement (expected, actual, expectedIncludes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TElement&gt;&#xA; virtual void AssertElement(TElement expected, TElement actual, System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::TestUtilities::IExpectedInclude ^&gt; ^ expectedIncludes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="TElement" />
        <Parameter Name="actual" Type="TElement" />
        <Parameter Name="expectedIncludes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="expectedIncludes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertObject">
      <MemberSignature Language="C#" Value="protected virtual void AssertObject (object expected, object actual, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AssertObject(object expected, object actual, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.AssertObject(System.Object,System.Object,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AssertObject (expected As Object, actual As Object, expectedIncludes As IEnumerable(Of IExpectedInclude))" />
      <MemberSignature Language="F#" Value="abstract member AssertObject : obj * obj * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit&#xA;override this.AssertObject : obj * obj * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit" Usage="includeQueryResultAsserter.AssertObject (expected, actual, expectedIncludes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AssertObject(System::Object ^ expected, System::Object ^ actual, System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::TestUtilities::IExpectedInclude ^&gt; ^ expectedIncludes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
        <Parameter Name="actual" Type="System.Object" />
        <Parameter Name="expectedIncludes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt;" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="expectedIncludes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertResult">
      <MemberSignature Language="C#" Value="public virtual void AssertResult (object expected, object actual, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssertResult(object expected, object actual, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.AssertResult(System.Object,System.Object,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AssertResult (expected As Object, actual As Object, expectedIncludes As IEnumerable(Of IExpectedInclude))" />
      <MemberSignature Language="F#" Value="abstract member AssertResult : obj * obj * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit&#xA;override this.AssertResult : obj * obj * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit" Usage="includeQueryResultAsserter.AssertResult (expected, actual, expectedIncludes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AssertResult(System::Object ^ expected, System::Object ^ actual, System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::TestUtilities::IExpectedInclude ^&gt; ^ expectedIncludes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
        <Parameter Name="actual" Type="System.Object" />
        <Parameter Name="expectedIncludes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt;" />
      </Parameters>
      <Docs>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="expectedIncludes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="protected string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.FullPath" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FullPath As String" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.FullPath" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property Platform::String ^ FullPath { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIncludes&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="protected void ProcessIncludes&lt;TEntity&gt; (TEntity expected, TEntity actual, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ProcessIncludes&lt;TEntity&gt;(!!TEntity expected, !!TEntity actual, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; expectedIncludes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.IncludeQueryResultAsserter.ProcessIncludes``1(``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ProcessIncludes(Of TEntity) (expected As TEntity, actual As TEntity, expectedIncludes As IEnumerable(Of IExpectedInclude))" />
      <MemberSignature Language="F#" Value="member this.ProcessIncludes : 'Entity * 'Entity * seq&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt; -&gt; unit" Usage="includeQueryResultAsserter.ProcessIncludes (expected, actual, expectedIncludes)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TEntity&gt;&#xA; void ProcessIncludes(TEntity expected, TEntity actual, System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::TestUtilities::IExpectedInclude ^&gt; ^ expectedIncludes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expected" Type="TEntity" />
        <Parameter Name="actual" Type="TEntity" />
        <Parameter Name="expectedIncludes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.TestUtilities.IExpectedInclude&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <param name="expected">To be added.</param>
        <param name="actual">To be added.</param>
        <param name="expectedIncludes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>