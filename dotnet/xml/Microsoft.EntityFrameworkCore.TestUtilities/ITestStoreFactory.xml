<Type Name="ITestStoreFactory" FullName="Microsoft.EntityFrameworkCore.TestUtilities.ITestStoreFactory">
  <TypeSignature Language="C#" Value="public interface ITestStoreFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITestStoreFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.ITestStoreFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITestStoreFactory" />
  <TypeSignature Language="F#" Value="type ITestStoreFactory = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITestStoreFactory" />
  <TypeSignature Language="C++ CX" Value="public interface class ITestStoreFactory" />
  <TypeSignature Language="C++ WINRT" Value="__interface ITestStoreFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddProviderServices">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection AddProviderServices (Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.DependencyInjection.IServiceCollection AddProviderServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ITestStoreFactory.AddProviderServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProviderServices (serviceCollection As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member AddProviderServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="iTestStoreFactory.AddProviderServices serviceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddProviderServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ serviceCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCollection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="serviceCollection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestUtilities.TestStore Create (string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.TestUtilities.TestStore Create(string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ITestStoreFactory.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (storeName As String) As TestStore" />
      <MemberSignature Language="F#" Value="abstract member Create : string -&gt; Microsoft.EntityFrameworkCore.TestUtilities.TestStore" Usage="iTestStoreFactory.Create storeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::TestUtilities::TestStore ^ Create(System::String ^ storeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestUtilities.TestStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreate">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestUtilities.TestStore GetOrCreate (string storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.TestUtilities.TestStore GetOrCreate(string storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.ITestStoreFactory.GetOrCreate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreate (storeName As String) As TestStore" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreate : string -&gt; Microsoft.EntityFrameworkCore.TestUtilities.TestStore" Usage="iTestStoreFactory.GetOrCreate storeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::TestUtilities::TestStore ^ GetOrCreate(System::String ^ storeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestUtilities.TestStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>