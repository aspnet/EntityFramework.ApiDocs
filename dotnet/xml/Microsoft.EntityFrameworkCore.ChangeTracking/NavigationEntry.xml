<Type Name="NavigationEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry">
  <TypeSignature Language="C#" Value="public abstract class NavigationEntry : Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationEntry extends Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationEntry&#xA;Inherits MemberEntry" />
  <TypeSignature Language="F#" Value="type NavigationEntry = class&#xA;    inherit MemberEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationEntry abstract : Microsoft::EntityFrameworkCore::ChangeTracking::MemberEntry" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class NavigationEntry abstract : Microsoft::EntityFrameworkCore::ChangeTracking::MemberEntry" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class NavigationEntry abstract : Microsoft::EntityFrameworkCore::ChangeTracking::MemberEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Provides access to change tracking and loading information for a navigation property
                    that associates this entity to one or more other entities.
                </para>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (internalEntry As InternalEntityEntry, navigation As INavigation)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry (internalEntry, navigation)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntry, Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, string name, bool collection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, string name, bool collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (internalEntry As InternalEntityEntry, name As String, collection As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * string * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry (internalEntry, name, collection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry, System::String ^ name, bool collection);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry, Platform::String ^ name, bool collection);" />
      <MemberSignature Language="C++ WINRT" Value=" NavigationEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntry, std::wstring const &amp; name, bool collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="collection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="name">To be added.</param>
        <param name="collection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Internal.IEntityFinder Finder (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder Finder(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Finder (entityType As Type) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member Finder : Type -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder&#xA;override this.Finder : Type -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="navigationEntry.Finder entityType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Internal::IEntityFinder ^ Finder(Type ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Internal::IEntityFinder ^ Finder(Platform::Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public virtual bool IsLoaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsLoaded As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLoaded { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsLoaded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                    Gets or sets a value indicating whether the entity or entities referenced by this navigation property
                    are known to be loaded.
                </para>
          <para>
                    Loading entities from the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> or
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                    , <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" />, or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will set this flag. Subsequent calls to <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" />
                    or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will then be a no-op.
                </para>
          <para>
                    It is possible for IsLoaded to be false even if all related entities are loaded. This is because, depending on
                    how entities are loaded, it is not always possible to know for sure that all entities in a related collection
                    have been loaded. In such cases, calling <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" /> or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will ensure all
                    related entities are loaded and will set this flag to true.
                </para>
        </summary>
        <value>
                True if all the related entities are loaded or the IsLoaded has been explicitly set to true.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public override bool IsModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsModified As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsModified { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsModified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets a value indicating whether any of foreign key property values associated
                with this navigation property have been modified and should be updated in the database
                when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Load ()" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit&#xA;override this.Load : unit -&gt; unit" Usage="navigationEntry.Load " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Load();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Loads the entity or entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
          <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LoadAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.LoadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="navigationEntry.LoadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
          <para>
                    Loads the entity or entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
          <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
          <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.INavigation Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.INavigation Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metadata As INavigation" />
      <MemberSignature Language="F#" Value="member this.Metadata : Microsoft.EntityFrameworkCore.Metadata.INavigation" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::INavigation ^ Metadata { Microsoft::EntityFrameworkCore::Metadata::INavigation ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::INavigation ^ Metadata { Microsoft::EntityFrameworkCore::Metadata::INavigation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.INavigation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the metadata that describes the facets of this property and how it maps to the database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable Query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable Query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Query () As IQueryable" />
      <MemberSignature Language="F#" Value="abstract member Query : unit -&gt; System.Linq.IQueryable&#xA;override this.Query : unit -&gt; System.Linq.IQueryable" Usage="navigationEntry.Query " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ Query();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" /> to load entities referenced by
                    this navigation property.
                </para>
          <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading all entities from the database.
                </para>
        </summary>
        <returns> The query to load related entities. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>