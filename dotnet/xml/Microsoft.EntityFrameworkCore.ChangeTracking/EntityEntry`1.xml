<Type Name="EntityEntry&lt;TEntity&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;TEntity&gt;">
  <TypeSignature Language="C#" Value="public class EntityEntry&lt;TEntity&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityEntry`1&lt;class TEntity&gt; extends Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityEntry(Of TEntity)&#xA;Inherits EntityEntry" />
  <TypeSignature Language="F#" Value="type EntityEntry&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityEntry" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityEntry : Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity"> The type of entity being tracked by this entry. </typeparam>
    <summary>
      <para>
                    Provides access to change tracking information and operations for a given entity.
                </para>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt; internalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; EntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntry);" />
      <MemberSignature Language="C++ WINRT" Value=" EntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntry);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt; Collection&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,System.Collections.Generic.IEnumerable&lt;TProperty&gt;&gt;&gt; propertyExpression) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2&lt;!TEntity, !!TProperty&gt; Collection&lt;class TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, class System.Collections.Generic.IEnumerable`1&lt;!!TProperty&gt;&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Collection(Of TProperty As Class) (propertyExpression As Expression(Of Func(Of TEntity, IEnumerable(Of TProperty)))) As CollectionEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Collection : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, seq&lt;'Property&gt;&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Collection propertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; where TProperty : class virtual Microsoft::EntityFrameworkCore::ChangeTracking::CollectionEntry&lt;TEntity, TProperty&gt; ^ Collection(System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Collections::Generic::IEnumerable&lt;TProperty&gt; ^&gt; ^&gt; ^ propertyExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Collections.Generic.IEnumerable&lt;TProperty&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t =&gt; t.Property1</c>).
            </param>
        <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt; Collection&lt;TProperty&gt; (string propertyName) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2&lt;!TEntity, !!TProperty&gt; Collection&lt;class TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Collection(Of TProperty As Class) (propertyName As String) As CollectionEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Collection : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Collection propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; where TProperty : class virtual Microsoft::EntityFrameworkCore::ChangeTracking::CollectionEntry&lt;TEntity, TProperty&gt; ^ Collection(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyName"> The name of the navigation property. </param>
        <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public virtual TEntity Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Entity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Entity As TEntity" />
      <MemberSignature Language="F#" Value="member this.Entity : 'Entity" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&lt;'Entity (requires 'Entity : null)&gt;.Entity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TEntity Entity { TEntity get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property TEntity Entity { TEntity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the entity being tracked by this entry.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.Property propertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual Microsoft::EntityFrameworkCore::ChangeTracking::PropertyEntry&lt;TEntity, TProperty&gt; ^ Property(System::Linq::Expressions::Expression&lt;Func&lt;TEntity, TProperty&gt; ^&gt; ^ propertyExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t =&gt; t.Property1</c>).
            </param>
        <summary>
                Provides access to change tracking information and operations for a given
                property of this entity.
            </summary>
        <returns> An object that exposes change tracking information and operations for the given property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Property(Of TProperty) (propertyName As String) As PropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Property : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="entityEntry.Property propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual Microsoft::EntityFrameworkCore::ChangeTracking::PropertyEntry&lt;TEntity, TProperty&gt; ^ Property(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property. </typeparam>
        <param name="propertyName"> The property to access information and operations for. </param>
        <summary>
                Provides access to change tracking information and operations for a given
                property of this entity.
            </summary>
        <returns> An object that exposes change tracking information and operations for the given property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; propertyExpression) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; propertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reference(Of TProperty As Class) (propertyExpression As Expression(Of Func(Of TEntity, TProperty))) As ReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Reference : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Reference propertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; where TProperty : class virtual Microsoft::EntityFrameworkCore::ChangeTracking::ReferenceEntry&lt;TEntity, TProperty&gt; ^ Reference(System::Linq::Expressions::Expression&lt;Func&lt;TEntity, TProperty&gt; ^&gt; ^ propertyExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t =&gt; t.Property1</c>).
            </param>
        <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (string propertyName) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reference(Of TProperty As Class) (propertyName As String) As ReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="override this.Reference : string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="entityEntry.Reference propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; where TProperty : class virtual Microsoft::EntityFrameworkCore::ChangeTracking::ReferenceEntry&lt;TEntity, TProperty&gt; ^ Reference(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyName"> The name of the navigation property. </param>
        <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
        <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>