<Type Name="EntityStateChangedEventArgs" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs">
  <TypeSignature Language="C#" Value="public class EntityStateChangedEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityStateChangedEventArgs extends Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityStateChangedEventArgs&#xA;Inherits EntityEntryEventArgs" />
  <TypeSignature Language="F#" Value="type EntityStateChangedEventArgs = class&#xA;    inherit EntityEntryEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityStateChangedEventArgs : Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntryEventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Event arguments for the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.StateChanged" /> event.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityStateChangedEventArgs (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.EntityState oldState, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * Microsoft.EntityFrameworkCore.EntityState -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs (internalEntityEntry, oldState, newState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityStateChangedEventArgs(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; EntityStateChangedEventArgs(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberSignature Language="C++ WINRT" Value=" EntityStateChangedEventArgs(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="newState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewState">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.EntityState NewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.EntityState NewState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs.NewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewState As EntityState" />
      <MemberSignature Language="F#" Value="member this.NewState : Microsoft.EntityFrameworkCore.EntityState" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs.NewState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState NewState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState NewState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The state that the entity is transitioning to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldState">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.EntityState OldState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.EntityState OldState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs.OldState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OldState As EntityState" />
      <MemberSignature Language="F#" Value="member this.OldState : Microsoft.EntityFrameworkCore.EntityState" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs.OldState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState OldState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState OldState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The state that the entity is transitioning from.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>