<Type Name="ProxyFactory" FullName="Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory">
  <TypeSignature Language="C#" Value="public class ProxyFactory : Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyFactory&#xA;Implements IProxyFactory" />
  <TypeSignature Language="F#" Value="type ProxyFactory = class&#xA;    interface IProxyFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyFactory : Microsoft::EntityFrameworkCore::Proxies::Internal::IProxyFactory" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ProxyFactory : Microsoft::EntityFrameworkCore::Proxies::Internal::IProxyFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyFactory();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ProxyFactory();" />
      <MemberSignature Language="C++ WINRT" Value=" ProxyFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual object Create (Microsoft.EntityFrameworkCore.DbContext context, Type entityClrType, params object[] constructorArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(class Microsoft.EntityFrameworkCore.DbContext context, class System.Type entityClrType, object[] constructorArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (context As DbContext, entityClrType As Type, ParamArray constructorArguments As Object()) As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.DbContext * Type * obj[] -&gt; obj&#xA;override this.Create : Microsoft.EntityFrameworkCore.DbContext * Type * obj[] -&gt; obj" Usage="proxyFactory.Create (context, entityClrType, constructorArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Create(Microsoft::EntityFrameworkCore::DbContext ^ context, Type ^ entityClrType, ... cli::array &lt;System::Object ^&gt; ^ constructorArguments);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityClrType" Type="System.Type" />
        <Parameter Name="constructorArguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="entityClrType">To be added.</param>
        <param name="constructorArguments">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLazyLoadingProxy">
      <MemberSignature Language="C#" Value="public virtual object CreateLazyLoadingProxy (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader, object[] constructorArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateLazyLoadingProxy(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader, object[] constructorArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory.CreateLazyLoadingProxy(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLazyLoadingProxy (entityType As IEntityType, loader As ILazyLoader, constructorArguments As Object()) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateLazyLoadingProxy : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader * obj[] -&gt; obj&#xA;override this.CreateLazyLoadingProxy : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader * obj[] -&gt; obj" Usage="proxyFactory.CreateLazyLoadingProxy (entityType, loader, constructorArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateLazyLoadingProxy(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader ^ loader, cli::array &lt;System::Object ^&gt; ^ constructorArguments);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ CreateLazyLoadingProxy(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader ^ loader, Platform::Array &lt;Platform::Object ^&gt; ^ constructorArguments);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable CreateLazyLoadingProxy(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader const &amp; loader, std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; constructorArguments);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.CreateLazyLoadingProxy(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="loader" Type="Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader" />
        <Parameter Name="constructorArguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="loader">To be added.</param>
        <param name="constructorArguments">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLazyLoadingProxyType">
      <MemberSignature Language="C#" Value="public virtual Type CreateLazyLoadingProxyType (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type CreateLazyLoadingProxyType(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.ProxyFactory.CreateLazyLoadingProxyType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLazyLoadingProxyType (entityType As IEntityType) As Type" />
      <MemberSignature Language="F#" Value="abstract member CreateLazyLoadingProxyType : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Type&#xA;override this.CreateLazyLoadingProxyType : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Type" Usage="proxyFactory.CreateLazyLoadingProxyType entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ CreateLazyLoadingProxyType(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Type ^ CreateLazyLoadingProxyType(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.CreateLazyLoadingProxyType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>