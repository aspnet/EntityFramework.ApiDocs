<Type Name="LazyLoadingInterceptor" FullName="Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor">
  <TypeSignature Language="C#" Value="public class LazyLoadingInterceptor : Castle.DynamicProxy.IInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LazyLoadingInterceptor extends System.Object implements class Castle.DynamicProxy.IInterceptor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Class LazyLoadingInterceptor&#xA;Implements IInterceptor" />
  <TypeSignature Language="F#" Value="type LazyLoadingInterceptor = class&#xA;    interface IInterceptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class LazyLoadingInterceptor : Castle::DynamicProxy::IInterceptor" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class LazyLoadingInterceptor : Castle::DynamicProxy::IInterceptor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Castle.DynamicProxy.IInterceptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyLoadingInterceptor (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entityType As IEntityType, loader As ILazyLoader)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader -&gt; Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor" Usage="new Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor (entityType, loader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyLoadingInterceptor(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader ^ loader);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LazyLoadingInterceptor(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader ^ loader);" />
      <MemberSignature Language="C++ WINRT" Value=" LazyLoadingInterceptor(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType, Microsoft::EntityFrameworkCore::Infrastructure::ILazyLoader const &amp; loader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="loader" Type="Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="loader">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intercept">
      <MemberSignature Language="C#" Value="public virtual void Intercept (Castle.DynamicProxy.IInvocation invocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Intercept(class Castle.DynamicProxy.IInvocation invocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.LazyLoadingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Intercept (invocation As IInvocation)" />
      <MemberSignature Language="F#" Value="abstract member Intercept : Castle.DynamicProxy.IInvocation -&gt; unit&#xA;override this.Intercept : Castle.DynamicProxy.IInvocation -&gt; unit" Usage="lazyLoadingInterceptor.Intercept invocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Intercept(Castle::DynamicProxy::IInvocation ^ invocation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Intercept(Castle::DynamicProxy::IInvocation ^ invocation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Intercept(Castle::DynamicProxy::IInvocation const &amp; invocation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocation" Type="Castle.DynamicProxy.IInvocation" />
      </Parameters>
      <Docs>
        <param name="invocation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>