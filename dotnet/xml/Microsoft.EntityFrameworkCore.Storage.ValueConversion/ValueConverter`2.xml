<Type Name="ValueConverter&lt;TModel,TProvider&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TModel,TProvider&gt;">
  <TypeSignature Language="C#" Value="public class ValueConverter&lt;TModel,TProvider&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValueConverter`2&lt;TModel, TProvider&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ValueConverter(Of TModel, TProvider)&#xA;Inherits ValueConverter" />
  <TypeSignature Language="F#" Value="type ValueConverter&lt;'Model, 'Provider&gt; = class&#xA;    inherit ValueConverter" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TModel, typename TProvider&gt;&#xA;public ref class ValueConverter : Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TModel, typename TProvider&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ValueConverter : Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TModel" />
    <TypeParameter Name="TProvider" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TModel">To be added.</typeparam>
    <typeparam name="TProvider">To be added.</typeparam>
    <summary>
                Defines conversions from an object of one type in a model to an object of the same or
                different type in the store.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueConverter (System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProvider&gt;&gt; convertToProviderExpression, System.Linq.Expressions.Expression&lt;Func&lt;TProvider,TModel&gt;&gt; convertFromProviderExpression, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TModel, !TProvider&gt;&gt; convertToProviderExpression, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TProvider, !TModel&gt;&gt; convertFromProviderExpression, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Linq.Expressions.Expression{System.Func{`1,`0}},Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (convertToProviderExpression As Expression(Of Func(Of TModel, TProvider)), convertFromProviderExpression As Expression(Of Func(Of TProvider, TModel)), Optional mappingHints As ConverterMappingHints = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt; : System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Provider&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Provider, 'Model&gt;&gt; * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt; (convertToProviderExpression, convertFromProviderExpression, mappingHints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convertToProviderExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProvider&gt;&gt;" />
        <Parameter Name="convertFromProviderExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TProvider,TModel&gt;&gt;" />
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="convertToProviderExpression"> An expression to convert objects when writing data to the store. </param>
        <param name="convertFromProviderExpression"> An expression to convert objects when reading data from the store. </param>
        <param name="mappingHints">
                Hints that can be used by the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" /> to create data types with appropriate
                facets for the converted data.
            </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromProvider">
      <MemberSignature Language="C#" Value="public override Func&lt;object,object&gt; ConvertFromProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;object, object&gt; ConvertFromProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ConvertFromProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConvertFromProvider As Func(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.ConvertFromProvider : Func&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ConvertFromProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Func&lt;System::Object ^, System::Object ^&gt; ^ ConvertFromProvider { Func&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the function to convert objects when reading data from the store,
                setup to handle nulls, boxing, and non-exact matches of simple types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromProviderExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression&lt;Func&lt;TProvider,TModel&gt;&gt; ConvertFromProviderExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TProvider, !TModel&gt;&gt; ConvertFromProviderExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ConvertFromProviderExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConvertFromProviderExpression As Expression(Of Func(Of TProvider, TModel))" />
      <MemberSignature Language="F#" Value="member this.ConvertFromProviderExpression : System.Linq.Expressions.Expression&lt;Func&lt;'Provider, 'Model&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ConvertFromProviderExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression&lt;Func&lt;TProvider, TModel&gt; ^&gt; ^ ConvertFromProviderExpression { System::Linq::Expressions::Expression&lt;Func&lt;TProvider, TModel&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TProvider,TModel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the expression to convert objects when reading data from the store,
                exactly as supplied and may not handle
                nulls, boxing, and non-exact matches of simple types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToProvider">
      <MemberSignature Language="C#" Value="public override Func&lt;object,object&gt; ConvertToProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;object, object&gt; ConvertToProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ConvertToProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConvertToProvider As Func(Of Object, Object)" />
      <MemberSignature Language="F#" Value="member this.ConvertToProvider : Func&lt;obj, obj&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ConvertToProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Func&lt;System::Object ^, System::Object ^&gt; ^ ConvertToProvider { Func&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the function to convert objects when writing data to the store,
                setup to handle nulls, boxing, and non-exact matches of simple types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToProviderExpression">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression&lt;Func&lt;TModel,TProvider&gt;&gt; ConvertToProviderExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TModel, !TProvider&gt;&gt; ConvertToProviderExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ConvertToProviderExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConvertToProviderExpression As Expression(Of Func(Of TModel, TProvider))" />
      <MemberSignature Language="F#" Value="member this.ConvertToProviderExpression : System.Linq.Expressions.Expression&lt;Func&lt;'Model, 'Provider&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ConvertToProviderExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression&lt;Func&lt;TModel, TProvider&gt; ^&gt; ^ ConvertToProviderExpression { System::Linq::Expressions::Expression&lt;Func&lt;TModel, TProvider&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,TProvider&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the expression to convert objects when writing data to the store,
                exactly as supplied and may not handle
                nulls, boxing, and non-exact matches of simple types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelClrType">
      <MemberSignature Language="C#" Value="public override Type ModelClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ModelClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ModelClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModelClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ModelClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ModelClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ModelClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Type ^ ModelClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The CLR type used in the EF model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderClrType">
      <MemberSignature Language="C#" Value="public override Type ProviderClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ProviderClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2.ProviderClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ProviderClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ProviderClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;'Model, 'Provider&gt;.ProviderClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ProviderClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Type ^ ProviderClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The CLR type used when reading and writing from the store.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>