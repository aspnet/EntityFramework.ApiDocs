<Type Name="IValueConverterSelector" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector">
  <TypeSignature Language="C#" Value="public interface IValueConverterSelector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverterSelector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverterSelector" />
  <TypeSignature Language="F#" Value="type IValueConverterSelector = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverterSelector" />
  <TypeSignature Language="C++ CX" Value="public interface class IValueConverterSelector" />
  <TypeSignature Language="C++ WINRT" Value="__interface IValueConverterSelector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                A registry of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" /> that can be used to find
                the preferred converter to use to convert to and from a given model type
                to a type that the database provider supports.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo&gt; Select (Type modelClrType, Type providerClrType = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo&gt; Select(class System.Type modelClrType, class System.Type providerClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.IValueConverterSelector.Select(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (modelClrType As Type, Optional providerClrType As Type = null) As IEnumerable(Of ValueConverterInfo)" />
      <MemberSignature Language="F#" Value="abstract member Select : Type * Type -&gt; seq&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo&gt;" Usage="iValueConverterSelector.Select (modelClrType, providerClrType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelClrType" Type="System.Type" />
        <Parameter Name="providerClrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="modelClrType"> The type for which a converter is needed. </param>
        <param name="providerClrType"> The store type to target, or null for any. </param>
        <summary>
                Returns the list of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" /> instances that can be
                used to convert the given model type. Converters nearer the front of
                the list should be used in preference to converters nearer the end.
            </summary>
        <returns> The converters available. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>