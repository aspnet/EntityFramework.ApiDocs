<Type Name="EnumToNumberConverter&lt;TEnum,TNumber&gt;" FullName="Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter&lt;TEnum,TNumber&gt;">
  <TypeSignature Language="C#" Value="public class EnumToNumberConverter&lt;TEnum,TNumber&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TEnum,TNumber&gt; where TEnum : struct where TNumber : struct" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumToNumberConverter`2&lt;struct .ctor (class System.ValueType) TEnum, struct .ctor (class System.ValueType) TNumber&gt; extends Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter`2&lt;!TEnum, !TNumber&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter`2" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumToNumberConverter(Of TEnum, TNumber)&#xA;Inherits ValueConverter(Of TEnum, TNumber)" />
  <TypeSignature Language="F#" Value="type EnumToNumberConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt; = class&#xA;    inherit ValueConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEnum, typename TNumber&gt;&#xA; where TEnum : value class where TNumber : value classpublic ref class EnumToNumberConverter : Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter&lt;TEnum, TNumber&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEnum">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TNumber">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter&lt;TEnum,TNumber&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TModel">TEnum</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProvider">TNumber</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEnum">To be added.</typeparam>
    <typeparam name="TNumber">To be added.</typeparam>
    <summary>
                Converts enum values to and from their underlying numeric representation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumToNumberConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter`2.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional mappingHints As ConverterMappingHints = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt; : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt;" Usage="new Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt; mappingHints" />
      <MemberSignature Language="C++ WINRT" Value=" EnumToNumberConverter(Microsoft::EntityFrameworkCore::Storage::ValueConversion::ConverterMappingHints const &amp; mappingHints = null);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mappingHints" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints" />
      </Parameters>
      <Docs>
        <param name="mappingHints">
                Hints that can be used by the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource" /> to create data types with appropriate
                facets for the converted data.
            </param>
        <summary>
                Creates a new instance of this converter. This converter preserves order.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo DefaultInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter`2.DefaultInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInfo As ValueConverterInfo" />
      <MemberSignature Language="F#" Value="member this.DefaultInfo : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" Usage="Microsoft.EntityFrameworkCore.Storage.ValueConversion.EnumToNumberConverter&lt;'Enum, 'Number (requires 'Enum : struct and 'Number : struct)&gt;.DefaultInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverterInfo DefaultInfo { Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverterInfo get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" /> for the default use of this converter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>