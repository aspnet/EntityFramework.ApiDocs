<Type Name="EntityGraphAttacher" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher">
  <TypeSignature Language="C#" Value="public class EntityGraphAttacher : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityGraphAttacher extends System.Object implements class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityGraphAttacher&#xA;Implements IEntityGraphAttacher" />
  <TypeSignature Language="F#" Value="type EntityGraphAttacher = class&#xA;    interface IEntityGraphAttacher" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityGraphAttacher : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IEntityGraphAttacher" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class EntityGraphAttacher : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IEntityGraphAttacher" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityGraphAttacher (Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator graphIterator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator graphIterator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphIterator As IEntityEntryGraphIterator)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher : Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher graphIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::IEntityEntryGraphIterator ^ graphIterator);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::IEntityEntryGraphIterator ^ graphIterator);" />
      <MemberSignature Language="C++ WINRT" Value=" EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::IEntityEntryGraphIterator const &amp; graphIterator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphIterator" Type="Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator" />
      </Parameters>
      <Docs>
        <param name="graphIterator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityGraphAttacher (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator graphIterator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator graphIterator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphIterator As IEntityEntryGraphIterator)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher graphIterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IEntityEntryGraphIterator ^ graphIterator);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IEntityEntryGraphIterator ^ graphIterator);" />
      <MemberSignature Language="C++ WINRT" Value=" EntityGraphAttacher(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IEntityEntryGraphIterator const &amp; graphIterator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphIterator" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator" />
      </Parameters>
      <Docs>
        <param name="graphIterator">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachGraph">
      <MemberSignature Language="C#" Value="public virtual void AttachGraph (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, Microsoft.EntityFrameworkCore.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachGraph(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, valuetype Microsoft.EntityFrameworkCore.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="F#" Value="abstract member AttachGraph : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.AttachGraph : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="entityGraphAttacher.AttachGraph (rootEntry, entityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="rootEntry">To be added.</param>
        <param name="entityState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachGraph">
      <MemberSignature Language="C#" Value="public virtual void AttachGraph (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, Microsoft.EntityFrameworkCore.EntityState entityState, bool forceStateWhenUnknownKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachGraph(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool forceStateWhenUnknownKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AttachGraph : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit&#xA;override this.AttachGraph : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit" Usage="entityGraphAttacher.AttachGraph (rootEntry, entityState, forceStateWhenUnknownKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState, bool forceStateWhenUnknownKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState, bool forceStateWhenUnknownKey);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AttachGraph(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; rootEntry, Microsoft::EntityFrameworkCore::EntityState entityState, bool forceStateWhenUnknownKey);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootEntry">To be added.</param>
        <param name="entityState">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachGraphAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AttachGraphAsync (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, Microsoft.EntityFrameworkCore.EntityState entityState, bool forceStateWhenUnknownKey, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AttachGraphAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry rootEntry, valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool forceStateWhenUnknownKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member AttachGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.AttachGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="entityGraphAttacher.AttachGraphAsync (rootEntry, entityState, forceStateWhenUnknownKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraphAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rootEntry">To be added.</param>
        <param name="entityState">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>