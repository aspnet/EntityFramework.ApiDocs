<Type Name="InternalEntityEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry">
  <TypeSignature Language="C#" Value="public abstract class InternalEntityEntry : Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalEntityEntry extends System.Object implements class Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalEntityEntry&#xA;Implements IUpdateEntry" />
  <TypeSignature Language="F#" Value="type InternalEntityEntry = class&#xA;    interface IUpdateEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalEntityEntry abstract : Microsoft::EntityFrameworkCore::Update::IUpdateEntry" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class InternalEntityEntry abstract : Microsoft::EntityFrameworkCore::Update::IUpdateEntry" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InternalEntityEntry abstract : Microsoft::EntityFrameworkCore::Update::IUpdateEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Update.IUpdateEntry</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (stateManager As IStateManager, entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry (stateManager, entityType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; InternalEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" InternalEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public virtual void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptChanges ()" />
      <MemberSignature Language="F#" Value="abstract member AcceptChanges : unit -&gt; unit&#xA;override this.AcceptChanges : unit -&gt; unit" Usage="internalEntityEntry.AcceptChanges " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptChanges();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AcceptChanges();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRangeToCollectionSnapshot">
      <MemberSignature Language="C#" Value="public virtual void AddRangeToCollectionSnapshot (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, System.Collections.Generic.IEnumerable&lt;object&gt; addedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRangeToCollectionSnapshot(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, class System.Collections.Generic.IEnumerable`1&lt;object&gt; addedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AddRangeToCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRangeToCollectionSnapshot (propertyBase As IPropertyBase, addedEntities As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member AddRangeToCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * seq&lt;obj&gt; -&gt; unit&#xA;override this.AddRangeToCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * seq&lt;obj&gt; -&gt; unit" Usage="internalEntityEntry.AddRangeToCollectionSnapshot (propertyBase, addedEntities)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRangeToCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ addedEntities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="addedEntities" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="addedEntities">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual bool AddToCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddToCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AddToCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddToCollection (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool&#xA;override this.AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalEntityEntry.AddToCollection (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollectionSnapshot">
      <MemberSignature Language="C#" Value="public virtual void AddToCollectionSnapshot (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object addedEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollectionSnapshot(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object addedEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AddToCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollectionSnapshot (propertyBase As IPropertyBase, addedEntity As Object)" />
      <MemberSignature Language="F#" Value="abstract member AddToCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit&#xA;override this.AddToCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalEntityEntry.AddToCollectionSnapshot (propertyBase, addedEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ addedEntity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AddToCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ addedEntity);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddToCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; addedEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="addedEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="addedEntity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CascadeDelete">
      <MemberSignature Language="C#" Value="public virtual void CascadeDelete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CascadeDelete() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.CascadeDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CascadeDelete ()" />
      <MemberSignature Language="F#" Value="abstract member CascadeDelete : unit -&gt; unit&#xA;override this.CascadeDelete : unit -&gt; unit" Usage="internalEntityEntry.CascadeDelete " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CascadeDelete();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void CascadeDelete();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void CascadeDelete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionContains">
      <MemberSignature Language="C#" Value="public virtual bool CollectionContains (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CollectionContains(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.CollectionContains(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CollectionContains (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CollectionContains : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool&#xA;override this.CollectionContains : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalEntityEntry.CollectionContains (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardStoreGeneratedValues">
      <MemberSignature Language="C#" Value="public virtual void DiscardStoreGeneratedValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardStoreGeneratedValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.DiscardStoreGeneratedValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DiscardStoreGeneratedValues ()" />
      <MemberSignature Language="F#" Value="abstract member DiscardStoreGeneratedValues : unit -&gt; unit&#xA;override this.DiscardStoreGeneratedValues : unit -&gt; unit" Usage="internalEntityEntry.DiscardStoreGeneratedValues " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DiscardStoreGeneratedValues();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DiscardStoreGeneratedValues();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DiscardStoreGeneratedValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureOriginalValues">
      <MemberSignature Language="C#" Value="public virtual void EnsureOriginalValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureOriginalValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EnsureOriginalValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureOriginalValues ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureOriginalValues : unit -&gt; unit&#xA;override this.EnsureOriginalValues : unit -&gt; unit" Usage="internalEntityEntry.EnsureOriginalValues " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureOriginalValues();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void EnsureOriginalValues();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void EnsureOriginalValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public virtual void EnsureRelationshipSnapshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureRelationshipSnapshot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EnsureRelationshipSnapshot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureRelationshipSnapshot ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureRelationshipSnapshot : unit -&gt; unit&#xA;override this.EnsureRelationshipSnapshot : unit -&gt; unit" Usage="internalEntityEntry.EnsureRelationshipSnapshot " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureRelationshipSnapshot();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void EnsureRelationshipSnapshot();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void EnsureRelationshipSnapshot();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public abstract object Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Entity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Entity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Entity As Object" />
      <MemberSignature Language="F#" Value="member this.Entity : obj" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Entity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Entity { System::Object ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Platform::Object ^ Entity { Platform::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityState">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.EntityState EntityState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.EntityState EntityState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityState As EntityState" />
      <MemberSignature Language="F#" Value="member this.EntityState : Microsoft.EntityFrameworkCore.EntityState" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState EntityState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::EntityState EntityState { Microsoft::EntityFrameworkCore::EntityState get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType EntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntityType As IEntityType" />
      <MemberSignature Language="F#" Value="member this.EntityType : Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ EntityType { Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ EntityType { Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public virtual object GetCurrentValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj&#xA;override this.GetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalEntityEntry.GetCurrentValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual TProperty GetCurrentValue&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TProperty GetCurrentValue&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCurrentValue(Of TProperty) (propertyBase As IPropertyBase) As TProperty" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Property&#xA;override this.GetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Property" Usage="internalEntityEntry.GetCurrentValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TProperty&gt;&#xA; virtual TProperty GetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateCollection">
      <MemberSignature Language="C#" Value="public virtual object GetOrCreateCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOrCreateCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetOrCreateCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrCreateCollection (navigation As INavigation) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; obj&#xA;override this.GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; obj" Usage="internalEntityEntry.GetOrCreateCollection navigation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalValue">
      <MemberSignature Language="C#" Value="public virtual object GetOriginalValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOriginalValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOriginalValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj&#xA;override this.GetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalEntityEntry.GetOriginalValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginalValue&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual TProperty GetOriginalValue&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TProperty GetOriginalValue&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOriginalValue(Of TProperty) (property As IProperty) As TProperty" />
      <MemberSignature Language="F#" Value="abstract member GetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; 'Property&#xA;override this.GetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; 'Property" Usage="internalEntityEntry.GetOriginalValue property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TProperty&gt;&#xA; virtual TProperty GetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreStoreGeneratedCurrentValue">
      <MemberSignature Language="C#" Value="public virtual object GetPreStoreGeneratedCurrentValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPreStoreGeneratedCurrentValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetPreStoreGeneratedCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreStoreGeneratedCurrentValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetPreStoreGeneratedCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj&#xA;override this.GetPreStoreGeneratedCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalEntityEntry.GetPreStoreGeneratedCurrentValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetPreStoreGeneratedCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ GetPreStoreGeneratedCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable GetPreStoreGeneratedCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipSnapshotValue">
      <MemberSignature Language="C#" Value="public virtual object GetRelationshipSnapshotValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRelationshipSnapshotValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetRelationshipSnapshotValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationshipSnapshotValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj&#xA;override this.GetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalEntityEntry.GetRelationshipSnapshotValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Platform::Object ^ GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipSnapshotValue&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public virtual TProperty GetRelationshipSnapshotValue&lt;TProperty&gt; (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TProperty GetRelationshipSnapshotValue&lt;TProperty&gt;(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetRelationshipSnapshotValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelationshipSnapshotValue(Of TProperty) (propertyBase As IPropertyBase) As TProperty" />
      <MemberSignature Language="F#" Value="abstract member GetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Property&#xA;override this.GetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Property" Usage="internalEntityEntry.GetRelationshipSnapshotValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TProperty&gt;&#xA; virtual TProperty GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TProperty&gt;&#xA; virtual TProperty GetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleConceptualNulls">
      <MemberSignature Language="C#" Value="public virtual void HandleConceptualNulls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleConceptualNulls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleConceptualNulls ()" />
      <MemberSignature Language="F#" Value="abstract member HandleConceptualNulls : unit -&gt; unit&#xA;override this.HandleConceptualNulls : unit -&gt; unit" Usage="internalEntityEntry.HandleConceptualNulls " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleConceptualNulls();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void HandleConceptualNulls();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void HandleConceptualNulls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleConceptualNulls">
      <MemberSignature Language="C#" Value="public virtual void HandleConceptualNulls (bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleConceptualNulls(bool sensitiveLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleConceptualNulls (sensitiveLoggingEnabled As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member HandleConceptualNulls : bool -&gt; unit&#xA;override this.HandleConceptualNulls : bool -&gt; unit" Usage="internalEntityEntry.HandleConceptualNulls sensitiveLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleConceptualNulls(bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void HandleConceptualNulls(bool sensitiveLoggingEnabled);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void HandleConceptualNulls(bool sensitiveLoggingEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitiveLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sensitiveLoggingEnabled">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleINotifyCollectionChanged">
      <MemberSignature Language="C#" Value="public virtual void HandleINotifyCollectionChanged (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleINotifyCollectionChanged(object sender, class System.Collections.Specialized.NotifyCollectionChangedEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleINotifyCollectionChanged (sender As Object, eventArgs As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member HandleINotifyCollectionChanged : obj * System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit&#xA;override this.HandleINotifyCollectionChanged : obj * System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="internalEntityEntry.HandleINotifyCollectionChanged (sender, eventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleINotifyCollectionChanged(System::Object ^ sender, System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="eventArgs">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleINotifyPropertyChanged">
      <MemberSignature Language="C#" Value="public virtual void HandleINotifyPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleINotifyPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleINotifyPropertyChanged (sender As Object, eventArgs As PropertyChangedEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member HandleINotifyPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.HandleINotifyPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="internalEntityEntry.HandleINotifyPropertyChanged (sender, eventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleINotifyPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="eventArgs">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleINotifyPropertyChanging">
      <MemberSignature Language="C#" Value="public virtual void HandleINotifyPropertyChanging (object sender, System.ComponentModel.PropertyChangingEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleINotifyPropertyChanging(object sender, class System.ComponentModel.PropertyChangingEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyPropertyChanging(System.Object,System.ComponentModel.PropertyChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleINotifyPropertyChanging (sender As Object, eventArgs As PropertyChangingEventArgs)" />
      <MemberSignature Language="F#" Value="abstract member HandleINotifyPropertyChanging : obj * System.ComponentModel.PropertyChangingEventArgs -&gt; unit&#xA;override this.HandleINotifyPropertyChanging : obj * System.ComponentModel.PropertyChangingEventArgs -&gt; unit" Usage="internalEntityEntry.HandleINotifyPropertyChanging (sender, eventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleINotifyPropertyChanging(System::Object ^ sender, System::ComponentModel::PropertyChangingEventArgs ^ eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.ComponentModel.PropertyChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="eventArgs">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConceptualNull">
      <MemberSignature Language="C#" Value="public virtual bool HasConceptualNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConceptualNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasConceptualNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasConceptualNull As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasConceptualNull : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasConceptualNull" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasConceptualNull { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool HasConceptualNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public bool HasDefaultValue (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasDefaultValue (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="internalEntityEntry.HasDefaultValue property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool HasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value="bool HasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOriginalValuesSnapshot">
      <MemberSignature Language="C#" Value="public virtual bool HasOriginalValuesSnapshot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOriginalValuesSnapshot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasOriginalValuesSnapshot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasOriginalValuesSnapshot As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasOriginalValuesSnapshot : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasOriginalValuesSnapshot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasOriginalValuesSnapshot { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool HasOriginalValuesSnapshot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public virtual bool HasRelationshipSnapshot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRelationshipSnapshot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasRelationshipSnapshot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasRelationshipSnapshot As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasRelationshipSnapshot : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasRelationshipSnapshot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRelationshipSnapshot { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool HasRelationshipSnapshot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTemporaryValue">
      <MemberSignature Language="C#" Value="public virtual bool HasTemporaryValue (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasTemporaryValue(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasTemporaryValue (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasTemporaryValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool&#xA;override this.HasTemporaryValue : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="internalEntityEntry.HasTemporaryValue property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasTemporaryValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool HasTemporaryValue(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool HasTemporaryValue(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConceptualNull">
      <MemberSignature Language="C#" Value="public virtual bool IsConceptualNull (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConceptualNull(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsConceptualNull(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsConceptualNull (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsConceptualNull : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool&#xA;override this.IsConceptualNull : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="internalEntityEntry.IsConceptualNull property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsConceptualNull(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool IsConceptualNull(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool IsConceptualNull(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeySet">
      <MemberSignature Language="C#" Value="public virtual bool IsKeySet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeySet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsKeySet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKeySet As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKeySet : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsKeySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKeySet { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsKeySet { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyUnknown">
      <MemberSignature Language="C#" Value="public virtual bool IsKeyUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyUnknown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsKeyUnknown" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKeyUnknown As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKeyUnknown : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsKeyUnknown" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKeyUnknown { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsKeyUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public virtual bool IsLoaded (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLoaded(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLoaded (navigation As INavigation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsLoaded : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; bool&#xA;override this.IsLoaded : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; bool" Usage="internalEntityEntry.IsLoaded navigation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLoaded(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool IsLoaded(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool IsLoaded(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public virtual bool IsModified (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsModified(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsModified (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsModified : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool&#xA;override this.IsModified : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="internalEntityEntry.IsModified property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsModified(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool IsModified(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool IsModified(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStoreGenerated">
      <MemberSignature Language="C#" Value="public virtual bool IsStoreGenerated (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStoreGenerated(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStoreGenerated (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsStoreGenerated : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool&#xA;override this.IsStoreGenerated : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="internalEntityEntry.IsStoreGenerated property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStoreGenerated(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool IsStoreGenerated(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool IsStoreGenerated(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Item(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="member this.Item(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase) : obj with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^] { System::Object ^ get(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase); void set(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsTemporary">
      <MemberSignature Language="C#" Value="public virtual void MarkAsTemporary (Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isTemporary = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkAsTemporary(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool isTemporary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkAsTemporary(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MarkAsTemporary (property As IProperty, Optional isTemporary As Boolean = true)" />
      <MemberSignature Language="F#" Value="abstract member MarkAsTemporary : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool -&gt; unit&#xA;override this.MarkAsTemporary : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool -&gt; unit" Usage="internalEntityEntry.MarkAsTemporary (property, isTemporary)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void MarkAsTemporary(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property, bool isTemporary = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="isTemporary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="isTemporary">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkShadowPropertiesNotSet">
      <MemberSignature Language="C#" Value="protected virtual void MarkShadowPropertiesNotSet (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MarkShadowPropertiesNotSet(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkShadowPropertiesNotSet(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub MarkShadowPropertiesNotSet (entityType As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member MarkShadowPropertiesNotSet : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.MarkShadowPropertiesNotSet : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="internalEntityEntry.MarkShadowPropertiesNotSet entityType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void MarkShadowPropertiesNotSet(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void MarkShadowPropertiesNotSet(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void MarkShadowPropertiesNotSet(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkUnchangedFromQuery">
      <MemberSignature Language="C#" Value="public virtual void MarkUnchangedFromQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkUnchangedFromQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkUnchangedFromQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MarkUnchangedFromQuery ()" />
      <MemberSignature Language="F#" Value="abstract member MarkUnchangedFromQuery : unit -&gt; unit&#xA;override this.MarkUnchangedFromQuery : unit -&gt; unit" Usage="internalEntityEntry.MarkUnchangedFromQuery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MarkUnchangedFromQuery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void MarkUnchangedFromQuery();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void MarkUnchangedFromQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkUnchangedFromQuery">
      <MemberSignature Language="C#" Value="public virtual void MarkUnchangedFromQuery (System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarkUnchangedFromQuery(class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkUnchangedFromQuery(System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MarkUnchangedFromQuery (handledForeignKeys As ISet(Of IForeignKey))" />
      <MemberSignature Language="F#" Value="abstract member MarkUnchangedFromQuery : System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; unit&#xA;override this.MarkUnchangedFromQuery : System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; unit" Usage="internalEntityEntry.MarkUnchangedFromQuery handledForeignKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MarkUnchangedFromQuery(System::Collections::Generic::ISet&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ handledForeignKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handledForeignKeys" Type="System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="handledForeignKeys">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Update.IUpdateEntry Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IUpdateEntry Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Microsoft#EntityFrameworkCore#Update#IUpdateEntry#SharedIdentityEntry" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SharedIdentityEntry As IUpdateEntry Implements IUpdateEntry.SharedIdentityEntry" />
      <MemberSignature Language="F#" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry { Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="property Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry { Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SharedIdentityEntry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IUpdateEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareToSave">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry PrepareToSave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry PrepareToSave() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.PrepareToSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrepareToSave () As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member PrepareToSave : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&#xA;override this.PrepareToSave : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="internalEntityEntry.PrepareToSave " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ PrepareToSave();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ PrepareToSave();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry PrepareToSave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyHasDefaultValue">
      <MemberSignature Language="C#" Value="protected virtual bool PropertyHasDefaultValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool PropertyHasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.PropertyHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function PropertyHasDefaultValue (propertyBase As IPropertyBase) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member PropertyHasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; bool&#xA;override this.PropertyHasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; bool" Usage="internalEntityEntry.PropertyHasDefaultValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPropertyValue">
      <MemberSignature Language="C#" Value="protected virtual object ReadPropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object ReadPropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadPropertyValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="abstract member ReadPropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj&#xA;override this.ReadPropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalEntityEntry.ReadPropertyValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Platform::Object ^ ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual winrt::Windows::Foundation::IInspectable ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadShadowValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected virtual T ReadShadowValue&lt;T&gt; (int shadowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !!T ReadShadowValue&lt;T&gt;(int32 shadowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ReadShadowValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ReadShadowValue(Of T) (shadowIndex As Integer) As T" />
      <MemberSignature Language="F#" Value="abstract member ReadShadowValue : int -&gt; 'T&#xA;override this.ReadShadowValue : int -&gt; 'T" Usage="internalEntityEntry.ReadShadowValue shadowIndex" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; virtual T ReadShadowValue(int shadowIndex);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; virtual T ReadShadowValue(int shadowIndex);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; virtual T ReadShadowValue(int shadowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="shadowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="shadowIndex">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromCollection">
      <MemberSignature Language="C#" Value="public virtual void RemoveFromCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.RemoveFromCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFromCollection (navigation As INavigation, value As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit&#xA;override this.RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="internalEntityEntry.RemoveFromCollection (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromCollectionSnapshot">
      <MemberSignature Language="C#" Value="public virtual void RemoveFromCollectionSnapshot (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object removedEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromCollectionSnapshot(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object removedEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.RemoveFromCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFromCollectionSnapshot (propertyBase As IPropertyBase, removedEntity As Object)" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit&#xA;override this.RemoveFromCollectionSnapshot : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalEntityEntry.RemoveFromCollectionSnapshot (propertyBase, removedEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFromCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ removedEntity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void RemoveFromCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ removedEntity);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void RemoveFromCollectionSnapshot(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; removedEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="removedEntity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="removedEntity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentValue">
      <MemberSignature Language="C#" Value="public virtual void SetCurrentValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCurrentValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCurrentValue (propertyBase As IPropertyBase, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit&#xA;override this.SetCurrentValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalEntityEntry.SetCurrentValue (propertyBase, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetCurrentValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEntityState">
      <MemberSignature Language="C#" Value="public virtual void SetEntityState (Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEntityState(valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(Microsoft.EntityFrameworkCore.EntityState,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetEntityState : Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit&#xA;override this.SetEntityState : Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit" Usage="internalEntityEntry.SetEntityState (entityState, acceptChanges)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetEntityState(Microsoft::EntityFrameworkCore::EntityState entityState, bool acceptChanges = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="acceptChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <param name="acceptChanges">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEntityState">
      <MemberSignature Language="C#" Value="public virtual void SetEntityState (Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges = false, bool forceStateWhenUnknownKey = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEntityState(valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges, bool forceStateWhenUnknownKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetEntityState : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit&#xA;override this.SetEntityState : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="internalEntityEntry.SetEntityState (entityState, acceptChanges, forceStateWhenUnknownKey)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetEntityState(Microsoft::EntityFrameworkCore::EntityState entityState, bool acceptChanges = false, bool forceStateWhenUnknownKey = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="acceptChanges" Type="System.Boolean" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <param name="acceptChanges">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEntityStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetEntityStateAsync (Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetEntityStateAsync(valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetEntityStateAsync : Microsoft.EntityFrameworkCore.EntityState * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetEntityStateAsync : Microsoft.EntityFrameworkCore.EntityState * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="internalEntityEntry.SetEntityStateAsync (entityState, acceptChanges, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry/&lt;SetEntityStateAsync&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="acceptChanges" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <param name="acceptChanges">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEntityStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SetEntityStateAsync (Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges, bool forceStateWhenUnknownKey, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SetEntityStateAsync(valuetype Microsoft.EntityFrameworkCore.EntityState entityState, bool acceptChanges, bool forceStateWhenUnknownKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SetEntityStateAsync : Microsoft.EntityFrameworkCore.EntityState * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SetEntityStateAsync : Microsoft.EntityFrameworkCore.EntityState * bool * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="internalEntityEntry.SetEntityStateAsync (entityState, acceptChanges, forceStateWhenUnknownKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry/&lt;SetEntityStateAsync&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="acceptChanges" Type="System.Boolean" />
        <Parameter Name="forceStateWhenUnknownKey" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entityState">To be added.</param>
        <param name="acceptChanges">To be added.</param>
        <param name="forceStateWhenUnknownKey">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsLoaded">
      <MemberSignature Language="C#" Value="public virtual void SetIsLoaded (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool loaded = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIsLoaded(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, bool loaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetIsLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetIsLoaded (navigation As INavigation, Optional loaded As Boolean = true)" />
      <MemberSignature Language="F#" Value="abstract member SetIsLoaded : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool -&gt; unit&#xA;override this.SetIsLoaded : Microsoft.EntityFrameworkCore.Metadata.INavigation * bool -&gt; unit" Usage="internalEntityEntry.SetIsLoaded (navigation, loaded)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetIsLoaded(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, bool loaded = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="loaded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="loaded">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOriginalValue">
      <MemberSignature Language="C#" Value="public virtual void SetOriginalValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, int index = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOriginalValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOriginalValue (propertyBase As IPropertyBase, value As Object, Optional index As Integer = -1)" />
      <MemberSignature Language="F#" Value="abstract member SetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj * int -&gt; unit&#xA;override this.SetOriginalValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj * int -&gt; unit" Usage="internalEntityEntry.SetOriginalValue (propertyBase, value, index)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetOriginalValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value, int index = -1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public virtual void SetProperty (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, bool setModified = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value, bool setModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetProperty(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetProperty (propertyBase As IPropertyBase, value As Object, Optional setModified As Boolean = true)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj * bool -&gt; unit&#xA;override this.SetProperty : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj * bool -&gt; unit" Usage="internalEntityEntry.SetProperty (propertyBase, value, setModified)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetProperty(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value, bool setModified = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="setModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <param name="setModified">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyModified">
      <MemberSignature Language="C#" Value="public virtual void SetPropertyModified (Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool changeState = true, bool isModified = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyModified(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool changeState, bool isModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPropertyModified (property As IProperty, Optional changeState As Boolean = true, Optional isModified As Boolean = true)" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyModified : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool -&gt; unit&#xA;override this.SetPropertyModified : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool -&gt; unit" Usage="internalEntityEntry.SetPropertyModified (property, changeState, isModified)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetPropertyModified(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property, bool changeState = true, bool isModified = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="changeState" Type="System.Boolean" />
        <Parameter Name="isModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="changeState">To be added.</param>
        <param name="isModified">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyModified">
      <MemberSignature Language="C#" Value="public virtual void SetPropertyModified (Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool changeState = true, bool isModified = true, bool isConceptualNull = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyModified(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, bool changeState, bool isModified, bool isConceptualNull) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPropertyModified (property As IProperty, Optional changeState As Boolean = true, Optional isModified As Boolean = true, Optional isConceptualNull As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyModified : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool * bool -&gt; unit&#xA;override this.SetPropertyModified : Microsoft.EntityFrameworkCore.Metadata.IProperty * bool * bool * bool -&gt; unit" Usage="internalEntityEntry.SetPropertyModified (property, changeState, isModified, isConceptualNull)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetPropertyModified(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property, bool changeState = true, bool isModified = true, bool isConceptualNull = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="changeState" Type="System.Boolean" />
        <Parameter Name="isModified" Type="System.Boolean" />
        <Parameter Name="isConceptualNull" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <param name="changeState">To be added.</param>
        <param name="isModified">To be added.</param>
        <param name="isConceptualNull">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRelationshipSnapshotValue">
      <MemberSignature Language="C#" Value="public virtual void SetRelationshipSnapshotValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRelationshipSnapshotValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetRelationshipSnapshotValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRelationshipSnapshotValue (propertyBase As IPropertyBase, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit&#xA;override this.SetRelationshipSnapshotValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalEntityEntry.SetRelationshipSnapshotValue (propertyBase, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetRelationshipSnapshotValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedIdentityEntry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry SharedIdentityEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry SharedIdentityEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SharedIdentityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SharedIdentityEntry As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="member this.SharedIdentityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SharedIdentityEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ SharedIdentityEntry { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ get(); void set(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ SharedIdentityEntry { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ get(); void set(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateManager">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager StateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.StateManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StateManager As IStateManager" />
      <MemberSignature Language="F#" Value="member this.StateManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.StateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ StateManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEntityEntry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry ToEntityEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry ToEntityEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ToEntityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToEntityEntry () As EntityEntry" />
      <MemberSignature Language="F#" Value="abstract member ToEntityEntry : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&#xA;override this.ToEntityEntry : unit -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" Usage="internalEntityEntry.ToEntityEntry " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntry ^ ToEntityEntry();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntry ToEntityEntry();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyValue">
      <MemberSignature Language="C#" Value="protected virtual void WritePropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WritePropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WritePropertyValue (propertyBase As IPropertyBase, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member WritePropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit&#xA;override this.WritePropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalEntityEntry.WritePropertyValue (propertyBase, value)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>