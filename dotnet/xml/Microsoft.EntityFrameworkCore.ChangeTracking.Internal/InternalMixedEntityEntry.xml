<Type Name="InternalMixedEntityEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry">
  <TypeSignature Language="C#" Value="public class InternalMixedEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InternalMixedEntityEntry extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class InternalMixedEntityEntry&#xA;Inherits InternalEntityEntry" />
  <TypeSignature Language="F#" Value="type InternalMixedEntityEntry = class&#xA;    inherit InternalEntityEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalMixedEntityEntry : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InternalMixedEntityEntry : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalMixedEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, entityType As IEntityType, entity As Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry (stateManager, entityType, entity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value=" InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalMixedEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry (stateManager, entityType, entity, valueBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, System::Object ^ entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer);" />
      <MemberSignature Language="C++ WINRT" Value=" InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalMixedEntityEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity, ref Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, object entity, [in]valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, entityType As IEntityType, entity As Object, ByRef valueBuffer As ValueBuffer)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj *  -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry (stateManager, entityType, entity, valueBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType, System::Object ^ entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer % valueBuffer);" />
      <MemberSignature Language="C++ WINRT" Value=" InternalMixedEntityEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType, winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer &amp; valueBuffer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="entityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public override bool AddToCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddToCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.AddToCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddToCollection (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.AddToCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalMixedEntityEntry.AddToCollection (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool AddToCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionContains">
      <MemberSignature Language="C#" Value="public override bool CollectionContains (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CollectionContains(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.CollectionContains(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CollectionContains (navigation As INavigation, value As InternalEntityEntry) As Boolean" />
      <MemberSignature Language="F#" Value="override this.CollectionContains : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; bool" Usage="internalMixedEntityEntry.CollectionContains (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool CollectionContains(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public override object Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Entity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.Entity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Entity As Object" />
      <MemberSignature Language="F#" Value="member this.Entity : obj" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.Entity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Entity { System::Object ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Object ^ Entity { Platform::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateCollection">
      <MemberSignature Language="C#" Value="public override object GetOrCreateCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOrCreateCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.GetOrCreateCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrCreateCollection (navigation As INavigation) As Object" />
      <MemberSignature Language="F#" Value="override this.GetOrCreateCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; obj" Usage="internalMixedEntityEntry.GetOrCreateCollection navigation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::Object ^ GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" override winrt::Windows::Foundation::IInspectable GetOrCreateCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyHasDefaultValue">
      <MemberSignature Language="C#" Value="protected override bool PropertyHasDefaultValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool PropertyHasDefaultValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.PropertyHasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function PropertyHasDefaultValue (propertyBase As IPropertyBase) As Boolean" />
      <MemberSignature Language="F#" Value="override this.PropertyHasDefaultValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; bool" Usage="internalMixedEntityEntry.PropertyHasDefaultValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool PropertyHasDefaultValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPropertyValue">
      <MemberSignature Language="C#" Value="protected override object ReadPropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object ReadPropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReadPropertyValue (propertyBase As IPropertyBase) As Object" />
      <MemberSignature Language="F#" Value="override this.ReadPropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; obj" Usage="internalMixedEntityEntry.ReadPropertyValue propertyBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override Platform::Object ^ ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" override winrt::Windows::Foundation::IInspectable ReadPropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadShadowValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected override T ReadShadowValue&lt;T&gt; (int shadowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance !!T ReadShadowValue&lt;T&gt;(int32 shadowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.ReadShadowValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReadShadowValue(Of T) (shadowIndex As Integer) As T" />
      <MemberSignature Language="F#" Value="override this.ReadShadowValue : int -&gt; 'T" Usage="internalMixedEntityEntry.ReadShadowValue shadowIndex" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; override T ReadShadowValue(int shadowIndex);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; override T ReadShadowValue(int shadowIndex);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; override T ReadShadowValue(int shadowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="shadowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="shadowIndex">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromCollection">
      <MemberSignature Language="C#" Value="public override void RemoveFromCollection (Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveFromCollection(class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.RemoveFromCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveFromCollection (navigation As INavigation, value As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="override this.RemoveFromCollection : Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="internalMixedEntityEntry.RemoveFromCollection (navigation, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" override void RemoveFromCollection(Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="value" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="navigation">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyValue">
      <MemberSignature Language="C#" Value="protected override void WritePropertyValue (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WritePropertyValue(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WritePropertyValue (propertyBase As IPropertyBase, value As Object)" />
      <MemberSignature Language="F#" Value="override this.WritePropertyValue : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * obj -&gt; unit" Usage="internalMixedEntityEntry.WritePropertyValue (propertyBase, value)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" override void WritePropertyValue(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyBase">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>