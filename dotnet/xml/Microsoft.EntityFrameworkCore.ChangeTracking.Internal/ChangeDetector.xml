<Type Name="ChangeDetector" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector">
  <TypeSignature Language="C#" Value="public class ChangeDetector : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChangeDetector extends System.Object implements class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector" />
  <TypeSignature Language="VB.NET" Value="Public Class ChangeDetector&#xA;Implements IChangeDetector" />
  <TypeSignature Language="F#" Value="type ChangeDetector = class&#xA;    interface IChangeDetector&#xA;    interface IPropertyListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeDetector : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ChangeDetector : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangeDetector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChangeDetector();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ChangeDetector();" />
      <MemberSignature Language="C++ WINRT" Value=" ChangeDetector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangeDetector (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; logger, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; logger, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking},Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking), loggingOptions As ILoggingOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector (logger, loggingOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChangeDetector(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::ChangeTracking ^&gt; ^ logger, Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChanges">
      <MemberSignature Language="C#" Value="public virtual void DetectChanges (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectChanges(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetectChanges (entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member DetectChanges : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit&#xA;override this.DetectChanges : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="changeDetector.DetectChanges entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectChanges">
      <MemberSignature Language="C#" Value="public virtual void DetectChanges (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetectChanges(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetectChanges (stateManager As IStateManager)" />
      <MemberSignature Language="F#" Value="abstract member DetectChanges : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager -&gt; unit&#xA;override this.DetectChanges : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager -&gt; unit" Usage="changeDetector.DetectChanges stateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void DetectChanges(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public virtual void PropertyChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool setModified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PropertyChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase, bool setModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PropertyChanged (entry As InternalEntityEntry, propertyBase As IPropertyBase, setModified As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member PropertyChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool -&gt; unit&#xA;override this.PropertyChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool -&gt; unit" Usage="changeDetector.PropertyChanged (entry, propertyBase, setModified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, bool setModified);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase, bool setModified);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase, bool setModified);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="setModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <param name="setModified">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanging">
      <MemberSignature Language="C#" Value="public virtual void PropertyChanging (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PropertyChanging(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PropertyChanging (entry As InternalEntityEntry, propertyBase As IPropertyBase)" />
      <MemberSignature Language="F#" Value="abstract member PropertyChanging : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; unit&#xA;override this.PropertyChanging : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; unit" Usage="changeDetector.PropertyChanging (entry, propertyBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; propertyBase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resume ()" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="changeDetector.Resume " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Resume();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipDetectChangesAnnotation">
      <MemberSignature Language="C#" Value="public const string SkipDetectChangesAnnotation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SkipDetectChangesAnnotation" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation" />
      <MemberSignature Language="VB.NET" Value="Public Const SkipDetectChangesAnnotation As String " />
      <MemberSignature Language="F#" Value="val mutable SkipDetectChangesAnnotation : string" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SkipDetectChangesAnnotation;" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring SkipDetectChangesAnnotation;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public virtual void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Suspend ()" />
      <MemberSignature Language="F#" Value="abstract member Suspend : unit -&gt; unit&#xA;override this.Suspend : unit -&gt; unit" Usage="changeDetector.Suspend " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Suspend();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Suspend();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Suspend();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>