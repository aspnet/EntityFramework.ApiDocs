<Type Name="StateManagerDependencies" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies">
  <TypeSignature Language="C#" Value="public sealed class StateManagerDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StateManagerDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StateManagerDependencies" />
  <TypeSignature Language="F#" Value="type StateManagerDependencies = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class StateManagerDependencies sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class StateManagerDependencies sealed" />
  <TypeSignature Language="C++ WINRT" Value="class StateManagerDependencies sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StateManagerDependencies (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory internalEntityEntryFactory, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber internalEntityEntrySubscriber, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier internalEntityEntryNotifier, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager valueGenerationManager, Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Storage.IDatabase database, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource, Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource entityMaterializerSource, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; changeTrackingLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory internalEntityEntryFactory, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber internalEntityEntrySubscriber, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier internalEntityEntryNotifier, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager valueGenerationManager, class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Storage.IDatabase database, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, class Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource, class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource, class Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource entityMaterializerSource, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; changeTrackingLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IDatabase,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource,Microsoft.EntityFrameworkCore.Internal.IDbSetSource,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntityEntryFactory As IInternalEntityEntryFactory, internalEntityEntrySubscriber As IInternalEntityEntrySubscriber, internalEntityEntryNotifier As IInternalEntityEntryNotifier, valueGenerationManager As IValueGenerationManager, model As IModel, database As IDatabase, concurrencyDetector As IConcurrencyDetector, currentContext As ICurrentDbContext, entityFinderSource As IEntityFinderSource, setSource As IDbSetSource, entityMaterializerSource As IEntityMaterializerSource, loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), changeTrackingLogger As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager * Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Storage.IDatabase * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext * Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource * Microsoft.EntityFrameworkCore.Internal.IDbSetSource * Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies (internalEntityEntryFactory, internalEntityEntrySubscriber, internalEntityEntryNotifier, valueGenerationManager, model, database, concurrencyDetector, currentContext, entityFinderSource, setSource, entityMaterializerSource, loggingOptions, updateLogger, changeTrackingLogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StateManagerDependencies(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ internalEntityEntryFactory, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ internalEntityEntrySubscriber, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ internalEntityEntryNotifier, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ valueGenerationManager, Microsoft::EntityFrameworkCore::Metadata::IModel ^ model, Microsoft::EntityFrameworkCore::Storage::IDatabase ^ database, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext, Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ entityFinderSource, Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ setSource, Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ entityMaterializerSource, Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions, Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ updateLogger, Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::ChangeTracking ^&gt; ^ changeTrackingLogger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="internalEntityEntryFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory" />
        <Parameter Name="internalEntityEntrySubscriber" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber" />
        <Parameter Name="internalEntityEntryNotifier" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" />
        <Parameter Name="valueGenerationManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" />
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="database" Type="Microsoft.EntityFrameworkCore.Storage.IDatabase" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
        <Parameter Name="entityFinderSource" Type="Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource" />
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" />
        <Parameter Name="entityMaterializerSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
        <Parameter Name="changeTrackingLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntryFactory">To be added.</param>
        <param name="internalEntityEntrySubscriber">To be added.</param>
        <param name="internalEntityEntryNotifier">To be added.</param>
        <param name="valueGenerationManager">To be added.</param>
        <param name="model">To be added.</param>
        <param name="database">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="currentContext">To be added.</param>
        <param name="entityFinderSource">To be added.</param>
        <param name="setSource">To be added.</param>
        <param name="entityMaterializerSource">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="changeTrackingLogger">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeTrackingLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; ChangeTrackingLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; ChangeTrackingLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ChangeTrackingLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeTrackingLogger As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking)" />
      <MemberSignature Language="F#" Value="member this.ChangeTrackingLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ChangeTrackingLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::ChangeTracking ^&gt; ^ ChangeTrackingLogger { Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::ChangeTracking ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetector">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector ConcurrencyDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ConcurrencyDetector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConcurrencyDetector As IConcurrencyDetector" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ConcurrencyDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ ConcurrencyDetector { Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext CurrentContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentContext As ICurrentDbContext" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.CurrentContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ CurrentContext { Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ CurrentContext { Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IDatabase Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDatabase Database" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.Database" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Database As IDatabase" />
      <MemberSignature Language="F#" Value="member this.Database : Microsoft.EntityFrameworkCore.Storage.IDatabase" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.Database" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IDatabase ^ Database { Microsoft::EntityFrameworkCore::Storage::IDatabase ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IDatabase ^ Database { Microsoft::EntityFrameworkCore::Storage::IDatabase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDatabase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityFinderSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource EntityFinderSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource EntityFinderSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.EntityFinderSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityFinderSource As IEntityFinderSource" />
      <MemberSignature Language="F#" Value="member this.EntityFinderSource : Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.EntityFinderSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ EntityFinderSource { Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ EntityFinderSource { Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityMaterializerSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource EntityMaterializerSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource EntityMaterializerSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.EntityMaterializerSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityMaterializerSource As IEntityMaterializerSource" />
      <MemberSignature Language="F#" Value="member this.EntityMaterializerSource : Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.EntityMaterializerSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ EntityMaterializerSource { Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ EntityMaterializerSource { Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalEntityEntryFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory InternalEntityEntryFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory InternalEntityEntryFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntryFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalEntityEntryFactory As IInternalEntityEntryFactory" />
      <MemberSignature Language="F#" Value="member this.InternalEntityEntryFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntryFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ InternalEntityEntryFactory { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ InternalEntityEntryFactory { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalEntityEntryNotifier">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier InternalEntityEntryNotifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier InternalEntityEntryNotifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntryNotifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalEntityEntryNotifier As IInternalEntityEntryNotifier" />
      <MemberSignature Language="F#" Value="member this.InternalEntityEntryNotifier : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntryNotifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ InternalEntityEntryNotifier { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ InternalEntityEntryNotifier { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalEntityEntrySubscriber">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber InternalEntityEntrySubscriber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber InternalEntityEntrySubscriber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntrySubscriber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalEntityEntrySubscriber As IInternalEntityEntrySubscriber" />
      <MemberSignature Language="F#" Value="member this.InternalEntityEntrySubscriber : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.InternalEntityEntrySubscriber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ InternalEntityEntrySubscriber { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ InternalEntityEntrySubscriber { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.LoggingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoggingOptions As ILoggingOptions" />
      <MemberSignature Language="F#" Value="member this.LoggingOptions : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.LoggingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ LoggingOptions { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ LoggingOptions { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::IModel ^ Model { Microsoft::EntityFrameworkCore::Metadata::IModel ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::IModel ^ Model { Microsoft::EntityFrameworkCore::Metadata::IModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IDbSetSource SetSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Internal.IDbSetSource SetSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.SetSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetSource As IDbSetSource" />
      <MemberSignature Language="F#" Value="member this.SetSource : Microsoft.EntityFrameworkCore.Internal.IDbSetSource" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.SetSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ SetSource { Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ SetSource { Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IDbSetSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; UpdateLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; UpdateLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.UpdateLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)" />
      <MemberSignature Language="F#" Value="member this.UpdateLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.UpdateLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ UpdateLogger { Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenerationManager">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGenerationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGenerationManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ValueGenerationManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGenerationManager As IValueGenerationManager" />
      <MemberSignature Language="F#" Value="member this.ValueGenerationManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.ValueGenerationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGenerationManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGenerationManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory internalEntityEntryFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory internalEntityEntryFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (internalEntityEntryFactory As IInternalEntityEntryFactory) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With internalEntityEntryFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ internalEntityEntryFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory ^ internalEntityEntryFactory);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryFactory const &amp; internalEntityEntryFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalEntityEntryFactory" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntryFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier internalEntityEntryNotifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier internalEntityEntryNotifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (internalEntityEntryNotifier As IInternalEntityEntryNotifier) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With internalEntityEntryNotifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ internalEntityEntryNotifier);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ internalEntityEntryNotifier);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier const &amp; internalEntityEntryNotifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalEntityEntryNotifier" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntryNotifier"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber internalEntityEntrySubscriber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber internalEntityEntrySubscriber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (internalEntityEntrySubscriber As IInternalEntityEntrySubscriber) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With internalEntityEntrySubscriber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ internalEntityEntrySubscriber);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber ^ internalEntityEntrySubscriber);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntrySubscriber const &amp; internalEntityEntrySubscriber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalEntityEntrySubscriber" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntrySubscriber"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager valueGenerationManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager valueGenerationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager)" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With valueGenerationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::ValueGenerationManager ^ valueGenerationManager);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::ValueGenerationManager const &amp; valueGenerationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueGenerationManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager" />
      </Parameters>
      <Docs>
        <param name="valueGenerationManager"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; changeTrackingLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/ChangeTracking&gt; changeTrackingLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (changeTrackingLogger As IDiagnosticsLogger(Of DbLoggerCategory.ChangeTracking)) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.ChangeTracking&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With changeTrackingLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::ChangeTracking ^&gt; ^ changeTrackingLogger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeTrackingLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+ChangeTracking&gt;" />
      </Parameters>
      <Docs>
        <param name="changeTrackingLogger"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With updateLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ updateLogger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
      </Parameters>
      <Docs>
        <param name="updateLogger"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (loggingOptions As ILoggingOptions) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With loggingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions const &amp; loggingOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
      </Parameters>
      <Docs>
        <param name="loggingOptions"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (concurrencyDetector As IConcurrencyDetector) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With concurrencyDetector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector const &amp; concurrencyDetector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
      </Parameters>
      <Docs>
        <param name="concurrencyDetector"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (currentContext As ICurrentDbContext) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With currentContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext const &amp; currentContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
      </Parameters>
      <Docs>
        <param name="currentContext"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Internal.IDbSetSource setSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Internal.IDbSetSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (setSource As IDbSetSource) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.IDbSetSource -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With setSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ setSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IDbSetSource ^ setSource);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Internal::IDbSetSource const &amp; setSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setSource" Type="Microsoft.EntityFrameworkCore.Internal.IDbSetSource" />
      </Parameters>
      <Docs>
        <param name="setSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource entityFinderSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (entityFinderSource As IEntityFinderSource) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With entityFinderSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ entityFinderSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource ^ entityFinderSource);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Internal::IEntityFinderSource const &amp; entityFinderSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityFinderSource" Type="Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource" />
      </Parameters>
      <Docs>
        <param name="entityFinderSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (model As IModel) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="model"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource entityMaterializerSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource entityMaterializerSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (entityMaterializerSource As IEntityMaterializerSource) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With entityMaterializerSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ entityMaterializerSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ entityMaterializerSource);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource const &amp; entityMaterializerSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityMaterializerSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" />
      </Parameters>
      <Docs>
        <param name="entityMaterializerSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With (Microsoft.EntityFrameworkCore.Storage.IDatabase database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies With(class Microsoft.EntityFrameworkCore.Storage.IDatabase database) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies.With(Microsoft.EntityFrameworkCore.Storage.IDatabase)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (database As IDatabase) As StateManagerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IDatabase -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" Usage="stateManagerDependencies.With database" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IDatabase ^ database);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IDatabase ^ database);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies With(Microsoft::EntityFrameworkCore::Storage::IDatabase const &amp; database);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="Microsoft.EntityFrameworkCore.Storage.IDatabase" />
      </Parameters>
      <Docs>
        <param name="database"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>