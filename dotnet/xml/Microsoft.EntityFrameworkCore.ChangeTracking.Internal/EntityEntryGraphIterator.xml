<Type Name="EntityEntryGraphIterator" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator">
  <TypeSignature Language="C#" Value="public class EntityEntryGraphIterator : Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityEntryGraphIterator extends System.Object implements class Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityEntryGraphIterator&#xA;Implements IEntityEntryGraphIterator" />
  <TypeSignature Language="F#" Value="type EntityEntryGraphIterator = class&#xA;    interface IEntityEntryGraphIterator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityEntryGraphIterator : Microsoft::EntityFrameworkCore::ChangeTracking::IEntityEntryGraphIterator" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class EntityEntryGraphIterator : Microsoft::EntityFrameworkCore::ChangeTracking::IEntityEntryGraphIterator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityEntryGraphIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityEntryGraphIterator();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; EntityEntryGraphIterator();" />
      <MemberSignature Language="C++ WINRT" Value=" EntityEntryGraphIterator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraverseGraph">
      <MemberSignature Language="C#" Value="public virtual void TraverseGraph (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,bool&gt; handleNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraverseGraph(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, bool&gt; handleNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraverseGraph (node As EntityEntryGraphNode, handleNode As Func(Of EntityEntryGraphNode, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member TraverseGraph : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, bool&gt; -&gt; unit&#xA;override this.TraverseGraph : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, bool&gt; -&gt; unit" Usage="entityEntryGraphIterator.TraverseGraph (node, handleNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraverseGraph(Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntryGraphNode ^ node, Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntryGraphNode ^, bool&gt; ^ handleNode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator.TraverseGraph(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
        <Parameter Name="handleNode" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="handleNode">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraverseGraph&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public virtual void TraverseGraph&lt;TState&gt; (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, TState state, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,TState,bool&gt; handleNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraverseGraph&lt;TState&gt;(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, !!TState state, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, !!TState, bool&gt; handleNode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph``1(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraverseGraph(Of TState) (node As EntityEntryGraphNode, state As TState, handleNode As Func(Of EntityEntryGraphNode, TState, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member TraverseGraph : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * 'State * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, 'State, bool&gt; -&gt; unit&#xA;override this.TraverseGraph : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * 'State * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, 'State, bool&gt; -&gt; unit" Usage="entityEntryGraphIterator.TraverseGraph (node, state, handleNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; virtual void TraverseGraph(Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntryGraphNode ^ node, TState state, Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::EntityEntryGraphNode ^, TState, bool&gt; ^ handleNode);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator.TraverseGraph``1(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Boolean})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="handleNode" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,TState,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="node">To be added.</param>
        <param name="state">To be added.</param>
        <param name="handleNode">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraverseGraphAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task TraverseGraphAsync (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;bool&gt;&gt; handleNode, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TraverseGraphAsync(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;bool&gt;&gt; handleNode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member TraverseGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;bool&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.TraverseGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;bool&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="entityEntryGraphIterator.TraverseGraphAsync (node, handleNode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator.TraverseGraphAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator/&lt;TraverseGraphAsync&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
        <Parameter Name="handleNode" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="handleNode">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraverseGraphAsync&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task TraverseGraphAsync&lt;TState&gt; (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, TState state, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;bool&gt;&gt; handleNode, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task TraverseGraphAsync&lt;TState&gt;(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode node, !!TState state, class System.Func`4&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, !!TState, valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task`1&lt;bool&gt;&gt; handleNode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync``1(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member TraverseGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * 'State * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;bool&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.TraverseGraphAsync : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * 'State * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode, 'State, System.Threading.CancellationToken, System.Threading.Tasks.Task&lt;bool&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="entityEntryGraphIterator.TraverseGraphAsync (node, state, handleNode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.ChangeTracking.IEntityEntryGraphIterator.TraverseGraphAsync``1(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator/&lt;TraverseGraphAsync&gt;d__1`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="handleNode" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,TState,System.Threading.CancellationToken,System.Threading.Tasks.Task&lt;System.Boolean&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="node">To be added.</param>
        <param name="state">To be added.</param>
        <param name="handleNode">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>