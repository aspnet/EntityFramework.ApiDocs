<Type Name="CompositeValueFactory" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory">
  <TypeSignature Language="C#" Value="public class CompositeValueFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;object[]&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeValueFactory extends System.Object implements class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1&lt;object[]&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeValueFactory&#xA;Implements IDependentKeyValueFactory(Of Object())" />
  <TypeSignature Language="F#" Value="type CompositeValueFactory = class&#xA;    interface IDependentKeyValueFactory&lt;obj[]&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeValueFactory : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IDependentKeyValueFactory&lt;cli::array &lt;System::Object ^&gt; ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CompositeValueFactory : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IDependentKeyValueFactory&lt;std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;System.Object[]&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeValueFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IReadOnlyList(Of IProperty))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeValueFactory(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^&gt; ^ properties);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEqualityComparer">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IEqualityComparer&lt;object[]&gt; CreateEqualityComparer (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IEqualityComparer`1&lt;object[]&gt; CreateEqualityComparer(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.CreateEqualityComparer(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateEqualityComparer (properties As IReadOnlyList(Of IProperty)) As IEqualityComparer(Of Object())" />
      <MemberSignature Language="F#" Value="static member CreateEqualityComparer : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; -&gt; System.Collections.Generic.IEqualityComparer&lt;obj[]&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.CreateEqualityComparer properties" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IEqualityComparer&lt;cli::array &lt;System::Object ^&gt; ^&gt; ^ CreateEqualityComparer(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^&gt; ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Properties As IReadOnlyList(Of IProperty)" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.Properties" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^&gt; ^ Properties { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromBuffer">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromBuffer (Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromBuffer(valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object[]@)" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer *  -&gt; bool&#xA;override this.TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromBuffer (valueBuffer, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromBuffer">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromBuffer (Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromBuffer([in]class Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; modreq(System.Runtime.InteropServices.InAttribute) valueBuffer, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateFromBuffer (valueBuffer As ValueBuffer&amp;, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; *  -&gt; bool&#xA;override this.TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromBuffer (valueBuffer, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; ^ valueBuffer, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; const &amp; valueBuffer, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromCurrentValues">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromCurrentValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromCurrentValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateFromCurrentValues (entry As InternalEntityEntry, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool&#xA;override this.TryCreateFromCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromCurrentValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromEntry">
      <MemberSignature Language="C#" Value="protected virtual bool TryCreateFromEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,object&gt; getValue, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryCreateFromEntry(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.IProperty, object&gt; getValue, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromEntry(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object},System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryCreateFromEntry (entry As InternalEntityEntry, getValue As Func(Of InternalEntityEntry, IProperty, Object), ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty, obj&gt; *  -&gt; bool&#xA;override this.TryCreateFromEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.IProperty, obj&gt; *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromEntry (entry, getValue, key)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TryCreateFromEntry(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^, Microsoft::EntityFrameworkCore::Metadata::IProperty ^, System::Object ^&gt; ^ getValue, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="getValue" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object&gt;" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="getValue">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromOriginalValues">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromOriginalValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromOriginalValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateFromOriginalValues (entry As InternalEntityEntry, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromOriginalValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool&#xA;override this.TryCreateFromOriginalValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromOriginalValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromOriginalValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromOriginalValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromPreStoreGeneratedCurrentValues">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromPreStoreGeneratedCurrentValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromPreStoreGeneratedCurrentValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateFromPreStoreGeneratedCurrentValues (entry As InternalEntityEntry, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromPreStoreGeneratedCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool&#xA;override this.TryCreateFromPreStoreGeneratedCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromPreStoreGeneratedCurrentValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromPreStoreGeneratedCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromPreStoreGeneratedCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public virtual bool TryCreateFromRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out object[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] object[]&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeValueFactory.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryCreateFromRelationshipSnapshot (entry As InternalEntityEntry, ByRef key As Object()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool&#xA;override this.TryCreateFromRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="compositeValueFactory.TryCreateFromRelationshipSnapshot (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryCreateFromRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryCreateFromRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="System.Object[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>