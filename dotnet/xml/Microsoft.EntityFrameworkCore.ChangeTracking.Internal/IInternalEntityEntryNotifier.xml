<Type Name="IInternalEntityEntryNotifier" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier">
  <TypeSignature Language="C#" Value="public interface IInternalEntityEntryNotifier" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInternalEntityEntryNotifier" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInternalEntityEntryNotifier" />
  <TypeSignature Language="F#" Value="type IInternalEntityEntryNotifier = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInternalEntityEntryNotifier" />
  <TypeSignature Language="C++ CX" Value="public interface class IInternalEntityEntryNotifier" />
  <TypeSignature Language="C++ WINRT" Value="__interface IInternalEntityEntryNotifier" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="KeyPropertyChanged">
      <MemberSignature Language="C#" Value="public void KeyPropertyChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IProperty property, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt; keys, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; foreignKeys, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void KeyPropertyChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IKey&gt; keys, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; foreignKeys, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeyPropertyChanged (entry As InternalEntityEntry, property As IProperty, keys As IReadOnlyList(Of IKey), foreignKeys As IReadOnlyList(Of IForeignKey), oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="abstract member KeyPropertyChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IProperty * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; * obj * obj -&gt; unit" Usage="iInternalEntityEntryNotifier.KeyPropertyChanged (entry, property, keys, foreignKeys, oldValue, newValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeyPropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IKey ^&gt; ^ keys, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ foreignKeys, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="keys" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt;" />
        <Parameter Name="foreignKeys" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="keys">To be added.</param>
        <param name="foreignKeys">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationCollectionChanged">
      <MemberSignature Language="C#" Value="public void NavigationCollectionChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, System.Collections.Generic.IEnumerable&lt;object&gt; added, System.Collections.Generic.IEnumerable&lt;object&gt; removed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigationCollectionChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class System.Collections.Generic.IEnumerable`1&lt;object&gt; added, class System.Collections.Generic.IEnumerable`1&lt;object&gt; removed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigationCollectionChanged (entry As InternalEntityEntry, navigation As INavigation, added As IEnumerable(Of Object), removed As IEnumerable(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member NavigationCollectionChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * seq&lt;obj&gt; * seq&lt;obj&gt; -&gt; unit" Usage="iInternalEntityEntryNotifier.NavigationCollectionChanged (entry, navigation, added, removed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigationCollectionChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ added, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ removed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="added" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
        <Parameter Name="removed" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="added">To be added.</param>
        <param name="removed">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationReferenceChanged">
      <MemberSignature Language="C#" Value="public void NavigationReferenceChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NavigationReferenceChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigationReferenceChanged (entry As InternalEntityEntry, navigation As INavigation, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="F#" Value="abstract member NavigationReferenceChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation * obj * obj -&gt; unit" Usage="iInternalEntityEntryNotifier.NavigationReferenceChanged (entry, navigation, oldValue, newValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigationReferenceChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void NavigationReferenceChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Platform::Object ^ oldValue, Platform::Object ^ newValue);" />
      <MemberSignature Language="C++ WINRT" Value="void NavigationReferenceChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, winrt::Windows::Foundation::IInspectable const &amp; oldValue, winrt::Windows::Foundation::IInspectable const &amp; newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public void PropertyChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property, bool setModified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PropertyChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property, bool setModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PropertyChanged (entry As InternalEntityEntry, property As IPropertyBase, setModified As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member PropertyChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase * bool -&gt; unit" Usage="iInternalEntityEntryNotifier.PropertyChanged (entry, property, setModified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property, bool setModified);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property, bool setModified);" />
      <MemberSignature Language="C++ WINRT" Value="void PropertyChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; property, bool setModified);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
        <Parameter Name="setModified" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <param name="setModified">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanging">
      <MemberSignature Language="C#" Value="public void PropertyChanging (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PropertyChanging(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PropertyChanging (entry As InternalEntityEntry, property As IPropertyBase)" />
      <MemberSignature Language="F#" Value="abstract member PropertyChanging : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; unit" Usage="iInternalEntityEntryNotifier.PropertyChanging (entry, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property);" />
      <MemberSignature Language="C++ WINRT" Value="void PropertyChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public void StateChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.EntityState oldState, bool fromQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StateChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, bool fromQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StateChanged (entry As InternalEntityEntry, oldState As EntityState, fromQuery As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member StateChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool -&gt; unit" Usage="iInternalEntityEntryNotifier.StateChanged (entry, oldState, fromQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool fromQuery);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool fromQuery);" />
      <MemberSignature Language="C++ WINRT" Value="void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool fromQuery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="fromQuery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="fromQuery">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public void StateChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.EntityState oldState, bool skipInitialFixup, bool fromQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StateChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState, bool skipInitialFixup, bool fromQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StateChanged (entry As InternalEntityEntry, oldState As EntityState, skipInitialFixup As Boolean, fromQuery As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member StateChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="iInternalEntityEntryNotifier.StateChanged (entry, oldState, skipInitialFixup, fromQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool skipInitialFixup, bool fromQuery);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool skipInitialFixup, bool fromQuery);" />
      <MemberSignature Language="C++ WINRT" Value="void StateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::EntityState oldState, bool skipInitialFixup, bool fromQuery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="skipInitialFixup" Type="System.Boolean" />
        <Parameter Name="fromQuery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="oldState">To be added.</param>
        <param name="skipInitialFixup">To be added.</param>
        <param name="fromQuery">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanging">
      <MemberSignature Language="C#" Value="public void StateChanging (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.EntityState newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StateChanging(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, valuetype Microsoft.EntityFrameworkCore.EntityState newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StateChanging (entry As InternalEntityEntry, newState As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member StateChanging : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="iInternalEntityEntryNotifier.StateChanging (entry, newState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StateChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void StateChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberSignature Language="C++ WINRT" Value="void StateChanging(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::EntityState newState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="newState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="newState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackedFromQuery">
      <MemberSignature Language="C#" Value="public void TrackedFromQuery (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrackedFromQuery(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrackedFromQuery (entry As InternalEntityEntry, handledForeignKeys As ISet(Of IForeignKey))" />
      <MemberSignature Language="F#" Value="abstract member TrackedFromQuery : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; unit" Usage="iInternalEntityEntryNotifier.TrackedFromQuery (entry, handledForeignKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrackedFromQuery(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, System::Collections::Generic::ISet&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ handledForeignKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="handledForeignKeys" Type="System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="handledForeignKeys">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>