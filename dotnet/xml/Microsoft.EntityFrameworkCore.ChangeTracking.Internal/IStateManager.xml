<Type Name="IStateManager" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager">
  <TypeSignature Language="C#" Value="public interface IStateManager : Microsoft.EntityFrameworkCore.Infrastructure.IResettableService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateManager implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateManager&#xA;Implements IResettableService" />
  <TypeSignature Language="F#" Value="type IStateManager = interface&#xA;    interface IResettableService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateManager : Microsoft::EntityFrameworkCore::Infrastructure::IResettableService" />
  <TypeSignature Language="C++ CX" Value="public interface class IStateManager : Microsoft::EntityFrameworkCore::Infrastructure::IResettableService" />
  <TypeSignature Language="C++ WINRT" Value="__interface IStateManager : Microsoft::EntityFrameworkCore::Infrastructure::IResettableService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IResettableService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges ()" />
      <MemberSignature Language="F#" Value="abstract member AcceptAllChanges : unit -&gt; unit" Usage="iStateManager.AcceptAllChanges " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptAllChanges();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void AcceptAllChanges();" />
      <MemberSignature Language="C++ WINRT" Value="void AcceptAllChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrackingQuery">
      <MemberSignature Language="C#" Value="public void BeginTrackingQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTrackingQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.BeginTrackingQuery" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginTrackingQuery ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTrackingQuery : unit -&gt; unit" Usage="iStateManager.BeginTrackingQuery " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginTrackingQuery();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void BeginTrackingQuery();" />
      <MemberSignature Language="C++ WINRT" Value="void BeginTrackingQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedCount">
      <MemberSignature Language="C#" Value="public int ChangedCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangedCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ChangedCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangedCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ChangedCount : int with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ChangedCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangedCount { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int ChangedCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.DbContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContext Context" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DbContext" />
      <MemberSignature Language="F#" Value="member this.Context : Microsoft.EntityFrameworkCore.DbContext" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::DbContext ^ Context { Microsoft::EntityFrameworkCore::DbContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityFinder">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Internal.IEntityFinder CreateEntityFinder (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Internal.IEntityFinder CreateEntityFinder(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.CreateEntityFinder(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntityFinder (entityType As IEntityType) As IEntityFinder" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityFinder : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Internal.IEntityFinder" Usage="iStateManager.CreateEntityFinder entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Internal::IEntityFinder ^ CreateEntityFinder(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Internal::IEntityFinder ^ CreateEntityFinder(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Internal::IEntityFinder CreateEntityFinder(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Internal.IEntityFinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry CreateEntry (System.Collections.Generic.IDictionary&lt;string,object&gt; values, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry CreateEntry(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; values, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.CreateEntry(System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (values As IDictionary(Of String, Object), entityType As IEntityType) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member CreateEntry : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.CreateEntry (values, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ CreateEntry(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ values, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSingleQueryMode">
      <MemberSignature Language="C#" Value="public void EndSingleQueryMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSingleQueryMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.EndSingleQueryMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSingleQueryMode ()" />
      <MemberSignature Language="F#" Value="abstract member EndSingleQueryMode : unit -&gt; unit" Usage="iStateManager.EndSingleQueryMode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSingleQueryMode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void EndSingleQueryMode();" />
      <MemberSignature Language="C++ WINRT" Value="void EndSingleQueryMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityMaterializerSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource EntityMaterializerSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource EntityMaterializerSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.EntityMaterializerSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityMaterializerSource As IEntityMaterializerSource" />
      <MemberSignature Language="F#" Value="member this.EntityMaterializerSource : Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.EntityMaterializerSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ EntityMaterializerSource { Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ EntityMaterializerSource { Microsoft::EntityFrameworkCore::Metadata::Internal::IEntityMaterializerSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="member this.Entries : seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Entries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^ Entries { System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependents (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependents(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependents (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependents : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependents (principalEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^ GetDependents(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ principalEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentsFromNavigation">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsFromNavigation (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsFromNavigation(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsFromNavigation(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependentsFromNavigation (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependentsFromNavigation : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependentsFromNavigation (principalEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^ GetDependentsFromNavigation(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ principalEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentsUsingRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsUsingRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt; GetDependentsUsingRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry principalEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDependentsUsingRelationshipSnapshot (principalEntry As InternalEntityEntry, foreignKey As IForeignKey) As IEnumerable(Of InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetDependentsUsingRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; seq&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetDependentsUsingRelationshipSnapshot (principalEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^ GetDependentsUsingRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ principalEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="principalEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntriesToSave">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; GetEntriesToSave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; GetEntriesToSave() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetEntriesToSave" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntriesToSave () As IReadOnlyList(Of IUpdateEntry)" />
      <MemberSignature Language="F#" Value="abstract member GetEntriesToSave : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" Usage="iStateManager.GetEntriesToSave " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^&gt; ^ GetEntriesToSave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetOrCreateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateEntry (entity As Object) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreateEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetOrCreateEntry entity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetOrCreateEntry(System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetOrCreateEntry(Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry GetOrCreateEntry(winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetOrCreateEntry(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetOrCreateEntry(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateEntry (entity As Object, entityType As IEntityType) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetOrCreateEntry : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetOrCreateEntry (entity, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetOrCreateEntry(System::Object ^ entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetOrCreateEntry(Platform::Object ^ entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry GetOrCreateEntry(winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipal">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipal (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipal(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipal(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipal (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipal : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipal (dependentEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipal(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipal(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry GetPrincipal(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipalUsingPreStoreGeneratedValues">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingPreStoreGeneratedValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingPreStoreGeneratedValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipalUsingPreStoreGeneratedValues (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipalUsingPreStoreGeneratedValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipalUsingPreStoreGeneratedValues (dependentEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipalUsingPreStoreGeneratedValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipalUsingPreStoreGeneratedValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry GetPrincipalUsingPreStoreGeneratedValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipalUsingRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetPrincipalUsingRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry dependentEntry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrincipalUsingRelationshipSnapshot (dependentEntry As InternalEntityEntry, foreignKey As IForeignKey) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipalUsingRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.GetPrincipalUsingRelationshipSnapshot (dependentEntry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipalUsingRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ GetPrincipalUsingRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry GetPrincipalUsingRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; dependentEntry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="dependentEntry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRecordedReferers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Tuple&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt; GetRecordedReferers (object referencedEntity, bool clear);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class Microsoft.EntityFrameworkCore.Metadata.INavigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt; GetRecordedReferers(object referencedEntity, bool clear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetRecordedReferers(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRecordedReferers (referencedEntity As Object, clear As Boolean) As IEnumerable(Of Tuple(Of INavigation, InternalEntityEntry))" />
      <MemberSignature Language="F#" Value="abstract member GetRecordedReferers : obj * bool -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;" Usage="iStateManager.GetRecordedReferers (referencedEntity, clear)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Tuple&lt;Microsoft::EntityFrameworkCore::Metadata::INavigation ^, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^&gt; ^&gt; ^ GetRecordedReferers(System::Object ^ referencedEntity, bool clear);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencedEntity" Type="System.Object" />
        <Parameter Name="clear" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="referencedEntity">To be added.</param>
        <param name="clear">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingQueryMode">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode GetTrackingQueryMode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode GetTrackingQueryMode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetTrackingQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrackingQueryMode (entityType As IEntityType) As TrackingQueryMode" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingQueryMode : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode" Usage="iStateManager.GetTrackingQueryMode entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::TrackingQueryMode GetTrackingQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::TrackingQueryMode GetTrackingQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::TrackingQueryMode GetTrackingQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalEntityEntryNotifier">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier InternalEntityEntryNotifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier InternalEntityEntryNotifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.InternalEntityEntryNotifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalEntityEntryNotifier As IInternalEntityEntryNotifier" />
      <MemberSignature Language="F#" Value="member this.InternalEntityEntryNotifier : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.InternalEntityEntryNotifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ InternalEntityEntryNotifier { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ InternalEntityEntryNotifier { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleQueryMode">
      <MemberSignature Language="C#" Value="public bool IsSingleQueryMode (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSingleQueryMode(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.IsSingleQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSingleQueryMode (entityType As IEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsSingleQueryMode : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; bool" Usage="iStateManager.IsSingleQueryMode entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSingleQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsSingleQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsSingleQueryMode(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier Notify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier Notify" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Notify" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Notify As IInternalEntityEntryNotifier" />
      <MemberSignature Language="F#" Value="member this.Notify : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Notify" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ Notify { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ Notify { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IInternalEntityEntryNotifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="public void OnStateChanged (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.EntityState oldState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStateChanged(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, valuetype Microsoft.EntityFrameworkCore.EntityState oldState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.OnStateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="iStateManager.OnStateChanged (internalEntityEntry, oldState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnStateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void OnStateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState);" />
      <MemberSignature Language="C++ WINRT" Value="void OnStateChanged(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntityEntry, Microsoft::EntityFrameworkCore::EntityState oldState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="oldState" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntry">To be added.</param>
        <param name="oldState">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTracked">
      <MemberSignature Language="C#" Value="public void OnTracked (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, bool fromQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTracked(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, bool fromQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.OnTracked(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnTracked : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * bool -&gt; unit" Usage="iStateManager.OnTracked (internalEntityEntry, fromQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnTracked(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, bool fromQuery);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void OnTracked(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ internalEntityEntry, bool fromQuery);" />
      <MemberSignature Language="C++ WINRT" Value="void OnTracked(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; internalEntityEntry, bool fromQuery);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="fromQuery" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="internalEntityEntry">To be added.</param>
        <param name="fromQuery">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordReferencedUntrackedEntity">
      <MemberSignature Language="C#" Value="public void RecordReferencedUntrackedEntity (object referencedEntity, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry referencedFromEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordReferencedUntrackedEntity(object referencedEntity, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry referencedFromEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.RecordReferencedUntrackedEntity(System.Object,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordReferencedUntrackedEntity (referencedEntity As Object, navigation As INavigation, referencedFromEntry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member RecordReferencedUntrackedEntity : obj * Microsoft.EntityFrameworkCore.Metadata.INavigation * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iStateManager.RecordReferencedUntrackedEntity (referencedEntity, navigation, referencedFromEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecordReferencedUntrackedEntity(System::Object ^ referencedEntity, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ referencedFromEntry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void RecordReferencedUntrackedEntity(Platform::Object ^ referencedEntity, Microsoft::EntityFrameworkCore::Metadata::INavigation ^ navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ referencedFromEntry);" />
      <MemberSignature Language="C++ WINRT" Value="void RecordReferencedUntrackedEntity(winrt::Windows::Foundation::IInspectable const &amp; referencedEntity, Microsoft::EntityFrameworkCore::Metadata::INavigation const &amp; navigation, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; referencedFromEntry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referencedEntity" Type="System.Object" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
        <Parameter Name="referencedFromEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="referencedEntity">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="referencedFromEntry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public int SaveChanges (bool acceptAllChangesOnSuccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SaveChanges(bool acceptAllChangesOnSuccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChanges(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (acceptAllChangesOnSuccess As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges : bool -&gt; int" Usage="iStateManager.SaveChanges acceptAllChangesOnSuccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SaveChanges(bool acceptAllChangesOnSuccess);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; int SaveChanges(bool acceptAllChangesOnSuccess);" />
      <MemberSignature Language="C++ WINRT" Value="int SaveChanges(bool acceptAllChangesOnSuccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptAllChangesOnSuccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="acceptAllChangesOnSuccess">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SaveChangesAsync (bool acceptAllChangesOnSuccess, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; SaveChangesAsync(bool acceptAllChangesOnSuccess, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync : bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iStateManager.SaveChangesAsync (acceptAllChangesOnSuccess, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptAllChangesOnSuccess" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="acceptAllChangesOnSuccess">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SensitiveLoggingEnabled">
      <MemberSignature Language="C#" Value="public bool SensitiveLoggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SensitiveLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SensitiveLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SensitiveLoggingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.SensitiveLoggingEnabled : bool" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SensitiveLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SensitiveLoggingEnabled { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool SensitiveLoggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTracking(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartTracking (entry As InternalEntityEntry) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTracking entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ StartTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ StartTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry StartTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrackingFromQuery">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery (Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery(class Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="F#" Value="abstract member StartTrackingFromQuery : Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTrackingFromQuery (baseEntityType, entity, valueBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ StartTrackingFromQuery(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ baseEntityType, System::Object ^ entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry StartTrackingFromQuery(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; baseEntityType, winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrackingFromQuery">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery (Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery(class Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})" />
      <MemberSignature Language="F#" Value="abstract member StartTrackingFromQuery : Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer * System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTrackingFromQuery (baseEntityType, entity, valueBuffer, handledForeignKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ StartTrackingFromQuery(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ baseEntityType, System::Object ^ entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, System::Collections::Generic::ISet&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ handledForeignKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="handledForeignKeys" Type="System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="handledForeignKeys">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTrackingFromQuery">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery (Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry StartTrackingFromQuery(class Microsoft.EntityFrameworkCore.Metadata.IEntityType baseEntityType, object entity, [in]class Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; modreq(System.Runtime.InteropServices.InAttribute) valueBuffer, class System.Collections.Generic.ISet`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; handledForeignKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartTrackingFromQuery (baseEntityType As IEntityType, entity As Object, valueBuffer As ValueBuffer&amp;, handledForeignKeys As ISet(Of IForeignKey)) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member StartTrackingFromQuery : Microsoft.EntityFrameworkCore.Metadata.IEntityType * obj * Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; * System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.StartTrackingFromQuery (baseEntityType, entity, valueBuffer, handledForeignKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ StartTrackingFromQuery(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ baseEntityType, System::Object ^ entity, Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; ^ valueBuffer, System::Collections::Generic::ISet&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ handledForeignKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" />
        <Parameter Name="handledForeignKeys" Type="System.Collections.Generic.ISet&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="baseEntityType">To be added.</param>
        <param name="entity">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="handledForeignKeys">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Event StateChanged As EventHandler(Of EntityStateChangedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs&gt; " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::EntityFrameworkCore::ChangeTracking::EntityStateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopTracking">
      <MemberSignature Language="C#" Value="public void StopTracking (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopTracking(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StopTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopTracking (entry As InternalEntityEntry)" />
      <MemberSignature Language="F#" Value="abstract member StopTracking : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry -&gt; unit" Usage="iStateManager.StopTracking entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void StopTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value="void StopTracking(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tracked">
      <MemberSignature Language="C#" Value="event EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityTrackedEventArgs&gt; Tracked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.EntityTrackedEventArgs&gt; Tracked" />
      <MemberSignature Language="DocId" Value="E:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Tracked" />
      <MemberSignature Language="VB.NET" Value="Event Tracked As EventHandler(Of EntityTrackedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.Tracked : EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityTrackedEventArgs&gt; " Usage="member this.Tracked : System.EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityTrackedEventArgs&gt; " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::EntityFrameworkCore::ChangeTracking::EntityTrackedEventArgs ^&gt; ^ Tracked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.EntityFrameworkCore.ChangeTracking.EntityTrackedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (entity As Object) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry entity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(System::Object ^ entity);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Platform::Object ^ entity);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(winrt::Windows::Foundation::IInspectable const &amp; entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (Microsoft.EntityFrameworkCore.Metadata.IKey key, object[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(class Microsoft.EntityFrameworkCore.Metadata.IKey key, object[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (key As IKey, keyValues As Object()) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : Microsoft.EntityFrameworkCore.Metadata.IKey * obj[] -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (key, keyValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey ^ key, cli::array &lt;System::Object ^&gt; ^ keyValues);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey ^ key, Platform::Array &lt;Platform::Object ^&gt; ^ keyValues);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey const &amp; key, std::Array &lt;winrt::Windows::Foundation::IInspectable const &amp;&gt; const &amp; keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="keyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="keyValues">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (object entity, Microsoft.EntityFrameworkCore.Metadata.IEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(object entity, class Microsoft.EntityFrameworkCore.Metadata.IEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (entity As Object, type As IEntityType) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : obj * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (entity, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(System::Object ^ entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Platform::Object ^ entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ type);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(winrt::Windows::Foundation::IInspectable const &amp; entity, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (object entity, bool throwOnNonUniqueness = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(object entity, bool throwOnNonUniqueness) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (entity As Object, Optional throwOnNonUniqueness As Boolean = true) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : obj * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (entity, throwOnNonUniqueness)" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(winrt::Windows::Foundation::IInspectable const &amp; entity, bool throwOnNonUniqueness = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="throwOnNonUniqueness" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="throwOnNonUniqueness">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(class Microsoft.EntityFrameworkCore.Metadata.IKey key, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, bool throwOnNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Storage.ValueBuffer * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (key, valueBuffer, throwOnNullKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey ^ key, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, bool throwOnNullKey);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey const &amp; key, Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, bool throwOnNullKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntry">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, bool throwOnNullKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry TryGetEntry(class Microsoft.EntityFrameworkCore.Metadata.IKey key, [in]class Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; modreq(System.Runtime.InteropServices.InAttribute) valueBuffer, bool throwOnNullKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntry (key As IKey, valueBuffer As ValueBuffer&amp;, throwOnNullKey As Boolean) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member TryGetEntry : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; * bool -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="iStateManager.TryGetEntry (key, valueBuffer, throwOnNullKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey ^ key, Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; ^ valueBuffer, bool throwOnNullKey);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry TryGetEntry(Microsoft::EntityFrameworkCore::Metadata::IKey const &amp; key, Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; const &amp; valueBuffer, bool throwOnNullKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" />
        <Parameter Name="throwOnNullKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <param name="throwOnNullKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe ()" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit" Usage="iStateManager.Unsubscribe " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unsubscribe();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Unsubscribe();" />
      <MemberSignature Language="C++ WINRT" Value="void Unsubscribe();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDependentMap">
      <MemberSignature Language="C#" Value="public void UpdateDependentMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDependentMap(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateDependentMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDependentMap (entry As InternalEntityEntry, foreignKey As IForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDependentMap : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IForeignKey -&gt; unit" Usage="iStateManager.UpdateDependentMap (entry, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDependentMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void UpdateDependentMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value="void UpdateDependentMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityMap">
      <MemberSignature Language="C#" Value="public void UpdateIdentityMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, Microsoft.EntityFrameworkCore.Metadata.IKey principalKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateIdentityMap(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, class Microsoft.EntityFrameworkCore.Metadata.IKey principalKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateIdentityMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateIdentityMap (entry As InternalEntityEntry, principalKey As IKey)" />
      <MemberSignature Language="F#" Value="abstract member UpdateIdentityMap : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.IKey -&gt; unit" Usage="iStateManager.UpdateIdentityMap (entry, principalKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateIdentityMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IKey ^ principalKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void UpdateIdentityMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, Microsoft::EntityFrameworkCore::Metadata::IKey ^ principalKey);" />
      <MemberSignature Language="C++ WINRT" Value="void UpdateIdentityMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, Microsoft::EntityFrameworkCore::Metadata::IKey const &amp; principalKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="principalKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; UpdateLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; UpdateLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)" />
      <MemberSignature Language="F#" Value="member this.UpdateLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt;" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ UpdateLogger { Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGeneration">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGeneration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGeneration As IValueGenerationManager" />
      <MemberSignature Language="F#" Value="member this.ValueGeneration : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGeneration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGeneration { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGeneration { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueGenerationManager">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGenerationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager ValueGenerationManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGenerationManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueGenerationManager As IValueGenerationManager" />
      <MemberSignature Language="F#" Value="member this.ValueGenerationManager : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGenerationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGenerationManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ ValueGenerationManager { Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IValueGenerationManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>