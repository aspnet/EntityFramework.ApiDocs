<Type Name="IDependentKeyValueFactory&lt;TKey&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory&lt;TKey&gt;">
  <TypeSignature Language="C#" Value="public interface IDependentKeyValueFactory&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDependentKeyValueFactory`1&lt;TKey&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDependentKeyValueFactory(Of TKey)" />
  <TypeSignature Language="F#" Value="type IDependentKeyValueFactory&lt;'Key&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey&gt;&#xA;public interface class IDependentKeyValueFactory" />
  <TypeSignature Language="C++ CX" Value="public interface class IDependentKeyValueFactory" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TKey&gt;&#xA;__interface IDependentKeyValueFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TKey">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryCreateFromBuffer">
      <MemberSignature Language="C#" Value="public bool TryCreateFromBuffer (Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromBuffer(valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromBuffer (valueBuffer, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer valueBuffer, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromBuffer">
      <MemberSignature Language="C#" Value="public bool TryCreateFromBuffer (Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromBuffer([in]class Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; modreq(System.Runtime.InteropServices.InAttribute) valueBuffer, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFromBuffer (valueBuffer As ValueBuffer&amp;, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromBuffer : Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromBuffer (valueBuffer, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; ^ valueBuffer, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromBuffer(Microsoft::EntityFrameworkCore::Storage::ValueBuffer&amp; const &amp; valueBuffer, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromCurrentValues">
      <MemberSignature Language="C#" Value="public bool TryCreateFromCurrentValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromCurrentValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFromCurrentValues (entry As InternalEntityEntry, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromCurrentValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool TryCreateFromCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey &amp;  key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromOriginalValues">
      <MemberSignature Language="C#" Value="public bool TryCreateFromOriginalValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromOriginalValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFromOriginalValues (entry As InternalEntityEntry, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromOriginalValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromOriginalValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromOriginalValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool TryCreateFromOriginalValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey &amp;  key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromOriginalValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromPreStoreGeneratedCurrentValues">
      <MemberSignature Language="C#" Value="public bool TryCreateFromPreStoreGeneratedCurrentValues (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromPreStoreGeneratedCurrentValues(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFromPreStoreGeneratedCurrentValues (entry As InternalEntityEntry, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromPreStoreGeneratedCurrentValues : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromPreStoreGeneratedCurrentValues (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromPreStoreGeneratedCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool TryCreateFromPreStoreGeneratedCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey &amp;  key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromPreStoreGeneratedCurrentValues(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromRelationshipSnapshot">
      <MemberSignature Language="C#" Value="public bool TryCreateFromRelationshipSnapshot (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, out TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCreateFromRelationshipSnapshot(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, [out] !TKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFromRelationshipSnapshot (entry As InternalEntityEntry, ByRef key As TKey) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryCreateFromRelationshipSnapshot : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry *  -&gt; bool" Usage="iDependentKeyValueFactory.TryCreateFromRelationshipSnapshot (entry, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFromRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey % key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool TryCreateFromRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry ^ entry, [Runtime::InteropServices::Out] TKey &amp;  key);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryCreateFromRelationshipSnapshot(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::InternalEntityEntry const &amp; entry, [Runtime::InteropServices::Out] TKey &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="key" Type="TKey&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>