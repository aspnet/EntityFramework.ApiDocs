<Type Name="UpdatesTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class UpdatesTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : UpdatesFixtureBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UpdatesTestBase`1&lt;(class Microsoft.EntityFrameworkCore.UpdatesFixtureBase) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.UpdatesTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UpdatesTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; UpdatesFixtureBase)&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; UpdatesFixtureBase)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : UpdatesFixtureBasepublic ref class UpdatesTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.UpdatesFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UpdatesTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt;" Usage="new Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UpdatesTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; UpdatesTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" UpdatesTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_remove_partial">
      <MemberSignature Language="C#" Value="public virtual void Can_remove_partial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_remove_partial() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Can_remove_partial" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_remove_partial ()" />
      <MemberSignature Language="F#" Value="abstract member Can_remove_partial : unit -&gt; unit&#xA;override this.Can_remove_partial : unit -&gt; unit" Usage="updatesTestBase.Can_remove_partial " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_remove_partial();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_remove_partial();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_remove_partial();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As UpdatesContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext" Usage="updatesTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::UpdatesModel::UpdatesContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::UpdatesModel::UpdatesContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWithStrategyInTransaction">
      <MemberSignature Language="C#" Value="protected virtual void ExecuteWithStrategyInTransaction (Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; testOperation, Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; nestedTestOperation1 = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExecuteWithStrategyInTransaction(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; testOperation, class System.Action`1&lt;class Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; nestedTestOperation1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.ExecuteWithStrategyInTransaction(System.Action{Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext},System.Action{Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExecuteWithStrategyInTransaction (testOperation As Action(Of UpdatesContext), Optional nestedTestOperation1 As Action(Of UpdatesContext) = null)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteWithStrategyInTransaction : Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; * Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; -&gt; unit&#xA;override this.ExecuteWithStrategyInTransaction : Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; * Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt; -&gt; unit" Usage="updatesTestBase.ExecuteWithStrategyInTransaction (testOperation, nestedTestOperation1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testOperation" Type="System.Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt;" />
        <Parameter Name="nestedTestOperation1" Type="System.Action&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext&gt;" />
      </Parameters>
      <Docs>
        <param name="testOperation">To be added.</param>
        <param name="nestedTestOperation1">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteWithStrategyInTransactionAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task ExecuteWithStrategyInTransactionAsync (Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task&gt; testOperation, Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task&gt; nestedTestOperation1 = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteWithStrategyInTransactionAsync(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, class System.Threading.Tasks.Task&gt; testOperation, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, class System.Threading.Tasks.Task&gt; nestedTestOperation1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.ExecuteWithStrategyInTransactionAsync(System.Func{Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task},System.Func{Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteWithStrategyInTransactionAsync (testOperation As Func(Of UpdatesContext, Task), Optional nestedTestOperation1 As Func(Of UpdatesContext, Task) = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member ExecuteWithStrategyInTransactionAsync : Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, System.Threading.Tasks.Task&gt; * Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.ExecuteWithStrategyInTransactionAsync : Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, System.Threading.Tasks.Task&gt; * Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="updatesTestBase.ExecuteWithStrategyInTransactionAsync (testOperation, nestedTestOperation1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testOperation" Type="System.Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="nestedTestOperation1" Type="System.Func&lt;Microsoft.EntityFrameworkCore.TestModels.UpdatesModel.UpdatesContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="testOperation">To be added.</param>
        <param name="nestedTestOperation1">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove_partial_on_concurrency_token_original_value_mismatch_throws">
      <MemberSignature Language="C#" Value="public virtual void Remove_partial_on_concurrency_token_original_value_mismatch_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove_partial_on_concurrency_token_original_value_mismatch_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Remove_partial_on_concurrency_token_original_value_mismatch_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove_partial_on_concurrency_token_original_value_mismatch_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Remove_partial_on_concurrency_token_original_value_mismatch_throws : unit -&gt; unit&#xA;override this.Remove_partial_on_concurrency_token_original_value_mismatch_throws : unit -&gt; unit" Usage="updatesTestBase.Remove_partial_on_concurrency_token_original_value_mismatch_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove_partial_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Remove_partial_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Remove_partial_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove_partial_on_missing_record_throws">
      <MemberSignature Language="C#" Value="public virtual void Remove_partial_on_missing_record_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove_partial_on_missing_record_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Remove_partial_on_missing_record_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove_partial_on_missing_record_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Remove_partial_on_missing_record_throws : unit -&gt; unit&#xA;override this.Remove_partial_on_missing_record_throws : unit -&gt; unit" Usage="updatesTestBase.Remove_partial_on_missing_record_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove_partial_on_missing_record_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Remove_partial_on_missing_record_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Remove_partial_on_missing_record_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_partial_update">
      <MemberSignature Language="C#" Value="public virtual void Save_partial_update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_partial_update() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Save_partial_update" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save_partial_update ()" />
      <MemberSignature Language="F#" Value="abstract member Save_partial_update : unit -&gt; unit&#xA;override this.Save_partial_update : unit -&gt; unit" Usage="updatesTestBase.Save_partial_update " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save_partial_update();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Save_partial_update();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Save_partial_update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_partial_update_on_concurrency_token_original_value_mismatch_throws">
      <MemberSignature Language="C#" Value="public virtual void Save_partial_update_on_concurrency_token_original_value_mismatch_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_partial_update_on_concurrency_token_original_value_mismatch_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Save_partial_update_on_concurrency_token_original_value_mismatch_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save_partial_update_on_concurrency_token_original_value_mismatch_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Save_partial_update_on_concurrency_token_original_value_mismatch_throws : unit -&gt; unit&#xA;override this.Save_partial_update_on_concurrency_token_original_value_mismatch_throws : unit -&gt; unit" Usage="updatesTestBase.Save_partial_update_on_concurrency_token_original_value_mismatch_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save_partial_update_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Save_partial_update_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Save_partial_update_on_concurrency_token_original_value_mismatch_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_partial_update_on_missing_record_throws">
      <MemberSignature Language="C#" Value="public virtual void Save_partial_update_on_missing_record_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_partial_update_on_missing_record_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Save_partial_update_on_missing_record_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save_partial_update_on_missing_record_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Save_partial_update_on_missing_record_throws : unit -&gt; unit&#xA;override this.Save_partial_update_on_missing_record_throws : unit -&gt; unit" Usage="updatesTestBase.Save_partial_update_on_missing_record_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save_partial_update_on_missing_record_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Save_partial_update_on_missing_record_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Save_partial_update_on_missing_record_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save_replaced_principal">
      <MemberSignature Language="C#" Value="public virtual void Save_replaced_principal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save_replaced_principal() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.Save_replaced_principal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Save_replaced_principal ()" />
      <MemberSignature Language="F#" Value="abstract member Save_replaced_principal : unit -&gt; unit&#xA;override this.Save_replaced_principal : unit -&gt; unit" Usage="updatesTestBase.Save_replaced_principal " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save_replaced_principal();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Save_replaced_principal();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Save_replaced_principal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges : unit -&gt; unit&#xA;override this.SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges : unit -&gt; unit" Usage="updatesTestBase.SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_false_processes_all_tracked_entities_without_calling_AcceptAllChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_processes_all_tracked_entities">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_processes_all_tracked_entities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_processes_all_tracked_entities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.SaveChanges_processes_all_tracked_entities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_processes_all_tracked_entities ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_processes_all_tracked_entities : unit -&gt; unit&#xA;override this.SaveChanges_processes_all_tracked_entities : unit -&gt; unit" Usage="updatesTestBase.SaveChanges_processes_all_tracked_entities " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_processes_all_tracked_entities();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_processes_all_tracked_entities();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_processes_all_tracked_entities();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges () As Task" />
      <MemberSignature Language="F#" Value="member this.SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges : unit -&gt; System.Threading.Tasks.Task" Usage="updatesTestBase.SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SaveChangesAsync_false_processes_all_tracked_entities_without_calling_AcceptAllChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_processes_all_tracked_entities">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SaveChangesAsync_processes_all_tracked_entities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SaveChangesAsync_processes_all_tracked_entities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.SaveChangesAsync_processes_all_tracked_entities" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChangesAsync_processes_all_tracked_entities () As Task" />
      <MemberSignature Language="F#" Value="member this.SaveChangesAsync_processes_all_tracked_entities : unit -&gt; System.Threading.Tasks.Task" Usage="updatesTestBase.SaveChangesAsync_processes_all_tracked_entities " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SaveChangesAsync_processes_all_tracked_entities();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConcurrencyMessage">
      <MemberSignature Language="C#" Value="protected abstract string UpdateConcurrencyMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateConcurrencyMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.UpdateConcurrencyMessage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property UpdateConcurrencyMessage As String" />
      <MemberSignature Language="F#" Value="member this.UpdateConcurrencyMessage : string" Usage="Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt;.UpdateConcurrencyMessage" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ UpdateConcurrencyMessage { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ UpdateConcurrencyMessage { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateConcurrencyTokenMessage">
      <MemberSignature Language="C#" Value="protected abstract string UpdateConcurrencyTokenMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateConcurrencyTokenMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.UpdateConcurrencyTokenMessage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property UpdateConcurrencyTokenMessage As String" />
      <MemberSignature Language="F#" Value="member this.UpdateConcurrencyTokenMessage : string" Usage="Microsoft.EntityFrameworkCore.UpdatesTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.UpdatesFixtureBase)&gt;.UpdateConcurrencyTokenMessage" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ UpdateConcurrencyTokenMessage { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ UpdateConcurrencyTokenMessage { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="protected virtual void UseTransaction (Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UseTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade facade, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.UpdatesTestBase`1.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UseTransaction (facade As DatabaseFacade, transaction As IDbContextTransaction)" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction -&gt; unit&#xA;override this.UseTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction -&gt; unit" Usage="updatesTestBase.UseTransaction (facade, transaction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UseTransaction(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ facade, Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="facade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" />
        <Parameter Name="transaction" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
      </Parameters>
      <Docs>
        <param name="facade">To be added.</param>
        <param name="transaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>