<Type Name="PropertyExtensions" FullName="Microsoft.EntityFrameworkCore.PropertyExtensions">
  <TypeSignature Language="C#" Value="public static class PropertyExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.PropertyExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module PropertyExtensions" />
  <TypeSignature Language="F#" Value="type PropertyExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class PropertyExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class PropertyExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetContainingForeignKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; GetContainingForeignKeys (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt; GetContainingForeignKeys(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingForeignKeys (property As IProperty) As IEnumerable(Of IForeignKey)" />
      <MemberSignature Language="F#" Value="static member GetContainingForeignKeys : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingForeignKeys property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^&gt; ^ GetContainingForeignKeys(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get foreign keys for. </param>
        <summary>
                Gets all foreign keys that use this property (including composite foreign keys in which this property
                is included).
            </summary>
        <returns>
                The foreign keys that use this property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingIndexes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt; GetContainingIndexes (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IIndex&gt; GetContainingIndexes(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingIndexes(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingIndexes (property As IProperty) As IEnumerable(Of IIndex)" />
      <MemberSignature Language="F#" Value="static member GetContainingIndexes : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingIndexes property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::IIndex ^&gt; ^ GetContainingIndexes(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get indexes for. </param>
        <summary>
                Gets all indexes that use this property (including composite indexes in which this property
                is included).
            </summary>
        <returns>
                The indexes that use this property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt; GetContainingKeys (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IKey&gt; GetContainingKeys(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingKeys (property As IProperty) As IEnumerable(Of IKey)" />
      <MemberSignature Language="F#" Value="static member GetContainingKeys : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingKeys property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::IKey ^&gt; ^ GetContainingKeys(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get primary and alternate keys for. </param>
        <summary>
                Gets all primary or alternate keys that use this property (including composite keys in which this property
                is included).
            </summary>
        <returns>
                The primary and alternate keys that use this property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IKey GetContainingPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IKey GetContainingPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingPrimaryKey (property As IProperty) As IKey" />
      <MemberSignature Language="F#" Value="static member GetContainingPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IKey" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingPrimaryKey property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Metadata::IKey ^ GetContainingPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Metadata::IKey ^ GetContainingPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get primary key for. </param>
        <summary>
                Gets the primary key that uses this property (including a composite primary key in which this property
                is included).
            </summary>
        <returns>
                The primary that use this property, or null if it is not part of the primary key.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyValueComparer">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetKeyValueComparer (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetKeyValueComparer(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetKeyValueComparer(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetKeyValueComparer (property As IProperty) As ValueComparer" />
      <MemberSignature Language="F#" Value="static member GetKeyValueComparer : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetKeyValueComparer property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::ChangeTracking::ValueComparer ^ GetKeyValueComparer(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for this property, or null if none is set.
            </summary>
        <returns> The comparer, or <c>null</c> if none has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetMaxLength (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetMaxLength(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMaxLength (property As IProperty) As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="static member GetMaxLength : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetMaxLength property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; GetMaxLength(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get the maximum length of. </param>
        <summary>
                Gets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" /> '
                then this is the maximum number of characters.
            </summary>
        <returns> The maximum length, or null if none if defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderClrType">
      <MemberSignature Language="C#" Value="public static Type GetProviderClrType (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetProviderClrType(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetProviderClrType(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderClrType (property As IProperty) As Type" />
      <MemberSignature Language="F#" Value="static member GetProviderClrType : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Type" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetProviderClrType property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ GetProviderClrType(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Platform::Type ^ GetProviderClrType(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Gets the type that the property value will be converted to before being sent to the database provider.
            </summary>
        <returns> The provider type, or <c>null</c> if none has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueComparer">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetValueComparer (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer GetValueComparer(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueComparer(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueComparer (property As IProperty) As ValueComparer" />
      <MemberSignature Language="F#" Value="static member GetValueComparer : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueComparer property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::ChangeTracking::ValueComparer ^ GetValueComparer(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for this property, or null if none is set.
            </summary>
        <returns> The comparer, or <c>null</c> if none has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter GetValueConverter (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter GetValueConverter(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueConverter(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueConverter (property As IProperty) As ValueConverter" />
      <MemberSignature Language="F#" Value="static member GetValueConverter : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueConverter property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter ^ GetValueConverter(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter ^ GetValueConverter(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Gets the custom <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" /> set for this property.
            </summary>
        <returns> The converter, or <c>null</c> if none has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueGeneratorFactory">
      <MemberSignature Language="C#" Value="public static Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; GetValueGeneratorFactory (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; GetValueGeneratorFactory(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueGeneratorFactory(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueGeneratorFactory (property As IProperty) As Func(Of IProperty, IEntityType, ValueGenerator)" />
      <MemberSignature Language="F#" Value="static member GetValueGeneratorFactory : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueGeneratorFactory property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Func&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^, Microsoft::EntityFrameworkCore::ValueGeneration::ValueGenerator ^&gt; ^ GetValueGeneratorFactory(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get the value generator factory for. </param>
        <summary>
                Gets the factory that has been set to generate values for this property, if any.
            </summary>
        <returns> The factory, or null if no factory has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForeignKey">
      <MemberSignature Language="C#" Value="public static bool IsForeignKey (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsForeignKey (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsForeignKey : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.IsForeignKey property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsForeignKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsForeignKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to check. </param>
        <summary>
                Gets a value indicating whether this property is used as a foreign key (or part of a composite foreign key).
            </summary>
        <returns>
                True if the property is used as a foreign key, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndex">
      <MemberSignature Language="C#" Value="public static bool IsIndex (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIndex(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsIndex (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIndex : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.IsIndex property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsIndex(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsIndex(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to check. </param>
        <summary>
                Gets a value indicating whether this property is used as an index (or part of a composite index).
            </summary>
        <returns>
                True if the property is used as an index, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public static bool IsKey (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsKey (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsKey : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.IsKey property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to check. </param>
        <summary>
                Gets a value indicating whether this property is used as part of a primary or alternate key
                (or part of a composite primary or alternate key).
            </summary>
        <returns>
                True if the property is part of a key, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public static bool IsPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsPrimaryKey (property As IProperty) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; bool" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.IsPrimaryKey property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to check. </param>
        <summary>
                Gets a value indicating whether this property is used as the primary key (or part of a composite primary key).
            </summary>
        <returns>
                True if the property is used as the primary key, otherwise false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public static Nullable&lt;bool&gt; IsUnicode (this Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsUnicode(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsUnicode (property As IProperty) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsUnicode : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.PropertyExtensions.IsUnicode property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;bool&gt; IsUnicode(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get the Unicode setting for. </param>
        <summary>
                Gets a value indicating whether or not the property can persist Unicode characters.
            </summary>
        <returns> The Unicode setting, or null if none if defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>