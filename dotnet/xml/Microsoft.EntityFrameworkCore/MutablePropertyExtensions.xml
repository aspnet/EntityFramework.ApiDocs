<Type Name="MutablePropertyExtensions" FullName="Microsoft.EntityFrameworkCore.MutablePropertyExtensions">
  <TypeSignature Language="C#" Value="public static class MutablePropertyExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutablePropertyExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.MutablePropertyExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MutablePropertyExtensions" />
  <TypeSignature Language="F#" Value="type MutablePropertyExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutablePropertyExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class MutablePropertyExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class MutablePropertyExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetContainingForeignKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; GetContainingForeignKeys (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt; GetContainingForeignKeys(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingForeignKeys (property As IMutableProperty) As IEnumerable(Of IMutableForeignKey)" />
      <MemberSignature Language="F#" Value="static member GetContainingForeignKeys : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingForeignKeys property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::IMutableForeignKey ^&gt; ^ GetContainingForeignKeys(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get foreign keys for. </param>
        <summary>
                Gets all foreign keys that use this property (including composite foreign keys in which this property
                is included).
            </summary>
        <returns>
                The foreign keys that use this property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableKey&gt; GetContainingKeys (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IMutableKey&gt; GetContainingKeys(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingKeys (property As IMutableProperty) As IEnumerable(Of IMutableKey)" />
      <MemberSignature Language="F#" Value="static member GetContainingKeys : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableKey&gt;" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingKeys property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::IMutableKey ^&gt; ^ GetContainingKeys(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IMutableKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get primary and alternate keys for. </param>
        <summary>
                Gets all primary or alternate keys that use this property (including composite keys in which this property
                is included).
            </summary>
        <returns>
                The primary and alternate keys that use this property.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingPrimaryKey">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetContainingPrimaryKey (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IMutableKey GetContainingPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetContainingPrimaryKey (property As IMutableProperty) As IMutableKey" />
      <MemberSignature Language="F#" Value="static member GetContainingPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IMutableKey" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingPrimaryKey property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Metadata::IMutableKey ^ GetContainingPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Metadata::IMutableKey ^ GetContainingPrimaryKey(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property to get primary key for. </param>
        <summary>
                Gets the primary key that uses this property (including a composite primary key in which this property
                is included).
            </summary>
        <returns>
                The primary that use this property, or null if it is not part of the primary key.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public static void IsUnicode (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Nullable&lt;bool&gt; unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsUnicode(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, valuetype System.Nullable`1&lt;bool&gt; unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub IsUnicode (property As IMutableProperty, unicode As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member IsUnicode : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.IsUnicode (property, unicode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void IsUnicode(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Nullable&lt;bool&gt; unicode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="property"> The property to set the value for. </param>
        <param name="unicode"> True if the property accepts Unicode characters, false if it does not, null to clear the setting. </param>
        <summary>
                Sets a value indicating whether or not this property can persist Unicode characters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyValueComparer">
      <MemberSignature Language="C#" Value="public static void SetKeyValueComparer (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetKeyValueComparer(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetKeyValueComparer(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetKeyValueComparer (property As IMutableProperty, comparer As ValueComparer)" />
      <MemberSignature Language="F#" Value="static member SetKeyValueComparer : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetKeyValueComparer (property, comparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetKeyValueComparer(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Microsoft::EntityFrameworkCore::ChangeTracking::ValueComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="comparer"> The comparer, or <c>null</c> to remove any previously set comparer. </param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for this property when performing key comparisons..
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxLength">
      <MemberSignature Language="C#" Value="public static void SetMaxLength (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Nullable&lt;int&gt; maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMaxLength(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, valuetype System.Nullable`1&lt;int32&gt; maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetMaxLength (property As IMutableProperty, maxLength As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="static member SetMaxLength : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetMaxLength (property, maxLength)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetMaxLength(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Nullable&lt;int&gt; maxLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="maxLength" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="property"> The property to set the maximum length of. </param>
        <param name="maxLength"> The maximum length of data that is allowed in this property. </param>
        <summary>
                Sets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" /> '
                then this is the maximum number of characters.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProviderClrType">
      <MemberSignature Language="C#" Value="public static void SetProviderClrType (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Type providerClrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProviderClrType(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class System.Type providerClrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetProviderClrType(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetProviderClrType (property As IMutableProperty, providerClrType As Type)" />
      <MemberSignature Language="F#" Value="static member SetProviderClrType : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Type -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetProviderClrType (property, providerClrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetProviderClrType(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Type ^ providerClrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetProviderClrType(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Platform::Type ^ providerClrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="providerClrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="providerClrType"> The type to use, or <c>null</c> to remove any previously set type. </param>
        <summary>
                Sets the type that the property value will be converted to before being sent to the database provider.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueComparer">
      <MemberSignature Language="C#" Value="public static void SetValueComparer (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValueComparer(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueComparer(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetValueComparer (property As IMutableProperty, comparer As ValueComparer)" />
      <MemberSignature Language="F#" Value="static member SetValueComparer : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueComparer (property, comparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetValueComparer(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Microsoft::EntityFrameworkCore::ChangeTracking::ValueComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="comparer" Type="Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="comparer"> The comparer, or <c>null</c> to remove any previously set comparer. </param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer" /> for this property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueConverter">
      <MemberSignature Language="C#" Value="public static void SetValueConverter (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValueConverter(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueConverter(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetValueConverter (property As IMutableProperty, converter As ValueConverter)" />
      <MemberSignature Language="F#" Value="static member SetValueConverter : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueConverter (property, converter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetValueConverter(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter ^ converter);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetValueConverter(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverter ^ converter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <param name="converter"> The converter, or <c>null</c> to remove any previously set converter. </param>
        <summary>
                Sets the custom <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter" /> for this property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueGeneratorFactory">
      <MemberSignature Language="C#" Value="public static void SetValueGeneratorFactory (this Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValueGeneratorFactory(class Microsoft.EntityFrameworkCore.Metadata.IMutableProperty property, class System.Func`3&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; valueGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueGeneratorFactory(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetValueGeneratorFactory (property As IMutableProperty, valueGeneratorFactory As Func(Of IProperty, IEntityType, ValueGenerator))" />
      <MemberSignature Language="F#" Value="static member SetValueGeneratorFactory : Microsoft.EntityFrameworkCore.Metadata.IMutableProperty * Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty, Microsoft.EntityFrameworkCore.Metadata.IEntityType, Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueGeneratorFactory (property, valueGeneratorFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetValueGeneratorFactory(Microsoft::EntityFrameworkCore::Metadata::IMutableProperty ^ property, Func&lt;Microsoft::EntityFrameworkCore::Metadata::IProperty ^, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^, Microsoft::EntityFrameworkCore::ValueGeneration::ValueGenerator ^&gt; ^ valueGeneratorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" RefType="this" />
        <Parameter Name="valueGeneratorFactory" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator&gt;" />
      </Parameters>
      <Docs>
        <param name="property"> The property to set the value generator for. </param>
        <param name="valueGeneratorFactory">
                A factory that will be used to create the value generator, or null to
                clear any previously set factory.
            </param>
        <summary>
          <para>
                    Sets the factory to use for generating values for this property, or null to clear any previously set factory.
                </para>
          <para>
                    Setting null does not disable value generation for this property, it just clears any generator explicitly
                    configured for this property. The database provider may still have a value generator for the property type.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>