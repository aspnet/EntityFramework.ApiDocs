<Type Name="MonsterFixupTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class MonsterFixupTestBase&lt;TFixture&gt; : IDisposable, Xunit.IClassFixture&lt;TFixture&gt; where TFixture : MonsterFixupTestBase&lt;TFixture&gt;.MonsterFixupFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MonsterFixupTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1/MonsterFixupFixtureBase&lt;!TFixture&gt;) TFixture&gt; extends System.Object implements class System.IDisposable, class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MonsterFixupTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture), IDisposable" />
  <TypeSignature Language="F#" Value="type MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : MonsterFixupTestBase&lt;TFixture&gt;::MonsterFixupFixtureBasegcnew()public ref class MonsterFixupTestBase abstract : IDisposable, Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;TFixture&gt;+MonsterFixupFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MonsterFixupTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MonsterFixupTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; MonsterFixupTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" MonsterFixupTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_build_monster_model_and_seed_data_using_all_navigations">
      <MemberSignature Language="C#" Value="public virtual void Can_build_monster_model_and_seed_data_using_all_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_build_monster_model_and_seed_data_using_all_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Can_build_monster_model_and_seed_data_using_all_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_build_monster_model_and_seed_data_using_all_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Can_build_monster_model_and_seed_data_using_all_navigations : unit -&gt; unit&#xA;override this.Can_build_monster_model_and_seed_data_using_all_navigations : unit -&gt; unit" Usage="monsterFixupTestBase.Can_build_monster_model_and_seed_data_using_all_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_all_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_all_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_build_monster_model_and_seed_data_using_all_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_build_monster_model_and_seed_data_using_dependent_navigations">
      <MemberSignature Language="C#" Value="public virtual void Can_build_monster_model_and_seed_data_using_dependent_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_build_monster_model_and_seed_data_using_dependent_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Can_build_monster_model_and_seed_data_using_dependent_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_build_monster_model_and_seed_data_using_dependent_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Can_build_monster_model_and_seed_data_using_dependent_navigations : unit -&gt; unit&#xA;override this.Can_build_monster_model_and_seed_data_using_dependent_navigations : unit -&gt; unit" Usage="monsterFixupTestBase.Can_build_monster_model_and_seed_data_using_dependent_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_dependent_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_dependent_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_build_monster_model_and_seed_data_using_dependent_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_build_monster_model_and_seed_data_using_FKs">
      <MemberSignature Language="C#" Value="public virtual void Can_build_monster_model_and_seed_data_using_FKs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_build_monster_model_and_seed_data_using_FKs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Can_build_monster_model_and_seed_data_using_FKs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_build_monster_model_and_seed_data_using_FKs ()" />
      <MemberSignature Language="F#" Value="abstract member Can_build_monster_model_and_seed_data_using_FKs : unit -&gt; unit&#xA;override this.Can_build_monster_model_and_seed_data_using_FKs : unit -&gt; unit" Usage="monsterFixupTestBase.Can_build_monster_model_and_seed_data_using_FKs " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_FKs();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_FKs();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_build_monster_model_and_seed_data_using_FKs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add">
      <MemberSignature Language="C#" Value="public virtual void Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add ()" />
      <MemberSignature Language="F#" Value="abstract member Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add : unit -&gt; unit&#xA;override this.Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add : unit -&gt; unit" Usage="monsterFixupTestBase.Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_build_monster_model_and_seed_data_using_navigations_with_deferred_add();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_build_monster_model_and_seed_data_using_principal_navigations">
      <MemberSignature Language="C#" Value="public virtual void Can_build_monster_model_and_seed_data_using_principal_navigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Can_build_monster_model_and_seed_data_using_principal_navigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Can_build_monster_model_and_seed_data_using_principal_navigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Can_build_monster_model_and_seed_data_using_principal_navigations ()" />
      <MemberSignature Language="F#" Value="abstract member Can_build_monster_model_and_seed_data_using_principal_navigations : unit -&gt; unit&#xA;override this.Can_build_monster_model_and_seed_data_using_principal_navigations : unit -&gt; unit" Usage="monsterFixupTestBase.Can_build_monster_model_and_seed_data_using_principal_navigations " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_principal_navigations();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Can_build_monster_model_and_seed_data_using_principal_navigations();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Can_build_monster_model_and_seed_data_using_principal_navigations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Composite_fixup_happens_when_FKs_change_test">
      <MemberSignature Language="C#" Value="public virtual void Composite_fixup_happens_when_FKs_change_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Composite_fixup_happens_when_FKs_change_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Composite_fixup_happens_when_FKs_change_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Composite_fixup_happens_when_FKs_change_test ()" />
      <MemberSignature Language="F#" Value="abstract member Composite_fixup_happens_when_FKs_change_test : unit -&gt; unit&#xA;override this.Composite_fixup_happens_when_FKs_change_test : unit -&gt; unit" Usage="monsterFixupTestBase.Composite_fixup_happens_when_FKs_change_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Composite_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Composite_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Composite_fixup_happens_when_FKs_change_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAndSeedDatabase">
      <MemberSignature Language="C#" Value="protected void CreateAndSeedDatabase (Action&lt;Microsoft.EntityFrameworkCore.TestModels.MonsterContext&gt; seed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CreateAndSeedDatabase(class System.Action`1&lt;class Microsoft.EntityFrameworkCore.TestModels.MonsterContext&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.CreateAndSeedDatabase(System.Action{Microsoft.EntityFrameworkCore.TestModels.MonsterContext})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CreateAndSeedDatabase (seed As Action(Of MonsterContext))" />
      <MemberSignature Language="F#" Value="member this.CreateAndSeedDatabase : Action&lt;Microsoft.EntityFrameworkCore.TestModels.MonsterContext&gt; -&gt; unit" Usage="monsterFixupTestBase.CreateAndSeedDatabase seed" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CreateAndSeedDatabase(Action&lt;Microsoft::EntityFrameworkCore::TestModels::MonsterContext ^&gt; ^ seed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seed" Type="System.Action&lt;Microsoft.EntityFrameworkCore.TestModels.MonsterContext&gt;" />
      </Parameters>
      <Docs>
        <param name="seed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.MonsterContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.MonsterContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As MonsterContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.MonsterContext" Usage="monsterFixupTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::MonsterContext ^ CreateContext();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::MonsterContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::MonsterContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.MonsterContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="monsterFixupTestBase.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test">
      <MemberSignature Language="C#" Value="public virtual void Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test ()" />
      <MemberSignature Language="F#" Value="abstract member Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test : unit -&gt; unit&#xA;override this.Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test : unit -&gt; unit" Usage="monsterFixupTestBase.Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Fixup_with_binary_keys_happens_when_FKs_or_navigations_change_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FkVerification">
      <MemberSignature Language="C#" Value="protected void FkVerification ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FkVerification() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.FkVerification" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FkVerification ()" />
      <MemberSignature Language="F#" Value="member this.FkVerification : unit -&gt; unit" Usage="monsterFixupTestBase.FkVerification " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FkVerification();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void FkVerification();" />
      <MemberSignature Language="C++ WINRT" Value="void FkVerification();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationVerification">
      <MemberSignature Language="C#" Value="protected void NavigationVerification ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NavigationVerification() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.NavigationVerification" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NavigationVerification ()" />
      <MemberSignature Language="F#" Value="member this.NavigationVerification : unit -&gt; unit" Usage="monsterFixupTestBase.NavigationVerification " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NavigationVerification();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void NavigationVerification();" />
      <MemberSignature Language="C++ WINRT" Value="void NavigationVerification();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One_to_many_fixup_happens_when_collection_changes">
      <MemberSignature Language="C#" Value="public virtual void One_to_many_fixup_happens_when_collection_changes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void One_to_many_fixup_happens_when_collection_changes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.One_to_many_fixup_happens_when_collection_changes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub One_to_many_fixup_happens_when_collection_changes ()" />
      <MemberSignature Language="F#" Value="abstract member One_to_many_fixup_happens_when_collection_changes : unit -&gt; unit&#xA;override this.One_to_many_fixup_happens_when_collection_changes : unit -&gt; unit" Usage="monsterFixupTestBase.One_to_many_fixup_happens_when_collection_changes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_collection_changes();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_collection_changes();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void One_to_many_fixup_happens_when_collection_changes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One_to_many_fixup_happens_when_FKs_change_test">
      <MemberSignature Language="C#" Value="public virtual void One_to_many_fixup_happens_when_FKs_change_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void One_to_many_fixup_happens_when_FKs_change_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.One_to_many_fixup_happens_when_FKs_change_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub One_to_many_fixup_happens_when_FKs_change_test ()" />
      <MemberSignature Language="F#" Value="abstract member One_to_many_fixup_happens_when_FKs_change_test : unit -&gt; unit&#xA;override this.One_to_many_fixup_happens_when_FKs_change_test : unit -&gt; unit" Usage="monsterFixupTestBase.One_to_many_fixup_happens_when_FKs_change_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void One_to_many_fixup_happens_when_FKs_change_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One_to_many_fixup_happens_when_reference_changes">
      <MemberSignature Language="C#" Value="public virtual void One_to_many_fixup_happens_when_reference_changes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void One_to_many_fixup_happens_when_reference_changes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.One_to_many_fixup_happens_when_reference_changes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub One_to_many_fixup_happens_when_reference_changes ()" />
      <MemberSignature Language="F#" Value="abstract member One_to_many_fixup_happens_when_reference_changes : unit -&gt; unit&#xA;override this.One_to_many_fixup_happens_when_reference_changes : unit -&gt; unit" Usage="monsterFixupTestBase.One_to_many_fixup_happens_when_reference_changes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_reference_changes();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void One_to_many_fixup_happens_when_reference_changes();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void One_to_many_fixup_happens_when_reference_changes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One_to_one_fixup_happens_when_FKs_change_test">
      <MemberSignature Language="C#" Value="public virtual void One_to_one_fixup_happens_when_FKs_change_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void One_to_one_fixup_happens_when_FKs_change_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.One_to_one_fixup_happens_when_FKs_change_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub One_to_one_fixup_happens_when_FKs_change_test ()" />
      <MemberSignature Language="F#" Value="abstract member One_to_one_fixup_happens_when_FKs_change_test : unit -&gt; unit&#xA;override this.One_to_one_fixup_happens_when_FKs_change_test : unit -&gt; unit" Usage="monsterFixupTestBase.One_to_one_fixup_happens_when_FKs_change_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void One_to_one_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void One_to_one_fixup_happens_when_FKs_change_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void One_to_one_fixup_happens_when_FKs_change_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One_to_one_fixup_happens_when_reference_change_test">
      <MemberSignature Language="C#" Value="public virtual void One_to_one_fixup_happens_when_reference_change_test ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void One_to_one_fixup_happens_when_reference_change_test() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.One_to_one_fixup_happens_when_reference_change_test" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub One_to_one_fixup_happens_when_reference_change_test ()" />
      <MemberSignature Language="F#" Value="abstract member One_to_one_fixup_happens_when_reference_change_test : unit -&gt; unit&#xA;override this.One_to_one_fixup_happens_when_reference_change_test : unit -&gt; unit" Usage="monsterFixupTestBase.One_to_one_fixup_happens_when_reference_change_test " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void One_to_one_fixup_happens_when_reference_change_test();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void One_to_one_fixup_happens_when_reference_change_test();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void One_to_one_fixup_happens_when_reference_change_test();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.DbContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As DbContextOptions" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.EntityFrameworkCore.DbContextOptions" Usage="Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Options" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbContextOptions ^ Options { Microsoft::EntityFrameworkCore::DbContextOptions ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::DbContextOptions ^ Options { Microsoft::EntityFrameworkCore::DbContextOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SimpleVerification">
      <MemberSignature Language="C#" Value="protected void SimpleVerification ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SimpleVerification() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.SimpleVerification" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SimpleVerification ()" />
      <MemberSignature Language="F#" Value="member this.SimpleVerification : unit -&gt; unit" Usage="monsterFixupTestBase.SimpleVerification " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SimpleVerification();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void SimpleVerification();" />
      <MemberSignature Language="C++ WINRT" Value="void SimpleVerification();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStore">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestUtilities.TestStore TestStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestUtilities.TestStore TestStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.TestStore" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TestStore As TestStore" />
      <MemberSignature Language="F#" Value="member this.TestStore : Microsoft.EntityFrameworkCore.TestUtilities.TestStore" Usage="Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.TestStore" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::TestUtilities::TestStore ^ TestStore { Microsoft::EntityFrameworkCore::TestUtilities::TestStore ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestUtilities.TestStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDetectChanges">
      <MemberSignature Language="C#" Value="protected bool UseDetectChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDetectChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.MonsterFixupTestBase`1.UseDetectChanges" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UseDetectChanges As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseDetectChanges : bool" Usage="Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.MonsterFixupTestBase&lt;'Fixture&gt;.MonsterFixupFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.UseDetectChanges" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool UseDetectChanges { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property bool UseDetectChanges { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>