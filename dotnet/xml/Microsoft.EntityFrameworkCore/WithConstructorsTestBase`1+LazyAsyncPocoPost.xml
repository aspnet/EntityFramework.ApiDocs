<Type Name="WithConstructorsTestBase&lt;TFixture&gt;+LazyAsyncPocoPost" FullName="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+LazyAsyncPocoPost">
  <TypeSignature Language="C#" Value="protected class WithConstructorsTestBase&lt;TFixture&gt;.LazyAsyncPocoPost where TFixture : WithConstructorsTestBase&lt;TFixture&gt;.WithConstructorsFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit WithConstructorsTestBase`1/LazyAsyncPocoPost&lt;.ctor (class Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/WithConstructorsFixtureBase&lt;!TFixture&gt;) TFixture&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyAsyncPocoPost" />
  <TypeSignature Language="VB.NET" Value="Protected Class WithConstructorsTestBase(Of TFixture).LazyAsyncPocoPost" />
  <TypeSignature Language="C++ CLI" Value="protected:  where TFixture : WithConstructorsTestBase&lt;TFixture&gt;::WithConstructorsFixtureBasegcnew()ref class WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoPost" />
  <TypeSignature Language="C++ CX" Value="protected: ref class WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoPost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+WithConstructorsFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyAsyncPocoPost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyAsyncPocoPost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyAsyncPocoPost();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LazyAsyncPocoPost();" />
      <MemberSignature Language="C++ WINRT" Value=" LazyAsyncPocoPost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyAsyncPocoPost.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Integer" />
      <MemberSignature Language="F#" Value="member this.Id : int with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyAsyncPocoPost.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyAsyncPocoBlog">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;.LazyAsyncPocoBlog LazyAsyncPocoBlog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/LazyAsyncPocoBlog&lt;!TFixture&gt; LazyAsyncPocoBlog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyAsyncPocoPost.LazyAsyncPocoBlog" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyAsyncPocoBlog As WithConstructorsTestBase(Of TFixture).LazyAsyncPocoBlog" />
      <MemberSignature Language="F#" Value="member this.LazyAsyncPocoBlog : Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyAsyncPocoBlog with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyAsyncPocoPost.LazyAsyncPocoBlog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ LazyAsyncPocoBlog { Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ get(); void set(Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ LazyAsyncPocoBlog { Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ get(); void set(Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyAsyncPocoBlog ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+LazyAsyncPocoBlog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadBlogAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;.LazyAsyncPocoBlog&gt; LoadBlogAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/LazyAsyncPocoBlog&lt;!TFixture&gt;&gt; LoadBlogAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyAsyncPocoPost.LoadBlogAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.LoadBlogAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.LazyAsyncPocoBlog&gt;" Usage="lazyAsyncPocoPost.LoadBlogAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/LazyAsyncPocoPost/&lt;LoadBlogAsync&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+LazyAsyncPocoBlog&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>