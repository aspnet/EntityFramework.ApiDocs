<Type Name="LazyLoadProxyTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class LazyLoadProxyTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : LazyLoadProxyTestBase&lt;TFixture&gt;.LoadFixtureBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LazyLoadProxyTestBase`1&lt;(class Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1/LoadFixtureBase&lt;!TFixture&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LazyLoadProxyTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type LazyLoadProxyTestBase&lt;'Fixture (requires 'Fixture :&gt; LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : LazyLoadProxyTestBase&lt;TFixture&gt;::LoadFixtureBasepublic ref class LazyLoadProxyTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;TFixture&gt;+LoadFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LazyLoadProxyTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt;" Usage="new Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LazyLoadProxyTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; LazyLoadProxyTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" LazyLoadProxyTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="protected virtual void ClearLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.ClearLog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearLog ()" />
      <MemberSignature Language="F#" Value="abstract member ClearLog : unit -&gt; unit&#xA;override this.ClearLog : unit -&gt; unit" Usage="lazyLoadProxyTestBase.ClearLog " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ClearLog();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ClearLog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbContext CreateContext (bool lazyLoadingEnabled = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext(bool lazyLoadingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.CreateContext(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext (Optional lazyLoadingEnabled As Boolean = false) As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : bool -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="lazyLoadProxyTestBase.CreateContext lazyLoadingEnabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lazyLoadingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lazyLoadingEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase&lt;'Fixture&gt;.LoadFixtureBase)&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection (Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection(valuetype Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection (state As EntityState, useAttach As Boolean, useDetach As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit&#xA;override this.Lazy_load_collection : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection (state, useAttach, useDetach)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="useAttach" Type="System.Boolean" />
        <Parameter Name="useDetach" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="useAttach">To be added.</param>
        <param name="useDetach">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_collection_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_collection_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_for_detached_is_no_op">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_for_detached_is_no_op ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_for_detached_is_no_op() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_for_detached_is_no_op" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_for_detached_is_no_op ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_for_detached_is_no_op : unit -&gt; unit&#xA;override this.Lazy_load_collection_for_detached_is_no_op : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_for_detached_is_no_op " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_for_detached_is_no_op();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_for_detached_is_no_op();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_for_detached_is_no_op();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_for_no_tracking_throws">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_for_no_tracking_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_for_no_tracking_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_for_no_tracking_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_for_no_tracking_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_for_no_tracking_throws : unit -&gt; unit&#xA;override this.Lazy_load_collection_for_no_tracking_throws : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_for_no_tracking_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_for_no_tracking_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_for_no_tracking_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_for_no_tracking_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_not_found">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_not_found (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_not_found(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_not_found(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_not_found (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_collection_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_not_found state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_collection_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_collection_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_collection_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_collection_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_collection_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_collection_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_collection_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_collection_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_collection_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_collection_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_collection_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal (Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal(valuetype Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal (state As EntityState, useAttach As Boolean, useDetach As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal (state, useAttach, useDetach)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="useAttach" Type="System.Boolean" />
        <Parameter Name="useDetach" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="useAttach">To be added.</param>
        <param name="useDetach">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_alternate_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_alternate_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_alternate_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_alternate_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_alternate_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_not_found">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_not_found (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_not_found(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_not_found(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_not_found (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_not_found state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_null_FK">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_null_FK (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_null_FK(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_null_FK(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_null_FK (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_null_FK : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_null_FK : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_null_FK state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_many_to_one_reference_to_principal_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_many_to_one_reference_to_principal_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_many_to_one_reference_to_principal_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_many_to_one_reference_to_principal_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_many_to_one_reference_to_principal_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_many_to_one_reference_to_principal_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_many_to_one_reference_to_principal_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_many_to_one_reference_to_principal_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_many_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_many_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_PK_to_PK_reference_to_dependent">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_PK_to_PK_reference_to_dependent (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_PK_to_PK_reference_to_dependent : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_PK_to_PK_reference_to_principal">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_PK_to_PK_reference_to_principal(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_PK_to_PK_reference_to_principal(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_PK_to_PK_reference_to_principal (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_PK_to_PK_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_PK_to_PK_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_PK_to_PK_reference_to_principal state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_PK_to_PK_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent (Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent(valuetype Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent (state As EntityState, useAttach As Boolean, useDetach As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent (state, useAttach, useDetach)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="useAttach" Type="System.Boolean" />
        <Parameter Name="useDetach" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="useAttach">To be added.</param>
        <param name="useDetach">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent_alternate_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent_alternate_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent_alternate_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent_alternate_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent_alternate_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent_not_found">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent_not_found (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent_not_found(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent_not_found(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent_not_found (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent_not_found state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_dependent_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_dependent_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_dependent_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_dependent_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_dependent_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_dependent_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_dependent_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_dependent_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_dependent_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_dependent_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal (Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal(valuetype Microsoft.EntityFrameworkCore.EntityState state, bool useAttach, bool useDetach) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal (state As EntityState, useAttach As Boolean, useDetach As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal : Microsoft.EntityFrameworkCore.EntityState * bool * bool -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal (state, useAttach, useDetach)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal(Microsoft::EntityFrameworkCore::EntityState state, bool useAttach, bool useDetach);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="useAttach" Type="System.Boolean" />
        <Parameter Name="useDetach" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="useAttach">To be added.</param>
        <param name="useDetach">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_already_loaded">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_already_loaded (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_already_loaded(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_already_loaded(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_already_loaded (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_already_loaded : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_already_loaded state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_already_loaded(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_alternate_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_alternate_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_alternate_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_alternate_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_alternate_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_not_found">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_not_found (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_not_found(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_not_found(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_not_found (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_not_found : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_not_found state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_not_found(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_null_FK">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_null_FK (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_null_FK(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_null_FK(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_null_FK (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_null_FK : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_null_FK : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_null_FK state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_null_FK(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_alternate_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_composite_key(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_null_FK_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_one_to_one_reference_to_principal_shadow_fk">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_one_to_one_reference_to_principal_shadow_fk (Microsoft.EntityFrameworkCore.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_one_to_one_reference_to_principal_shadow_fk(valuetype Microsoft.EntityFrameworkCore.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_one_to_one_reference_to_principal_shadow_fk(Microsoft.EntityFrameworkCore.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_one_to_one_reference_to_principal_shadow_fk (state As EntityState)" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_one_to_one_reference_to_principal_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit&#xA;override this.Lazy_load_one_to_one_reference_to_principal_shadow_fk : Microsoft.EntityFrameworkCore.EntityState -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_one_to_one_reference_to_principal_shadow_fk state" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_one_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_one_to_one_reference_to_principal_shadow_fk(Microsoft::EntityFrameworkCore::EntityState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_reference_to_dependent_for_detached_is_no_op">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_reference_to_dependent_for_detached_is_no_op ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_reference_to_dependent_for_detached_is_no_op() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_reference_to_dependent_for_detached_is_no_op" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_reference_to_dependent_for_detached_is_no_op ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_reference_to_dependent_for_detached_is_no_op : unit -&gt; unit&#xA;override this.Lazy_load_reference_to_dependent_for_detached_is_no_op : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_reference_to_dependent_for_detached_is_no_op " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_reference_to_dependent_for_detached_is_no_op();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_reference_to_dependent_for_detached_is_no_op();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_reference_to_dependent_for_detached_is_no_op();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_reference_to_dependent_for_no_tracking_throws">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_reference_to_dependent_for_no_tracking_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_reference_to_dependent_for_no_tracking_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_reference_to_dependent_for_no_tracking_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_reference_to_dependent_for_no_tracking_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_reference_to_dependent_for_no_tracking_throws : unit -&gt; unit&#xA;override this.Lazy_load_reference_to_dependent_for_no_tracking_throws : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_reference_to_dependent_for_no_tracking_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_reference_to_dependent_for_no_tracking_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_reference_to_dependent_for_no_tracking_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_reference_to_dependent_for_no_tracking_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_reference_to_principal_for_detached_is_no_op">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_reference_to_principal_for_detached_is_no_op ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_reference_to_principal_for_detached_is_no_op() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_reference_to_principal_for_detached_is_no_op" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_reference_to_principal_for_detached_is_no_op ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_reference_to_principal_for_detached_is_no_op : unit -&gt; unit&#xA;override this.Lazy_load_reference_to_principal_for_detached_is_no_op : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_reference_to_principal_for_detached_is_no_op " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_reference_to_principal_for_detached_is_no_op();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_reference_to_principal_for_detached_is_no_op();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_reference_to_principal_for_detached_is_no_op();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lazy_load_reference_to_principal_for_no_tracking_throws">
      <MemberSignature Language="C#" Value="public virtual void Lazy_load_reference_to_principal_for_no_tracking_throws ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lazy_load_reference_to_principal_for_no_tracking_throws() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Lazy_load_reference_to_principal_for_no_tracking_throws" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lazy_load_reference_to_principal_for_no_tracking_throws ()" />
      <MemberSignature Language="F#" Value="abstract member Lazy_load_reference_to_principal_for_no_tracking_throws : unit -&gt; unit&#xA;override this.Lazy_load_reference_to_principal_for_no_tracking_throws : unit -&gt; unit" Usage="lazyLoadProxyTestBase.Lazy_load_reference_to_principal_for_no_tracking_throws " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lazy_load_reference_to_principal_for_no_tracking_throws();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Lazy_load_reference_to_principal_for_no_tracking_throws();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Lazy_load_reference_to_principal_for_no_tracking_throws();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load_collection">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Load_collection (Microsoft.EntityFrameworkCore.EntityState state, bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Load_collection(valuetype Microsoft.EntityFrameworkCore.EntityState state, bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.Load_collection(Microsoft.EntityFrameworkCore.EntityState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Load_collection (state As EntityState, async As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member Load_collection : Microsoft.EntityFrameworkCore.EntityState * bool -&gt; System.Threading.Tasks.Task&#xA;override this.Load_collection : Microsoft.EntityFrameworkCore.EntityState * bool -&gt; System.Threading.Tasks.Task" Usage="lazyLoadProxyTestBase.Load_collection (state, async)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Load_collection(Microsoft::EntityFrameworkCore::EntityState state, bool async);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1/&lt;Load_collection&gt;d__45))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Microsoft.EntityFrameworkCore.EntityState" />
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordLog">
      <MemberSignature Language="C#" Value="protected virtual void RecordLog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RecordLog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.LazyLoadProxyTestBase`1.RecordLog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RecordLog ()" />
      <MemberSignature Language="F#" Value="abstract member RecordLog : unit -&gt; unit&#xA;override this.RecordLog : unit -&gt; unit" Usage="lazyLoadProxyTestBase.RecordLog " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RecordLog();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void RecordLog();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void RecordLog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>