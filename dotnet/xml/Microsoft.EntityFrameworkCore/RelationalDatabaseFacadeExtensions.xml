<Type Name="RelationalDatabaseFacadeExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalDatabaseFacadeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalDatabaseFacadeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalDatabaseFacadeExtensions" />
  <TypeSignature Language="F#" Value="type RelationalDatabaseFacadeExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationalDatabaseFacadeExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class RelationalDatabaseFacadeExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class RelationalDatabaseFacadeExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> returned from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" />
                that can be used only with relational database providers.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction BeginTransaction (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction BeginTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" />
      <MemberSignature Language="F#" Value="static member BeginTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Data.IsolationLevel -&gt; Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction (databaseFacade, isolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ BeginTransaction(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="isolationLevel"> The <see cref="T:System.Data.IsolationLevel" /> to use. </param>
        <summary>
                Starts a new transaction with a given <see cref="T:System.Data.IsolationLevel" />.
            </summary>
        <returns> A <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" /> that represents the started transaction. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransactionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; BeginTransactionAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Data.IsolationLevel isolationLevel, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt; BeginTransactionAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Data.IsolationLevel isolationLevel, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member BeginTransactionAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Data.IsolationLevel * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransactionAsync (databaseFacade, isolationLevel, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="isolationLevel"> The <see cref="T:System.Data.IsolationLevel" /> to use. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously starts a new transaction with a given <see cref="T:System.Data.IsolationLevel" />.
            </summary>
        <returns>
                A task that represents the asynchronous transaction initialization. The task result contains a <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
                that represents the started transaction.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public static void CloseConnection (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseConnection(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member CloseConnection : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.CloseConnection databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CloseConnection(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <summary>
                Closes the underlying <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommand">
      <MemberSignature Language="C#" Value="public static int ExecuteSqlCommand (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, FormattableString sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteSqlCommand(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, class System.FormattableString sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.FormattableString)" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommand : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * FormattableString -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand (databaseFacade, sql)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ExecuteSqlCommand(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, FormattableString ^ sql);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="System.FormattableString" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The interpolated string representing a SQL query with parameters. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommand">
      <MemberSignature Language="C#" Value="public static int ExecuteSqlCommand (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Microsoft.EntityFrameworkCore.RawSqlString sql, System.Collections.Generic.IEnumerable&lt;object&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteSqlCommand(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype Microsoft.EntityFrameworkCore.RawSqlString sql, class System.Collections.Generic.IEnumerable`1&lt;object&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommand : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.RawSqlString * seq&lt;obj&gt; -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand (databaseFacade, sql, parameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ExecuteSqlCommand(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, Microsoft::EntityFrameworkCore::RawSqlString sql, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="Microsoft.EntityFrameworkCore.RawSqlString" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The SQL to execute. </param>
        <param name="parameters"> Parameters to use with the SQL. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommand">
      <MemberSignature Language="C#" Value="public static int ExecuteSqlCommand (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Microsoft.EntityFrameworkCore.RawSqlString sql, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteSqlCommand(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype Microsoft.EntityFrameworkCore.RawSqlString sql, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Object[])" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommand : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.RawSqlString * obj[] -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand (databaseFacade, sql, parameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ExecuteSqlCommand(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, Microsoft::EntityFrameworkCore::RawSqlString sql, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="Microsoft.EntityFrameworkCore.RawSqlString" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The SQL to execute. </param>
        <param name="parameters"> Parameters to use with the SQL. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommand">
      <MemberSignature Language="C#" Value="public static int ExecuteSqlCommand (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, string sql, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ExecuteSqlCommand(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, string sql, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Object[])" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommand : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * string * obj[] -&gt; int" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommand (databaseFacade, sql, parameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int ExecuteSqlCommand(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, System::String ^ sql, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="databaseFacade">To be added.</param>
        <param name="sql">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommandAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteSqlCommandAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Microsoft.EntityFrameworkCore.RawSqlString sql, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteSqlCommandAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype Microsoft.EntityFrameworkCore.RawSqlString sql, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Object[])" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommandAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.RawSqlString * obj[] -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync (databaseFacade, sql, parameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteSqlCommandAsync(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, Microsoft::EntityFrameworkCore::RawSqlString sql, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="Microsoft.EntityFrameworkCore.RawSqlString" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The SQL to execute. </param>
        <param name="parameters"> Parameters to use with the SQL. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous operation. The task result is the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommandAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteSqlCommandAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Microsoft.EntityFrameworkCore.RawSqlString sql, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteSqlCommandAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype Microsoft.EntityFrameworkCore.RawSqlString sql, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommandAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.RawSqlString * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync (databaseFacade, sql, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="Microsoft.EntityFrameworkCore.RawSqlString" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The SQL to execute. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous operation. The task result is the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommandAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteSqlCommandAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, FormattableString sql, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteSqlCommandAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, class System.FormattableString sql, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.FormattableString,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommandAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * FormattableString * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync (databaseFacade, sql, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="System.FormattableString" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The interpolated string representing a SQL query with parameters. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous operation. The task result is the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommandAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteSqlCommandAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Microsoft.EntityFrameworkCore.RawSqlString sql, System.Collections.Generic.IEnumerable&lt;object&gt; parameters, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteSqlCommandAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype Microsoft.EntityFrameworkCore.RawSqlString sql, class System.Collections.Generic.IEnumerable`1&lt;object&gt; parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,Microsoft.EntityFrameworkCore.RawSqlString,System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommandAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Microsoft.EntityFrameworkCore.RawSqlString * seq&lt;obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync (databaseFacade, sql, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions/&lt;ExecuteSqlCommandAsync&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="Microsoft.EntityFrameworkCore.RawSqlString" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="sql"> The SQL to execute. </param>
        <param name="parameters"> Parameters to use with the SQL. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
          <para>
                    Executes the given SQL against the database and returns the number of rows affected.
                </para>
          <para>
                    Note that this method does not start a transaction. To use this method with
                    a transaction, first call <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.BeginTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.IsolationLevel)" /> or <see cref="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />.
                </para>
          <para>
                    Note that the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" /> is not used by this method
                    since the SQL may not be idempotent and does not run in a transaction. An ExecutionStrategy
                    can be used explicitly, making sure to also use a transaction if the SQL is not
                    idempotent.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous operation. The task result is the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSqlCommandAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;int&gt; ExecuteSqlCommandAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, string sql, System.Threading.CancellationToken cancellationToken = null, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteSqlCommandAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, string sql, valuetype System.Threading.CancellationToken cancellationToken, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.String,System.Threading.CancellationToken,System.Object[])" />
      <MemberSignature Language="F#" Value="static member ExecuteSqlCommandAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * string * System.Threading.CancellationToken * obj[] -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.ExecuteSqlCommandAsync (databaseFacade, sql, cancellationToken, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions/&lt;ExecuteSqlCommandAsync&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="databaseFacade">To be added.</param>
        <param name="sql">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCreateScript">
      <MemberSignature Language="C#" Value="public static string GenerateCreateScript (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateCreateScript(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GenerateCreateScript(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GenerateCreateScript : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GenerateCreateScript databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GenerateCreateScript(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade">To be added.</param>
        <summary>
                Generates a script to create all tables for the current model.
            </summary>
        <returns>
                A SQL script.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedMigrations">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; GetAppliedMigrations (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAppliedMigrations(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GetAppliedMigrations : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; seq&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAppliedMigrations(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
        <summary>
                Gets all migrations that have been applied to the target database.
            </summary>
        <returns> The list of migrations. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppliedMigrationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; GetAppliedMigrationsAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; GetAppliedMigrationsAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetAppliedMigrationsAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;string&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync (databaseFacade, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions/&lt;GetAppliedMigrationsAsync&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
                Asynchronously gets all migrations that have been applied to the target database.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommandTimeout">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetCommandTimeout (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetCommandTimeout(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GetCommandTimeout : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetCommandTimeout databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; GetCommandTimeout(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <summary>
          <para>
                    Returns the timeout set for commands executed with this <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
          <para>
                    Note that the command timeout is distinct from the connection timeout, which is commonly
                    set on the database connection string.
                </para>
        </summary>
        <returns> The timeout, in seconds, or null if no timeout has been set. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbConnection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbConnection GetDbConnection (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbConnection GetDbConnection(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GetDbConnection : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; System.Data.Common.DbConnection" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetDbConnection databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::DbConnection ^ GetDbConnection(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <summary>
                Gets the underlying ADO.NET <see cref="T:System.Data.Common.DbConnection" /> for this <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
        <returns> The <see cref="T:System.Data.Common.DbConnection" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMigrations">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; GetMigrations (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetMigrations(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GetMigrations : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; seq&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetMigrations(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
        <summary>
                Gets all the migrations that are defined in the configured migrations assembly.
            </summary>
        <returns>The list of migrations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPendingMigrations">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; GetPendingMigrations (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetPendingMigrations(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member GetPendingMigrations : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; seq&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetPendingMigrations(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
        <summary>
                Gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
        <returns> The list of migrations. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPendingMigrationsAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;string&gt;&gt; GetPendingMigrationsAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IEnumerable`1&lt;string&gt;&gt; GetPendingMigrationsAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetPendingMigrationsAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;seq&lt;string&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync (databaseFacade, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions/&lt;GetPendingMigrationsAsync&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IEnumerable&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
                Asynchronously gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Migrate">
      <MemberSignature Language="C#" Value="public static void Migrate (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Migrate(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member Migrate : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Migrate(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <summary>
          <para>
                    Applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
          <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task MigrateAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task MigrateAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member MigrateAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync (databaseFacade, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
          <para>
                    Asynchronously applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
          <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
        </summary>
        <returns> A task that represents the asynchronous migration operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnection">
      <MemberSignature Language="C#" Value="public static void OpenConnection (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OpenConnection(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)" />
      <MemberSignature Language="F#" Value="static member OpenConnection : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnection databaseFacade" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void OpenConnection(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <summary>
                Opens the underlying <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenConnectionAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task OpenConnectionAsync (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task OpenConnectionAsync(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member OpenConnectionAsync : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.OpenConnectionAsync (databaseFacade, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <summary>
                Opens the underlying <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        <returns>
                A task that represents the asynchronous operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommandTimeout">
      <MemberSignature Language="C#" Value="public static void SetCommandTimeout (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, Nullable&lt;int&gt; timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCommandTimeout(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.Nullable`1&lt;int32&gt; timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Nullable{System.Int32})" />
      <MemberSignature Language="F#" Value="static member SetCommandTimeout : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * Nullable&lt;int&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout (databaseFacade, timeout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetCommandTimeout(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, Nullable&lt;int&gt; timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="timeout" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="timeout"> The timeout to use, in seconds. </param>
        <summary>
          <para>
                    Sets the timeout to use for commands executed with this <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
          <para>
                    Note that the command timeout is distinct from the connection timeout, which is commonly
                    set on the database connection string.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommandTimeout">
      <MemberSignature Language="C#" Value="public static void SetCommandTimeout (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCommandTimeout(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.TimeSpan)" />
      <MemberSignature Language="F#" Value="static member SetCommandTimeout : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * TimeSpan -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.SetCommandTimeout (databaseFacade, timeout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetCommandTimeout(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="timeout"> The timeout to use. </param>
        <summary>
          <para>
                    Sets the timeout to use for commands executed with this <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
          <para>
                    Note that the command timeout is distinct from the connection timeout, which is commonly
                    set on the database connection string.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction UseTransaction (this Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, System.Data.Common.DbTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction UseTransaction(class Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade databaseFacade, class System.Data.Common.DbTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Data.Common.DbTransaction)" />
      <MemberSignature Language="F#" Value="static member UseTransaction : Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade * System.Data.Common.DbTransaction -&gt; Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" Usage="Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.UseTransaction (databaseFacade, transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ UseTransaction(Microsoft::EntityFrameworkCore::Infrastructure::DatabaseFacade ^ databaseFacade, System::Data::Common::DbTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseFacade" Type="Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" RefType="this" />
        <Parameter Name="transaction" Type="System.Data.Common.DbTransaction" />
      </Parameters>
      <Docs>
        <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        <param name="transaction"> The <see cref="T:System.Data.Common.DbTransaction" /> to use. </param>
        <summary>
                Sets the <see cref="T:System.Data.Common.DbTransaction" /> to be used by database operations on the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
            </summary>
        <returns> A <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" /> that encapsulates the given transaction. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>