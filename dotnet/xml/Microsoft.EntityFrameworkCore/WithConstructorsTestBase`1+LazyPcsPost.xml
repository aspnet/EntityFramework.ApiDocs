<Type Name="WithConstructorsTestBase&lt;TFixture&gt;+LazyPcsPost" FullName="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+LazyPcsPost">
  <TypeSignature Language="C#" Value="protected class WithConstructorsTestBase&lt;TFixture&gt;.LazyPcsPost where TFixture : WithConstructorsTestBase&lt;TFixture&gt;.WithConstructorsFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit WithConstructorsTestBase`1/LazyPcsPost&lt;.ctor (class Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/WithConstructorsFixtureBase&lt;!TFixture&gt;) TFixture&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost" />
  <TypeSignature Language="VB.NET" Value="Protected Class WithConstructorsTestBase(Of TFixture).LazyPcsPost" />
  <TypeSignature Language="C++ CLI" Value="protected:  where TFixture : WithConstructorsTestBase&lt;TFixture&gt;::WithConstructorsFixtureBasegcnew()ref class WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsPost" />
  <TypeSignature Language="C++ CX" Value="protected: ref class WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsPost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+WithConstructorsFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyPcsPost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyPcsPost();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LazyPcsPost();" />
      <MemberSignature Language="C++ WINRT" Value=" LazyPcsPost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoader">
      <MemberSignature Language="C#" Value="public Action&lt;object,string&gt; GetLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Action`2&lt;object, string&gt; GetLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.GetLoader" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoader () As Action(Of Object, String)" />
      <MemberSignature Language="F#" Value="member this.GetLoader : unit -&gt; Action&lt;obj, string&gt;" Usage="lazyPcsPost.GetLoader " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Action&lt;System::Object ^, System::String ^&gt; ^ GetLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Object,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As Integer" />
      <MemberSignature Language="F#" Value="member this.Id : int with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyPcsPost.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Id { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyPcsBlog">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;.LazyPcsBlog LazyPcsBlog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1/LazyPcsBlog&lt;!TFixture&gt; LazyPcsBlog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.LazyPcsBlog" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyPcsBlog As WithConstructorsTestBase(Of TFixture).LazyPcsBlog" />
      <MemberSignature Language="F#" Value="member this.LazyPcsBlog : Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyPcsBlog with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyPcsPost.LazyPcsBlog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ LazyPcsBlog { Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ get(); void set(Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ LazyPcsBlog { Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ get(); void set(Microsoft::EntityFrameworkCore::WithConstructorsTestBase&lt;TFixture&gt;::LazyPcsBlog ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;TFixture&gt;+LazyPcsBlog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyPcsBlogId">
      <MemberSignature Language="C#" Value="public int LazyPcsBlogId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LazyPcsBlogId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.LazyPcsBlogId" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyPcsBlogId As Integer" />
      <MemberSignature Language="F#" Value="member this.LazyPcsBlogId : int with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyPcsPost.LazyPcsBlogId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LazyPcsBlogId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int LazyPcsBlogId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderSetterCalled">
      <MemberSignature Language="C#" Value="public bool LoaderSetterCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoaderSetterCalled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.WithConstructorsTestBase`1.LazyPcsPost.LoaderSetterCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderSetterCalled As Boolean" />
      <MemberSignature Language="F#" Value="member this.LoaderSetterCalled : bool with get, set" Usage="Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.WithConstructorsTestBase&lt;'Fixture&gt;.WithConstructorsFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.LazyPcsPost.LoaderSetterCalled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoaderSetterCalled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool LoaderSetterCalled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DataAnnotations.Schema.NotMapped</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>