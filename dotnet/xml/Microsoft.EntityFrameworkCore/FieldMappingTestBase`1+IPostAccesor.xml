<Type Name="FieldMappingTestBase&lt;TFixture&gt;+IPostAccesor" FullName="Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;TFixture&gt;+IPostAccesor">
  <TypeSignature Language="C#" Value="protected interface FieldMappingTestBase&lt;TFixture&gt;.IPostAccesor where TFixture : FieldMappingTestBase&lt;TFixture&gt;.FieldMappingFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class nested protected interface auto ansi abstract FieldMappingTestBase`1/IPostAccesor&lt;.ctor (class Microsoft.EntityFrameworkCore.FieldMappingTestBase`1/FieldMappingFixtureBase&lt;!TFixture&gt;) TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.FieldMappingTestBase`1.IPostAccesor" />
  <TypeSignature Language="VB.NET" Value="Protected Interface FieldMappingTestBase(Of TFixture).IPostAccesor" />
  <TypeSignature Language="C++ CLI" Value="protected:  where TFixture : FieldMappingTestBase&lt;TFixture&gt;::FieldMappingFixtureBasegcnew()interface class FieldMappingTestBase&lt;TFixture&gt;::IPostAccesor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;TFixture&gt;+FieldMappingFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessBlog">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;TFixture&gt;.IBlogAccesor AccessBlog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.FieldMappingTestBase`1/IBlogAccesor&lt;!TFixture&gt; AccessBlog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.FieldMappingTestBase`1.IPostAccesor.AccessBlog" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessBlog As FieldMappingTestBase(Of TFixture).IBlogAccesor" />
      <MemberSignature Language="F#" Value="member this.AccessBlog : Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture&gt;.FieldMappingFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.IBlogAccesor with get, set" Usage="Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture&gt;.FieldMappingFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.IPostAccesor.AccessBlog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::FieldMappingTestBase&lt;TFixture&gt;::IBlogAccesor ^ AccessBlog { Microsoft::EntityFrameworkCore::FieldMappingTestBase&lt;TFixture&gt;::IBlogAccesor ^ get(); void set(Microsoft::EntityFrameworkCore::FieldMappingTestBase&lt;TFixture&gt;::IBlogAccesor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;TFixture&gt;+IBlogAccesor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessBlogId">
      <MemberSignature Language="C#" Value="public int AccessBlogId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccessBlogId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.FieldMappingTestBase`1.IPostAccesor.AccessBlogId" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessBlogId As Integer" />
      <MemberSignature Language="F#" Value="member this.AccessBlogId : int with get, set" Usage="Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture&gt;.FieldMappingFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.IPostAccesor.AccessBlogId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccessBlogId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int AccessBlogId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessId">
      <MemberSignature Language="C#" Value="public int AccessId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccessId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.FieldMappingTestBase`1.IPostAccesor.AccessId" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessId As Integer" />
      <MemberSignature Language="F#" Value="member this.AccessId : int with get, set" Usage="Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture&gt;.FieldMappingFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.IPostAccesor.AccessId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccessId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int AccessId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessTitle">
      <MemberSignature Language="C#" Value="public string AccessTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.FieldMappingTestBase`1.IPostAccesor.AccessTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessTitle As String" />
      <MemberSignature Language="F#" Value="member this.AccessTitle : string with get, set" Usage="Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.FieldMappingTestBase&lt;'Fixture&gt;.FieldMappingFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.IPostAccesor.AccessTitle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ AccessTitle { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>