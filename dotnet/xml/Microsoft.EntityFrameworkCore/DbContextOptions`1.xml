<Type Name="DbContextOptions&lt;TContext&gt;" FullName="Microsoft.EntityFrameworkCore.DbContextOptions&lt;TContext&gt;">
  <TypeSignature Language="C#" Value="public class DbContextOptions&lt;TContext&gt; : Microsoft.EntityFrameworkCore.DbContextOptions where TContext : DbContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbContextOptions`1&lt;(class Microsoft.EntityFrameworkCore.DbContext) TContext&gt; extends Microsoft.EntityFrameworkCore.DbContextOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DbContextOptions(Of TContext)&#xA;Inherits DbContextOptions" />
  <TypeSignature Language="F#" Value="type DbContextOptions&lt;'Context (requires 'Context :&gt; DbContext)&gt; = class&#xA;    inherit DbContextOptions" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TContext&gt;&#xA; where TContext : DbContextpublic ref class DbContextOptions : Microsoft::EntityFrameworkCore::DbContextOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContext">
      <Constraints>
        <BaseTypeName>Microsoft.EntityFrameworkCore.DbContext</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.DbContextOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TContext"> The type of the context these options apply to. </typeparam>
    <summary>
                The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbContextOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbContextOptions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; DbContextOptions();" />
      <MemberSignature Language="C++ WINRT" Value=" DbContextOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbContextOptions (System.Collections.Generic.IReadOnlyDictionary&lt;Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; extensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyDictionary`2&lt;class System.Type, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (extensions As IReadOnlyDictionary(Of Type, IDbContextOptionsExtension))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.DbContextOptions&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; : System.Collections.Generic.IReadOnlyDictionary&lt;Type, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptions&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt;" Usage="new Microsoft.EntityFrameworkCore.DbContextOptions&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt; extensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbContextOptions(System::Collections::Generic::IReadOnlyDictionary&lt;Type ^, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension ^&gt; ^ extensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extensions" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="extensions"> The extensions that store the configured options. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public override Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.DbContextOptions`1.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContextType As Type" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="Microsoft.EntityFrameworkCore.DbContextOptions&lt;'Context (requires 'Context :&gt; Microsoft.EntityFrameworkCore.DbContext)&gt;.ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ContextType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Type ^ ContextType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of context that these options are for (<typeparamref name="TContext" />).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExtension&lt;TExtension&gt;">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.DbContextOptions WithExtension&lt;TExtension&gt; (TExtension extension) where TExtension : class, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.DbContextOptions WithExtension&lt;class (class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension) TExtension&gt;(!!TExtension extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.WithExtension``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithExtension(Of TExtension As {Class, IDbContextOptionsExtension}) (extension As TExtension) As DbContextOptions" />
      <MemberSignature Language="F#" Value="override this.WithExtension : 'Extension -&gt; Microsoft.EntityFrameworkCore.DbContextOptions (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)" Usage="dbContextOptions.WithExtension extension" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension override Microsoft::EntityFrameworkCore::DbContextOptions ^ WithExtension(TExtension extension);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension override Microsoft::EntityFrameworkCore::DbContextOptions ^ WithExtension(TExtension extension);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension override Microsoft::EntityFrameworkCore::DbContextOptions WithExtension(TExtension extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtension">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extension" Type="TExtension" />
      </Parameters>
      <Docs>
        <typeparam name="TExtension"> The type of extension to be added. </typeparam>
        <param name="extension"> The extension to be added. </param>
        <summary>
                Adds the given extension to the options.
            </summary>
        <returns> The same options instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>