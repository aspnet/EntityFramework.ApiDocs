<Type Name="TransactionTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class TransactionTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : TransactionTestBase&lt;TFixture&gt;.TransactionFixtureBasenew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransactionTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.TransactionTestBase`1/TransactionFixtureBase&lt;!TFixture&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TransactionTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TransactionTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : TransactionTestBase&lt;TFixture&gt;::TransactionFixtureBasegcnew()public ref class TransactionTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.TransactionTestBase&lt;TFixture&gt;+TransactionFixtureBase</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransactionTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TransactionTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; TransactionTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" TransactionTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AmbientTransactionsSupported">
      <MemberSignature Language="C#" Value="protected virtual bool AmbientTransactionsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AmbientTransactionsSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TransactionTestBase`1.AmbientTransactionsSupported" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AmbientTransactionsSupported As Boolean" />
      <MemberSignature Language="F#" Value="member this.AmbientTransactionsSupported : bool" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.AmbientTransactionsSupported" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AmbientTransactionsSupported { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property bool AmbientTransactionsSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertStoreInitialState">
      <MemberSignature Language="C#" Value="protected virtual void AssertStoreInitialState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AssertStoreInitialState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.AssertStoreInitialState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AssertStoreInitialState ()" />
      <MemberSignature Language="F#" Value="abstract member AssertStoreInitialState : unit -&gt; unit&#xA;override this.AssertStoreInitialState : unit -&gt; unit" Usage="transactionTestBase.AssertStoreInitialState " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AssertStoreInitialState();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void AssertStoreInitialState();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AssertStoreInitialState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_can_be_used_after_ambient_transaction_ended">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_can_be_used_after_ambient_transaction_ended ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_can_be_used_after_ambient_transaction_ended() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_can_be_used_after_ambient_transaction_ended" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_can_be_used_after_ambient_transaction_ended ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_can_be_used_after_ambient_transaction_ended : unit -&gt; unit&#xA;override this.BeginTransaction_can_be_used_after_ambient_transaction_ended : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_can_be_used_after_ambient_transaction_ended " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_ambient_transaction_ended();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_ambient_transaction_ended();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_can_be_used_after_ambient_transaction_ended();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_can_be_used_after_another_transaction_if_connection_closed">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_can_be_used_after_another_transaction_if_connection_closed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_can_be_used_after_another_transaction_if_connection_closed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_can_be_used_after_another_transaction_if_connection_closed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_can_be_used_after_another_transaction_if_connection_closed ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_can_be_used_after_another_transaction_if_connection_closed : unit -&gt; unit&#xA;override this.BeginTransaction_can_be_used_after_another_transaction_if_connection_closed : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_can_be_used_after_another_transaction_if_connection_closed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_another_transaction_if_connection_closed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_another_transaction_if_connection_closed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_can_be_used_after_another_transaction_if_connection_closed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_can_be_used_after_enlisted_transaction_ended">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_can_be_used_after_enlisted_transaction_ended ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_can_be_used_after_enlisted_transaction_ended() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_can_be_used_after_enlisted_transaction_ended" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_can_be_used_after_enlisted_transaction_ended ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_can_be_used_after_enlisted_transaction_ended : unit -&gt; unit&#xA;override this.BeginTransaction_can_be_used_after_enlisted_transaction_ended : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_can_be_used_after_enlisted_transaction_ended " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_enlisted_transaction_ended();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_enlisted_transaction_ended();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_can_be_used_after_enlisted_transaction_ended();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed : unit -&gt; unit&#xA;override this.BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_can_be_used_after_enlisted_transaction_if_connection_closed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_throws_if_ambient_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_throws_if_ambient_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_throws_if_ambient_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_throws_if_ambient_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_throws_if_ambient_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_throws_if_ambient_transaction_started : unit -&gt; unit&#xA;override this.BeginTransaction_throws_if_ambient_transaction_started : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_throws_if_ambient_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_throws_if_ambient_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_throws_if_another_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_throws_if_another_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_throws_if_another_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_throws_if_another_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_throws_if_another_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_throws_if_another_transaction_started : unit -&gt; unit&#xA;override this.BeginTransaction_throws_if_another_transaction_started : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_throws_if_another_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_throws_if_another_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction_throws_if_enlisted_in_transaction">
      <MemberSignature Language="C#" Value="public virtual void BeginTransaction_throws_if_enlisted_in_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginTransaction_throws_if_enlisted_in_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.BeginTransaction_throws_if_enlisted_in_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginTransaction_throws_if_enlisted_in_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member BeginTransaction_throws_if_enlisted_in_transaction : unit -&gt; unit&#xA;override this.BeginTransaction_throws_if_enlisted_in_transaction : unit -&gt; unit" Usage="transactionTestBase.BeginTransaction_throws_if_enlisted_in_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginTransaction_throws_if_enlisted_in_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void BeginTransaction_throws_if_enlisted_in_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void BeginTransaction_throws_if_enlisted_in_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Can_use_open_connection_with_started_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Can_use_open_connection_with_started_transaction (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Can_use_open_connection_with_started_transaction(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.Can_use_open_connection_with_started_transaction(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Can_use_open_connection_with_started_transaction (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member Can_use_open_connection_with_started_transaction : bool -&gt; System.Threading.Tasks.Task&#xA;override this.Can_use_open_connection_with_started_transaction : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.Can_use_open_connection_with_started_transaction autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Can_use_open_connection_with_started_transaction(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;Can_use_open_connection_with_started_transaction&gt;d__30))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.DbContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.DbContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As DbContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="transactionTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::DbContext ^ CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContextWithConnectionString">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.EntityFrameworkCore.DbContext CreateContextWithConnectionString ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.DbContext CreateContextWithConnectionString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.CreateContextWithConnectionString" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateContextWithConnectionString () As DbContext" />
      <MemberSignature Language="F#" Value="abstract member CreateContextWithConnectionString : unit -&gt; Microsoft.EntityFrameworkCore.DbContext" Usage="transactionTestBase.CreateContextWithConnectionString " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Microsoft::EntityFrameworkCore::DbContext ^ CreateContextWithConnectionString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Customers">
      <MemberSignature Language="C#" Value="protected static readonly System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TransactionTestBase&lt;TFixture&gt;.TransactionCustomer&gt; Customers;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TransactionTestBase`1/TransactionCustomer&lt;!TFixture&gt;&gt; Customers" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.TransactionTestBase`1.Customers" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Customers As IReadOnlyList(Of TransactionTestBase(Of TFixture).TransactionCustomer) " />
      <MemberSignature Language="F#" Value=" staticval mutable Customers : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionCustomer&gt;" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Customers" />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TransactionTestBase&lt;TFixture&gt;::TransactionCustomer ^&gt; ^ Customers;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TransactionTestBase&lt;TFixture&gt;+TransactionCustomer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirtyReadsOccur">
      <MemberSignature Language="C#" Value="protected virtual bool DirtyReadsOccur { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DirtyReadsOccur" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TransactionTestBase`1.DirtyReadsOccur" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DirtyReadsOccur As Boolean" />
      <MemberSignature Language="F#" Value="member this.DirtyReadsOccur : bool" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.DirtyReadsOccur" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DirtyReadsOccur { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property bool DirtyReadsOccur { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction_throws_if_ambient_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void EnlistTransaction_throws_if_ambient_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnlistTransaction_throws_if_ambient_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.EnlistTransaction_throws_if_ambient_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnlistTransaction_throws_if_ambient_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member EnlistTransaction_throws_if_ambient_transaction_started : unit -&gt; unit&#xA;override this.EnlistTransaction_throws_if_ambient_transaction_started : unit -&gt; unit" Usage="transactionTestBase.EnlistTransaction_throws_if_ambient_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnlistTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void EnlistTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void EnlistTransaction_throws_if_ambient_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction_throws_if_another_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void EnlistTransaction_throws_if_another_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnlistTransaction_throws_if_another_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.EnlistTransaction_throws_if_another_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnlistTransaction_throws_if_another_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member EnlistTransaction_throws_if_another_transaction_started : unit -&gt; unit&#xA;override this.EnlistTransaction_throws_if_another_transaction_started : unit -&gt; unit" Usage="transactionTestBase.EnlistTransaction_throws_if_another_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnlistTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void EnlistTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void EnlistTransaction_throws_if_another_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Externally_closed_connections_are_handled_correctly">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Externally_closed_connections_are_handled_correctly (bool async);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Externally_closed_connections_are_handled_correctly(bool async) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.Externally_closed_connections_are_handled_correctly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Externally_closed_connections_are_handled_correctly (async As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member Externally_closed_connections_are_handled_correctly : bool -&gt; System.Threading.Tasks.Task&#xA;override this.Externally_closed_connections_are_handled_correctly : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.Externally_closed_connections_are_handled_correctly async" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Externally_closed_connections_are_handled_correctly(bool async);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;Externally_closed_connections_are_handled_correctly&gt;d__45))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TransactionTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture with get, set" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); void set(TFixture value); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); void set(TFixture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query_uses_explicit_transaction">
      <MemberSignature Language="C#" Value="public virtual void Query_uses_explicit_transaction (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Query_uses_explicit_transaction(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.Query_uses_explicit_transaction(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Query_uses_explicit_transaction (autoTransaction As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Query_uses_explicit_transaction : bool -&gt; unit&#xA;override this.Query_uses_explicit_transaction : bool -&gt; unit" Usage="transactionTestBase.Query_uses_explicit_transaction autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Query_uses_explicit_transaction(bool autoTransaction);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Query_uses_explicit_transaction(bool autoTransaction);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Query_uses_explicit_transaction(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAsync_uses_explicit_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task QueryAsync_uses_explicit_transaction (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task QueryAsync_uses_explicit_transaction(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.QueryAsync_uses_explicit_transaction(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryAsync_uses_explicit_transaction (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member QueryAsync_uses_explicit_transaction : bool -&gt; System.Threading.Tasks.Task&#xA;override this.QueryAsync_uses_explicit_transaction : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.QueryAsync_uses_explicit_transaction autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ QueryAsync_uses_explicit_transaction(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;QueryAsync_uses_explicit_transaction&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTransaction_can_be_commited">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RelationalTransaction_can_be_commited (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RelationalTransaction_can_be_commited(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.RelationalTransaction_can_be_commited(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RelationalTransaction_can_be_commited (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member RelationalTransaction_can_be_commited : bool -&gt; System.Threading.Tasks.Task&#xA;override this.RelationalTransaction_can_be_commited : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.RelationalTransaction_can_be_commited autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RelationalTransaction_can_be_commited(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;RelationalTransaction_can_be_commited&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTransaction_can_be_commited_from_context">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RelationalTransaction_can_be_commited_from_context (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RelationalTransaction_can_be_commited_from_context(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.RelationalTransaction_can_be_commited_from_context(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RelationalTransaction_can_be_commited_from_context (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member RelationalTransaction_can_be_commited_from_context : bool -&gt; System.Threading.Tasks.Task&#xA;override this.RelationalTransaction_can_be_commited_from_context : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.RelationalTransaction_can_be_commited_from_context autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RelationalTransaction_can_be_commited_from_context(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;RelationalTransaction_can_be_commited_from_context&gt;d__25))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTransaction_can_be_rolled_back">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RelationalTransaction_can_be_rolled_back (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RelationalTransaction_can_be_rolled_back(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.RelationalTransaction_can_be_rolled_back(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RelationalTransaction_can_be_rolled_back (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member RelationalTransaction_can_be_rolled_back : bool -&gt; System.Threading.Tasks.Task&#xA;override this.RelationalTransaction_can_be_rolled_back : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.RelationalTransaction_can_be_rolled_back autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RelationalTransaction_can_be_rolled_back(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;RelationalTransaction_can_be_rolled_back&gt;d__26))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTransaction_can_be_rolled_back_from_context">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RelationalTransaction_can_be_rolled_back_from_context (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RelationalTransaction_can_be_rolled_back_from_context(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.RelationalTransaction_can_be_rolled_back_from_context(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RelationalTransaction_can_be_rolled_back_from_context (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member RelationalTransaction_can_be_rolled_back_from_context : bool -&gt; System.Threading.Tasks.Task&#xA;override this.RelationalTransaction_can_be_rolled_back_from_context : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.RelationalTransaction_can_be_rolled_back_from_context autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RelationalTransaction_can_be_rolled_back_from_context(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;RelationalTransaction_can_be_rolled_back_from_context&gt;d__27))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_can_be_used_with_no_transaction">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_can_be_used_with_no_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_can_be_used_with_no_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_can_be_used_with_no_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_can_be_used_with_no_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_can_be_used_with_no_transaction : unit -&gt; unit&#xA;override this.SaveChanges_can_be_used_with_no_transaction : unit -&gt; unit" Usage="transactionTestBase.SaveChanges_can_be_used_with_no_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_can_be_used_with_no_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_can_be_used_with_no_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_can_be_used_with_no_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_does_not_close_connection_opened_by_user">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_does_not_close_connection_opened_by_user ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_does_not_close_connection_opened_by_user() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_does_not_close_connection_opened_by_user" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_does_not_close_connection_opened_by_user ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_does_not_close_connection_opened_by_user : unit -&gt; unit&#xA;override this.SaveChanges_does_not_close_connection_opened_by_user : unit -&gt; unit" Usage="transactionTestBase.SaveChanges_does_not_close_connection_opened_by_user " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_does_not_close_connection_opened_by_user();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_does_not_close_connection_opened_by_user();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_does_not_close_connection_opened_by_user();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes (autoTransaction As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes : bool -&gt; unit&#xA;override this.SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes : bool -&gt; unit" Usage="transactionTestBase.SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_implicitly_starts_transaction">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_implicitly_starts_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_implicitly_starts_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_implicitly_starts_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_implicitly_starts_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_implicitly_starts_transaction : unit -&gt; unit&#xA;override this.SaveChanges_implicitly_starts_transaction : unit -&gt; unit" Usage="transactionTestBase.SaveChanges_implicitly_starts_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_implicitly_starts_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_implicitly_starts_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_implicitly_starts_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_throws_for_suppressed_ambient_transactions">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_throws_for_suppressed_ambient_transactions (bool connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_throws_for_suppressed_ambient_transactions(bool connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_throws_for_suppressed_ambient_transactions(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_throws_for_suppressed_ambient_transactions (connectionString As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_throws_for_suppressed_ambient_transactions : bool -&gt; unit&#xA;override this.SaveChanges_throws_for_suppressed_ambient_transactions : bool -&gt; unit" Usage="transactionTestBase.SaveChanges_throws_for_suppressed_ambient_transactions connectionString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_throws_for_suppressed_ambient_transactions(bool connectionString);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_throws_for_suppressed_ambient_transactions(bool connectionString);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_throws_for_suppressed_ambient_transactions(bool connectionString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_ambient_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_uses_ambient_transaction (bool async, bool closeConnection, bool autoTransactionsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_uses_ambient_transaction(bool async, bool closeConnection, bool autoTransactionsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_ambient_transaction(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_uses_ambient_transaction (async As Boolean, closeConnection As Boolean, autoTransactionsEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_ambient_transaction : bool * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_uses_ambient_transaction : bool * bool * bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChanges_uses_ambient_transaction (async, closeConnection, autoTransactionsEnabled)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_uses_ambient_transaction(bool async, bool closeConnection, bool autoTransactionsEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChanges_uses_ambient_transaction&gt;d__12))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="closeConnection" Type="System.Boolean" />
        <Parameter Name="autoTransactionsEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <param name="closeConnection">To be added.</param>
        <param name="autoTransactionsEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_ambient_transaction_with_connectionString">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_uses_ambient_transaction_with_connectionString (bool async, bool autoTransactionsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_uses_ambient_transaction_with_connectionString(bool async, bool autoTransactionsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_ambient_transaction_with_connectionString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_uses_ambient_transaction_with_connectionString (async As Boolean, autoTransactionsEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_ambient_transaction_with_connectionString : bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_uses_ambient_transaction_with_connectionString : bool * bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChanges_uses_ambient_transaction_with_connectionString (async, autoTransactionsEnabled)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_uses_ambient_transaction_with_connectionString(bool async, bool autoTransactionsEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChanges_uses_ambient_transaction_with_connectionString&gt;d__13))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="autoTransactionsEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <param name="autoTransactionsEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_enlisted_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction (bool async, bool autoTransactionsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction(bool async, bool autoTransactionsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_enlisted_transaction(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_uses_enlisted_transaction (async As Boolean, autoTransactionsEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_enlisted_transaction : bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_uses_enlisted_transaction : bool * bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChanges_uses_enlisted_transaction (async, autoTransactionsEnabled)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_uses_enlisted_transaction(bool async, bool autoTransactionsEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChanges_uses_enlisted_transaction&gt;d__9))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="autoTransactionsEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <param name="autoTransactionsEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_enlisted_transaction_after_ambient_transaction">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_uses_enlisted_transaction_after_ambient_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_uses_enlisted_transaction_after_ambient_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_enlisted_transaction_after_ambient_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_uses_enlisted_transaction_after_ambient_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_enlisted_transaction_after_ambient_transaction : unit -&gt; unit&#xA;override this.SaveChanges_uses_enlisted_transaction_after_ambient_transaction : unit -&gt; unit" Usage="transactionTestBase.SaveChanges_uses_enlisted_transaction_after_ambient_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_uses_enlisted_transaction_after_ambient_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_uses_enlisted_transaction_after_ambient_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_uses_enlisted_transaction_after_ambient_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_enlisted_transaction_after_connection_closed">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction_after_connection_closed (bool async, bool autoTransactionsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction_after_connection_closed(bool async, bool autoTransactionsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_enlisted_transaction_after_connection_closed(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_uses_enlisted_transaction_after_connection_closed (async As Boolean, autoTransactionsEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_enlisted_transaction_after_connection_closed : bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_uses_enlisted_transaction_after_connection_closed : bool * bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChanges_uses_enlisted_transaction_after_connection_closed (async, autoTransactionsEnabled)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_uses_enlisted_transaction_after_connection_closed(bool async, bool autoTransactionsEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChanges_uses_enlisted_transaction_after_connection_closed&gt;d__10))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="autoTransactionsEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <param name="autoTransactionsEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_enlisted_transaction_connectionString">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction_connectionString (bool async, bool autoTransactionsEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_uses_enlisted_transaction_connectionString(bool async, bool autoTransactionsEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_enlisted_transaction_connectionString(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_uses_enlisted_transaction_connectionString (async As Boolean, autoTransactionsEnabled As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_enlisted_transaction_connectionString : bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_uses_enlisted_transaction_connectionString : bool * bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChanges_uses_enlisted_transaction_connectionString (async, autoTransactionsEnabled)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_uses_enlisted_transaction_connectionString(bool async, bool autoTransactionsEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChanges_uses_enlisted_transaction_connectionString&gt;d__11))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="async" Type="System.Boolean" />
        <Parameter Name="autoTransactionsEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="async">To be added.</param>
        <param name="autoTransactionsEnabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure (autoTransaction As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure : bool -&gt; unit&#xA;override this.SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure : bool -&gt; unit" Usage="transactionTestBase.SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_uses_explicit_transaction_without_committing">
      <MemberSignature Language="C#" Value="public virtual void SaveChanges_uses_explicit_transaction_without_committing (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChanges_uses_explicit_transaction_without_committing(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChanges_uses_explicit_transaction_without_committing(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveChanges_uses_explicit_transaction_without_committing (autoTransaction As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_uses_explicit_transaction_without_committing : bool -&gt; unit&#xA;override this.SaveChanges_uses_explicit_transaction_without_committing : bool -&gt; unit" Usage="transactionTestBase.SaveChanges_uses_explicit_transaction_without_committing autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveChanges_uses_explicit_transaction_without_committing(bool autoTransaction);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SaveChanges_uses_explicit_transaction_without_committing(bool autoTransaction);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SaveChanges_uses_explicit_transaction_without_committing(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_can_be_used_with_no_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_can_be_used_with_no_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_can_be_used_with_no_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_can_be_used_with_no_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_can_be_used_with_no_transaction () As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_can_be_used_with_no_transaction : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_can_be_used_with_no_transaction : unit -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_can_be_used_with_no_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_can_be_used_with_no_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_can_be_used_with_no_transaction&gt;d__6))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_does_not_close_connection_opened_by_user">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_does_not_close_connection_opened_by_user ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_does_not_close_connection_opened_by_user() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_does_not_close_connection_opened_by_user" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_does_not_close_connection_opened_by_user () As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_does_not_close_connection_opened_by_user : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_does_not_close_connection_opened_by_user : unit -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_does_not_close_connection_opened_by_user " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_does_not_close_connection_opened_by_user();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_does_not_close_connection_opened_by_user&gt;d__17))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes : bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_false_uses_explicit_transaction_without_committing_or_accepting_changes&gt;d__21))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_implicitly_starts_transaction">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_implicitly_starts_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_implicitly_starts_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_implicitly_starts_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_implicitly_starts_transaction () As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_implicitly_starts_transaction : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_implicitly_starts_transaction : unit -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_implicitly_starts_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_implicitly_starts_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_implicitly_starts_transaction&gt;d__8))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure : bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_uses_explicit_transaction_and_does_not_rollback_on_failure&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync_uses_explicit_transaction_without_committing">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync_uses_explicit_transaction_without_committing (bool autoTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync_uses_explicit_transaction_without_committing(bool autoTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SaveChangesAsync_uses_explicit_transaction_without_committing(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync_uses_explicit_transaction_without_committing (autoTransaction As Boolean) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync_uses_explicit_transaction_without_committing : bool -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync_uses_explicit_transaction_without_committing : bool -&gt; System.Threading.Tasks.Task" Usage="transactionTestBase.SaveChangesAsync_uses_explicit_transaction_without_committing autoTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChangesAsync_uses_explicit_transaction_without_committing(bool autoTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.TransactionTestBase`1/&lt;SaveChangesAsync_uses_explicit_transaction_without_committing&gt;d__20))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.InlineData(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoTransaction" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoTransaction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapshotSupported">
      <MemberSignature Language="C#" Value="protected abstract bool SnapshotSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapshotSupported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TransactionTestBase`1.SnapshotSupported" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property SnapshotSupported As Boolean" />
      <MemberSignature Language="F#" Value="member this.SnapshotSupported : bool" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.SnapshotSupported" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property bool SnapshotSupported { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property bool SnapshotSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStore">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestUtilities.RelationalTestStore TestStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestUtilities.RelationalTestStore TestStore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TransactionTestBase`1.TestStore" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TestStore As RelationalTestStore" />
      <MemberSignature Language="F#" Value="member this.TestStore : Microsoft.EntityFrameworkCore.TestUtilities.RelationalTestStore" Usage="Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.TransactionTestBase&lt;'Fixture&gt;.TransactionFixtureBase and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.TestStore" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::TestUtilities::RelationalTestStore ^ TestStore { Microsoft::EntityFrameworkCore::TestUtilities::RelationalTestStore ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property Microsoft::EntityFrameworkCore::TestUtilities::RelationalTestStore ^ TestStore { Microsoft::EntityFrameworkCore::TestUtilities::RelationalTestStore ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestUtilities.RelationalTestStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction_throws_if_ambient_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void UseTransaction_throws_if_ambient_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseTransaction_throws_if_ambient_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.UseTransaction_throws_if_ambient_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UseTransaction_throws_if_ambient_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction_throws_if_ambient_transaction_started : unit -&gt; unit&#xA;override this.UseTransaction_throws_if_ambient_transaction_started : unit -&gt; unit" Usage="transactionTestBase.UseTransaction_throws_if_ambient_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UseTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void UseTransaction_throws_if_ambient_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UseTransaction_throws_if_ambient_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction_throws_if_another_transaction_started">
      <MemberSignature Language="C#" Value="public virtual void UseTransaction_throws_if_another_transaction_started ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseTransaction_throws_if_another_transaction_started() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.UseTransaction_throws_if_another_transaction_started" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UseTransaction_throws_if_another_transaction_started ()" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction_throws_if_another_transaction_started : unit -&gt; unit&#xA;override this.UseTransaction_throws_if_another_transaction_started : unit -&gt; unit" Usage="transactionTestBase.UseTransaction_throws_if_another_transaction_started " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UseTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void UseTransaction_throws_if_another_transaction_started();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UseTransaction_throws_if_another_transaction_started();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction_throws_if_enlisted_in_transaction">
      <MemberSignature Language="C#" Value="public virtual void UseTransaction_throws_if_enlisted_in_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseTransaction_throws_if_enlisted_in_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.UseTransaction_throws_if_enlisted_in_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UseTransaction_throws_if_enlisted_in_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction_throws_if_enlisted_in_transaction : unit -&gt; unit&#xA;override this.UseTransaction_throws_if_enlisted_in_transaction : unit -&gt; unit" Usage="transactionTestBase.UseTransaction_throws_if_enlisted_in_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UseTransaction_throws_if_enlisted_in_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void UseTransaction_throws_if_enlisted_in_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UseTransaction_throws_if_enlisted_in_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction_throws_if_mismatched_connection">
      <MemberSignature Language="C#" Value="public virtual void UseTransaction_throws_if_mismatched_connection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseTransaction_throws_if_mismatched_connection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.UseTransaction_throws_if_mismatched_connection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UseTransaction_throws_if_mismatched_connection ()" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction_throws_if_mismatched_connection : unit -&gt; unit&#xA;override this.UseTransaction_throws_if_mismatched_connection : unit -&gt; unit" Usage="transactionTestBase.UseTransaction_throws_if_mismatched_connection " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UseTransaction_throws_if_mismatched_connection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void UseTransaction_throws_if_mismatched_connection();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UseTransaction_throws_if_mismatched_connection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseTransaction_will_not_dispose_external_transaction">
      <MemberSignature Language="C#" Value="public virtual void UseTransaction_will_not_dispose_external_transaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseTransaction_will_not_dispose_external_transaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TransactionTestBase`1.UseTransaction_will_not_dispose_external_transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UseTransaction_will_not_dispose_external_transaction ()" />
      <MemberSignature Language="F#" Value="abstract member UseTransaction_will_not_dispose_external_transaction : unit -&gt; unit&#xA;override this.UseTransaction_will_not_dispose_external_transaction : unit -&gt; unit" Usage="transactionTestBase.UseTransaction_will_not_dispose_external_transaction " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UseTransaction_will_not_dispose_external_transaction();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void UseTransaction_will_not_dispose_external_transaction();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UseTransaction_will_not_dispose_external_transaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>