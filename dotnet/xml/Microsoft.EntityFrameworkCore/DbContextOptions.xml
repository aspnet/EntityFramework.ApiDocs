<Type Name="DbContextOptions" FullName="Microsoft.EntityFrameworkCore.DbContextOptions">
  <TypeSignature Language="C#" Value="public abstract class DbContextOptions : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbContextOptions extends System.Object implements class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.DbContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbContextOptions&#xA;Implements IDbContextOptions" />
  <TypeSignature Language="F#" Value="type DbContextOptions = class&#xA;    interface IDbContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbContextOptions abstract : Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class DbContextOptions abstract : Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class DbContextOptions abstract : Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbContextOptions (System.Collections.Generic.IReadOnlyDictionary&lt;Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; extensions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyDictionary`2&lt;class System.Type, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; extensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (extensions As IReadOnlyDictionary(Of Type, IDbContextOptionsExtension))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.DbContextOptions : System.Collections.Generic.IReadOnlyDictionary&lt;Type, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; -&gt; Microsoft.EntityFrameworkCore.DbContextOptions" Usage="new Microsoft.EntityFrameworkCore.DbContextOptions extensions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbContextOptions(System::Collections::Generic::IReadOnlyDictionary&lt;Type ^, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension ^&gt; ^ extensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extensions" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="extensions"> The extensions that store the configured options. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public abstract Type ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.DbContextOptions.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContextType As Type" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type" Usage="Microsoft.EntityFrameworkCore.DbContextOptions.ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ContextType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Platform::Type ^ ContextType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type of context that these options are for. Will return <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> if the
                options are not built for a specific derived context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.DbContextOptions.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Extensions As IEnumerable(Of IDbContextOptionsExtension)" />
      <MemberSignature Language="F#" Value="member this.Extensions : seq&lt;Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt;" Usage="Microsoft.EntityFrameworkCore.DbContextOptions.Extensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension ^&gt; ^ Extensions { System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the extensions that store the configured options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindExtension&lt;TExtension&gt;">
      <MemberSignature Language="C#" Value="public virtual TExtension FindExtension&lt;TExtension&gt; () where TExtension : class, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TExtension FindExtension&lt;class (class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension) TExtension&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions.FindExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindExtension(Of TExtension As {Class, IDbContextOptionsExtension}) () As TExtension" />
      <MemberSignature Language="F#" Value="abstract member FindExtension : unit -&gt; 'Extension (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)&#xA;override this.FindExtension : unit -&gt; 'Extension (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)" Usage="dbContextOptions.FindExtension " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension FindExtension();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension FindExtension();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension FindExtension();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions.FindExtension``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExtension</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtension">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExtension"> The type of the extension to get. </typeparam>
        <summary>
                Gets the extension of the specified type. Returns null if no extension of the specified type is configured.
            </summary>
        <returns> The extension, or null if none was found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public virtual void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Freeze ()" />
      <MemberSignature Language="F#" Value="abstract member Freeze : unit -&gt; unit&#xA;override this.Freeze : unit -&gt; unit" Usage="dbContextOptions.Freeze " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Freeze();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Freeze();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Freeze();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Specifies that no further configuration of this options object should occur.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;TExtension&gt;">
      <MemberSignature Language="C#" Value="public virtual TExtension GetExtension&lt;TExtension&gt; () where TExtension : class, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TExtension GetExtension&lt;class (class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension) TExtension&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtension(Of TExtension As {Class, IDbContextOptionsExtension}) () As TExtension" />
      <MemberSignature Language="F#" Value="abstract member GetExtension : unit -&gt; 'Extension (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)&#xA;override this.GetExtension : unit -&gt; 'Extension (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)" Usage="dbContextOptions.GetExtension " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension GetExtension();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension GetExtension();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension virtual TExtension GetExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TExtension</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtension">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TExtension"> The type of the extension to get. </typeparam>
        <summary>
                Gets the extension of the specified type. Throws if no extension of the specified type is configured.
            </summary>
        <returns> The extension. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.DbContextOptions.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="Microsoft.EntityFrameworkCore.DbContextOptions.IsFrozen" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Returns true if <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptions.Freeze" />. has been called. A frozen options object cannot be further
                configured with <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExtension&lt;TExtension&gt;">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.DbContextOptions WithExtension&lt;TExtension&gt; (TExtension extension) where TExtension : class, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.DbContextOptions WithExtension&lt;class (class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension) TExtension&gt;(!!TExtension extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.DbContextOptions.WithExtension``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function WithExtension(Of TExtension As {Class, IDbContextOptionsExtension}) (extension As TExtension) As DbContextOptions" />
      <MemberSignature Language="F#" Value="abstract member WithExtension : 'Extension -&gt; Microsoft.EntityFrameworkCore.DbContextOptions (requires 'Extension : null and 'Extension :&gt; Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension)" Usage="dbContextOptions.WithExtension extension" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension abstract Microsoft::EntityFrameworkCore::DbContextOptions ^ WithExtension(TExtension extension);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension abstract Microsoft::EntityFrameworkCore::DbContextOptions ^ WithExtension(TExtension extension);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TExtension&gt;&#xA; where TExtension : class, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension abstract Microsoft::EntityFrameworkCore::DbContextOptions WithExtension(TExtension extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.DbContextOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtension">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extension" Type="TExtension" />
      </Parameters>
      <Docs>
        <typeparam name="TExtension"> The type of extension to be added. </typeparam>
        <param name="extension"> The extension to be added. </param>
        <summary>
                Adds the given extension to the options.
            </summary>
        <returns> The same options instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>