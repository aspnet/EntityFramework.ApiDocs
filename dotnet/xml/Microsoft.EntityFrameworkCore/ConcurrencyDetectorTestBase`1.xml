<Type Name="ConcurrencyDetectorTestBase&lt;TFixture&gt;" FullName="Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase&lt;TFixture&gt;">
  <TypeSignature Language="C#" Value="public abstract class ConcurrencyDetectorTestBase&lt;TFixture&gt; : Xunit.IClassFixture&lt;TFixture&gt; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt;new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConcurrencyDetectorTestBase`1&lt;.ctor (class Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase`1&lt;class Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;) TFixture&gt; extends System.Object implements class Xunit.IClassFixture`1&lt;!TFixture&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConcurrencyDetectorTestBase(Of TFixture)&#xA;Implements IClassFixture(Of TFixture)" />
  <TypeSignature Language="F#" Value="type ConcurrencyDetectorTestBase&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; = class&#xA;    interface IClassFixture&lt;'Fixture (requires 'Fixture :&gt; NorthwindQueryFixtureBase&lt;NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFixture&gt;&#xA; where TFixture : NorthwindQueryFixtureBase&lt;NoopModelCustomizer ^&gt;gcnew()public ref class ConcurrencyDetectorTestBase abstract : Xunit::IClassFixture&lt;TFixture&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFixture">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt;</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Xunit.IClassFixture&lt;TFixture&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TFixture">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConcurrencyDetectorTestBase (TFixture fixture);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(!TFixture fixture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (fixture As TFixture)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; : 'Fixture -&gt; Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;" Usage="new Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt; fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConcurrencyDetectorTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ConcurrencyDetectorTestBase(TFixture fixture);" />
      <MemberSignature Language="C++ WINRT" Value=" ConcurrencyDetectorTestBase(TFixture fixture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixture" Type="TFixture" />
      </Parameters>
      <Docs>
        <param name="fixture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Any_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Any_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Any_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Any_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Any_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Any_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Any_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Any_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Any_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Any_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Any_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Any_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Any_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Any_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Any_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Any_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetectorTest">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task ConcurrencyDetectorTest (Func&lt;Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext,System.Threading.Tasks.Task&gt; test);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConcurrencyDetectorTest(class System.Func`2&lt;class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext, class System.Threading.Tasks.Task&gt; test) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.ConcurrencyDetectorTest(System.Func{Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ConcurrencyDetectorTest (test As Func(Of NorthwindContext, Task)) As Task" />
      <MemberSignature Language="F#" Value="abstract member ConcurrencyDetectorTest : Func&lt;Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.ConcurrencyDetectorTest : Func&lt;Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.ConcurrencyDetectorTest test" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task ^ ConcurrencyDetectorTest(Func&lt;Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^, System::Threading::Tasks::Task ^&gt; ^ test);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1/&lt;ConcurrencyDetectorTest&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Func&lt;Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="test">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Count_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Count_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Count_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Count_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Count_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Count_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Count_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Count_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Count_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Count_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Count_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Count_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Count_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Count_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Count_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Count_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="protected Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateContext () As NorthwindContext" />
      <MemberSignature Language="F#" Value="member this.CreateContext : unit -&gt; Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext" Usage="concurrencyDetectorTestBase.CreateContext " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext ^ CreateContext();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::TestModels::Northwind::NorthwindContext CreateContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.Northwind.NorthwindContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Find_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Find_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Find_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Find_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Find_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Find_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Find_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Find_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Find_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Find_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Find_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Find_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Find_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Find_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task First_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task First_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.First_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function First_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member First_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.First_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.First_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ First_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task First_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task First_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.First_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function First_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member First_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.First_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.First_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ First_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="protected TFixture Fixture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFixture Fixture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Fixture" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Fixture As TFixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : 'Fixture" Usage="Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase&lt;'Fixture (requires 'Fixture :&gt; Microsoft.EntityFrameworkCore.Query.NorthwindQueryFixtureBase&lt;Microsoft.EntityFrameworkCore.TestUtilities.NoopModelCustomizer&gt; and 'Fixture : (new : unit -&gt; 'Fixture))&gt;.Fixture" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property TFixture Fixture { TFixture get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFixture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Last_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Last_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Last_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Last_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Last_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Last_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Last_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Last_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Last_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Last_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Last_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Last_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Last_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Last_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Last_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Last_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.SaveChanges_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.SaveChanges_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChanges_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChanges_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.SaveChanges_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChanges_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChanges_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChanges_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.SaveChanges_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SaveChanges_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Single_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Single_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Single_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Single_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member Single_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Single_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Single_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Single_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task Single_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task Single_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.Single_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Single_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member Single_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.Single_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.Single_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ Single_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList_logs_concurrent_access_async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToList_logs_concurrent_access_async ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToList_logs_concurrent_access_async() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.ToList_logs_concurrent_access_async" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToList_logs_concurrent_access_async () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToList_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToList_logs_concurrent_access_async : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.ToList_logs_concurrent_access_async " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToList_logs_concurrent_access_async();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToList_logs_concurrent_access_nonasync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ToList_logs_concurrent_access_nonasync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ToList_logs_concurrent_access_nonasync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ConcurrencyDetectorTestBase`1.ToList_logs_concurrent_access_nonasync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToList_logs_concurrent_access_nonasync () As Task" />
      <MemberSignature Language="F#" Value="abstract member ToList_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ToList_logs_concurrent_access_nonasync : unit -&gt; System.Threading.Tasks.Task" Usage="concurrencyDetectorTestBase.ToList_logs_concurrent_access_nonasync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ToList_logs_concurrent_access_nonasync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>