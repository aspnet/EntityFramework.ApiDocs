<Type Name="ChangedOnlyMonsterContext+AuditInfo" FullName="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+AuditInfo">
  <TypeSignature Language="C#" Value="public class ChangedOnlyMonsterContext.AuditInfo : Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.NotificationEntity, Microsoft.EntityFrameworkCore.TestModels.IAuditInfo" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ChangedOnlyMonsterContext/AuditInfo extends Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext/NotificationEntity implements class Microsoft.EntityFrameworkCore.TestModels.IAuditInfo" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ChangedOnlyMonsterContext.AuditInfo&#xA;Inherits ChangedOnlyMonsterContext.NotificationEntity&#xA;Implements IAuditInfo" />
  <TypeSignature Language="F#" Value="type ChangedOnlyMonsterContext.AuditInfo = class&#xA;    inherit ChangedOnlyMonsterContext.NotificationEntity&#xA;    interface IAuditInfo" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ChangedOnlyMonsterContext::AuditInfo : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IAuditInfo" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ChangedOnlyMonsterContext::AuditInfo : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IAuditInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+NotificationEntity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.TestModels.IAuditInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuditInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuditInfo();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; AuditInfo();" />
      <MemberSignature Language="C++ WINRT" Value=" AuditInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concurrency">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo Concurrency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo Concurrency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.Concurrency" />
      <MemberSignature Language="VB.NET" Value="Public Property Concurrency As IConcurrencyInfo" />
      <MemberSignature Language="F#" Value="member this.Concurrency : Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.Concurrency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ Concurrency { Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ Concurrency { Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IAuditInfo.Concurrency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedBy">
      <MemberSignature Language="C#" Value="public string ModifiedBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModifiedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.ModifiedBy" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedBy As String" />
      <MemberSignature Language="F#" Value="member this.ModifiedBy : string with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.ModifiedBy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModifiedBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ModifiedBy { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IAuditInfo.ModifiedBy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedDate">
      <MemberSignature Language="C#" Value="public DateTime ModifiedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ModifiedDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.ModifiedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property ModifiedDate As DateTime" />
      <MemberSignature Language="F#" Value="member this.ModifiedDate : DateTime with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.AuditInfo.ModifiedDate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ModifiedDate { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IAuditInfo.ModifiedDate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>