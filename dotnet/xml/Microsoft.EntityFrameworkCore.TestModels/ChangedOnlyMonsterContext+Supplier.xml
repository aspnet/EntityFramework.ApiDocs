<Type Name="ChangedOnlyMonsterContext+Supplier" FullName="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+Supplier">
  <TypeSignature Language="C#" Value="public class ChangedOnlyMonsterContext.Supplier : Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.NotificationEntity, Microsoft.EntityFrameworkCore.TestModels.ISupplier" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ChangedOnlyMonsterContext/Supplier extends Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext/NotificationEntity implements class Microsoft.EntityFrameworkCore.TestModels.ISupplier" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier" />
  <TypeSignature Language="VB.NET" Value="Public Class ChangedOnlyMonsterContext.Supplier&#xA;Inherits ChangedOnlyMonsterContext.NotificationEntity&#xA;Implements ISupplier" />
  <TypeSignature Language="F#" Value="type ChangedOnlyMonsterContext.Supplier = class&#xA;    inherit ChangedOnlyMonsterContext.NotificationEntity&#xA;    interface ISupplier" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ChangedOnlyMonsterContext::Supplier : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::ISupplier" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ChangedOnlyMonsterContext::Supplier : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::ISupplier" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+NotificationEntity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.TestModels.ISupplier</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Supplier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Supplier();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Supplier();" />
      <MemberSignature Language="C++ WINRT" Value=" Supplier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackOrderLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBackOrderLine&gt; BackOrderLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IBackOrderLine&gt; BackOrderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.BackOrderLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackOrderLines As ICollection(Of IBackOrderLine)" />
      <MemberSignature Language="F#" Value="member this.BackOrderLines : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBackOrderLine&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.BackOrderLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBackOrderLine ^&gt; ^ BackOrderLines { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBackOrderLine ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBackOrderLine ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.ISupplier.BackOrderLines</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBackOrderLine&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCollections">
      <MemberSignature Language="C#" Value="public void InitializeCollections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeCollections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.InitializeCollections" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeCollections ()" />
      <MemberSignature Language="F#" Value="abstract member InitializeCollections : unit -&gt; unit&#xA;override this.InitializeCollections : unit -&gt; unit" Usage="supplier.InitializeCollections " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeCollections();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void InitializeCollections();" />
      <MemberSignature Language="C++ WINRT" Value="void InitializeCollections();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.TestModels.ISupplier.InitializeCollections</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logo">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.TestModels.ISupplierLogo Logo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.ISupplierLogo Logo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Logo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Logo As ISupplierLogo" />
      <MemberSignature Language="F#" Value="member this.Logo : Microsoft.EntityFrameworkCore.TestModels.ISupplierLogo with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Logo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ Logo { Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ Logo { Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::ISupplierLogo ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.ISupplier.Logo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.ISupplierLogo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.ISupplier.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Products">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProduct&gt; Products { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IProduct&gt; Products" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Products" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Products As ICollection(Of IProduct)" />
      <MemberSignature Language="F#" Value="member this.Products : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProduct&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.Products" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProduct ^&gt; ^ Products { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProduct ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProduct ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.ISupplier.Products</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProduct&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplierId">
      <MemberSignature Language="C#" Value="public int SupplierId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SupplierId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.SupplierId" />
      <MemberSignature Language="VB.NET" Value="Public Property SupplierId As Integer" />
      <MemberSignature Language="F#" Value="member this.SupplierId : int with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Supplier.SupplierId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SupplierId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int SupplierId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.ISupplier.SupplierId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>