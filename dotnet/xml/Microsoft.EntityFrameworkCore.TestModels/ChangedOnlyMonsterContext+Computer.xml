<Type Name="ChangedOnlyMonsterContext+Computer" FullName="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+Computer">
  <TypeSignature Language="C#" Value="public class ChangedOnlyMonsterContext.Computer : Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.NotificationEntity, Microsoft.EntityFrameworkCore.TestModels.IComputer" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ChangedOnlyMonsterContext/Computer extends Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext/NotificationEntity implements class Microsoft.EntityFrameworkCore.TestModels.IComputer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChangedOnlyMonsterContext.Computer&#xA;Inherits ChangedOnlyMonsterContext.NotificationEntity&#xA;Implements IComputer" />
  <TypeSignature Language="F#" Value="type ChangedOnlyMonsterContext.Computer = class&#xA;    inherit ChangedOnlyMonsterContext.NotificationEntity&#xA;    interface IComputer" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ChangedOnlyMonsterContext::Computer : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IComputer" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ChangedOnlyMonsterContext::Computer : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IComputer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+NotificationEntity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.TestModels.IComputer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Computer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Computer();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Computer();" />
      <MemberSignature Language="C++ WINRT" Value=" Computer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputerDetail">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.TestModels.IComputerDetail ComputerDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IComputerDetail ComputerDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.ComputerDetail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ComputerDetail As IComputerDetail" />
      <MemberSignature Language="F#" Value="member this.ComputerDetail : Microsoft.EntityFrameworkCore.TestModels.IComputerDetail with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.ComputerDetail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ ComputerDetail { Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ ComputerDetail { Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IComputerDetail ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IComputer.ComputerDetail</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IComputerDetail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputerId">
      <MemberSignature Language="C#" Value="public int ComputerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ComputerId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.ComputerId" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputerId As Integer" />
      <MemberSignature Language="F#" Value="member this.ComputerId : int with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.ComputerId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ComputerId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int ComputerId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IComputer.ComputerId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Computer.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IComputer.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>