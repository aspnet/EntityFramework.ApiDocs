<Type Name="ChangedOnlyMonsterContext+Product" FullName="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+Product">
  <TypeSignature Language="C#" Value="public class ChangedOnlyMonsterContext.Product : Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.NotificationEntity, Microsoft.EntityFrameworkCore.TestModels.IProduct" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ChangedOnlyMonsterContext/Product extends Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext/NotificationEntity implements class Microsoft.EntityFrameworkCore.TestModels.IProduct" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product" />
  <TypeSignature Language="VB.NET" Value="Public Class ChangedOnlyMonsterContext.Product&#xA;Inherits ChangedOnlyMonsterContext.NotificationEntity&#xA;Implements IProduct" />
  <TypeSignature Language="F#" Value="type ChangedOnlyMonsterContext.Product = class&#xA;    inherit ChangedOnlyMonsterContext.NotificationEntity&#xA;    interface IProduct" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ChangedOnlyMonsterContext::Product : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IProduct" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ChangedOnlyMonsterContext::Product : Microsoft::EntityFrameworkCore::TestModels::ChangedOnlyMonsterContext::NotificationEntity, Microsoft::EntityFrameworkCore::TestModels::IProduct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext+NotificationEntity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.TestModels.IProduct</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Product ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Product();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Product();" />
      <MemberSignature Language="C++ WINRT" Value=" Product();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Barcodes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBarcode&gt; Barcodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IBarcode&gt; Barcodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Barcodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Barcodes As ICollection(Of IBarcode)" />
      <MemberSignature Language="F#" Value="member this.Barcodes : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBarcode&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Barcodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBarcode ^&gt; ^ Barcodes { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBarcode ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IBarcode ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Barcodes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IBarcode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseConcurrency">
      <MemberSignature Language="C#" Value="public string BaseConcurrency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseConcurrency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.BaseConcurrency" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseConcurrency As String" />
      <MemberSignature Language="F#" Value="member this.BaseConcurrency : string with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.BaseConcurrency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseConcurrency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ BaseConcurrency { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.BaseConcurrency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexConcurrency">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo ComplexConcurrency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo ComplexConcurrency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.ComplexConcurrency" />
      <MemberSignature Language="VB.NET" Value="Public Property ComplexConcurrency As IConcurrencyInfo" />
      <MemberSignature Language="F#" Value="member this.ComplexConcurrency : Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.ComplexConcurrency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ ComplexConcurrency { Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ ComplexConcurrency { Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IConcurrencyInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.ComplexConcurrency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IConcurrencyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Description" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Description { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.TestModels.IProductDetail Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IProductDetail Detail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Detail As IProductDetail" />
      <MemberSignature Language="F#" Value="member this.Detail : Microsoft.EntityFrameworkCore.TestModels.IProductDetail with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Detail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ Detail { Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ Detail { Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IProductDetail ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Detail</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IProductDetail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dimensions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestModels.IDimensions Dimensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IDimensions Dimensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Dimensions" />
      <MemberSignature Language="VB.NET" Value="Public Property Dimensions As IDimensions" />
      <MemberSignature Language="F#" Value="member this.Dimensions : Microsoft.EntityFrameworkCore.TestModels.IDimensions with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Dimensions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ Dimensions { Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ Dimensions { Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IDimensions ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Dimensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IDimensions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCollections">
      <MemberSignature Language="C#" Value="public void InitializeCollections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeCollections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.InitializeCollections" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeCollections ()" />
      <MemberSignature Language="F#" Value="abstract member InitializeCollections : unit -&gt; unit&#xA;override this.InitializeCollections : unit -&gt; unit" Usage="product.InitializeCollections " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeCollections();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void InitializeCollections();" />
      <MemberSignature Language="C++ WINRT" Value="void InitializeCollections();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.TestModels.IProduct.InitializeCollections</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NestedComplexConcurrency">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.TestModels.IAuditInfo NestedComplexConcurrency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.TestModels.IAuditInfo NestedComplexConcurrency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.NestedComplexConcurrency" />
      <MemberSignature Language="VB.NET" Value="Public Property NestedComplexConcurrency As IAuditInfo" />
      <MemberSignature Language="F#" Value="member this.NestedComplexConcurrency : Microsoft.EntityFrameworkCore.TestModels.IAuditInfo with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.NestedComplexConcurrency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ NestedComplexConcurrency { Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ NestedComplexConcurrency { Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ get(); void set(Microsoft::EntityFrameworkCore::TestModels::IAuditInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.NestedComplexConcurrency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.TestModels.IAuditInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Photos">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductPhoto&gt; Photos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IProductPhoto&gt; Photos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Photos" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Photos As ICollection(Of IProductPhoto)" />
      <MemberSignature Language="F#" Value="member this.Photos : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductPhoto&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Photos" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductPhoto ^&gt; ^ Photos { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductPhoto ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductPhoto ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Photos</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductPhoto&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductId">
      <MemberSignature Language="C#" Value="public int ProductId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.ProductId" />
      <MemberSignature Language="VB.NET" Value="Public Property ProductId As Integer" />
      <MemberSignature Language="F#" Value="member this.ProductId : int with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.ProductId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductId { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int ProductId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.ProductId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IDiscontinuedProduct&gt; Replaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IDiscontinuedProduct&gt; Replaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Replaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Replaces As ICollection(Of IDiscontinuedProduct)" />
      <MemberSignature Language="F#" Value="member this.Replaces : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IDiscontinuedProduct&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Replaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IDiscontinuedProduct ^&gt; ^ Replaces { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IDiscontinuedProduct ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IDiscontinuedProduct ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Replaces</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IDiscontinuedProduct&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reviews">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductReview&gt; Reviews { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.IProductReview&gt; Reviews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Reviews" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Reviews As ICollection(Of IProductReview)" />
      <MemberSignature Language="F#" Value="member this.Reviews : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductReview&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Reviews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductReview ^&gt; ^ Reviews { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductReview ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::IProductReview ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Reviews</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.IProductReview&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suppliers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.ISupplier&gt; Suppliers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ISupplier&gt; Suppliers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Suppliers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Suppliers As ICollection(Of ISupplier)" />
      <MemberSignature Language="F#" Value="member this.Suppliers : System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.ISupplier&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.TestModels.ChangedOnlyMonsterContext.Product.Suppliers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::ISupplier ^&gt; ^ Suppliers { System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::ISupplier ^&gt; ^ get(); void set(System::Collections::Generic::ICollection&lt;Microsoft::EntityFrameworkCore::TestModels::ISupplier ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.TestModels.IProduct.Suppliers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.EntityFrameworkCore.TestModels.ISupplier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>