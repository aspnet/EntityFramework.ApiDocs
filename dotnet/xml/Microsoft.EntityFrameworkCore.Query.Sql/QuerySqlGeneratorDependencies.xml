<Type Name="QuerySqlGeneratorDependencies" FullName="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies">
  <TypeSignature Language="C#" Value="public sealed class QuerySqlGeneratorDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QuerySqlGeneratorDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QuerySqlGeneratorDependencies" />
  <TypeSignature Language="F#" Value="type QuerySqlGeneratorDependencies = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuerySqlGeneratorDependencies sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class QuerySqlGeneratorDependencies sealed" />
  <TypeSignature Language="C++ WINRT" Value="class QuerySqlGeneratorDependencies sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuerySqlGeneratorDependencies (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, relationalTypeMapper As IRelationalTypeMapper)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies (commandBuilderFactory, sqlGenerationHelper, parameterNameGeneratorFactory, relationalTypeMapper)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper);" />
      <MemberSignature Language="C++ WINRT" Value=" QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory const &amp; commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper const &amp; sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory const &amp; parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper const &amp; relationalTypeMapper);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="commandBuilderFactory"> The command builder factory. </param>
        <param name="sqlGenerationHelper"> The SQL generation helper. </param>
        <param name="parameterNameGeneratorFactory"> The parameter name generator factory. </param>
        <param name="relationalTypeMapper"> The relational type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change 
                    as new dependencies are added. Instead, use this type in your constructor so that an instance 
                    will be created and injected automatically by the dependency injection container. To create 
                    an instance with some dependent services replaced, first resolve the object from the dependency 
                    injection container, then replace selected services using the 'With...' methods. Do not call 
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuerySqlGeneratorDependencies (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, relationalTypeMapper As IRelationalTypeMapper, typeMappingSource As IRelationalTypeMappingSource)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies (commandBuilderFactory, sqlGenerationHelper, parameterNameGeneratorFactory, relationalTypeMapper, typeMappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ typeMappingSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ typeMappingSource);" />
      <MemberSignature Language="C++ WINRT" Value=" QuerySqlGeneratorDependencies(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory const &amp; commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper const &amp; sqlGenerationHelper, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory const &amp; parameterNameGeneratorFactory, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper const &amp; relationalTypeMapper, Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource const &amp; typeMappingSource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" />
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" />
      </Parameters>
      <Docs>
        <param name="commandBuilderFactory"> The command builder factory. </param>
        <param name="sqlGenerationHelper"> The SQL generation helper. </param>
        <param name="parameterNameGeneratorFactory"> The parameter name generator factory. </param>
        <param name="relationalTypeMapper"> The relational type mapper. </param>
        <param name="typeMappingSource"> The type mapper. </param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBuilderFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory CommandBuilderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory CommandBuilderFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.CommandBuilderFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBuilderFactory As IRelationalCommandBuilderFactory" />
      <MemberSignature Language="F#" Value="member this.CommandBuilderFactory : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" Usage="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.CommandBuilderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ CommandBuilderFactory { Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ CommandBuilderFactory { Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the command builder factory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterNameGeneratorFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.ParameterNameGeneratorFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterNameGeneratorFactory As IParameterNameGeneratorFactory" />
      <MemberSignature Language="F#" Value="member this.ParameterNameGeneratorFactory : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Usage="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.ParameterNameGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ ParameterNameGeneratorFactory { Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ ParameterNameGeneratorFactory { Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the parameter name generator factory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalTypeMapper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper RelationalTypeMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.RelationalTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationalTypeMapper As IRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.RelationalTypeMapper : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.RelationalTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ RelationalTypeMapper { Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ RelationalTypeMapper { Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use TypeMappingSource.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The relational type mapper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlGenerationHelper">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.SqlGenerationHelper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SqlGenerationHelper As ISqlGenerationHelper" />
      <MemberSignature Language="F#" Value="member this.SqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Usage="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.SqlGenerationHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ SqlGenerationHelper { Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ SqlGenerationHelper { Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the SQL generation helper.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeMappingSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource TypeMappingSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.TypeMappingSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeMappingSource As IRelationalTypeMappingSource" />
      <MemberSignature Language="F#" Value="member this.TypeMappingSource : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" Usage="Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.TypeMappingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ TypeMappingSource { Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ TypeMappingSource { Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type mapping source.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With (Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (parameterNameGeneratorFactory As IParameterNameGeneratorFactory) As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="querySqlGeneratorDependencies.With parameterNameGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory const &amp; parameterNameGeneratorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" />
      </Parameters>
      <Docs>
        <param name="parameterNameGeneratorFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (commandBuilderFactory As IRelationalCommandBuilderFactory) As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="querySqlGeneratorDependencies.With commandBuilderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies With(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory const &amp; commandBuilderFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" />
      </Parameters>
      <Docs>
        <param name="commandBuilderFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper relationalTypeMapper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (relationalTypeMapper As IRelationalTypeMapper) As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="querySqlGeneratorDependencies.With relationalTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ relationalTypeMapper);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper const &amp; relationalTypeMapper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalTypeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" />
      </Parameters>
      <Docs>
        <param name="relationalTypeMapper"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (typeMappingSource As IRelationalTypeMappingSource) As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="querySqlGeneratorDependencies.With typeMappingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ typeMappingSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource ^ typeMappingSource);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies With(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMappingSource const &amp; typeMappingSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" />
      </Parameters>
      <Docs>
        <param name="typeMappingSource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With (Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies With(class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies.With(Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (sqlGenerationHelper As ISqlGenerationHelper) As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper -&gt; Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies" Usage="querySqlGeneratorDependencies.With sqlGenerationHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Query::Sql::QuerySqlGeneratorDependencies With(Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper const &amp; sqlGenerationHelper);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
      </Parameters>
      <Docs>
        <param name="sqlGenerationHelper"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>