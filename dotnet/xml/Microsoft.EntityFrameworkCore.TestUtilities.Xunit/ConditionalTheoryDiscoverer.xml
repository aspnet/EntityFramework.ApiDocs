<Type Name="ConditionalTheoryDiscoverer" FullName="Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer">
  <TypeSignature Language="C#" Value="public class ConditionalTheoryDiscoverer : Xunit.Sdk.TheoryDiscoverer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConditionalTheoryDiscoverer extends Xunit.Sdk.TheoryDiscoverer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer" />
  <TypeSignature Language="VB.NET" Value="Public Class ConditionalTheoryDiscoverer&#xA;Inherits TheoryDiscoverer" />
  <TypeSignature Language="F#" Value="type ConditionalTheoryDiscoverer = class&#xA;    inherit TheoryDiscoverer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalTheoryDiscoverer : Xunit::Sdk::TheoryDiscoverer" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ConditionalTheoryDiscoverer : Xunit::Sdk::TheoryDiscoverer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xunit.Sdk.TheoryDiscoverer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalTheoryDiscoverer (Xunit.Abstractions.IMessageSink diagnosticMessageSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Xunit.Abstractions.IMessageSink diagnosticMessageSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer.#ctor(Xunit.Abstractions.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (diagnosticMessageSink As IMessageSink)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer : Xunit.Abstractions.IMessageSink -&gt; Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer" Usage="new Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer diagnosticMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalTheoryDiscoverer(Xunit::Abstractions::IMessageSink ^ diagnosticMessageSink);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ConditionalTheoryDiscoverer(Xunit::Abstractions::IMessageSink ^ diagnosticMessageSink);" />
      <MemberSignature Language="C++ WINRT" Value=" ConditionalTheoryDiscoverer(Xunit::Abstractions::IMessageSink const &amp; diagnosticMessageSink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="diagnosticMessageSink" Type="Xunit.Abstractions.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="diagnosticMessageSink">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestCasesForDataRow">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;Xunit.Sdk.IXunitTestCase&gt; CreateTestCasesForDataRow (Xunit.Abstractions.ITestFrameworkDiscoveryOptions discoveryOptions, Xunit.Abstractions.ITestMethod testMethod, Xunit.Abstractions.IAttributeInfo theoryAttribute, object[] dataRow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Xunit.Sdk.IXunitTestCase&gt; CreateTestCasesForDataRow(class Xunit.Abstractions.ITestFrameworkDiscoveryOptions discoveryOptions, class Xunit.Abstractions.ITestMethod testMethod, class Xunit.Abstractions.IAttributeInfo theoryAttribute, object[] dataRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCasesForDataRow(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateTestCasesForDataRow (discoveryOptions As ITestFrameworkDiscoveryOptions, testMethod As ITestMethod, theoryAttribute As IAttributeInfo, dataRow As Object()) As IEnumerable(Of IXunitTestCase)" />
      <MemberSignature Language="F#" Value="override this.CreateTestCasesForDataRow : Xunit.Abstractions.ITestFrameworkDiscoveryOptions * Xunit.Abstractions.ITestMethod * Xunit.Abstractions.IAttributeInfo * obj[] -&gt; seq&lt;Xunit.Sdk.IXunitTestCase&gt;" Usage="conditionalTheoryDiscoverer.CreateTestCasesForDataRow (discoveryOptions, testMethod, theoryAttribute, dataRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;Xunit::Sdk::IXunitTestCase ^&gt; ^ CreateTestCasesForDataRow(Xunit::Abstractions::ITestFrameworkDiscoveryOptions ^ discoveryOptions, Xunit::Abstractions::ITestMethod ^ testMethod, Xunit::Abstractions::IAttributeInfo ^ theoryAttribute, cli::array &lt;System::Object ^&gt; ^ dataRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Xunit.Sdk.IXunitTestCase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discoveryOptions" Type="Xunit.Abstractions.ITestFrameworkDiscoveryOptions" />
        <Parameter Name="testMethod" Type="Xunit.Abstractions.ITestMethod" />
        <Parameter Name="theoryAttribute" Type="Xunit.Abstractions.IAttributeInfo" />
        <Parameter Name="dataRow" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="discoveryOptions">To be added.</param>
        <param name="testMethod">To be added.</param>
        <param name="theoryAttribute">To be added.</param>
        <param name="dataRow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestCasesForTheory">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;Xunit.Sdk.IXunitTestCase&gt; CreateTestCasesForTheory (Xunit.Abstractions.ITestFrameworkDiscoveryOptions discoveryOptions, Xunit.Abstractions.ITestMethod testMethod, Xunit.Abstractions.IAttributeInfo theoryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Xunit.Sdk.IXunitTestCase&gt; CreateTestCasesForTheory(class Xunit.Abstractions.ITestFrameworkDiscoveryOptions discoveryOptions, class Xunit.Abstractions.ITestMethod testMethod, class Xunit.Abstractions.IAttributeInfo theoryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestUtilities.Xunit.ConditionalTheoryDiscoverer.CreateTestCasesForTheory(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateTestCasesForTheory (discoveryOptions As ITestFrameworkDiscoveryOptions, testMethod As ITestMethod, theoryAttribute As IAttributeInfo) As IEnumerable(Of IXunitTestCase)" />
      <MemberSignature Language="F#" Value="override this.CreateTestCasesForTheory : Xunit.Abstractions.ITestFrameworkDiscoveryOptions * Xunit.Abstractions.ITestMethod * Xunit.Abstractions.IAttributeInfo -&gt; seq&lt;Xunit.Sdk.IXunitTestCase&gt;" Usage="conditionalTheoryDiscoverer.CreateTestCasesForTheory (discoveryOptions, testMethod, theoryAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;Xunit::Sdk::IXunitTestCase ^&gt; ^ CreateTestCasesForTheory(Xunit::Abstractions::ITestFrameworkDiscoveryOptions ^ discoveryOptions, Xunit::Abstractions::ITestMethod ^ testMethod, Xunit::Abstractions::IAttributeInfo ^ theoryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Xunit.Sdk.IXunitTestCase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="discoveryOptions" Type="Xunit.Abstractions.ITestFrameworkDiscoveryOptions" />
        <Parameter Name="testMethod" Type="Xunit.Abstractions.ITestMethod" />
        <Parameter Name="theoryAttribute" Type="Xunit.Abstractions.IAttributeInfo" />
      </Parameters>
      <Docs>
        <param name="discoveryOptions">To be added.</param>
        <param name="testMethod">To be added.</param>
        <param name="theoryAttribute">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>