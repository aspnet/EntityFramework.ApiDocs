<Type Name="ConfigurationFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory">
  <TypeSignature Language="C#" Value="public class ConfigurationFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationFactory" />
  <TypeSignature Language="F#" Value="type ConfigurationFactory = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationFactory" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ConfigurationFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationFactory (Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider extensionsProvider, Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities cSharpUtilities, Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities scaffoldingUtilities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider extensionsProvider, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities cSharpUtilities, class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities scaffoldingUtilities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities,Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory : Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider * Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities * Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory (extensionsProvider, cSharpUtilities, scaffoldingUtilities)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationFactory(Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider ^ extensionsProvider, Microsoft::EntityFrameworkCore::Scaffolding::Internal::CSharpUtilities ^ cSharpUtilities, Microsoft::EntityFrameworkCore::Scaffolding::Internal::ScaffoldingUtilities ^ scaffoldingUtilities);" />
      <MemberSignature Language="C++ WINRT" Value=" ConfigurationFactory(Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider const &amp; extensionsProvider, Microsoft::EntityFrameworkCore::Scaffolding::Internal::CSharpUtilities const &amp; cSharpUtilities, Microsoft::EntityFrameworkCore::Scaffolding::Internal::ScaffoldingUtilities const &amp; scaffoldingUtilities);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="extensionsProvider" Type="Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" />
        <Parameter Name="cSharpUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities" />
        <Parameter Name="scaffoldingUtilities" Type="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities" />
      </Parameters>
      <Docs>
        <param name="extensionsProvider">To be added.</param>
        <param name="cSharpUtilities">To be added.</param>
        <param name="scaffoldingUtilities">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributeConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration CreateAttributeConfiguration (string attributeName, params string[] attributeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration CreateAttributeConfiguration(string attributeName, string[] attributeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateAttributeConfiguration(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAttributeConfiguration (attributeName As String, ParamArray attributeArguments As String()) As AttributeConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateAttributeConfiguration : string * string[] -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration&#xA;override this.CreateAttributeConfiguration : string * string[] -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration" Usage="configurationFactory.CreateAttributeConfiguration (attributeName, attributeArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::AttributeConfiguration ^ CreateAttributeConfiguration(System::String ^ attributeName, ... cli::array &lt;System::String ^&gt; ^ attributeArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.AttributeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeArguments" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributeName">To be added.</param>
        <param name="attributeArguments">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration CreateCustomConfiguration (string connectionString, string contextClassName, string namespace, bool useFluentApiOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration CreateCustomConfiguration(string connectionString, string contextClassName, string namespace, bool useFluentApiOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateCustomConfiguration(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCustomConfiguration (connectionString As String, contextClassName As String, namespace As String, useFluentApiOnly As Boolean) As CustomConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateCustomConfiguration : string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration&#xA;override this.CreateCustomConfiguration : string * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration" Usage="configurationFactory.CreateCustomConfiguration (connectionString, contextClassName, namespace, useFluentApiOnly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::CustomConfiguration ^ CreateCustomConfiguration(System::String ^ connectionString, System::String ^ contextClassName, System::String ^ namespace, bool useFluentApiOnly);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::CustomConfiguration CreateCustomConfiguration(std::wstring const &amp; connectionString, std::wstring const &amp; contextClassName, std::wstring const &amp; namespace, bool useFluentApiOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="contextClassName" Type="System.String" />
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="useFluentApiOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="contextClassName">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="useFluentApiOnly">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration CreateEntityConfiguration (Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration modelConfiguration, Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration CreateEntityConfiguration(class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration modelConfiguration, class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateEntityConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration&#xA;override this.CreateEntityConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration" Usage="configurationFactory.CreateEntityConfiguration (modelConfiguration, entityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration ^ CreateEntityConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::ModelConfiguration ^ modelConfiguration, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration CreateEntityConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::ModelConfiguration const &amp; modelConfiguration, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelConfiguration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration" />
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="modelConfiguration">To be added.</param>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFluentApiConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration CreateFluentApiConfiguration (bool attributeEquivalentExists, string methodName, params string[] methodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration CreateFluentApiConfiguration(bool attributeEquivalentExists, string methodName, string[] methodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateFluentApiConfiguration(System.Boolean,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFluentApiConfiguration (attributeEquivalentExists As Boolean, methodName As String, ParamArray methodArguments As String()) As FluentApiConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateFluentApiConfiguration : bool * string * string[] -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration&#xA;override this.CreateFluentApiConfiguration : bool * string * string[] -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration" Usage="configurationFactory.CreateFluentApiConfiguration (attributeEquivalentExists, methodName, methodArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::FluentApiConfiguration ^ CreateFluentApiConfiguration(bool attributeEquivalentExists, System::String ^ methodName, ... cli::array &lt;System::String ^&gt; ^ methodArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.FluentApiConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeEquivalentExists" Type="System.Boolean" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="methodArguments" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributeEquivalentExists">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="methodArguments">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndexConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration CreateIndexConfiguration (string lambdaIdentifier, Microsoft.EntityFrameworkCore.Metadata.Internal.Index index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration CreateIndexConfiguration(string lambdaIdentifier, class Microsoft.EntityFrameworkCore.Metadata.Internal.Index index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateIndexConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)" />
      <MemberSignature Language="F#" Value="abstract member CreateIndexConfiguration : string * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration&#xA;override this.CreateIndexConfiguration : string * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration" Usage="configurationFactory.CreateIndexConfiguration (lambdaIdentifier, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::IndexConfiguration ^ CreateIndexConfiguration(System::String ^ lambdaIdentifier, Microsoft::EntityFrameworkCore::Metadata::Internal::Index ^ index);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::IndexConfiguration CreateIndexConfiguration(std::wstring const &amp; lambdaIdentifier, Microsoft::EntityFrameworkCore::Metadata::Internal::Index const &amp; index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambdaIdentifier" Type="System.String" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Index" />
      </Parameters>
      <Docs>
        <param name="lambdaIdentifier">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyFluentApiConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration CreateKeyFluentApiConfiguration (string lambdaIdentifier, Microsoft.EntityFrameworkCore.Metadata.Internal.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration CreateKeyFluentApiConfiguration(string lambdaIdentifier, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateKeyFluentApiConfiguration(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyFluentApiConfiguration : string * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration&#xA;override this.CreateKeyFluentApiConfiguration : string * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration" Usage="configurationFactory.CreateKeyFluentApiConfiguration (lambdaIdentifier, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::KeyFluentApiConfiguration ^ CreateKeyFluentApiConfiguration(System::String ^ lambdaIdentifier, Microsoft::EntityFrameworkCore::Metadata::Internal::Key ^ key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::KeyFluentApiConfiguration CreateKeyFluentApiConfiguration(std::wstring const &amp; lambdaIdentifier, Microsoft::EntityFrameworkCore::Metadata::Internal::Key const &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.KeyFluentApiConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambdaIdentifier" Type="System.String" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="lambdaIdentifier">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModelConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration CreateModelConfiguration (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration customConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration CreateModelConfiguration(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration customConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateModelConfiguration(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member CreateModelConfiguration : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration&#xA;override this.CreateModelConfiguration : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration" Usage="configurationFactory.CreateModelConfiguration (model, customConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::ModelConfiguration ^ CreateModelConfiguration(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model, Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::CustomConfiguration ^ customConfiguration);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::ModelConfiguration CreateModelConfiguration(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; model, Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::CustomConfiguration const &amp; customConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.ModelConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="customConfiguration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.CustomConfiguration" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="customConfiguration">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigationPropertyConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration CreateNavigationPropertyConfiguration (string type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration CreateNavigationPropertyConfiguration(string type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigationPropertyConfiguration (type As String, name As String) As NavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigationPropertyConfiguration : string * string -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration&#xA;override this.CreateNavigationPropertyConfiguration : string * string -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration" Usage="configurationFactory.CreateNavigationPropertyConfiguration (type, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::NavigationPropertyConfiguration ^ CreateNavigationPropertyConfiguration(System::String ^ type, System::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::NavigationPropertyConfiguration CreateNavigationPropertyConfiguration(std::wstring const &amp; type, std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigationPropertyInitializerConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration CreateNavigationPropertyInitializerConfiguration (string navPropName, string principalEntityTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration CreateNavigationPropertyInitializerConfiguration(string navPropName, string principalEntityTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateNavigationPropertyInitializerConfiguration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigationPropertyInitializerConfiguration (navPropName As String, principalEntityTypeName As String) As NavigationPropertyInitializerConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigationPropertyInitializerConfiguration : string * string -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration&#xA;override this.CreateNavigationPropertyInitializerConfiguration : string * string -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration" Usage="configurationFactory.CreateNavigationPropertyInitializerConfiguration (navPropName, principalEntityTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::NavigationPropertyInitializerConfiguration ^ CreateNavigationPropertyInitializerConfiguration(System::String ^ navPropName, System::String ^ principalEntityTypeName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::NavigationPropertyInitializerConfiguration CreateNavigationPropertyInitializerConfiguration(std::wstring const &amp; navPropName, std::wstring const &amp; principalEntityTypeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.NavigationPropertyInitializerConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navPropName" Type="System.String" />
        <Parameter Name="principalEntityTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="navPropName">To be added.</param>
        <param name="principalEntityTypeName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOptionsBuilderConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration CreateOptionsBuilderConfiguration (System.Collections.Generic.ICollection&lt;string&gt; methodBodyLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration CreateOptionsBuilderConfiguration(class System.Collections.Generic.ICollection`1&lt;string&gt; methodBodyLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateOptionsBuilderConfiguration(System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOptionsBuilderConfiguration (methodBodyLines As ICollection(Of String)) As OptionsBuilderConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateOptionsBuilderConfiguration : System.Collections.Generic.ICollection&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration&#xA;override this.CreateOptionsBuilderConfiguration : System.Collections.Generic.ICollection&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration" Usage="configurationFactory.CreateOptionsBuilderConfiguration methodBodyLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::OptionsBuilderConfiguration ^ CreateOptionsBuilderConfiguration(System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ methodBodyLines);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.OptionsBuilderConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodBodyLines" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="methodBodyLines">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePropertyConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration CreatePropertyConfiguration (Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration entityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration CreatePropertyConfiguration(class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration entityConfiguration, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreatePropertyConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="F#" Value="abstract member CreatePropertyConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration&#xA;override this.CreatePropertyConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration" Usage="configurationFactory.CreatePropertyConfiguration (entityConfiguration, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::PropertyConfiguration ^ CreatePropertyConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration ^ entityConfiguration, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::PropertyConfiguration CreatePropertyConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration const &amp; entityConfiguration, Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.PropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityConfiguration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="entityConfiguration">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRelationshipConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration CreateRelationshipConfiguration (Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration entityConfiguration, Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, string dependentEndNavigationPropertyName, string principalEndNavigationPropertyName, Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior onDeleteAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration CreateRelationshipConfiguration(class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration entityConfiguration, class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, string dependentEndNavigationPropertyName, string principalEndNavigationPropertyName, valuetype Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior onDeleteAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateRelationshipConfiguration(Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)" />
      <MemberSignature Language="F#" Value="abstract member CreateRelationshipConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration * Microsoft.EntityFrameworkCore.Metadata.IForeignKey * string * string * Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration&#xA;override this.CreateRelationshipConfiguration : Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration * Microsoft.EntityFrameworkCore.Metadata.IForeignKey * string * string * Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration" Usage="configurationFactory.CreateRelationshipConfiguration (entityConfiguration, foreignKey, dependentEndNavigationPropertyName, principalEndNavigationPropertyName, onDeleteAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::RelationshipConfiguration ^ CreateRelationshipConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration ^ entityConfiguration, Microsoft::EntityFrameworkCore::Metadata::IForeignKey ^ foreignKey, System::String ^ dependentEndNavigationPropertyName, System::String ^ principalEndNavigationPropertyName, Microsoft::EntityFrameworkCore::Metadata::DeleteBehavior onDeleteAction);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::RelationshipConfiguration CreateRelationshipConfiguration(Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::EntityConfiguration const &amp; entityConfiguration, Microsoft::EntityFrameworkCore::Metadata::IForeignKey const &amp; foreignKey, std::wstring const &amp; dependentEndNavigationPropertyName, std::wstring const &amp; principalEndNavigationPropertyName, Microsoft::EntityFrameworkCore::Metadata::DeleteBehavior onDeleteAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.RelationshipConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityConfiguration" Type="Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.EntityConfiguration" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
        <Parameter Name="dependentEndNavigationPropertyName" Type="System.String" />
        <Parameter Name="principalEndNavigationPropertyName" Type="System.String" />
        <Parameter Name="onDeleteAction" Type="Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior" />
      </Parameters>
      <Docs>
        <param name="entityConfiguration">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="dependentEndNavigationPropertyName">To be added.</param>
        <param name="principalEndNavigationPropertyName">To be added.</param>
        <param name="onDeleteAction">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSequenceConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration CreateSequenceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration CreateSequenceConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CreateSequenceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSequenceConfiguration () As SequenceConfiguration" />
      <MemberSignature Language="F#" Value="abstract member CreateSequenceConfiguration : unit -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration&#xA;override this.CreateSequenceConfiguration : unit -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration" Usage="configurationFactory.CreateSequenceConfiguration " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::SequenceConfiguration ^ CreateSequenceConfiguration();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Configuration::Internal::SequenceConfiguration CreateSequenceConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Configuration.Internal.SequenceConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CSharpUtilities">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities CSharpUtilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities CSharpUtilities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CSharpUtilities As CSharpUtilities" />
      <MemberSignature Language="F#" Value="member this.CSharpUtilities : Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.CSharpUtilities" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Scaffolding::Internal::CSharpUtilities ^ CSharpUtilities { Microsoft::EntityFrameworkCore::Scaffolding::Internal::CSharpUtilities ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.CSharpUtilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtensionsProvider">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider ExtensionsProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider ExtensionsProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ExtensionsProvider As IRelationalAnnotationProvider" />
      <MemberSignature Language="F#" Value="member this.ExtensionsProvider : Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ExtensionsProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider ^ ExtensionsProvider { Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider ^ ExtensionsProvider { Microsoft::EntityFrameworkCore::Metadata::IRelationalAnnotationProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaffoldingUtilities">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities ScaffoldingUtilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities ScaffoldingUtilities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ScaffoldingUtilities As ScaffoldingUtilities" />
      <MemberSignature Language="F#" Value="member this.ScaffoldingUtilities : Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.ConfigurationFactory.ScaffoldingUtilities" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Scaffolding::Internal::ScaffoldingUtilities ^ ScaffoldingUtilities { Microsoft::EntityFrameworkCore::Scaffolding::Internal::ScaffoldingUtilities ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Internal.ScaffoldingUtilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>