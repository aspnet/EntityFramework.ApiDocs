<Type Name="SqliteDatabaseModelFactory" FullName="Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory">
  <TypeSignature Language="C#" Value="public class SqliteDatabaseModelFactory : Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqliteDatabaseModelFactory extends System.Object implements class Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqliteDatabaseModelFactory&#xA;Implements IDatabaseModelFactory" />
  <TypeSignature Language="F#" Value="type SqliteDatabaseModelFactory = class&#xA;    interface IDatabaseModelFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqliteDatabaseModelFactory : Microsoft::EntityFrameworkCore::Scaffolding::IDatabaseModelFactory" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SqliteDatabaseModelFactory : Microsoft::EntityFrameworkCore::Scaffolding::IDatabaseModelFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteDatabaseModelFactory (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Scaffolding&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As IDiagnosticsLogger(Of DbLoggerCategory.Scaffolding))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqliteDatabaseModelFactory(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Scaffolding ^&gt; ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Scaffolding&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteDatabaseModelFactory (Microsoft.Extensions.Logging.ILogger&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As ILogger(Of SqliteDatabaseModelFactory))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory : Microsoft.Extensions.Logging.ILogger&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqliteDatabaseModelFactory(Microsoft::Extensions::Logging::ILogger&lt;Microsoft::EntityFrameworkCore::Scaffolding::Internal::SqliteDatabaseModelFactory ^&gt; ^ logger);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SqliteDatabaseModelFactory(Microsoft::Extensions::Logging::ILogger&lt;Microsoft::EntityFrameworkCore::Scaffolding::Internal::SqliteDatabaseModelFactory ^&gt; ^ logger);" />
      <MemberSignature Language="C++ WINRT" Value=" SqliteDatabaseModelFactory(Microsoft::Extensions::Logging::ILogger&lt;Microsoft::EntityFrameworkCore::Scaffolding::Internal::SqliteDatabaseModelFactory&gt; const &amp; logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqliteDatabaseModelFactory (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory" Usage="new Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory loggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqliteDatabaseModelFactory(Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (System.Data.Common.DbConnection connection, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(class System.Data.Common.DbConnection connection, class Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : System.Data.Common.DbConnection * Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connection, tableSelectionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Metadata::DatabaseModel ^ Create(System::Data::Common::DbConnection ^ connection, Microsoft::EntityFrameworkCore::Scaffolding::TableSelectionSet ^ tableSelectionSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.IInternalDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="tableSelectionSet" Type="Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="tableSelectionSet">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (string connectionString, Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(string connectionString, class Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet tableSelectionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)" />
      <MemberSignature Language="F#" Value="abstract member Create : string * Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : string * Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connectionString, tableSelectionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Metadata::DatabaseModel ^ Create(System::String ^ connectionString, Microsoft::EntityFrameworkCore::Scaffolding::TableSelectionSet ^ tableSelectionSet);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Scaffolding::Metadata::DatabaseModel Create(std::wstring const &amp; connectionString, Microsoft::EntityFrameworkCore::Scaffolding::TableSelectionSet const &amp; tableSelectionSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tableSelectionSet" Type="Microsoft.EntityFrameworkCore.Scaffolding.TableSelectionSet" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tableSelectionSet">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (System.Data.Common.DbConnection connection, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(class System.Data.Common.DbConnection connection, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (connection As DbConnection, tables As IEnumerable(Of String), schemas As IEnumerable(Of String)) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Data.Common.DbConnection * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : System.Data.Common.DbConnection * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connection, tables, schemas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Metadata::DatabaseModel ^ Create(System::Data::Common::DbConnection ^ connection, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ tables, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ schemas);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create (string connectionString, System.Collections.Generic.IEnumerable&lt;string&gt; tables, System.Collections.Generic.IEnumerable&lt;string&gt; schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel Create(string connectionString, class System.Collections.Generic.IEnumerable`1&lt;string&gt; tables, class System.Collections.Generic.IEnumerable`1&lt;string&gt; schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (connectionString As String, tables As IEnumerable(Of String), schemas As IEnumerable(Of String)) As DatabaseModel" />
      <MemberSignature Language="F#" Value="abstract member Create : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel&#xA;override this.Create : string * seq&lt;string&gt; * seq&lt;string&gt; -&gt; Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel" Usage="sqliteDatabaseModelFactory.Create (connectionString, tables, schemas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Scaffolding::Metadata::DatabaseModel ^ Create(System::String ^ connectionString, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ tables, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ schemas);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Scaffolding.IDatabaseModelFactory.Create(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Scaffolding.Metadata.DatabaseModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="tables" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="schemas" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <param name="tables">To be added.</param>
        <param name="schemas">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Logger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As ILogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.EntityFrameworkCore.Scaffolding.Internal.SqliteDatabaseModelFactory.Logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Sqlite.Design</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>