<Type Name="ClrAccessorFactory&lt;TAccessor&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory&lt;TAccessor&gt;">
  <TypeSignature Language="C#" Value="public abstract class ClrAccessorFactory&lt;TAccessor&gt; where TAccessor : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ClrAccessorFactory`1&lt;class TAccessor&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ClrAccessorFactory(Of TAccessor)" />
  <TypeSignature Language="F#" Value="type ClrAccessorFactory&lt;'Accessor (requires 'Accessor : null)&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TAccessor&gt;&#xA; where TAccessor : classpublic ref class ClrAccessorFactory abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAccessor">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TAccessor">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClrAccessorFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClrAccessorFactory();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ClrAccessorFactory();" />
      <MemberSignature Language="C++ WINRT" Value=" ClrAccessorFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (property As IPropertyBase) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor" Usage="clrAccessorFactory.Create property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TAccessor Create(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TAccessor Create(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TAccessor Create(Microsoft::EntityFrameworkCore::Metadata::IPropertyBase const &amp; property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual TAccessor Create (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TAccessor Create(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Reflection.PropertyInfo -&gt; 'Accessor&#xA;override this.Create : System.Reflection.PropertyInfo -&gt; 'Accessor" Usage="clrAccessorFactory.Create propertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TAccessor Create(System::Reflection::PropertyInfo ^ propertyInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo property) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateGeneric(Of TEntity As Class, TValue As Class, TNonNullableEnumValue As Class) (property As PropertyInfo) As TAccessor" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.PropertyInfo -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric property" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TEntity, typename TValue, typename TNonNullableEnumValue&gt;&#xA; where TEntity : class abstract TAccessor CreateGeneric(System::Reflection::PropertyInfo ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt;">
      <MemberSignature Language="C#" Value="protected abstract TAccessor CreateGeneric&lt;TEntity,TValue,TNonNullableEnumValue&gt; (System.Reflection.PropertyInfo propertyInfo, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TAccessor CreateGeneric&lt;class TEntity, TValue, TNonNullableEnumValue&gt;(class System.Reflection.PropertyInfo propertyInfo, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase propertyBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="F#" Value="abstract member CreateGeneric : System.Reflection.PropertyInfo * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; 'Accessor (requires 'Entity : null)" Usage="clrAccessorFactory.CreateGeneric (propertyInfo, propertyBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TEntity, typename TValue, typename TNonNullableEnumValue&gt;&#xA; where TEntity : class abstract TAccessor CreateGeneric(System::Reflection::PropertyInfo ^ propertyInfo, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ propertyBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccessor</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TNonNullableEnumValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="propertyBase" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <typeparam name="TNonNullableEnumValue">To be added.</typeparam>
        <param name="propertyInfo">To be added.</param>
        <param name="propertyBase">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>