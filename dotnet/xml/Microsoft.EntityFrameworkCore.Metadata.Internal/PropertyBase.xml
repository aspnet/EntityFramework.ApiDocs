<Type Name="PropertyBase" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase">
  <TypeSignature Language="C#" Value="public abstract class PropertyBase : Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable, Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyBase extends Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyBase&#xA;Inherits ConventionalAnnotatable&#xA;Implements IMutablePropertyBase" />
  <TypeSignature Language="F#" Value="type PropertyBase = class&#xA;    inherit ConventionalAnnotatable&#xA;    interface IMutablePropertyBase&#xA;    interface IPropertyBase&#xA;    interface IAnnotatable&#xA;    interface IMutableAnnotatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBase abstract : Microsoft::EntityFrameworkCore::Metadata::Internal::ConventionalAnnotatable, Microsoft::EntityFrameworkCore::Metadata::IMutablePropertyBase" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class PropertyBase abstract : Microsoft::EntityFrameworkCore::Metadata::Internal::ConventionalAnnotatable, Microsoft::EntityFrameworkCore::Metadata::IMutablePropertyBase" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class PropertyBase abstract : Microsoft::EntityFrameworkCore::Metadata::Internal::ConventionalAnnotatable, Microsoft::EntityFrameworkCore::Metadata::IMutablePropertyBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyBase (string name, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.#ctor(System.String,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase : string * System.Reflection.PropertyInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase (name, propertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyBase(System::String ^ name, System::Reflection::PropertyInfo ^ propertyInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyBase (string name, System.Reflection.PropertyInfo propertyInfo, System.Reflection.FieldInfo fieldInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Reflection.PropertyInfo propertyInfo, class System.Reflection.FieldInfo fieldInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.#ctor(System.String,System.Reflection.PropertyInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase : string * System.Reflection.PropertyInfo * System.Reflection.FieldInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase" Usage="new Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase (name, propertyInfo, fieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyBase(System::String ^ name, System::Reflection::PropertyInfo ^ propertyInfo, System::Reflection::FieldInfo ^ fieldInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <param name="fieldInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessors">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors Accessors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors Accessors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Accessors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Accessors As PropertyAccessors" />
      <MemberSignature Language="F#" Value="member this.Accessors : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Accessors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyAccessors ^ Accessors { Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyAccessors ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyAccessors ^ Accessors { Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyAccessors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public abstract Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.ClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Platform::Type ^ ClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.ClrType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringEntityType">
      <MemberSignature Language="C#" Value="public abstract Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringEntityType As EntityType" />
      <MemberSignature Language="F#" Value="member this.DeclaringEntityType : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.DeclaringEntityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ DeclaringEntityType { Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclaringType As IMutableTypeBase" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.DeclaringType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IMutableTypeBase ^ DeclaringType { Microsoft::EntityFrameworkCore::Metadata::IMutableTypeBase ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IMutableTypeBase ^ DeclaringType { Microsoft::EntityFrameworkCore::Metadata::IMutableTypeBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase.DeclaringType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo FieldInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.FieldInfo FieldInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.FieldInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FieldInfo As FieldInfo" />
      <MemberSignature Language="F#" Value="member this.FieldInfo : System.Reflection.FieldInfo with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::FieldInfo ^ FieldInfo { System::Reflection::FieldInfo ^ get(); void set(System::Reflection::FieldInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetFieldInfo (string fieldName, Type type, string propertyName, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetFieldInfo(string fieldName, class System.Type type, string propertyName, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.GetFieldInfo(System.String,System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetFieldInfo : string * Type * string * bool -&gt; System.Reflection.FieldInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.GetFieldInfo (fieldName, type, propertyName, shouldThrow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetFieldInfo(System::String ^ fieldName, Type ^ type, System::String ^ propertyName, bool shouldThrow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="shouldThrow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldName">To be added.</param>
        <param name="type">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldInfoConfigurationSource">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt; GetFieldInfoConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt; GetFieldInfoConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.GetFieldInfoConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldInfoConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetFieldInfoConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt;&#xA;override this.GetFieldInfoConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt;" Usage="propertyBase.GetFieldInfoConfigurationSource " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Nullable&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource&gt; GetFieldInfoConfigurationSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Getter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter Getter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter Getter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Getter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Getter As IClrPropertyGetter" />
      <MemberSignature Language="F#" Value="member this.Getter : Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Getter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertyGetter ^ Getter { Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertyGetter ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertyGetter ^ Getter { Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertyGetter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompatible">
      <MemberSignature Language="C#" Value="public static bool IsCompatible (System.Reflection.FieldInfo fieldInfo, Type propertyType, Type entityClrType, string propertyName, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCompatible(class System.Reflection.FieldInfo fieldInfo, class System.Type propertyType, class System.Type entityClrType, string propertyName, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsCompatible(System.Reflection.FieldInfo,System.Type,System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member IsCompatible : System.Reflection.FieldInfo * Type * Type * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsCompatible (fieldInfo, propertyType, entityClrType, propertyName, shouldThrow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCompatible(System::Reflection::FieldInfo ^ fieldInfo, Type ^ propertyType, Type ^ entityClrType, System::String ^ propertyName, bool shouldThrow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="entityClrType" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="shouldThrow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldInfo">To be added.</param>
        <param name="propertyType">To be added.</param>
        <param name="entityClrType">To be added.</param>
        <param name="propertyName">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShadowProperty">
      <MemberSignature Language="C#" Value="public virtual bool IsShadowProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShadowProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsShadowProperty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsShadowProperty : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsShadowProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsShadowProperty { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsShadowProperty { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.IsShadowProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="F#" Value="member this.MemberInfo : System.Reflection.MemberInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Microsoft#EntityFrameworkCore#Metadata#IPropertyBase#DeclaringEntityType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DeclaringEntityType As IEntityType Implements IPropertyBase.DeclaringEntityType" />
      <MemberSignature Language="F#" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType { Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="property Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType { Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use DeclaringType, IProperty.DeclaringEntityType, or INavigation.DeclaringEntityType.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.ITypeBase Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.ITypeBase Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Microsoft#EntityFrameworkCore#Metadata#IPropertyBase#DeclaringType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DeclaringType As ITypeBase Implements IPropertyBase.DeclaringType" />
      <MemberSignature Language="F#" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::EntityFrameworkCore::Metadata::ITypeBase ^ Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType { Microsoft::EntityFrameworkCore::Metadata::ITypeBase ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="property Microsoft::EntityFrameworkCore::Metadata::ITypeBase ^ Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType { Microsoft::EntityFrameworkCore::Metadata::ITypeBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ITypeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ Name { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFieldInfoSet">
      <MemberSignature Language="C#" Value="protected virtual void OnFieldInfoSet (System.Reflection.FieldInfo oldFieldInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFieldInfoSet(class System.Reflection.FieldInfo oldFieldInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.OnFieldInfoSet(System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFieldInfoSet (oldFieldInfo As FieldInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnFieldInfoSet : System.Reflection.FieldInfo -&gt; unit&#xA;override this.OnFieldInfoSet : System.Reflection.FieldInfo -&gt; unit" Usage="propertyBase.OnFieldInfoSet oldFieldInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFieldInfoSet(System::Reflection::FieldInfo ^ oldFieldInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFieldInfo" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="oldFieldInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyIndexes">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes PropertyIndexes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes PropertyIndexes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyIndexes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PropertyIndexes As PropertyIndexes" />
      <MemberSignature Language="F#" Value="member this.PropertyIndexes : Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes with get, set" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyIndexes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyIndexes ^ PropertyIndexes { Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyIndexes ^ get(); void set(Microsoft::EntityFrameworkCore::Metadata::Internal::PropertyIndexes ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.PropertyInfo PropertyInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo PropertyInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyInfo As PropertyInfo" />
      <MemberSignature Language="F#" Value="member this.PropertyInfo : System.Reflection.PropertyInfo" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::PropertyInfo ^ PropertyInfo { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.PropertyInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMetadataChanged">
      <MemberSignature Language="C#" Value="protected abstract void PropertyMetadataChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PropertyMetadataChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyMetadataChanged" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PropertyMetadataChanged ()" />
      <MemberSignature Language="F#" Value="abstract member PropertyMetadataChanged : unit -&gt; unit" Usage="propertyBase.PropertyMetadataChanged " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PropertyMetadataChanged();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract void PropertyMetadataChanged();" />
      <MemberSignature Language="C++ WINRT" Value=" abstract void PropertyMetadataChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="public virtual void SetField (string fieldName, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetField(string fieldName, valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetField(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member SetField : string * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource -&gt; unit&#xA;override this.SetField : string * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource -&gt; unit" Usage="propertyBase.SetField (fieldName, configurationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetField(System::String ^ fieldName, Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource configurationSource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void SetField(Platform::String ^ fieldName, Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource configurationSource);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetField(std::wstring const &amp; fieldName, Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource configurationSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="fieldName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="public virtual void SetField (string fieldName, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource, bool runConventions = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetField(string fieldName, valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource, bool runConventions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetField(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetField : string * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource * bool -&gt; unit&#xA;override this.SetField : string * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource * bool -&gt; unit" Usage="propertyBase.SetField (fieldName, configurationSource, runConventions)" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetField(std::wstring const &amp; fieldName, Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource configurationSource, bool runConventions = true);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource" />
        <Parameter Name="runConventions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldName">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <param name="runConventions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFieldInfo">
      <MemberSignature Language="C#" Value="public virtual void SetFieldInfo (System.Reflection.FieldInfo fieldInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFieldInfo(class System.Reflection.FieldInfo fieldInfo, valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetFieldInfo(System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member SetFieldInfo : System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource -&gt; unit&#xA;override this.SetFieldInfo : System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource -&gt; unit" Usage="propertyBase.SetFieldInfo (fieldInfo, configurationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFieldInfo(System::Reflection::FieldInfo ^ fieldInfo, Microsoft::EntityFrameworkCore::Metadata::Internal::ConfigurationSource configurationSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource" />
      </Parameters>
      <Docs>
        <param name="fieldInfo">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFieldInfo">
      <MemberSignature Language="C#" Value="public virtual void SetFieldInfo (System.Reflection.FieldInfo fieldInfo, Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource, bool runConventions = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFieldInfo(class System.Reflection.FieldInfo fieldInfo, valuetype Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource configurationSource, bool runConventions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetFieldInfo(System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFieldInfo : System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource * bool -&gt; unit&#xA;override this.SetFieldInfo : System.Reflection.FieldInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource * bool -&gt; unit" Usage="propertyBase.SetFieldInfo (fieldInfo, configurationSource, runConventions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldInfo" Type="System.Reflection.FieldInfo" />
        <Parameter Name="configurationSource" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource" />
        <Parameter Name="runConventions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldInfo">To be added.</param>
        <param name="configurationSource">To be added.</param>
        <param name="runConventions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setter">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter Setter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter Setter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Setter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Setter As IClrPropertySetter" />
      <MemberSignature Language="F#" Value="member this.Setter : Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Setter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertySetter ^ Setter { Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertySetter ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertySetter ^ Setter { Microsoft::EntityFrameworkCore::Metadata::Internal::IClrPropertySetter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>