<Type Name="IEntityMaterializerSource" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource">
  <TypeSignature Language="C#" Value="public interface IEntityMaterializerSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEntityMaterializerSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityMaterializerSource" />
  <TypeSignature Language="F#" Value="type IEntityMaterializerSource = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEntityMaterializerSource" />
  <TypeSignature Language="C++ CX" Value="public interface class IEntityMaterializerSource" />
  <TypeSignature Language="C++ WINRT" Value="__interface IEntityMaterializerSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMaterializeExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateMaterializeExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression valueBufferExpression, int[] indexMap = null);" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateMaterializeExpression(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Linq.Expressions.Expression valueBufferExpression, int32[] indexMap) cil managed" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMaterializeExpression (entityType As IEntityType, valueBufferExpression As Expression, Optional indexMap As Integer() = null) As Expression" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="F#" Value="abstract member CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Linq.Expressions.Expression * int[] -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateMaterializeExpression (entityType, valueBufferExpression, indexMap)" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateMaterializeExpression (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, System.Linq.Expressions.Expression materializationExpression, int[] indexMap = null);" FrameworkAlternate="efcore-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateMaterializeExpression(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class System.Linq.Expressions.Expression materializationExpression, int32[] indexMap) cil managed" FrameworkAlternate="efcore-2.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])" FrameworkAlternate="efcore-2.1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMaterializeExpression (entityType As IEntityType, materializationExpression As Expression, Optional indexMap As Integer() = null) As Expression" FrameworkAlternate="efcore-2.1" />
      <MemberSignature Language="F#" Value="abstract member CreateMaterializeExpression : Microsoft.EntityFrameworkCore.Metadata.IEntityType * System.Linq.Expressions.Expression * int[] -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateMaterializeExpression (entityType, materializationExpression, indexMap)" FrameworkAlternate="efcore-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" />
        <Parameter Name="valueBufferExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="materializationExpression" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="efcore-2.1" />
        <Parameter Name="indexMap" Type="System.Int32[]" Index="2" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="valueBufferExpression">To be added.</param>
        <param name="materializationExpression">To be added.</param>
        <param name="indexMap">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadValueCallExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateReadValueCallExpression (System.Linq.Expressions.Expression valueBuffer, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateReadValueCallExpression(class System.Linq.Expressions.Expression valueBuffer, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReadValueCallExpression (valueBuffer As Expression, index As Integer) As Expression" />
      <MemberSignature Language="F#" Value="abstract member CreateReadValueCallExpression : System.Linq.Expressions.Expression * int -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateReadValueCallExpression (valueBuffer, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ CreateReadValueCallExpression(System::Linq::Expressions::Expression ^ valueBuffer, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use CreateReadValueExpression making sure to pass bound property if available.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadValueExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateReadValueExpression (System.Linq.Expressions.Expression valueBuffer, Type type, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateReadValueExpression(class System.Linq.Expressions.Expression valueBuffer, class System.Type type, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CreateReadValueExpression : System.Linq.Expressions.Expression * Type * int -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateReadValueExpression (valueBuffer, type, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ CreateReadValueExpression(System::Linq::Expressions::Expression ^ valueBuffer, Type ^ type, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="type">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadValueExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateReadValueExpression (System.Linq.Expressions.Expression valueBuffer, Type type, int index, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateReadValueExpression(class System.Linq.Expressions.Expression valueBuffer, class System.Type type, int32 index, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="F#" Value="abstract member CreateReadValueExpression : System.Linq.Expressions.Expression * Type * int * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateReadValueExpression (valueBuffer, type, index, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ CreateReadValueExpression(System::Linq::Expressions::Expression ^ valueBuffer, Type ^ type, int index, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="type">To be added.</param>
        <param name="index">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReadValueExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression CreateReadValueExpression (System.Linq.Expressions.Expression valueBuffer, Type type, int index, Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression CreateReadValueExpression(class System.Linq.Expressions.Expression valueBuffer, class System.Type type, int32 index, class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)" />
      <MemberSignature Language="F#" Value="abstract member CreateReadValueExpression : System.Linq.Expressions.Expression * Type * int * Microsoft.EntityFrameworkCore.Metadata.IPropertyBase -&gt; System.Linq.Expressions.Expression" Usage="iEntityMaterializerSource.CreateReadValueExpression (valueBuffer, type, index, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ CreateReadValueExpression(System::Linq::Expressions::Expression ^ valueBuffer, Type ^ type, int index, Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueBuffer" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />
      </Parameters>
      <Docs>
        <param name="valueBuffer">To be added.</param>
        <param name="type">To be added.</param>
        <param name="index">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterializer">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,object&gt; GetMaterializer (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Func`2&lt;valuetype Microsoft.EntityFrameworkCore.Storage.MaterializationContext, object&gt; GetMaterializer(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaterializer (entityType As IEntityType) As Func(Of MaterializationContext, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetMaterializer : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext, obj&gt;" Usage="iEntityMaterializerSource.GetMaterializer entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Func&lt;Microsoft::EntityFrameworkCore::Storage::MaterializationContext, System::Object ^&gt; ^ GetMaterializer(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Storage.MaterializationContext,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>