<Type Name="ICollectionTypeFactory" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.ICollectionTypeFactory">
  <TypeSignature Language="C#" Value="public interface ICollectionTypeFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICollectionTypeFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ICollectionTypeFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICollectionTypeFactory" />
  <TypeSignature Language="F#" Value="type ICollectionTypeFactory = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICollectionTypeFactory" />
  <TypeSignature Language="C++ CX" Value="public interface class ICollectionTypeFactory" />
  <TypeSignature Language="C++ WINRT" Value="__interface ICollectionTypeFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryFindTypeToInstantiate">
      <MemberSignature Language="C#" Value="public Type TryFindTypeToInstantiate (Type entityType, Type collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type TryFindTypeToInstantiate(class System.Type entityType, class System.Type collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ICollectionTypeFactory.TryFindTypeToInstantiate(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindTypeToInstantiate (entityType As Type, collectionType As Type) As Type" />
      <MemberSignature Language="F#" Value="abstract member TryFindTypeToInstantiate : Type * Type -&gt; Type" Usage="iCollectionTypeFactory.TryFindTypeToInstantiate (entityType, collectionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ TryFindTypeToInstantiate(Type ^ entityType, Type ^ collectionType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Type ^ TryFindTypeToInstantiate(Platform::Type ^ entityType, Platform::Type ^ collectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="collectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="collectionType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>