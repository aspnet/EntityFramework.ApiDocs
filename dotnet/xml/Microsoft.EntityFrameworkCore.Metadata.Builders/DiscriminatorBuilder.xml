<Type Name="DiscriminatorBuilder" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder">
  <TypeSignature Language="C#" Value="public class DiscriminatorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscriminatorBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscriminatorBuilder" />
  <TypeSignature Language="F#" Value="type DiscriminatorBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscriminatorBuilder" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class DiscriminatorBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                A fluent API builder for setting discriminator values.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscriminatorBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder annotationsBuilder, Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; getRelationalEntityTypeBuilderAnnotations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder annotationsBuilder, class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; getRelationalEntityTypeBuilderAnnotations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (annotationsBuilder As RelationalAnnotationsBuilder, getRelationalEntityTypeBuilderAnnotations As Func(Of InternalEntityTypeBuilder, RelationalEntityTypeBuilderAnnotations))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder * Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder (annotationsBuilder, getRelationalEntityTypeBuilderAnnotations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiscriminatorBuilder(Microsoft::EntityFrameworkCore::Metadata::Internal::RelationalAnnotationsBuilder ^ annotationsBuilder, Func&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^, Microsoft::EntityFrameworkCore::Metadata::Internal::RelationalEntityTypeBuilderAnnotations ^&gt; ^ getRelationalEntityTypeBuilderAnnotations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="annotationsBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder" />
        <Parameter Name="getRelationalEntityTypeBuilderAnnotations" Type="System.Func&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations&gt;" />
      </Parameters>
      <Docs>
        <param name="annotationsBuilder">To be added.</param>
        <param name="getRelationalEntityTypeBuilderAnnotations">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationsBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder AnnotationsBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder AnnotationsBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AnnotationsBuilder As RelationalAnnotationsBuilder" />
      <MemberSignature Language="F#" Value="member this.AnnotationsBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.AnnotationsBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::RelationalAnnotationsBuilder ^ AnnotationsBuilder { Microsoft::EntityFrameworkCore::Metadata::Internal::RelationalAnnotationsBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder EntityTypeBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder EntityTypeBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EntityTypeBuilder As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="member this.EntityTypeBuilder : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.EntityTypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ EntityTypeBuilder { Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="discriminatorBuilder.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"> The object to compare with the current object. </param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns> true if the specified object is equal to the current object; otherwise, false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="discriminatorBuilder.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns> A hash code for the current object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder ^ HasValue(System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder HasValue(winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"> The discriminator value. </param>
        <summary>
                Configures the default discriminator value to use.
            </summary>
        <returns> The same builder so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (string entityTypeName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(string entityTypeName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (entityTypeName As String, value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : string * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue (entityTypeName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder ^ HasValue(System::String ^ entityTypeName, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder HasValue(std::wstring const &amp; entityTypeName, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityTypeName"> The name of the entity type for which a discriminator value is being set. </param>
        <param name="value"> The discriminator value. </param>
        <summary>
                Configures the discriminator value to use for entities of the given type.
            </summary>
        <returns> The same builder so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue (Type entityType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue(class System.Type entityType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue (entityType As Type, value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : Type * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : Type * obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue (entityType, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder ^ HasValue(Type ^ entityType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type for which a discriminator value is being set. </param>
        <param name="value"> The discriminator value. </param>
        <summary>
                Configures the discriminator value to use for entities of the given type.
            </summary>
        <returns> The same builder so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue&lt;TEntity&gt; (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder HasValue&lt;TEntity&gt;(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.HasValue``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasValue(Of TEntity) (value As Object) As DiscriminatorBuilder" />
      <MemberSignature Language="F#" Value="abstract member HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder&#xA;override this.HasValue : obj -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder" Usage="discriminatorBuilder.HasValue value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder ^ HasValue(System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TEntity&gt;&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::DiscriminatorBuilder HasValue(winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"> The entity type for which a discriminator value is being set. </typeparam>
        <param name="value"> The discriminator value. </param>
        <summary>
                Configures the discriminator value to use for entities of the given generic type.
            </summary>
        <returns> The same builder so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="discriminatorBuilder.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a string that represents the current object.
            </summary>
        <returns> A string that represents the current object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>