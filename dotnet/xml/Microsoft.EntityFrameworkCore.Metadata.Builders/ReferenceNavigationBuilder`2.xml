<Type Name="ReferenceNavigationBuilder&lt;TEntity,TRelatedEntity&gt;" FullName="Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;TEntity,TRelatedEntity&gt;">
  <TypeSignature Language="C#" Value="public class ReferenceNavigationBuilder&lt;TEntity,TRelatedEntity&gt; : Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder where TEntity : class where TRelatedEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReferenceNavigationBuilder`2&lt;class TEntity, class TRelatedEntity&gt; extends Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ReferenceNavigationBuilder(Of TEntity, TRelatedEntity)&#xA;Inherits ReferenceNavigationBuilder" />
  <TypeSignature Language="F#" Value="type ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; = class&#xA;    inherit ReferenceNavigationBuilder" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity, typename TRelatedEntity&gt;&#xA; where TEntity : class where TRelatedEntity : classpublic ref class ReferenceNavigationBuilder : Microsoft::EntityFrameworkCore::Metadata::Builders::ReferenceNavigationBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRelatedEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity"> The entity type to be configured. </typeparam>
    <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
    <summary>
      <para>
                    Provides a simple API for configuring a relationship where configuration began on an end of the
                    relationship with a reference that points to an instance of another entity type.
                </para>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferenceNavigationBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, System.Reflection.PropertyInfo navigationProperty, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, class System.Reflection.PropertyInfo navigationProperty, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (declaringEntityType As EntityType, relatedEntityType As EntityType, navigationProperty As PropertyInfo, builder As InternalRelationshipBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * System.Reflection.PropertyInfo * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; (declaringEntityType, relatedEntityType, navigationProperty, builder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReferenceNavigationBuilder(Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ declaringEntityType, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ relatedEntityType, System::Reflection::PropertyInfo ^ navigationProperty, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="declaringEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="relatedEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigationProperty" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="declaringEntityType">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="navigationProperty">To be added.</param>
        <param name="builder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReferenceNavigationBuilder (Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, string navigationName, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType declaringEntityType, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType relatedEntityType, string navigationName, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (declaringEntityType As EntityType, relatedEntityType As EntityType, navigationName As String, builder As InternalRelationshipBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; : Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType * string * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt;" Usage="new Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt; (declaringEntityType, relatedEntityType, navigationName, builder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReferenceNavigationBuilder(Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ declaringEntityType, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ relatedEntityType, System::String ^ navigationName, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ builder);" />
      <MemberSignature Language="C++ WINRT" Value=" ReferenceNavigationBuilder(Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; declaringEntityType, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; relatedEntityType, std::wstring const &amp; navigationName, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="declaringEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="relatedEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
        <Parameter Name="navigationName" Type="System.String" />
        <Parameter Name="builder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="declaringEntityType">To be added.</param>
        <param name="relatedEntityType">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="builder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TRelatedEntity,TEntity&gt; WithMany (System.Linq.Expressions.Expression&lt;Func&lt;TRelatedEntity,System.Collections.Generic.IEnumerable&lt;TEntity&gt;&gt;&gt; navigationExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2&lt;!TRelatedEntity, !TEntity&gt; WithMany(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRelatedEntity, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;&gt;&gt; navigationExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{`0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithMany (navigationExpression As Expression(Of Func(Of TRelatedEntity, IEnumerable(Of TEntity)))) As ReferenceCollectionBuilder(Of TRelatedEntity, TEntity)" />
      <MemberSignature Language="F#" Value="override this.WithMany : System.Linq.Expressions.Expression&lt;Func&lt;'RelatedEntity, seq&lt;'Entity&gt;&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;'RelatedEntity, 'Entity (requires 'RelatedEntity : null and 'Entity : null)&gt;" Usage="referenceNavigationBuilder.WithMany navigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::ReferenceCollectionBuilder&lt;TRelatedEntity, TEntity&gt; ^ WithMany(System::Linq::Expressions::Expression&lt;Func&lt;TRelatedEntity, System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^&gt; ^&gt; ^ navigationExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TRelatedEntity,TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TRelatedEntity,System.Collections.Generic.IEnumerable&lt;TEntity&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationExpression">
                A lambda expression representing the collection navigation property on the other end of this
                relationship (<c>blog =&gt; blog.Posts</c>). If no property is specified, the relationship will be
                configured without a navigation property on the other end of the relationship.
            </param>
        <summary>
          <para>
                    Configures this as a one-to-many relationship.
                </para>
          <para>
                    Note that calling this method with no parameters will explicitly configure this side
                    of the relationship to use no navigation property, even if such a property exists on the
                    entity type. If the navigation property is to be used, then it must be specified.
                </para>
        </summary>
        <returns> An object to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TRelatedEntity,TEntity&gt; WithMany (string navigationName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2&lt;!TRelatedEntity, !TEntity&gt; WithMany(string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithMany (Optional navigationName As String = null) As ReferenceCollectionBuilder(Of TRelatedEntity, TEntity)" />
      <MemberSignature Language="F#" Value="override this.WithMany : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;'RelatedEntity, 'Entity (requires 'RelatedEntity : null and 'Entity : null)&gt;" Usage="referenceNavigationBuilder.WithMany navigationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder&lt;TRelatedEntity,TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="navigationName">
                The name of the collection navigation property on the other end of this relationship.
                If null or not specified, there is no navigation property on the other end of the relationship.
            </param>
        <summary>
          <para>
                    Configures this as a one-to-many relationship.
                </para>
          <para>
                    Note that calling this method with no parameters will explicitly configure this side
                    of the relationship to use no navigation property, even if such a property exists on the
                    entity type. If the navigation property is to be used, then it must be specified.
                </para>
        </summary>
        <returns> An object to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOne">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; WithOne (System.Linq.Expressions.Expression&lt;Func&lt;TRelatedEntity,TEntity&gt;&gt; navigationExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2&lt;!TEntity, !TRelatedEntity&gt; WithOne(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRelatedEntity, !TEntity&gt;&gt; navigationExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithOne (navigationExpression As Expression(Of Func(Of TRelatedEntity, TEntity))) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)" />
      <MemberSignature Language="F#" Value="override this.WithOne : System.Linq.Expressions.Expression&lt;Func&lt;'RelatedEntity, 'Entity&gt;&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt;" Usage="referenceNavigationBuilder.WithOne navigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Builders::ReferenceReferenceBuilder&lt;TEntity, TRelatedEntity&gt; ^ WithOne(System::Linq::Expressions::Expression&lt;Func&lt;TRelatedEntity, TEntity&gt; ^&gt; ^ navigationExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TRelatedEntity,TEntity&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationExpression">
                A lambda expression representing the reference navigation property on the other end of this
                relationship (<c>blog =&gt; blog.BlogInfo</c>). If no property is specified, the relationship will be
                configured without a navigation property on the other end of the relationship.
            </param>
        <summary>
          <para>
                    Configures this as a one-to-one relationship.
                </para>
          <para>
                    Note that calling this method with no parameters will explicitly configure this side
                    of the relationship to use no navigation property, even if such a property exists on the
                    entity type. If the navigation property is to be used, then it must be specified.
                </para>
        </summary>
        <returns> An object to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOne">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt; WithOne (string navigationName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2&lt;!TEntity, !TRelatedEntity&gt; WithOne(string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithOne (Optional navigationName As String = null) As ReferenceReferenceBuilder(Of TEntity, TRelatedEntity)" />
      <MemberSignature Language="F#" Value="override this.WithOne : string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;'Entity, 'RelatedEntity (requires 'Entity : null and 'RelatedEntity : null)&gt;" Usage="referenceNavigationBuilder.WithOne navigationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder&lt;TEntity,TRelatedEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="navigationName">
                The name of the reference navigation property on the other end of this relationship.
                If null or not specified, there is no navigation property on the other end of the relationship.
            </param>
        <summary>
          <para>
                    Configures this as a one-to-many relationship.
                </para>
          <para>
                    Note that calling this method with no parameters will explicitly configure this side
                    of the relationship to use no navigation property, even if such a property exists on the
                    entity type. If the navigation property is to be used, then it must be specified.
                </para>
        </summary>
        <returns> An object to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>