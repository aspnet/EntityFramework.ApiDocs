<Type Name="CoreOptionsExtension" FullName="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension">
  <TypeSignature Language="C#" Value="public class CoreOptionsExtension : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CoreOptionsExtension extends System.Object implements class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreOptionsExtension&#xA;Implements IDbContextOptionsExtension" />
  <TypeSignature Language="F#" Value="type CoreOptionsExtension = class&#xA;    interface IDbContextOptionsExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CoreOptionsExtension : Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CoreOptionsExtension : Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptionsExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Represents options managed by the core of Entity Framework, as opposed to those managed
                    by database providers or extensions. These options are set using <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
                </para>
      <para>
                    Instances of this class are designed to be immutable. To change an option, call one of the 'With...'
                    methods to obtain a new instance with the option changed.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CoreOptionsExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CoreOptionsExtension();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; CoreOptionsExtension();" />
      <MemberSignature Language="C++ WINRT" Value=" CoreOptionsExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
                Creates a new set of options with everything set to default values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CoreOptionsExtension (Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension copyFrom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension copyFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (copyFrom As CoreOptionsExtension)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension : Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="new Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension copyFrom" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CoreOptionsExtension(Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ copyFrom);" />
      <MemberSignature Language="C++ WINRT" Value=" CoreOptionsExtension(Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension const &amp; copyFrom);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copyFrom" Type="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" />
      </Parameters>
      <Docs>
        <param name="copyFrom"> The instance that is being cloned. </param>
        <summary>
                Called by a derived class constructor when implementing the <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.Clone" /> method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationServiceProvider">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider ApplicationServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ApplicationServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.ApplicationServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ApplicationServiceProvider : IServiceProvider" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.ApplicationServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IServiceProvider ^ ApplicationServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseApplicationServiceProvider(System.IServiceProvider)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyServices">
      <MemberSignature Language="C#" Value="public virtual bool ApplyServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ApplyServices (services As IServiceCollection) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ApplyServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; bool&#xA;override this.ApplyServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; bool" Usage="coreOptionsExtension.ApplyServices services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ApplyServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services"> The collection to add services to. </param>
        <summary>
                Adds the services required to make the selected options work. This is used when there
                is no external <see cref="T:System.IServiceProvider" /> and EF is maintaining its own service
                provider internally. This allows database providers (and other extensions) to register their
                required services when EF is creating an service provider.
            </summary>
        <returns> False since no database provider is registered. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.Clone : unit -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.Clone " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ Clone();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Override this method in a derived class to ensure that any clone created is also of that class.
            </summary>
        <returns> A clone of this instance, which can be modified before being returned as immutable. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceProviderHashCode">
      <MemberSignature Language="C#" Value="public virtual long GetServiceProviderHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetServiceProviderHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.GetServiceProviderHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceProviderHashCode () As Long" />
      <MemberSignature Language="F#" Value="abstract member GetServiceProviderHashCode : unit -&gt; int64&#xA;override this.GetServiceProviderHashCode : unit -&gt; int64" Usage="coreOptionsExtension.GetServiceProviderHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetServiceProviderHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual long long GetServiceProviderHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual long GetServiceProviderHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.GetServiceProviderHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a hash code created from any options that would cause a new <see cref="T:System.IServiceProvider" />
                to be needed.
            </summary>
        <returns> A hash over options that require a new service provider when changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalServiceProvider">
      <MemberSignature Language="C#" Value="public virtual IServiceProvider InternalServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider InternalServiceProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.InternalServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InternalServiceProvider As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.InternalServiceProvider : IServiceProvider" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.InternalServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IServiceProvider ^ InternalServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseInternalServiceProvider(System.IServiceProvider)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSensitiveDataLoggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsSensitiveDataLoggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSensitiveDataLoggingEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.IsSensitiveDataLoggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSensitiveDataLoggingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSensitiveDataLoggingEnabled : bool" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.IsSensitiveDataLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSensitiveDataLoggingEnabled { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool IsSensitiveDataLoggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.EnableSensitiveDataLogging(System.Boolean)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFragment">
      <MemberSignature Language="C#" Value="public virtual string LogFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFragment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.LogFragment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LogFragment As String" />
      <MemberSignature Language="F#" Value="member this.LogFragment : string" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.LogFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LogFragment { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ LogFragment { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.LogFragment</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Creates a message fragment for logging typically containing information about
                any useful non-default options that have been configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggerFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILoggerFactory LoggerFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILoggerFactory LoggerFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.LoggerFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LoggerFactory As ILoggerFactory" />
      <MemberSignature Language="F#" Value="member this.LoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.LoggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::Logging::ILoggerFactory ^ LoggerFactory { Microsoft::Extensions::Logging::ILoggerFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggerFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPoolSize">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;int&gt; MaxPoolSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxPoolSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.MaxPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxPoolSize As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxPoolSize : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.MaxPoolSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;int&gt; MaxPoolSize { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the
                <see cref="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContextPool``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},System.Int32)" />
                method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryCache">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Caching.Memory.IMemoryCache MemoryCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Caching.Memory.IMemoryCache MemoryCache" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.MemoryCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MemoryCache As IMemoryCache" />
      <MemberSignature Language="F#" Value="member this.MemoryCache : Microsoft.Extensions.Caching.Memory.IMemoryCache" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.MemoryCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Extensions::Caching::Memory::IMemoryCache ^ MemoryCache { Microsoft::Extensions::Caching::Memory::IMemoryCache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.IMemoryCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseMemoryCache(Microsoft.Extensions.Caching.Memory.IMemoryCache)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.Model" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Model As IModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IModel" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IModel ^ Model { Microsoft::EntityFrameworkCore::Metadata::IModel ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IModel ^ Model { Microsoft::EntityFrameworkCore::Metadata::IModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTrackingBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.QueryTrackingBehavior QueryTrackingBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior QueryTrackingBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.QueryTrackingBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryTrackingBehavior As QueryTrackingBehavior" />
      <MemberSignature Language="F#" Value="member this.QueryTrackingBehavior : Microsoft.EntityFrameworkCore.QueryTrackingBehavior" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.QueryTrackingBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::QueryTrackingBehavior QueryTrackingBehavior { Microsoft::EntityFrameworkCore::QueryTrackingBehavior get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::QueryTrackingBehavior QueryTrackingBehavior { Microsoft::EntityFrameworkCore::QueryTrackingBehavior get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.QueryTrackingBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The option set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseQueryTrackingBehavior(Microsoft.EntityFrameworkCore.QueryTrackingBehavior)" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacedServices">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyDictionary&lt;Type,Type&gt; ReplacedServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;class System.Type, class System.Type&gt; ReplacedServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.ReplacedServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReplacedServices As IReadOnlyDictionary(Of Type, Type)" />
      <MemberSignature Language="F#" Value="member this.ReplacedServices : System.Collections.Generic.IReadOnlyDictionary&lt;Type, Type&gt;" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.ReplacedServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IReadOnlyDictionary&lt;Type ^, Type ^&gt; ^ ReplacedServices { System::Collections::Generic::IReadOnlyDictionary&lt;Type ^, Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Type,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The options set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ReplaceService``2" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="abstract member Validate : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; unit&#xA;override this.Validate : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; unit" Usage="coreOptionsExtension.Validate options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Validate(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Validate(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions const &amp; options);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The options being validated. </param>
        <summary>
                Gives the extension a chance to validate that all options in the extension are valid.
                If options are invalid, then an exception will be thrown.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WarningsConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WarningsConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration WarningsConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WarningsConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WarningsConfiguration As WarningsConfiguration" />
      <MemberSignature Language="F#" Value="member this.WarningsConfiguration : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" Usage="Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WarningsConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfiguration ^ WarningsConfiguration { Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The options set from the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder})" /> method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithApplicationServiceProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithApplicationServiceProvider (IServiceProvider applicationServiceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithApplicationServiceProvider(class System.IServiceProvider applicationServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithApplicationServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithApplicationServiceProvider (applicationServiceProvider As IServiceProvider) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithApplicationServiceProvider : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithApplicationServiceProvider : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithApplicationServiceProvider applicationServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithApplicationServiceProvider(IServiceProvider ^ applicationServiceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationServiceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="applicationServiceProvider"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInternalServiceProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithInternalServiceProvider (IServiceProvider internalServiceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithInternalServiceProvider(class System.IServiceProvider internalServiceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithInternalServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithInternalServiceProvider (internalServiceProvider As IServiceProvider) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithInternalServiceProvider : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithInternalServiceProvider : IServiceProvider -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithInternalServiceProvider internalServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithInternalServiceProvider(IServiceProvider ^ internalServiceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalServiceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="internalServiceProvider"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithLoggerFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithLoggerFactory (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithLoggerFactory(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithLoggerFactory (loggerFactory As ILoggerFactory) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithLoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithLoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithLoggerFactory loggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithLoggerFactory(Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="loggerFactory"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMaxPoolSize">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithMaxPoolSize (Nullable&lt;int&gt; maxPoolSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithMaxPoolSize(valuetype System.Nullable`1&lt;int32&gt; maxPoolSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithMaxPoolSize(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithMaxPoolSize (maxPoolSize As Nullable(Of Integer)) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithMaxPoolSize : Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithMaxPoolSize : Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithMaxPoolSize maxPoolSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithMaxPoolSize(Nullable&lt;int&gt; maxPoolSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxPoolSize" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="maxPoolSize"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMemoryCache">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithMemoryCache (Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithMemoryCache(class Microsoft.Extensions.Caching.Memory.IMemoryCache memoryCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithMemoryCache(Microsoft.Extensions.Caching.Memory.IMemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithMemoryCache (memoryCache As IMemoryCache) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithMemoryCache : Microsoft.Extensions.Caching.Memory.IMemoryCache -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithMemoryCache : Microsoft.Extensions.Caching.Memory.IMemoryCache -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithMemoryCache memoryCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithMemoryCache(Microsoft::Extensions::Caching::Memory::IMemoryCache ^ memoryCache);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryCache" Type="Microsoft.Extensions.Caching.Memory.IMemoryCache" />
      </Parameters>
      <Docs>
        <param name="memoryCache"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithModel">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithModel (Microsoft.EntityFrameworkCore.Metadata.IModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithModel(class Microsoft.EntityFrameworkCore.Metadata.IModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithModel (model As IModel) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithModel : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithModel : Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithModel model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithModel(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension WithModel(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="model"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithQueryTrackingBehavior">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithQueryTrackingBehavior (Microsoft.EntityFrameworkCore.QueryTrackingBehavior queryTrackingBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithQueryTrackingBehavior(valuetype Microsoft.EntityFrameworkCore.QueryTrackingBehavior queryTrackingBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithQueryTrackingBehavior(Microsoft.EntityFrameworkCore.QueryTrackingBehavior)" />
      <MemberSignature Language="F#" Value="abstract member WithQueryTrackingBehavior : Microsoft.EntityFrameworkCore.QueryTrackingBehavior -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithQueryTrackingBehavior : Microsoft.EntityFrameworkCore.QueryTrackingBehavior -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithQueryTrackingBehavior queryTrackingBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithQueryTrackingBehavior(Microsoft::EntityFrameworkCore::QueryTrackingBehavior queryTrackingBehavior);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension WithQueryTrackingBehavior(Microsoft::EntityFrameworkCore::QueryTrackingBehavior queryTrackingBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryTrackingBehavior" Type="Microsoft.EntityFrameworkCore.QueryTrackingBehavior" />
      </Parameters>
      <Docs>
        <param name="queryTrackingBehavior"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithReplacedService">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithReplacedService (Type serviceType, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithReplacedService(class System.Type serviceType, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithReplacedService(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithReplacedService (serviceType As Type, implementationType As Type) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithReplacedService : Type * Type -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithReplacedService : Type * Type -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithReplacedService (serviceType, implementationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithReplacedService(Type ^ serviceType, Type ^ implementationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"> The service contract. </param>
        <param name="implementationType"> The implementation type to use for the service. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSensitiveDataLoggingEnabled">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithSensitiveDataLoggingEnabled (bool sensitiveDataLoggingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithSensitiveDataLoggingEnabled(bool sensitiveDataLoggingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithSensitiveDataLoggingEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WithSensitiveDataLoggingEnabled (sensitiveDataLoggingEnabled As Boolean) As CoreOptionsExtension" />
      <MemberSignature Language="F#" Value="abstract member WithSensitiveDataLoggingEnabled : bool -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithSensitiveDataLoggingEnabled : bool -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithSensitiveDataLoggingEnabled sensitiveDataLoggingEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithSensitiveDataLoggingEnabled(bool sensitiveDataLoggingEnabled);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension WithSensitiveDataLoggingEnabled(bool sensitiveDataLoggingEnabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitiveDataLoggingEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sensitiveDataLoggingEnabled"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithWarningsConfiguration">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithWarningsConfiguration (Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration warningsConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension WithWarningsConfiguration(class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration warningsConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension.WithWarningsConfiguration(Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration)" />
      <MemberSignature Language="F#" Value="abstract member WithWarningsConfiguration : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension&#xA;override this.WithWarningsConfiguration : Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration -&gt; Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension" Usage="coreOptionsExtension.WithWarningsConfiguration warningsConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension ^ WithWarningsConfiguration(Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfiguration ^ warningsConfiguration);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::CoreOptionsExtension WithWarningsConfiguration(Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfiguration const &amp; warningsConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.CoreOptionsExtension</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsConfiguration" Type="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfiguration" />
      </Parameters>
      <Docs>
        <param name="warningsConfiguration"> The option to change. </param>
        <summary>
                Creates a new instance with all options the same as for this instance, but with the given option changed.
                It is unusual to call this method directly. Instead use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        <returns> A new instance with the option changed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>