<Type Name="ObsoleteRelationalTypeMapper" FullName="Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper">
  <TypeSignature Language="C#" Value="public class ObsoleteRelationalTypeMapper : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, Microsoft.EntityFrameworkCore.Storage.ITypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObsoleteRelationalTypeMapper extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper, class Microsoft.EntityFrameworkCore.Storage.ITypeMapper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class ObsoleteRelationalTypeMapper&#xA;Implements IRelationalTypeMapper, ITypeMapper" />
  <TypeSignature Language="F#" Value="type ObsoleteRelationalTypeMapper = class&#xA;    interface IRelationalTypeMapper&#xA;    interface ITypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObsoleteRelationalTypeMapper : Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper, Microsoft::EntityFrameworkCore::Storage::ITypeMapper" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ObsoleteRelationalTypeMapper : Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper, Microsoft::EntityFrameworkCore::Storage::ITypeMapper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.ITypeMapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use RelationalTypeMappingSource.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObsoleteRelationalTypeMapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObsoleteRelationalTypeMapper();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ObsoleteRelationalTypeMapper();" />
      <MemberSignature Language="C++ WINRT" Value=" ObsoleteRelationalTypeMapper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteArrayMapper">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper ByteArrayMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper ByteArrayMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.ByteArrayMapper" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ByteArrayMapper As IByteArrayRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.ByteArrayMapper : Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.ByteArrayMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IByteArrayRelationalTypeMapper ^ ByteArrayMapper { Microsoft::EntityFrameworkCore::Storage::IByteArrayRelationalTypeMapper ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IByteArrayRelationalTypeMapper ^ ByteArrayMapper { Microsoft::EntityFrameworkCore::Storage::IByteArrayRelationalTypeMapper ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindMapping (property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.FindMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="obsoleteRelationalTypeMapper.FindMapping property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping FindMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (string storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.FindMapping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindMapping (storeType As String) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : string -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.FindMapping : string -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="obsoleteRelationalTypeMapper.FindMapping storeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(System::String ^ storeType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(Platform::String ^ storeType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping FindMapping(std::wstring const &amp; storeType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping(class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.FindMapping(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindMapping (clrType As Type) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="abstract member FindMapping : Type -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping&#xA;override this.FindMapping : Type -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="obsoleteRelationalTypeMapper.FindMapping clrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(Type ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ FindMapping(Platform::Type ^ clrType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeMapped">
      <MemberSignature Language="C#" Value="public virtual bool IsTypeMapped (Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTypeMapped(class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.IsTypeMapped(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsTypeMapped (clrType As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsTypeMapped : Type -&gt; bool&#xA;override this.IsTypeMapped : Type -&gt; bool" Usage="obsoleteRelationalTypeMapper.IsTypeMapped clrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsTypeMapped(Type ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool IsTypeMapped(Platform::Type ^ clrType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.ITypeMapper.IsTypeMapped(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringMapper">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper StringMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper StringMapper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.StringMapper" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StringMapper As IStringRelationalTypeMapper" />
      <MemberSignature Language="F#" Value="member this.StringMapper : Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper" Usage="Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.StringMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IStringRelationalTypeMapper ^ StringMapper { Microsoft::EntityFrameworkCore::Storage::IStringRelationalTypeMapper ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::IStringRelationalTypeMapper ^ StringMapper { Microsoft::EntityFrameworkCore::Storage::IStringRelationalTypeMapper ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTypeName">
      <MemberSignature Language="C#" Value="public virtual void ValidateTypeName (string storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateTypeName(string storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.Internal.ObsoleteRelationalTypeMapper.ValidateTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateTypeName (storeType As String)" />
      <MemberSignature Language="F#" Value="abstract member ValidateTypeName : string -&gt; unit&#xA;override this.ValidateTypeName : string -&gt; unit" Usage="obsoleteRelationalTypeMapper.ValidateTypeName storeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ValidateTypeName(System::String ^ storeType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ValidateTypeName(Platform::String ^ storeType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ValidateTypeName(std::wstring const &amp; storeType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>