<Type Name="DataStoreErrorLoggerProvider" FullName="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider">
  <TypeSignature Language="C#" Value="public class DataStoreErrorLoggerProvider : IDisposable, Microsoft.Extensions.Logging.ILoggerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataStoreErrorLoggerProvider extends System.Object implements class Microsoft.Extensions.Logging.ILoggerProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class DataStoreErrorLoggerProvider&#xA;Implements IDisposable, ILoggerProvider" />
  <TypeSignature Language="F#" Value="type DataStoreErrorLoggerProvider = class&#xA;    interface ILoggerProvider&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataStoreErrorLoggerProvider : IDisposable, Microsoft::Extensions::Logging::ILoggerProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataStoreErrorLoggerProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataStoreErrorLoggerProvider();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; DataStoreErrorLoggerProvider();" />
      <MemberSignature Language="C++ WINRT" Value=" DataStoreErrorLoggerProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLogger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Extensions.Logging.ILogger CreateLogger (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.ILogger CreateLogger(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider.CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateLogger (name As String) As ILogger" />
      <MemberSignature Language="F#" Value="abstract member CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger&#xA;override this.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger" Usage="dataStoreErrorLoggerProvider.CreateLogger name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::ILogger ^ CreateLogger(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::Extensions::Logging::ILogger ^ CreateLogger(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::Extensions::Logging::ILogger CreateLogger(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataStoreErrorLoggerProvider.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider.Logger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Logger As DataStoreErrorLogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLogger" Usage="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLoggerProvider.Logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::AspNetCore::Diagnostics::EntityFrameworkCore::DataStoreErrorLogger ^ Logger { Microsoft::AspNetCore::Diagnostics::EntityFrameworkCore::DataStoreErrorLogger ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DataStoreErrorLogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>