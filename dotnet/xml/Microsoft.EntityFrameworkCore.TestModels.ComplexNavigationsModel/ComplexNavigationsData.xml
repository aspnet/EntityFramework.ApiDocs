<Type Name="ComplexNavigationsData" FullName="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData">
  <TypeSignature Language="C#" Value="public abstract class ComplexNavigationsData : Microsoft.EntityFrameworkCore.TestUtilities.IExpectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComplexNavigationsData extends System.Object implements class Microsoft.EntityFrameworkCore.TestUtilities.IExpectedData" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexNavigationsData&#xA;Implements IExpectedData" />
  <TypeSignature Language="F#" Value="type ComplexNavigationsData = class&#xA;    interface IExpectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexNavigationsData abstract : Microsoft::EntityFrameworkCore::TestUtilities::IExpectedData" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class ComplexNavigationsData abstract : Microsoft::EntityFrameworkCore::TestUtilities::IExpectedData" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ComplexNavigationsData abstract : Microsoft::EntityFrameworkCore::TestUtilities::IExpectedData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.TestUtilities.IExpectedData</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexNavigationsData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexNavigationsData();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ComplexNavigationsData();" />
      <MemberSignature Language="C++ WINRT" Value=" ComplexNavigationsData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInheritanceBaseOnes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; CreateInheritanceBaseOnes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; CreateInheritanceBaseOnes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceBaseOnes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInheritanceBaseOnes () As IReadOnlyList(Of InheritanceBase1)" />
      <MemberSignature Language="F#" Value="static member CreateInheritanceBaseOnes : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceBaseOnes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase1 ^&gt; ^ CreateInheritanceBaseOnes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInheritanceBaseTwos">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; CreateInheritanceBaseTwos ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; CreateInheritanceBaseTwos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceBaseTwos" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInheritanceBaseTwos () As IReadOnlyList(Of InheritanceBase2)" />
      <MemberSignature Language="F#" Value="static member CreateInheritanceBaseTwos : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceBaseTwos " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase2 ^&gt; ^ CreateInheritanceBaseTwos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInheritanceLeafOnes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; CreateInheritanceLeafOnes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; CreateInheritanceLeafOnes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceLeafOnes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInheritanceLeafOnes () As IReadOnlyList(Of InheritanceLeaf1)" />
      <MemberSignature Language="F#" Value="static member CreateInheritanceLeafOnes : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceLeafOnes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf1 ^&gt; ^ CreateInheritanceLeafOnes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInheritanceLeafTwos">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; CreateInheritanceLeafTwos ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; CreateInheritanceLeafTwos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceLeafTwos" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInheritanceLeafTwos () As IReadOnlyList(Of InheritanceLeaf2)" />
      <MemberSignature Language="F#" Value="static member CreateInheritanceLeafTwos : unit -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateInheritanceLeafTwos " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf2 ^&gt; ^ CreateInheritanceLeafTwos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLevelFours">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; CreateLevelFours (bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; CreateLevelFours(bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelFours(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLevelFours (tableSplitting As Boolean) As IReadOnlyList(Of Level4)" />
      <MemberSignature Language="F#" Value="static member CreateLevelFours : bool -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelFours tableSplitting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ CreateLevelFours(bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLevelOnes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; CreateLevelOnes (bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; CreateLevelOnes(bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelOnes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLevelOnes (tableSplitting As Boolean) As IReadOnlyList(Of Level1)" />
      <MemberSignature Language="F#" Value="static member CreateLevelOnes : bool -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelOnes tableSplitting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ CreateLevelOnes(bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLevelThrees">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; CreateLevelThrees (bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; CreateLevelThrees(bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelThrees(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLevelThrees (tableSplitting As Boolean) As IReadOnlyList(Of Level3)" />
      <MemberSignature Language="F#" Value="static member CreateLevelThrees : bool -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelThrees tableSplitting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ CreateLevelThrees(bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLevelTwos">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; CreateLevelTwos (bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; CreateLevelTwos(bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelTwos(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateLevelTwos (tableSplitting As Boolean) As IReadOnlyList(Of Level2)" />
      <MemberSignature Language="F#" Value="static member CreateLevelTwos : bool -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.CreateLevelTwos tableSplitting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ CreateLevelTwos(bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBaseOnes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; InheritanceBaseOnes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; InheritanceBaseOnes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceBaseOnes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritanceBaseOnes As IReadOnlyList(Of InheritanceBase1)" />
      <MemberSignature Language="F#" Value="member this.InheritanceBaseOnes : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceBaseOnes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase1 ^&gt; ^ InheritanceBaseOnes { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase1 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBaseTwos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; InheritanceBaseTwos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; InheritanceBaseTwos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceBaseTwos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritanceBaseTwos As IReadOnlyList(Of InheritanceBase2)" />
      <MemberSignature Language="F#" Value="member this.InheritanceBaseTwos : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceBaseTwos" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase2 ^&gt; ^ InheritanceBaseTwos { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase2 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceLeafOnes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; InheritanceLeafOnes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; InheritanceLeafOnes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceLeafOnes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritanceLeafOnes As IReadOnlyList(Of InheritanceLeaf1)" />
      <MemberSignature Language="F#" Value="member this.InheritanceLeafOnes : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceLeafOnes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf1 ^&gt; ^ InheritanceLeafOnes { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf1 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceLeafTwos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; InheritanceLeafTwos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; InheritanceLeafTwos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceLeafTwos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritanceLeafTwos As IReadOnlyList(Of InheritanceLeaf2)" />
      <MemberSignature Language="F#" Value="member this.InheritanceLeafTwos : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.InheritanceLeafTwos" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf2 ^&gt; ^ InheritanceLeafTwos { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf2 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelFours">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; LevelFours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; LevelFours" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelFours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelFours As IReadOnlyList(Of Level4)" />
      <MemberSignature Language="F#" Value="member this.LevelFours : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelFours" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ LevelFours { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelOnes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; LevelOnes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; LevelOnes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelOnes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelOnes As IReadOnlyList(Of Level1)" />
      <MemberSignature Language="F#" Value="member this.LevelOnes : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelOnes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ LevelOnes { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelThrees">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; LevelThrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; LevelThrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelThrees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelThrees As IReadOnlyList(Of Level3)" />
      <MemberSignature Language="F#" Value="member this.LevelThrees : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelThrees" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ LevelThrees { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelTwos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; LevelTwos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; LevelTwos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelTwos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelTwos As IReadOnlyList(Of Level2)" />
      <MemberSignature Language="F#" Value="member this.LevelTwos : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.LevelTwos" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ LevelTwos { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public static void Seed (Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext context, bool tableSplitting = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Seed(class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext context, bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.Seed(Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Seed (context As ComplexNavigationsContext, Optional tableSplitting As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member Seed : Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.Seed (context, tableSplitting)" />
      <MemberSignature Language="C++ WINRT" Value=" static void Seed(Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::ComplexNavigationsContext const &amp; context, bool tableSplitting = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsContext" />
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Linq.IQueryable&lt;TEntity&gt; Set&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!TEntity&gt; Set&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.Set``1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Set(Of TEntity As Class) () As IQueryable(Of TEntity)" />
      <MemberSignature Language="F#" Value="abstract member Set : unit -&gt; System.Linq.IQueryable&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="complexNavigationsData.Set " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class abstract System::Linq::IQueryable&lt;TEntity&gt; ^ Set();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.TestUtilities.IExpectedData.Set``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitLevelFours">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; SplitLevelFours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; SplitLevelFours" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelFours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SplitLevelFours As IReadOnlyList(Of Level4)" />
      <MemberSignature Language="F#" Value="member this.SplitLevelFours : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelFours" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ SplitLevelFours { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitLevelOnes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; SplitLevelOnes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; SplitLevelOnes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelOnes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SplitLevelOnes As IReadOnlyList(Of Level1)" />
      <MemberSignature Language="F#" Value="member this.SplitLevelOnes : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelOnes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ SplitLevelOnes { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitLevelThrees">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; SplitLevelThrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; SplitLevelThrees" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelThrees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SplitLevelThrees As IReadOnlyList(Of Level3)" />
      <MemberSignature Language="F#" Value="member this.SplitLevelThrees : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelThrees" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ SplitLevelThrees { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitLevelTwos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; SplitLevelTwos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; SplitLevelTwos" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelTwos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SplitLevelTwos As IReadOnlyList(Of Level2)" />
      <MemberSignature Language="F#" Value="member this.SplitLevelTwos : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.SplitLevelTwos" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ SplitLevelTwos { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpInheritancePart1">
      <MemberSignature Language="C#" Value="public static void WireUpInheritancePart1 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; ib1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; ib2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; il1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; il2s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpInheritancePart1(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; ib1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; ib2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; il1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; il2s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInheritancePart1(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpInheritancePart1 (ib1s As IReadOnlyList(Of InheritanceBase1), ib2s As IReadOnlyList(Of InheritanceBase2), il1s As IReadOnlyList(Of InheritanceLeaf1), il2s As IReadOnlyList(Of InheritanceLeaf2))" />
      <MemberSignature Language="F#" Value="static member WireUpInheritancePart1 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInheritancePart1 (ib1s, ib2s, il1s, il2s)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpInheritancePart1(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase1 ^&gt; ^ ib1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase2 ^&gt; ^ ib2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf1 ^&gt; ^ il1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf2 ^&gt; ^ il2s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ib1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase1&gt;" />
        <Parameter Name="ib2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;" />
        <Parameter Name="il1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf1&gt;" />
        <Parameter Name="il2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;" />
      </Parameters>
      <Docs>
        <param name="ib1s">To be added.</param>
        <param name="ib2s">To be added.</param>
        <param name="il1s">To be added.</param>
        <param name="il2s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpInheritancePart2">
      <MemberSignature Language="C#" Value="public static void WireUpInheritancePart2 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; ib2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; il2s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpInheritancePart2(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; ib2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; il2s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInheritancePart2(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpInheritancePart2 (ib2s As IReadOnlyList(Of InheritanceBase2), il2s As IReadOnlyList(Of InheritanceLeaf2))" />
      <MemberSignature Language="F#" Value="static member WireUpInheritancePart2 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInheritancePart2 (ib2s, il2s)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpInheritancePart2(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceBase2 ^&gt; ^ ib2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::InheritanceLeaf2 ^&gt; ^ il2s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ib2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceBase2&gt;" />
        <Parameter Name="il2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.InheritanceLeaf2&gt;" />
      </Parameters>
      <Docs>
        <param name="ib2s">To be added.</param>
        <param name="il2s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpInversePart1">
      <MemberSignature Language="C#" Value="public static void WireUpInversePart1 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpInversePart1(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInversePart1(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpInversePart1 (l1s As IReadOnlyList(Of Level1), l2s As IReadOnlyList(Of Level2), l3s As IReadOnlyList(Of Level3), l4s As IReadOnlyList(Of Level4), tableSplitting As Boolean)" />
      <MemberSignature Language="F#" Value="static member WireUpInversePart1 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInversePart1 (l1s, l2s, l3s, l4s, tableSplitting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpInversePart1(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ l1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ l2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ l3s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ l4s, bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" />
        <Parameter Name="l2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" />
        <Parameter Name="l3s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" />
        <Parameter Name="l4s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" />
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="l1s">To be added.</param>
        <param name="l2s">To be added.</param>
        <param name="l3s">To be added.</param>
        <param name="l4s">To be added.</param>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpInversePart2">
      <MemberSignature Language="C#" Value="public static void WireUpInversePart2 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpInversePart2(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInversePart2(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpInversePart2 (l1s As IReadOnlyList(Of Level1), l2s As IReadOnlyList(Of Level2), l3s As IReadOnlyList(Of Level3), l4s As IReadOnlyList(Of Level4), tableSplitting As Boolean)" />
      <MemberSignature Language="F#" Value="static member WireUpInversePart2 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpInversePart2 (l1s, l2s, l3s, l4s, tableSplitting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpInversePart2(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ l1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ l2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ l3s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ l4s, bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" />
        <Parameter Name="l2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" />
        <Parameter Name="l3s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" />
        <Parameter Name="l4s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" />
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="l1s">To be added.</param>
        <param name="l2s">To be added.</param>
        <param name="l3s">To be added.</param>
        <param name="l4s">To be added.</param>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpPart1">
      <MemberSignature Language="C#" Value="public static void WireUpPart1 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpPart1(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpPart1(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpPart1 (l1s As IReadOnlyList(Of Level1), l2s As IReadOnlyList(Of Level2), l3s As IReadOnlyList(Of Level3), l4s As IReadOnlyList(Of Level4), tableSplitting As Boolean)" />
      <MemberSignature Language="F#" Value="static member WireUpPart1 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpPart1 (l1s, l2s, l3s, l4s, tableSplitting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpPart1(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ l1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ l2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ l3s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ l4s, bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" />
        <Parameter Name="l2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" />
        <Parameter Name="l3s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" />
        <Parameter Name="l4s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" />
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="l1s">To be added.</param>
        <param name="l2s">To be added.</param>
        <param name="l3s">To be added.</param>
        <param name="l4s">To be added.</param>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUpPart2">
      <MemberSignature Language="C#" Value="public static void WireUpPart2 (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WireUpPart2(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; l1s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; l2s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; l3s, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; l4s, bool tableSplitting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpPart2(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WireUpPart2 (l1s As IReadOnlyList(Of Level1), l2s As IReadOnlyList(Of Level2), l3s As IReadOnlyList(Of Level3), l4s As IReadOnlyList(Of Level4), tableSplitting As Boolean)" />
      <MemberSignature Language="F#" Value="static member WireUpPart2 : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.ComplexNavigationsData.WireUpPart2 (l1s, l2s, l3s, l4s, tableSplitting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WireUpPart2(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level1 ^&gt; ^ l1s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level2 ^&gt; ^ l2s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level3 ^&gt; ^ l3s, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::TestModels::ComplexNavigationsModel::Level4 ^&gt; ^ l4s, bool tableSplitting);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l1s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level1&gt;" />
        <Parameter Name="l2s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level2&gt;" />
        <Parameter Name="l3s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level3&gt;" />
        <Parameter Name="l4s" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.TestModels.ComplexNavigationsModel.Level4&gt;" />
        <Parameter Name="tableSplitting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="l1s">To be added.</param>
        <param name="l2s">To be added.</param>
        <param name="l3s">To be added.</param>
        <param name="l4s">To be added.</param>
        <param name="tableSplitting">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>