<Type Name="ExpressionTransformingQueryModelVisitor" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor">
  <TypeSignature Language="C#" Value="public class ExpressionTransformingQueryModelVisitor : Remotion.Linq.QueryModelVisitorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionTransformingQueryModelVisitor extends Remotion.Linq.QueryModelVisitorBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionTransformingQueryModelVisitor&#xA;Inherits QueryModelVisitorBase" />
  <TypeSignature Language="F#" Value="type ExpressionTransformingQueryModelVisitor = class&#xA;    inherit QueryModelVisitorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionTransformingQueryModelVisitor : Remotion::Linq::QueryModelVisitorBase" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ExpressionTransformingQueryModelVisitor : Remotion::Linq::QueryModelVisitorBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Remotion.Linq.QueryModelVisitorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionTransformingQueryModelVisitor (Remotion.Linq.Parsing.RelinqExpressionVisitor transformingVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Remotion.Linq.Parsing.RelinqExpressionVisitor transformingVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.#ctor(Remotion.Linq.Parsing.RelinqExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transformingVisitor As RelinqExpressionVisitor)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor : Remotion.Linq.Parsing.RelinqExpressionVisitor -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor transformingVisitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionTransformingQueryModelVisitor(Remotion::Linq::Parsing::RelinqExpressionVisitor ^ transformingVisitor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transformingVisitor" Type="Remotion.Linq.Parsing.RelinqExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="transformingVisitor">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformingVisitor">
      <MemberSignature Language="C#" Value="protected virtual Remotion.Linq.Parsing.RelinqExpressionVisitor TransformingVisitor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Remotion.Linq.Parsing.RelinqExpressionVisitor TransformingVisitor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.TransformingVisitor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TransformingVisitor As RelinqExpressionVisitor" />
      <MemberSignature Language="F#" Value="member this.TransformingVisitor : Remotion.Linq.Parsing.RelinqExpressionVisitor" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.TransformingVisitor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Remotion::Linq::Parsing::RelinqExpressionVisitor ^ TransformingVisitor { Remotion::Linq::Parsing::RelinqExpressionVisitor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Remotion.Linq.Parsing.RelinqExpressionVisitor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAdditionalFromClause">
      <MemberSignature Language="C#" Value="public override void VisitAdditionalFromClause (Remotion.Linq.Clauses.AdditionalFromClause fromClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitAdditionalFromClause(class Remotion.Linq.Clauses.AdditionalFromClause fromClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitAdditionalFromClause : Remotion.Linq.Clauses.AdditionalFromClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitAdditionalFromClause (fromClause, queryModel, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitAdditionalFromClause(Remotion::Linq::Clauses::AdditionalFromClause ^ fromClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitAdditionalFromClause(Remotion::Linq::Clauses::AdditionalFromClause ^ fromClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitAdditionalFromClause(Remotion::Linq::Clauses::AdditionalFromClause const &amp; fromClause, Remotion::Linq::QueryModel const &amp; queryModel, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromClause" Type="Remotion.Linq.Clauses.AdditionalFromClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitJoinClause">
      <MemberSignature Language="C#" Value="public override void VisitJoinClause (Remotion.Linq.Clauses.JoinClause joinClause, Remotion.Linq.QueryModel queryModel, Remotion.Linq.Clauses.GroupJoinClause groupJoinClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitJoinClause(class Remotion.Linq.Clauses.JoinClause joinClause, class Remotion.Linq.QueryModel queryModel, class Remotion.Linq.Clauses.GroupJoinClause groupJoinClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)" />
      <MemberSignature Language="F#" Value="override this.VisitJoinClause : Remotion.Linq.Clauses.JoinClause * Remotion.Linq.QueryModel * Remotion.Linq.Clauses.GroupJoinClause -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitJoinClause (joinClause, queryModel, groupJoinClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause ^ joinClause, Remotion::Linq::QueryModel ^ queryModel, Remotion::Linq::Clauses::GroupJoinClause ^ groupJoinClause);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause ^ joinClause, Remotion::Linq::QueryModel ^ queryModel, Remotion::Linq::Clauses::GroupJoinClause ^ groupJoinClause);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause const &amp; joinClause, Remotion::Linq::QueryModel const &amp; queryModel, Remotion::Linq::Clauses::GroupJoinClause const &amp; groupJoinClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinClause" Type="Remotion.Linq.Clauses.JoinClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="groupJoinClause" Type="Remotion.Linq.Clauses.GroupJoinClause" />
      </Parameters>
      <Docs>
        <param name="joinClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="groupJoinClause">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitJoinClause">
      <MemberSignature Language="C#" Value="public override void VisitJoinClause (Remotion.Linq.Clauses.JoinClause joinClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitJoinClause(class Remotion.Linq.Clauses.JoinClause joinClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitJoinClause : Remotion.Linq.Clauses.JoinClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitJoinClause (joinClause, queryModel, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause ^ joinClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause ^ joinClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitJoinClause(Remotion::Linq::Clauses::JoinClause const &amp; joinClause, Remotion::Linq::QueryModel const &amp; queryModel, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinClause" Type="Remotion.Linq.Clauses.JoinClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="joinClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMainFromClause">
      <MemberSignature Language="C#" Value="public override void VisitMainFromClause (Remotion.Linq.Clauses.MainFromClause fromClause, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitMainFromClause(class Remotion.Linq.Clauses.MainFromClause fromClause, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="F#" Value="override this.VisitMainFromClause : Remotion.Linq.Clauses.MainFromClause * Remotion.Linq.QueryModel -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitMainFromClause (fromClause, queryModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitMainFromClause(Remotion::Linq::Clauses::MainFromClause ^ fromClause, Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitMainFromClause(Remotion::Linq::Clauses::MainFromClause ^ fromClause, Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitMainFromClause(Remotion::Linq::Clauses::MainFromClause const &amp; fromClause, Remotion::Linq::QueryModel const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromClause" Type="Remotion.Linq.Clauses.MainFromClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="fromClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOrderByClause">
      <MemberSignature Language="C#" Value="public override void VisitOrderByClause (Remotion.Linq.Clauses.OrderByClause orderByClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitOrderByClause(class Remotion.Linq.Clauses.OrderByClause orderByClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitOrderByClause : Remotion.Linq.Clauses.OrderByClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitOrderByClause (orderByClause, queryModel, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitOrderByClause(Remotion::Linq::Clauses::OrderByClause ^ orderByClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitOrderByClause(Remotion::Linq::Clauses::OrderByClause ^ orderByClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitOrderByClause(Remotion::Linq::Clauses::OrderByClause const &amp; orderByClause, Remotion::Linq::QueryModel const &amp; queryModel, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderByClause" Type="Remotion.Linq.Clauses.OrderByClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="orderByClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOrdering">
      <MemberSignature Language="C#" Value="public override void VisitOrdering (Remotion.Linq.Clauses.Ordering ordering, Remotion.Linq.QueryModel queryModel, Remotion.Linq.Clauses.OrderByClause orderByClause, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitOrdering(class Remotion.Linq.Clauses.Ordering ordering, class Remotion.Linq.QueryModel queryModel, class Remotion.Linq.Clauses.OrderByClause orderByClause, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitOrdering : Remotion.Linq.Clauses.Ordering * Remotion.Linq.QueryModel * Remotion.Linq.Clauses.OrderByClause * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitOrdering (ordering, queryModel, orderByClause, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitOrdering(Remotion::Linq::Clauses::Ordering ^ ordering, Remotion::Linq::QueryModel ^ queryModel, Remotion::Linq::Clauses::OrderByClause ^ orderByClause, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitOrdering(Remotion::Linq::Clauses::Ordering ^ ordering, Remotion::Linq::QueryModel ^ queryModel, Remotion::Linq::Clauses::OrderByClause ^ orderByClause, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitOrdering(Remotion::Linq::Clauses::Ordering const &amp; ordering, Remotion::Linq::QueryModel const &amp; queryModel, Remotion::Linq::Clauses::OrderByClause const &amp; orderByClause, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordering" Type="Remotion.Linq.Clauses.Ordering" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="orderByClause" Type="Remotion.Linq.Clauses.OrderByClause" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordering">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="orderByClause">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitResultOperator">
      <MemberSignature Language="C#" Value="public override void VisitResultOperator (Remotion.Linq.Clauses.ResultOperatorBase resultOperator, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitResultOperator(class Remotion.Linq.Clauses.ResultOperatorBase resultOperator, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitResultOperator : Remotion.Linq.Clauses.ResultOperatorBase * Remotion.Linq.QueryModel * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitResultOperator (resultOperator, queryModel, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitResultOperator(Remotion::Linq::Clauses::ResultOperatorBase ^ resultOperator, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitResultOperator(Remotion::Linq::Clauses::ResultOperatorBase ^ resultOperator, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitResultOperator(Remotion::Linq::Clauses::ResultOperatorBase const &amp; resultOperator, Remotion::Linq::QueryModel const &amp; queryModel, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultOperator" Type="Remotion.Linq.Clauses.ResultOperatorBase" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resultOperator">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSelectClause">
      <MemberSignature Language="C#" Value="public override void VisitSelectClause (Remotion.Linq.Clauses.SelectClause selectClause, Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitSelectClause(class Remotion.Linq.Clauses.SelectClause selectClause, class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)" />
      <MemberSignature Language="F#" Value="override this.VisitSelectClause : Remotion.Linq.Clauses.SelectClause * Remotion.Linq.QueryModel -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitSelectClause (selectClause, queryModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitSelectClause(Remotion::Linq::Clauses::SelectClause ^ selectClause, Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitSelectClause(Remotion::Linq::Clauses::SelectClause ^ selectClause, Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitSelectClause(Remotion::Linq::Clauses::SelectClause const &amp; selectClause, Remotion::Linq::QueryModel const &amp; queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectClause" Type="Remotion.Linq.Clauses.SelectClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="selectClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhereClause">
      <MemberSignature Language="C#" Value="public override void VisitWhereClause (Remotion.Linq.Clauses.WhereClause whereClause, Remotion.Linq.QueryModel queryModel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VisitWhereClause(class Remotion.Linq.Clauses.WhereClause whereClause, class Remotion.Linq.QueryModel queryModel, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.VisitWhereClause : Remotion.Linq.Clauses.WhereClause * Remotion.Linq.QueryModel * int -&gt; unit" Usage="expressionTransformingQueryModelVisitor.VisitWhereClause (whereClause, queryModel, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void VisitWhereClause(Remotion::Linq::Clauses::WhereClause ^ whereClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void VisitWhereClause(Remotion::Linq::Clauses::WhereClause ^ whereClause, Remotion::Linq::QueryModel ^ queryModel, int index);" />
      <MemberSignature Language="C++ WINRT" Value=" override void VisitWhereClause(Remotion::Linq::Clauses::WhereClause const &amp; whereClause, Remotion::Linq::QueryModel const &amp; queryModel, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whereClause" Type="Remotion.Linq.Clauses.WhereClause" />
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="whereClause">To be added.</param>
        <param name="queryModel">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>