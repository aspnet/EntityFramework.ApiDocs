<Type Name="MemberAccessBindingExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor">
  <TypeSignature Language="C#" Value="public class MemberAccessBindingExpressionVisitor : Remotion.Linq.Parsing.RelinqExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemberAccessBindingExpressionVisitor extends Remotion.Linq.Parsing.RelinqExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class MemberAccessBindingExpressionVisitor&#xA;Inherits RelinqExpressionVisitor" />
  <TypeSignature Language="F#" Value="type MemberAccessBindingExpressionVisitor = class&#xA;    inherit RelinqExpressionVisitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberAccessBindingExpressionVisitor : Remotion::Linq::Parsing::RelinqExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Remotion.Linq.Parsing.RelinqExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemberAccessBindingExpressionVisitor (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, bool inProjection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping, class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor, bool inProjection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.#ctor(Remotion.Linq.Clauses.QuerySourceMapping,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor : Remotion.Linq.Clauses.QuerySourceMapping * Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor * bool -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor (querySourceMapping, queryModelVisitor, inProjection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemberAccessBindingExpressionVisitor(Remotion::Linq::Clauses::QuerySourceMapping ^ querySourceMapping, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor ^ queryModelVisitor, bool inProjection);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; MemberAccessBindingExpressionVisitor(Remotion::Linq::Clauses::QuerySourceMapping ^ querySourceMapping, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor ^ queryModelVisitor, bool inProjection);" />
      <MemberSignature Language="C++ WINRT" Value=" MemberAccessBindingExpressionVisitor(Remotion::Linq::Clauses::QuerySourceMapping const &amp; querySourceMapping, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor const &amp; queryModelVisitor, bool inProjection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" />
        <Parameter Name="queryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />
        <Parameter Name="inProjection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping">To be added.</param>
        <param name="queryModelVisitor">To be added.</param>
        <param name="inProjection">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityType">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IEntityType GetEntityType (System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IEntityType GetEntityType(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.GetEntityType(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)" />
      <MemberSignature Language="F#" Value="static member GetEntityType : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Query.QueryCompilationContext -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.GetEntityType (expression, queryCompilationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ GetEntityType(System::Linq::Expressions::Expression ^ expression, Microsoft::EntityFrameworkCore::Query::QueryCompilationContext ^ queryCompilationContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="queryCompilationContext">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyPath">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; GetPropertyPath (System.Linq.Expressions.Expression expression, Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, out Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression querySourceReferenceExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.List`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt; GetPropertyPath(class System.Linq.Expressions.Expression expression, class Microsoft.EntityFrameworkCore.Query.QueryCompilationContext queryCompilationContext, [out] class Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression&amp; querySourceReferenceExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.GetPropertyPath(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression@)" />
      <MemberSignature Language="F#" Value="static member GetPropertyPath : System.Linq.Expressions.Expression * Microsoft.EntityFrameworkCore.Query.QueryCompilationContext *  -&gt; System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.GetPropertyPath (expression, queryCompilationContext, querySourceReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::List&lt;Microsoft::EntityFrameworkCore::Metadata::IPropertyBase ^&gt; ^ GetPropertyPath(System::Linq::Expressions::Expression ^ expression, Microsoft::EntityFrameworkCore::Query::QueryCompilationContext ^ queryCompilationContext, [Runtime::InteropServices::Out] Remotion::Linq::Clauses::Expressions::QuerySourceReferenceExpression ^ % querySourceReferenceExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;Microsoft.EntityFrameworkCore.Metadata.IPropertyBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="queryCompilationContext" Type="Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />
        <Parameter Name="querySourceReferenceExpression" Type="Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <param name="queryCompilationContext">To be added.</param>
        <param name="querySourceReferenceExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBinary(class System.Linq.Expressions.BinaryExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBinary (node As BinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitBinary : System.Linq.Expressions.BinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitBinary node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitBinary(System::Linq::Expressions::BinaryExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.BinaryExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitExtension node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitExtension(System::Linq::Expressions::Expression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMember">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (node As MemberExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitMember node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitMember(System::Linq::Expressions::MemberExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MemberExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression methodCallExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression methodCallExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitMethodCall methodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitMethodCall(System::Linq::Expressions::MethodCallExpression ^ methodCallExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodCallExpression" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="methodCallExpression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNew">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitNew(class System.Linq.Expressions.NewExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitNew : System.Linq.Expressions.NewExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitNew expression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitNew(System::Linq::Expressions::NewExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.NewExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitQuerySourceReference">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitQuerySourceReference (Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitQuerySourceReference(class Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitQuerySourceReference : Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitQuerySourceReference expression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitQuerySourceReference(Remotion::Linq::Clauses::Expressions::QuerySourceReferenceExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSubQuery">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSubQuery (Remotion.Linq.Clauses.Expressions.SubQueryExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSubQuery(class Remotion.Linq.Clauses.Expressions.SubQueryExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSubQuery : Remotion.Linq.Clauses.Expressions.SubQueryExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitSubQuery expression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitSubQuery(Remotion::Linq::Clauses::Expressions::SubQueryExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Remotion.Linq.Clauses.Expressions.SubQueryExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitUnary(class System.Linq.Expressions.UnaryExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitUnary (node As UnaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitUnary : System.Linq.Expressions.UnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="memberAccessBindingExpressionVisitor.VisitUnary node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitUnary(System::Linq::Expressions::UnaryExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.UnaryExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>