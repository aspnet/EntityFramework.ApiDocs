<Type Name="IShaper&lt;T&gt;" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IShaper&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IShaper`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IShaper(Of Out T)" />
  <TypeSignature Language="F#" Value="type IShaper&lt;'T&gt; = interface" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IShaper" />
  <TypeSignature Language="C++ CX" Value="public interface class IShaper" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA;__interface IShaper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAccessorExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetAccessorExpression (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetAccessorExpression(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessorExpression (querySource As IQuerySource) As Expression" />
      <MemberSignature Language="F#" Value="abstract member GetAccessorExpression : Remotion.Linq.Clauses.IQuerySource -&gt; System.Linq.Expressions.Expression" Usage="iShaper.GetAccessorExpression querySource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetAccessorExpression(Remotion::Linq::Clauses::IQuerySource ^ querySource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShaperForQuerySource">
      <MemberSignature Language="C#" Value="public bool IsShaperForQuerySource (Remotion.Linq.Clauses.IQuerySource querySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsShaperForQuerySource(class Remotion.Linq.Clauses.IQuerySource querySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsShaperForQuerySource (querySource As IQuerySource) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsShaperForQuerySource : Remotion.Linq.Clauses.IQuerySource -&gt; bool" Usage="iShaper.IsShaperForQuerySource querySource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsShaperForQuerySource(Remotion::Linq::Clauses::IQuerySource ^ querySource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsShaperForQuerySource(Remotion::Linq::Clauses::IQuerySource ^ querySource);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsShaperForQuerySource(Remotion::Linq::Clauses::IQuerySource const &amp; querySource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAccessorExpression">
      <MemberSignature Language="C#" Value="public void SaveAccessorExpression (Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAccessorExpression(class Remotion.Linq.Clauses.QuerySourceMapping querySourceMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)" />
      <MemberSignature Language="F#" Value="abstract member SaveAccessorExpression : Remotion.Linq.Clauses.QuerySourceMapping -&gt; unit" Usage="iShaper.SaveAccessorExpression querySourceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAccessorExpression(Remotion::Linq::Clauses::QuerySourceMapping ^ querySourceMapping);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void SaveAccessorExpression(Remotion::Linq::Clauses::QuerySourceMapping ^ querySourceMapping);" />
      <MemberSignature Language="C++ WINRT" Value="void SaveAccessorExpression(Remotion::Linq::Clauses::QuerySourceMapping const &amp; querySourceMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySourceMapping" Type="Remotion.Linq.Clauses.QuerySourceMapping" />
      </Parameters>
      <Docs>
        <param name="querySourceMapping">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public T Shape (Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Shape(class Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, valuetype Microsoft.EntityFrameworkCore.Storage.ValueBuffer valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)" />
      <MemberSignature Language="F#" Value="abstract member Shape : Microsoft.EntityFrameworkCore.Query.QueryContext * Microsoft.EntityFrameworkCore.Storage.ValueBuffer -&gt; 'T" Usage="iShaper.Shape (queryContext, valueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.QueryContext" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />
      </Parameters>
      <Docs>
        <param name="queryContext">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public T Shape (Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; valueBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Shape(class Microsoft.EntityFrameworkCore.Query.QueryContext queryContext, [in]class Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; modreq(System.Runtime.InteropServices.InAttribute) valueBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="F#" Value="abstract member Shape : Microsoft.EntityFrameworkCore.Query.QueryContext * Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp; -&gt; 'T" Usage="iShaper.Shape (queryContext, valueBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContext" Type="Microsoft.EntityFrameworkCore.Query.QueryContext" />
        <Parameter Name="valueBuffer" Type="Microsoft.EntityFrameworkCore.Storage.ValueBuffer&amp;" />
      </Parameters>
      <Docs>
        <param name="queryContext">To be added.</param>
        <param name="valueBuffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>