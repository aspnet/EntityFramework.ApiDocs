<Type Name="RequiresMaterializationExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor">
  <TypeSignature Language="C#" Value="public class RequiresMaterializationExpressionVisitor : Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequiresMaterializationExpressionVisitor extends Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class RequiresMaterializationExpressionVisitor&#xA;Inherits ExpressionVisitorBase" />
  <TypeSignature Language="F#" Value="type RequiresMaterializationExpressionVisitor = class&#xA;    inherit ExpressionVisitorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequiresMaterializationExpressionVisitor : Microsoft::EntityFrameworkCore::Query::ExpressionVisitors::ExpressionVisitorBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequiresMaterializationExpressionVisitor (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor queryModelVisitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (model As IModel, queryModelVisitor As EntityQueryModelVisitor)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor -&gt; Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor (model, queryModelVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequiresMaterializationExpressionVisitor(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor ^ queryModelVisitor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; RequiresMaterializationExpressionVisitor(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor ^ queryModelVisitor);" />
      <MemberSignature Language="C++ WINRT" Value=" RequiresMaterializationExpressionVisitor(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; model, Microsoft::EntityFrameworkCore::Query::EntityQueryModelVisitor const &amp; queryModelVisitor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="queryModelVisitor" Type="Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="queryModelVisitor">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindQuerySourcesRequiringMaterialization">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ISet&lt;Remotion.Linq.Clauses.IQuerySource&gt; FindQuerySourcesRequiringMaterialization (Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ISet`1&lt;class Remotion.Linq.Clauses.IQuerySource&gt; FindQuerySourcesRequiringMaterialization(class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(Remotion.Linq.QueryModel)" />
      <MemberSignature Language="F#" Value="abstract member FindQuerySourcesRequiringMaterialization : Remotion.Linq.QueryModel -&gt; System.Collections.Generic.ISet&lt;Remotion.Linq.Clauses.IQuerySource&gt;&#xA;override this.FindQuerySourcesRequiringMaterialization : Remotion.Linq.QueryModel -&gt; System.Collections.Generic.ISet&lt;Remotion.Linq.Clauses.IQuerySource&gt;" Usage="requiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization queryModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ISet&lt;Remotion::Linq::Clauses::IQuerySource ^&gt; ^ FindQuerySourcesRequiringMaterialization(Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;Remotion.Linq.Clauses.IQuerySource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetResultOperatorSourceExpressions">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; GetSetResultOperatorSourceExpressions (System.Collections.Generic.IEnumerable&lt;Remotion.Linq.Clauses.ResultOperatorBase&gt; resultOperators);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; GetSetResultOperatorSourceExpressions(class System.Collections.Generic.IEnumerable`1&lt;class Remotion.Linq.Clauses.ResultOperatorBase&gt; resultOperators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.GetSetResultOperatorSourceExpressions(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.ResultOperatorBase})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Iterator Function GetSetResultOperatorSourceExpressions (resultOperators As IEnumerable(Of ResultOperatorBase)) As IEnumerable(Of Expression)" />
      <MemberSignature Language="F#" Value="static member GetSetResultOperatorSourceExpressions : seq&lt;Remotion.Linq.Clauses.ResultOperatorBase&gt; -&gt; seq&lt;System.Linq.Expressions.Expression&gt;" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.GetSetResultOperatorSourceExpressions resultOperators" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ GetSetResultOperatorSourceExpressions(System::Collections::Generic::IEnumerable&lt;Remotion::Linq::Clauses::ResultOperatorBase ^&gt; ^ resultOperators);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor/&lt;GetSetResultOperatorSourceExpressions&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultOperators" Type="System.Collections.Generic.IEnumerable&lt;Remotion.Linq.Clauses.ResultOperatorBase&gt;" />
      </Parameters>
      <Docs>
        <param name="resultOperators">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleUnderlyingQuerySources">
      <MemberSignature Language="C#" Value="public static void HandleUnderlyingQuerySources (Remotion.Linq.Clauses.IQuerySource querySource, Action&lt;Remotion.Linq.Clauses.IQuerySource&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleUnderlyingQuerySources(class Remotion.Linq.Clauses.IQuerySource querySource, class System.Action`1&lt;class Remotion.Linq.Clauses.IQuerySource&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.HandleUnderlyingQuerySources(Remotion.Linq.Clauses.IQuerySource,System.Action{Remotion.Linq.Clauses.IQuerySource})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HandleUnderlyingQuerySources (querySource As IQuerySource, action As Action(Of IQuerySource))" />
      <MemberSignature Language="F#" Value="static member HandleUnderlyingQuerySources : Remotion.Linq.Clauses.IQuerySource * Action&lt;Remotion.Linq.Clauses.IQuerySource&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.HandleUnderlyingQuerySources (querySource, action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HandleUnderlyingQuerySources(Remotion::Linq::Clauses::IQuerySource ^ querySource, Action&lt;Remotion::Linq::Clauses::IQuerySource ^&gt; ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="querySource" Type="Remotion.Linq.Clauses.IQuerySource" />
        <Parameter Name="action" Type="System.Action&lt;Remotion.Linq.Clauses.IQuerySource&gt;" />
      </Parameters>
      <Docs>
        <param name="querySource">To be added.</param>
        <param name="action">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitBinary(class System.Linq.Expressions.BinaryExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitBinary (node As BinaryExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitBinary : System.Linq.Expressions.BinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitBinary node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitBinary(System::Linq::Expressions::BinaryExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.BinaryExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (node As Expression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitExtension node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitExtension(System::Linq::Expressions::Expression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMember">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMember(class System.Linq.Expressions.MemberExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMember (node As MemberExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMember : System.Linq.Expressions.MemberExpression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitMember node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitMember(System::Linq::Expressions::MemberExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MemberExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodCall">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitMethodCall(class System.Linq.Expressions.MethodCallExpression node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitMethodCall (node As MethodCallExpression) As Expression" />
      <MemberSignature Language="F#" Value="override this.VisitMethodCall : System.Linq.Expressions.MethodCallExpression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitMethodCall node" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitMethodCall(System::Linq::Expressions::MethodCallExpression ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Linq.Expressions.MethodCallExpression" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitQuerySourceReference">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitQuerySourceReference (Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitQuerySourceReference(class Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitQuerySourceReference : Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitQuerySourceReference expression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitQuerySourceReference(Remotion::Linq::Clauses::Expressions::QuerySourceReferenceExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSubQuery">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSubQuery (Remotion.Linq.Clauses.Expressions.SubQueryExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSubQuery(class Remotion.Linq.Clauses.Expressions.SubQueryExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSubQuery : Remotion.Linq.Clauses.Expressions.SubQueryExpression -&gt; System.Linq.Expressions.Expression" Usage="requiresMaterializationExpressionVisitor.VisitSubQuery expression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Linq::Expressions::Expression ^ VisitSubQuery(Remotion::Linq::Clauses::Expressions::SubQueryExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Remotion.Linq.Clauses.Expressions.SubQueryExpression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>