<Type Name="InMemoryQueryContextFactory" FullName="Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory">
  <TypeSignature Language="C#" Value="public class InMemoryQueryContextFactory : Microsoft.EntityFrameworkCore.Query.QueryContextFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryQueryContextFactory extends Microsoft.EntityFrameworkCore.Query.QueryContextFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryQueryContextFactory&#xA;Inherits QueryContextFactory" />
  <TypeSignature Language="F#" Value="type InMemoryQueryContextFactory = class&#xA;    inherit QueryContextFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemoryQueryContextFactory : Microsoft::EntityFrameworkCore::Query::QueryContextFactory" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InMemoryQueryContextFactory : Microsoft::EntityFrameworkCore::Query::QueryContextFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.QueryContextFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryQueryContextFactory (Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreCache storeCache, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QueryContextDependencies dependencies, class Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreCache storeCache, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QueryContextDependencies,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreCache,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QueryContextDependencies, storeCache As IInMemoryStoreCache, contextOptions As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory : Microsoft.EntityFrameworkCore.Query.QueryContextDependencies * Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreCache * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory (dependencies, storeCache, contextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ dependencies, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreCache ^ storeCache, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Query::QueryContextDependencies ^ dependencies, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreCache ^ storeCache, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Query::QueryContextDependencies const &amp; dependencies, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreCache const &amp; storeCache, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions const &amp; contextOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QueryContextDependencies" />
        <Parameter Name="storeCache" Type="Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreCache" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="storeCache">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryQueryContextFactory (Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource storeSource, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext currentContext, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource storeSource, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentContext As ICurrentDbContext, concurrencyDetector As IConcurrencyDetector, storeSource As IInMemoryStoreSource, contextOptions As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory : Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory (currentContext, concurrencyDetector, storeSource, contextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource ^ storeSource, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext ^ currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource ^ storeSource, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::Internal::ICurrentDbContext const &amp; currentContext, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector const &amp; concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource const &amp; storeSource, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions const &amp; contextOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentContext" Type="Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
        <Parameter Name="storeSource" Type="Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="currentContext">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="storeSource">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryQueryContextFactory (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource storeSource, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector changeDetector, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource storeSource, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector changeDetector, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions contextOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, concurrencyDetector As IConcurrencyDetector, storeSource As IInMemoryStoreSource, changeDetector As IChangeDetector, contextOptions As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory" Usage="new Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory (stateManager, concurrencyDetector, storeSource, changeDetector, contextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource ^ storeSource, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ changeDetector, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector ^ concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource ^ storeSource, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector ^ changeDetector, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ contextOptions);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryQueryContextFactory(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager const &amp; stateManager, Microsoft::EntityFrameworkCore::Internal::IConcurrencyDetector const &amp; concurrencyDetector, Microsoft::EntityFrameworkCore::Storage::Internal::IInMemoryStoreSource const &amp; storeSource, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IChangeDetector const &amp; changeDetector, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions const &amp; contextOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector" />
        <Parameter Name="storeSource" Type="Microsoft.EntityFrameworkCore.Storage.Internal.IInMemoryStoreSource" />
        <Parameter Name="changeDetector" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector" />
        <Parameter Name="contextOptions" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="storeSource">To be added.</param>
        <param name="changeDetector">To be added.</param>
        <param name="contextOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.Query.QueryContext Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.Query.QueryContext Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.InMemoryQueryContextFactory.Create" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create () As QueryContext" />
      <MemberSignature Language="F#" Value="override this.Create : unit -&gt; Microsoft.EntityFrameworkCore.Query.QueryContext" Usage="inMemoryQueryContextFactory.Create " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::EntityFrameworkCore::Query::QueryContext ^ Create();" />
      <MemberSignature Language="C++ WINRT" Value=" override Microsoft::EntityFrameworkCore::Query::QueryContext Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QueryContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>