<Type Name="TypeMappingInfo" FullName="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo">
  <TypeSignature Language="C#" Value="public struct TypeMappingInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeMappingInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypeMappingInfo" />
  <TypeSignature Language="F#" Value="type TypeMappingInfo = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class TypeMappingInfo" />
  <TypeSignature Language="C++ WINRT" Value="struct TypeMappingInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Describes metadata needed to decide on a type mapping for a property or type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMappingInfo (Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.#ctor(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As IProperty)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeMappingInfo(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TypeMappingInfo(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ WINRT" Value=" TypeMappingInfo(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; property);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="property"> The property for which mapping is needed. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMappingInfo (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.#ctor(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As MemberInfo)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo : System.Reflection.MemberInfo -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo member" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeMappingInfo(System::Reflection::MemberInfo ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member"> The property or field for which mapping is needed. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMappingInfo (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.#ctor(System.Type)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo : Type -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeMappingInfo(Type ^ type);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TypeMappingInfo(Platform::Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"> The CLR type in the model for which mapping is needed. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMappingInfo (Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo source, Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo converter, Nullable&lt;bool&gt; unicode = null, Nullable&lt;int&gt; size = null, Nullable&lt;int&gt; precision = null, Nullable&lt;int&gt; scale = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo source, valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo converter, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo,Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As TypeMappingInfo, converter As ValueConverterInfo, Optional unicode As Nullable(Of Boolean) = null, Optional size As Nullable(Of Integer) = null, Optional precision As Nullable(Of Integer) = null, Optional scale As Nullable(Of Integer) = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo : Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo * Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo (source, converter, unicode, size, precision, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />
        <Parameter Name="converter" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="source"> The source info. </param>
        <param name="converter"> The converter to apply. </param>
        <param name="unicode"> Specifies Unicode or ANSI mapping, or <c>null</c> for default. </param>
        <param name="size"> Specifies a size for the mapping, or <c>null</c> for default. </param>
        <param name="precision"> Specifies a precision for the mapping, or <c>null</c> for default. </param>
        <param name="scale"> Specifies a scale for the mapping, or <c>null</c> for default. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" /> with the given <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMappingInfo (Type type, bool keyOrIndex, Nullable&lt;bool&gt; unicode = null, Nullable&lt;int&gt; size = null, Nullable&lt;bool&gt; rowVersion = null, Nullable&lt;int&gt; precision = null, Nullable&lt;int&gt; scale = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, bool keyOrIndex, valuetype System.Nullable`1&lt;bool&gt; unicode, valuetype System.Nullable`1&lt;int32&gt; size, valuetype System.Nullable`1&lt;bool&gt; rowVersion, valuetype System.Nullable`1&lt;int32&gt; precision, valuetype System.Nullable`1&lt;int32&gt; scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.#ctor(System.Type,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo : Type * bool * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo (type, keyOrIndex, unicode, size, rowVersion, precision, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="keyOrIndex" Type="System.Boolean" />
        <Parameter Name="unicode" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="size" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="rowVersion" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="precision" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="scale" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="type"> The CLR type in the model for which mapping is needed. </param>
        <param name="keyOrIndex"> If <c>true</c>, then a special mapping for a key or index may be returned. </param>
        <param name="unicode"> Specifies Unicode or ANSI mapping, or <c>null</c> for default. </param>
        <param name="size"> Specifies a size for the mapping, or <c>null</c> for default. </param>
        <param name="rowVersion"> Specifies a row-version, or <c>null</c> for default. </param>
        <param name="precision"> Specifies a precision for the mapping, or <c>null</c> for default. </param>
        <param name="scale"> Specifies a scale for the mapping, or <c>null</c> for default. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.ClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Type ^ ClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The CLR type in the model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Equals(Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TypeMappingInfo) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo -&gt; bool" Usage="typeMappingInfo.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::EntityFrameworkCore::Storage::TypeMappingInfo other);" />
      <MemberSignature Language="C++ WINRT" Value="bool Equals(Microsoft::EntityFrameworkCore::Storage::TypeMappingInfo other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" />
      </Parameters>
      <Docs>
        <param name="other"> The other object. </param>
        <summary>
                Compares this <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" /> to another to check if they represent the same mapping.
            </summary>
        <returns>
          <c>True</c> if they represent the same mapping; <c>false</c> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeMappingInfo.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"> The other object. </param>
        <summary>
                Compares this <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" /> to another to check if they represent the same mapping.
            </summary>
        <returns>
          <c>True</c> if they represent the same mapping; <c>false</c> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeMappingInfo.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns a hash code for this object.
            </summary>
        <returns> The hash code. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyOrIndex">
      <MemberSignature Language="C#" Value="public bool IsKeyOrIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyOrIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsKeyOrIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyOrIndex As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKeyOrIndex : bool" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsKeyOrIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyOrIndex { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsKeyOrIndex { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether or not the mapping is part of a key or index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRowVersion">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsRowVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsRowVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsRowVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRowVersion As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsRowVersion : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsRowVersion { Nullable&lt;bool&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether or not the mapping will be used for a row version, or null if not defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsUnicode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsUnicode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnicode As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsUnicode : Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.IsUnicode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsUnicode { Nullable&lt;bool&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates whether or not the mapping supports Unicode, or null if not defined.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Precision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Precision" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Precision" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precision As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Precision : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Precision" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; Precision { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The suggested precision of the mapped data type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Scale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Scale : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Scale" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; Scale { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The suggested scale of the mapped data type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; Size" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Size : Nullable&lt;int&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; Size { Nullable&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Indicates the store-size to use for the mapping, or null if none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithConverter">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo WithConverter (Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo converterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo WithConverter(valuetype Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo converterInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo.WithConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithConverter (converterInfo As ValueConverterInfo) As TypeMappingInfo" />
      <MemberSignature Language="F#" Value="member this.WithConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" Usage="typeMappingInfo.WithConverter converterInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Storage::TypeMappingInfo WithConverter(Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverterInfo converterInfo);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Storage::TypeMappingInfo WithConverter(Microsoft::EntityFrameworkCore::Storage::ValueConversion::ValueConverterInfo converterInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converterInfo" Type="Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverterInfo" />
      </Parameters>
      <Docs>
        <param name="converterInfo"> The converter to apply. </param>
        <summary>
                Returns a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMappingInfo" /> with the given converter applied.
            </summary>
        <returns> The new mapping info. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>