<Type Name="IRelationalCommand" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand">
  <TypeSignature Language="C#" Value="public interface IRelationalCommand" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalCommand" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalCommand" />
  <TypeSignature Language="F#" Value="type IRelationalCommand = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRelationalCommand" />
  <TypeSignature Language="C++ CX" Value="public interface class IRelationalCommand" />
  <TypeSignature Language="C++ WINRT" Value="__interface IRelationalCommand" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A command to be executed against a relational database.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ CommandText { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the command text to be executed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object)) As Integer" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; int" Usage="iRelationalCommand.ExecuteNonQuery (connection, parameterValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <summary>
                Executes the command with no results.
            </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object), manageConnection As Boolean) As Integer" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQuery : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; int" Usage="iRelationalCommand.ExecuteNonQuery (connection, parameterValues, manageConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues, bool manageConnection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <summary>
                Executes the command with no results.
            </summary>
        <returns> The number of rows affected. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQueryAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iRelationalCommand.ExecuteNonQueryAsync (connection, parameterValues, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with no results.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteNonQueryAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iRelationalCommand.ExecuteNonQueryAsync (connection, parameterValues, manageConnection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with no results.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object)) As RelationalDataReader" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="iRelationalCommand.ExecuteReader (connection, parameterValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Storage::RelationalDataReader ^ ExecuteReader(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader ExecuteReader(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object), manageConnection As Boolean) As RelationalDataReader" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReader : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" Usage="iRelationalCommand.ExecuteReader (connection, parameterValues, manageConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Storage::RelationalDataReader ^ ExecuteReader(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues, bool manageConnection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReaderAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;" Usage="iRelationalCommand.ExecuteReaderAsync (connection, parameterValues, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt; ExecuteReaderAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteReaderAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;" Usage="iRelationalCommand.ExecuteReaderAsync (connection, parameterValues, manageConnection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.EntityFrameworkCore.Storage.RelationalDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object)) As Object" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; -&gt; obj" Usage="iRelationalCommand.ExecuteScalar (connection, parameterValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <summary>
                Executes the command with a single scalar result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar (connection As IRelationalConnection, parameterValues As IReadOnlyDictionary(Of String, Object), manageConnection As Boolean) As Object" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalar : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool -&gt; obj" Usage="iRelationalCommand.ExecuteScalar (connection, parameterValues, manageConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection, System::Collections::Generic::IReadOnlyDictionary&lt;System::String ^, System::Object ^&gt; ^ parameterValues, bool manageConnection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <summary>
                Executes the command with a single scalar result.
            </summary>
        <returns> The result of the command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalarAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="iRelationalCommand.ExecuteScalarAsync (connection, parameterValues, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Collections.Generic.IReadOnlyDictionary&lt;string,object&gt; parameterValues, bool manageConnection, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, object&gt; parameterValues, bool manageConnection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ExecuteScalarAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Collections.Generic.IReadOnlyDictionary&lt;string, obj&gt; * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="iRelationalCommand.ExecuteScalarAsync (connection, parameterValues, manageConnection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use overload without 'manageConnection' parameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="parameterValues" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="manageConnection" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to execute against. </param>
        <param name="parameterValues"> The values for the parameters. </param>
        <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
        <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IReadOnlyList(Of IRelationalParameter)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Storage::IRelationalParameter ^&gt; ^ Parameters { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Storage::IRelationalParameter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Storage.IRelationalParameter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the parameters for the command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>