<Type Name="TypeMaterializationInfo" FullName="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo">
  <TypeSignature Language="C#" Value="public class TypeMaterializationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeMaterializationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeMaterializationInfo" />
  <TypeSignature Language="F#" Value="type TypeMaterializationInfo = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeMaterializationInfo" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class TypeMaterializationInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Associates a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> with an optional <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />
                and an index into the data reader for use when reading and converting values from the database.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeMaterializationInfo (Type modelClrType, Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, int index = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type modelClrType, class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource typeMappingSource, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.#ctor(System.Type,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modelClrType As Type, property As IProperty, typeMappingSource As IRelationalTypeMappingSource, Optional index As Integer = -1)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo : Type * Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource * int -&gt; Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo" Usage="new Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo (modelClrType, property, typeMappingSource, index)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modelClrType" Type="System.Type" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="typeMappingSource" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMappingSource" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="modelClrType"> The type that is needed in the model after conversion. </param>
        <param name="property"> The property associated with the type, or <c>null</c> if none. </param>
        <param name="typeMappingSource"> The type mapping source to use to find a mapping if the property does not have one already bound. </param>
        <param name="index">
                The index of the underlying result set that should be used for this type,
                or -1 if no index mapping is needed.
            </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="protected virtual bool Equals (Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Equals(class Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Equals(Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Equals (other As TypeMaterializationInfo) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo -&gt; bool" Usage="typeMaterializationInfo.Equals other" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool Equals(Microsoft::EntityFrameworkCore::Storage::TypeMaterializationInfo ^ other);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool Equals(Microsoft::EntityFrameworkCore::Storage::TypeMaterializationInfo const &amp; other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo" />
      </Parameters>
      <Docs>
        <param name="other"> The object to compare with the current object. </param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <c>True</c> if the specified object is equal to the current object; otherwise, <c>false</c>. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="typeMaterializationInfo.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"> The object to compare with the current object. </param>
        <summary>
                Determines whether the specified object is equal to the current object.
            </summary>
        <returns>
          <c>True</c> if the specified object is equal to the current object; otherwise, <c>false</c>. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="typeMaterializationInfo.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Serves as the default hash function.
            </summary>
        <returns> A hash code for the current object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public virtual int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Index" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Index As Integer" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Index { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The index of the underlying result set that should be used for this type,
                or -1 if no index mapping is needed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping Mapping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Mapping As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="member this.Mapping : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Mapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ Mapping { Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ Mapping { Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type mapping for the value to be read.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelClrType">
      <MemberSignature Language="C#" Value="public virtual Type ModelClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ModelClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.ModelClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ModelClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ModelClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.ModelClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ModelClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Type ^ ModelClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type that is needed in the model after conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IProperty Property" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Property" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Property As IProperty" />
      <MemberSignature Language="F#" Value="member this.Property : Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IProperty ^ Property { Microsoft::EntityFrameworkCore::Metadata::IProperty ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::IProperty ^ Property { Microsoft::EntityFrameworkCore::Metadata::IProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The property associated with the type, or <c>null</c> if none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderClrType">
      <MemberSignature Language="C#" Value="public virtual Type ProviderClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ProviderClrType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.ProviderClrType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProviderClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ProviderClrType : Type" Usage="Microsoft.EntityFrameworkCore.Storage.TypeMaterializationInfo.ProviderClrType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ProviderClrType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Type ^ ProviderClrType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The type that will be read from the database provider.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>