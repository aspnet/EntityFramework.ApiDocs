<Type Name="RelationalTypeMapperExtensions" FullName="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalTypeMapperExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalTypeMapperExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalTypeMapperExtensions" />
  <TypeSignature Language="F#" Value="type RelationalTypeMapperExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationalTypeMapperExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class RelationalTypeMapperExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class RelationalTypeMapperExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource instead.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" /> class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping (this Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMapping (typeMapper As IRelationalTypeMapper, property As IProperty) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetMapping : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping (typeMapper, property)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" RefType="this" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <param name="property"> The property to get the mapping for. </param>
        <summary>
                Gets the relational database type for a given property, throwing if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping (this Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMapping (typeMapper As IRelationalTypeMapper, typeName As String) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetMapping : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * string -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping (typeMapper, typeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, System::String ^ typeName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Platform::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" RefType="this" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <param name="typeName"> The type to get the mapping for. </param>
        <summary>
          <para>
                    Gets the mapping that represents the given database type, throwing if no mapping is found.
                </para>
          <para>
                    Note that sometimes the same store type can have different mappings; this method returns the default.
                </para>
        </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMapping">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping (this Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMapping(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMapping (typeMapper As IRelationalTypeMapper, clrType As Type) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetMapping : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Type -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping (typeMapper, clrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Type ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMapping(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Platform::Type ^ clrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" RefType="this" />
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <param name="clrType"> The type to get the mapping for. </param>
        <summary>
                Gets the relational database type for a given .NET type, throwing if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMappingForValue">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMappingForValue (this Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping GetMappingForValue(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMappingForValue (typeMapper As IRelationalTypeMapper, value As Object) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="static member GetMappingForValue : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * obj -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue (typeMapper, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMappingForValue(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::EntityFrameworkCore::Storage::RelationalTypeMapping ^ GetMappingForValue(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Platform::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use IRelationalTypeMappingSource instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <param name="value"> The object to get the mapping for. </param>
        <summary>
                Gets the relational database type for a given object, throwing if no mapping is found.
            </summary>
        <returns> The type mapping to be used. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeMapped">
      <MemberSignature Language="C#" Value="public static bool IsTypeMapped (this Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, Type clrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeMapped(class Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper typeMapper, class System.Type clrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsTypeMapped (typeMapper As IRelationalTypeMapper, clrType As Type) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTypeMapped : Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper * Type -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped (typeMapper, clrType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsTypeMapped(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Type ^ clrType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsTypeMapped(Microsoft::EntityFrameworkCore::Storage::IRelationalTypeMapper ^ typeMapper, Platform::Type ^ clrType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeMapper" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" RefType="this" />
        <Parameter Name="clrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeMapper"> The type mapper. </param>
        <param name="clrType"> The .NET type. </param>
        <summary>
                Gets a value indicating whether the given .NET type is mapped.
            </summary>
        <returns> True if the type can be mapped; otherwise false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>