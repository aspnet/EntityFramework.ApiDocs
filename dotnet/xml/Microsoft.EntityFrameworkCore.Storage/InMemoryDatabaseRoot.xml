<Type Name="InMemoryDatabaseRoot" FullName="Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot">
  <TypeSignature Language="C#" Value="public sealed class InMemoryDatabaseRoot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InMemoryDatabaseRoot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InMemoryDatabaseRoot" />
  <TypeSignature Language="F#" Value="type InMemoryDatabaseRoot = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemoryDatabaseRoot sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class InMemoryDatabaseRoot sealed" />
  <TypeSignature Language="C++ WINRT" Value="class InMemoryDatabaseRoot sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Acts as a root for all in-memory databases such that they will be available
                across context instances and service providers as long as the same instance
                of this type is passed to
                <see cref="M:Microsoft.EntityFrameworkCore.InMemoryDbContextOptionsExtensions.UseInMemoryDatabase``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{Microsoft.EntityFrameworkCore.Infrastructure.InMemoryDbContextOptionsBuilder})" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryDatabaseRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryDatabaseRoot();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryDatabaseRoot();" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryDatabaseRoot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public object Instance;" />
      <MemberSignature Language="ILAsm" Value=".field public object Instance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Instance As Object " />
      <MemberSignature Language="F#" Value="val mutable Instance : obj" Usage="Microsoft.EntityFrameworkCore.Storage.InMemoryDatabaseRoot.Instance" />
      <MemberSignature Language="C++ CLI" Value="public: System::Object ^ Instance;" />
      <MemberSignature Language="C++ WINRT" Value="winrt::Windows::Foundation::IInspectable Instance;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </para>
          <para>
                Entity Framework code will set this instance as needed. It should be considered opaque to
                application code; the type of object may change at any time.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>