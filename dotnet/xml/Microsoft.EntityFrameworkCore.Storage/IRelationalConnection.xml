<Type Name="IRelationalConnection" FullName="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection">
  <TypeSignature Language="C#" Value="public interface IRelationalConnection : IDisposable, Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager, Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelationalConnection implements class Microsoft.EntityFrameworkCore.Infrastructure.IResettableService, class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager, class Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelationalConnection&#xA;Implements IDbContextTransactionManager, IDisposable, IRelationalTransactionManager" />
  <TypeSignature Language="F#" Value="type IRelationalConnection = interface&#xA;    interface IRelationalTransactionManager&#xA;    interface IDbContextTransactionManager&#xA;    interface IResettableService&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRelationalConnection : IDisposable, Microsoft::EntityFrameworkCore::Storage::IDbContextTransactionManager, Microsoft::EntityFrameworkCore::Storage::IRelationalTransactionManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Represents a connection with a relational database.
                </para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ActiveCursor">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor ActiveCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor ActiveCursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveCursor As IValueBufferCursor" />
      <MemberSignature Language="F#" Value="member this.ActiveCursor : Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ ActiveCursor { Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ get(); void set(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ ActiveCursor { Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ get(); void set(Microsoft::EntityFrameworkCore::Query::Internal::IValueBufferCursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the active cursor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Function Close () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; bool" Usage="iRelationalConnection.Close " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Close();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool Close();" />
      <MemberSignature Language="C++ WINRT" Value="bool Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Closes the connection to the database.
            </summary>
        <returns> True if the underlying connection was actually closed; false otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : Nullable&lt;int&gt; with get, set" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CommandTimeout { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the timeout for executing a command against the database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionId">
      <MemberSignature Language="C#" Value="public Guid ConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionId As Guid" />
      <MemberSignature Language="F#" Value="member this.ConnectionId : Guid" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the connection identifier.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ConnectionString { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the connection string for the database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTransaction">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction CurrentTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction CurrentTransaction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CurrentTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTransaction As IDbContextTransaction" />
      <MemberSignature Language="F#" Value="member this.CurrentTransaction : Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CurrentTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ CurrentTransaction { Microsoft::EntityFrameworkCore::Storage::IDbContextTransaction ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the current transaction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbConnection" /> used to connect to the database.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleActiveResultSetsEnabled">
      <MemberSignature Language="C#" Value="public bool IsMultipleActiveResultSetsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMultipleActiveResultSetsEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMultipleActiveResultSetsEnabled : bool" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMultipleActiveResultSetsEnabled { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsMultipleActiveResultSetsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the multiple active result sets feature is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iRelationalConnection.Open " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Open();" />
      <MemberSignature Language="C++ WINRT" Value="void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Opens the connection to the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public bool Open (bool errorsExpected = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Open(bool errorsExpected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Optional errorsExpected As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Open : bool -&gt; bool" Usage="iRelationalConnection.Open errorsExpected" />
      <MemberSignature Language="C++ WINRT" Value="bool Open(bool errorsExpected = false);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorsExpected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
        <summary>
                Opens the connection to the database.
            </summary>
        <returns> True if the underlying connection was actually opened; false otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
                Asynchronously opens the connection to the database.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; OpenAsync (System.Threading.CancellationToken cancellationToken, bool errorsExpected = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; OpenAsync(valuetype System.Threading.CancellationToken cancellationToken, bool errorsExpected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OpenAsync : System.Threading.CancellationToken * bool -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iRelationalConnection.OpenAsync (cancellationToken, errorsExpected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="errorsExpected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <param name="errorsExpected"> Indicate if the connection errors are expected and should be logged as debug message. </param>
        <summary>
                Asynchronously opens the connection to the database.
            </summary>
        <returns>
                A task that represents the asynchronous operation, with a value of true if the connection
                was actually opened.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterBufferable">
      <MemberSignature Language="C#" Value="public void RegisterBufferable (Microsoft.EntityFrameworkCore.Query.Internal.IBufferable bufferable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterBufferable(class Microsoft.EntityFrameworkCore.Query.Internal.IBufferable bufferable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.RegisterBufferable(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterBufferable (bufferable As IBufferable)" />
      <MemberSignature Language="F#" Value="abstract member RegisterBufferable : Microsoft.EntityFrameworkCore.Query.Internal.IBufferable -&gt; unit" Usage="iRelationalConnection.RegisterBufferable bufferable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterBufferable(Microsoft::EntityFrameworkCore::Query::Internal::IBufferable ^ bufferable);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void RegisterBufferable(Microsoft::EntityFrameworkCore::Query::Internal::IBufferable ^ bufferable);" />
      <MemberSignature Language="C++ WINRT" Value="void RegisterBufferable(Microsoft::EntityFrameworkCore::Query::Internal::IBufferable const &amp; bufferable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferable" Type="Microsoft.EntityFrameworkCore.Query.Internal.IBufferable" />
      </Parameters>
      <Docs>
        <param name="bufferable"> The bufferable query. </param>
        <summary>
                Registers a potentially bufferable active query.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterBufferableAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RegisterBufferableAsync (Microsoft.EntityFrameworkCore.Query.Internal.IBufferable bufferable, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RegisterBufferableAsync(class Microsoft.EntityFrameworkCore.Query.Internal.IBufferable bufferable, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.RegisterBufferableAsync(Microsoft.EntityFrameworkCore.Query.Internal.IBufferable,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RegisterBufferableAsync : Microsoft.EntityFrameworkCore.Query.Internal.IBufferable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iRelationalConnection.RegisterBufferableAsync (bufferable, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ RegisterBufferableAsync(Microsoft::EntityFrameworkCore::Query::Internal::IBufferable ^ bufferable, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferable" Type="Microsoft.EntityFrameworkCore.Query.Internal.IBufferable" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bufferable"> The bufferable query. </param>
        <param name="cancellationToken"> The cancellation token. </param>
        <summary>
                Asynchronously registers a potentially bufferable active query.
            </summary>
        <returns>
                A Task.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Semaphore">
      <MemberSignature Language="C#" Value="public System.Threading.SemaphoreSlim Semaphore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SemaphoreSlim Semaphore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Semaphore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Semaphore As SemaphoreSlim" />
      <MemberSignature Language="F#" Value="member this.Semaphore : System.Threading.SemaphoreSlim" Usage="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SemaphoreSlim ^ Semaphore { System::Threading::SemaphoreSlim ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SemaphoreSlim</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a semaphore used to serialize access to this connection.
            </summary>
        <value>
                The semaphore.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>