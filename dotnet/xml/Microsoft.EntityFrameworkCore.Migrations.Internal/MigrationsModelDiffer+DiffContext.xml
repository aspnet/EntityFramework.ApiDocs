<Type Name="MigrationsModelDiffer+DiffContext" FullName="Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer+DiffContext">
  <TypeSignature Language="C#" Value="protected class MigrationsModelDiffer.DiffContext" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit MigrationsModelDiffer/DiffContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext" />
  <TypeSignature Language="VB.NET" Value="Protected Class MigrationsModelDiffer.DiffContext" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class MigrationsModelDiffer::DiffContext" />
  <TypeSignature Language="C++ CX" Value="protected: ref class MigrationsModelDiffer::DiffContext" />
  <TypeSignature Language="C++ WINRT" Value="class MigrationsModelDiffer::DiffContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiffContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiffContext();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; DiffContext();" />
      <MemberSignature Language="C++ WINRT" Value=" DiffContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiffContext (Microsoft.EntityFrameworkCore.Metadata.IModel source, Microsoft.EntityFrameworkCore.Metadata.IModel target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.IModel source, class Microsoft.EntityFrameworkCore.Metadata.IModel target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IModel, target As IModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Metadata.IModel -&gt; Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext" Usage="new Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext (source, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiffContext(Microsoft::EntityFrameworkCore::Metadata::IModel ^ source, Microsoft::EntityFrameworkCore::Metadata::IModel ^ target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; DiffContext(Microsoft::EntityFrameworkCore::Metadata::IModel ^ source, Microsoft::EntityFrameworkCore::Metadata::IModel ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" DiffContext(Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; source, Microsoft::EntityFrameworkCore::Metadata::IModel const &amp; target);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCreate">
      <MemberSignature Language="C#" Value="public virtual void AddCreate (Microsoft.EntityFrameworkCore.Metadata.IEntityType target, Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCreate(class Microsoft.EntityFrameworkCore.Metadata.IEntityType target, class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCreate (target As IEntityType, operation As CreateTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddCreate : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation -&gt; unit&#xA;override this.AddCreate : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation -&gt; unit" Usage="diffContext.AddCreate (target, operation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCreate(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target, Microsoft::EntityFrameworkCore::Migrations::Operations::CreateTableOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddCreate(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; target, Microsoft::EntityFrameworkCore::Migrations::Operations::CreateTableOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDrop">
      <MemberSignature Language="C#" Value="public virtual void AddDrop (Microsoft.EntityFrameworkCore.Metadata.IEntityType source, Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddDrop(class Microsoft.EntityFrameworkCore.Metadata.IEntityType source, class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddDrop (source As IEntityType, operation As DropTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddDrop : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; unit&#xA;override this.AddDrop : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; unit" Usage="diffContext.AddDrop (source, operation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddDrop(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source, Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddDrop(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; source, Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDrop">
      <MemberSignature Language="C#" Value="public virtual void AddDrop (Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source, Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddDrop(class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source, class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddDrop (source As TableMapping, operation As DropTableOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddDrop : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping * Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; unit&#xA;override this.AddDrop : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping * Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; unit" Usage="diffContext.AddDrop (source, operation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddDrop(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ source, Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddDrop(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping const &amp; source, Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" />
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="operation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMapping">
      <MemberSignature Language="C#" Value="public virtual void AddMapping (Microsoft.EntityFrameworkCore.Metadata.IEntityType source, Microsoft.EntityFrameworkCore.Metadata.IEntityType target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMapping(class Microsoft.EntityFrameworkCore.Metadata.IEntityType source, class Microsoft.EntityFrameworkCore.Metadata.IEntityType target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddMapping (source As IEntityType, target As IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member AddMapping : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit&#xA;override this.AddMapping : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; unit" Usage="diffContext.AddMapping (source, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source, Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; source, Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMapping">
      <MemberSignature Language="C#" Value="public virtual void AddMapping (Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source, Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMapping(class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source, class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping,Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddMapping (source As TableMapping, target As TableMapping)" />
      <MemberSignature Language="F#" Value="abstract member AddMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping * Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping -&gt; unit&#xA;override this.AddMapping : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping * Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping -&gt; unit" Usage="diffContext.AddMapping (source, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ source, Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping const &amp; source, Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" />
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMapping">
      <MemberSignature Language="C#" Value="public virtual void AddMapping (Microsoft.EntityFrameworkCore.Metadata.IProperty source, Microsoft.EntityFrameworkCore.Metadata.IProperty target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMapping(class Microsoft.EntityFrameworkCore.Metadata.IProperty source, class Microsoft.EntityFrameworkCore.Metadata.IProperty target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddMapping (source As IProperty, target As IProperty)" />
      <MemberSignature Language="F#" Value="abstract member AddMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit&#xA;override this.AddMapping : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="diffContext.AddMapping (source, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ source, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ source, Microsoft::EntityFrameworkCore::Metadata::IProperty ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void AddMapping(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; source, Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMapping&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual void AddMapping&lt;T&gt; (T source, T target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMapping&lt;T&gt;(!!T source, !!T target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddMapping(Of T) (source As T, target As T)" />
      <MemberSignature Language="F#" Value="abstract member AddMapping : 'T * 'T -&gt; unit&#xA;override this.AddMapping : 'T * 'T -&gt; unit" Usage="diffContext.AddMapping (source, target)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual void AddMapping(T source, T target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual void AddMapping(T source, T target);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; virtual void AddMapping(T source, T target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="T" />
        <Parameter Name="target" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCreate">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation FindCreate (Microsoft.EntityFrameworkCore.Metadata.IEntityType target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation FindCreate(class Microsoft.EntityFrameworkCore.Metadata.IEntityType target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindCreate (target As IEntityType) As CreateTableOperation" />
      <MemberSignature Language="F#" Value="abstract member FindCreate : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation&#xA;override this.FindCreate : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation" Usage="diffContext.FindCreate target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Migrations::Operations::CreateTableOperation ^ FindCreate(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Migrations::Operations::CreateTableOperation FindCreate(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDrop">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation FindDrop (Microsoft.EntityFrameworkCore.Metadata.IEntityType source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation FindDrop(class Microsoft.EntityFrameworkCore.Metadata.IEntityType source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindDrop (source As IEntityType) As DropTableOperation" />
      <MemberSignature Language="F#" Value="abstract member FindDrop : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation&#xA;override this.FindDrop : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" Usage="diffContext.FindDrop source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation ^ FindDrop(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation FindDrop(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType FindSource (Microsoft.EntityFrameworkCore.Metadata.IEntityType target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType FindSource(class Microsoft.EntityFrameworkCore.Metadata.IEntityType target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSource (target As IEntityType) As IEntityType" />
      <MemberSignature Language="F#" Value="abstract member FindSource : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType&#xA;override this.FindSource : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="diffContext.FindSource target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ FindSource(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ FindSource(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType FindSource(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSource">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IProperty FindSource (Microsoft.EntityFrameworkCore.Metadata.IProperty target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IProperty FindSource(class Microsoft.EntityFrameworkCore.Metadata.IProperty target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSource (target As IProperty) As IProperty" />
      <MemberSignature Language="F#" Value="abstract member FindSource : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty&#xA;override this.FindSource : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="diffContext.FindSource target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IProperty ^ FindSource(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IProperty ^ FindSource(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ target);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::IProperty FindSource(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSource&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T FindSource&lt;T&gt; (T target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T FindSource&lt;T&gt;(!!T target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSource(Of T) (target As T) As T" />
      <MemberSignature Language="F#" Value="abstract member FindSource : 'T -&gt; 'T&#xA;override this.FindSource : 'T -&gt; 'T" Usage="diffContext.FindSource target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T FindSource(T target);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T FindSource(T target);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; virtual T FindSource(T target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="target">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSourceTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindSourceTable (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindSourceTable(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSourceTable(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSourceTable (entityType As IEntityType) As TableMapping" />
      <MemberSignature Language="F#" Value="abstract member FindSourceTable : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&#xA;override this.FindSourceTable : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" Usage="diffContext.FindSourceTable entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ FindSourceTable(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping FindSourceTable(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTable (Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTable(class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTable(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTable (operation As DropTableOperation) As TableMapping" />
      <MemberSignature Language="F#" Value="abstract member FindTable : Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&#xA;override this.FindTable : Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" Usage="diffContext.FindTable operation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ FindTable(Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping FindTable(Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTarget">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType FindTarget (Microsoft.EntityFrameworkCore.Metadata.IEntityType source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType FindTarget(class Microsoft.EntityFrameworkCore.Metadata.IEntityType source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTarget (source As IEntityType) As IEntityType" />
      <MemberSignature Language="F#" Value="abstract member FindTarget : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType&#xA;override this.FindTarget : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="diffContext.FindTarget source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ FindTarget(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ FindTarget(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ source);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType FindTarget(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTarget">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTarget (Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTarget(class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTarget (source As TableMapping) As TableMapping" />
      <MemberSignature Language="F#" Value="abstract member FindTarget : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&#xA;override this.FindTarget : Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" Usage="diffContext.FindTarget source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ FindTarget(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ source);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping FindTarget(Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTarget">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IProperty FindTarget (Microsoft.EntityFrameworkCore.Metadata.IProperty source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IProperty FindTarget(class Microsoft.EntityFrameworkCore.Metadata.IProperty source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTarget (source As IProperty) As IProperty" />
      <MemberSignature Language="F#" Value="abstract member FindTarget : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty&#xA;override this.FindTarget : Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IProperty" Usage="diffContext.FindTarget source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IProperty ^ FindTarget(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ source);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IProperty ^ FindTarget(Microsoft::EntityFrameworkCore::Metadata::IProperty ^ source);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::IProperty FindTarget(Microsoft::EntityFrameworkCore::Metadata::IProperty const &amp; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTargetTable">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTargetTable (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping FindTargetTable(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTargetTable(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindTargetTable (entityType As IEntityType) As TableMapping" />
      <MemberSignature Language="F#" Value="abstract member FindTargetTable : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&#xA;override this.FindTargetTable : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping" Usage="diffContext.FindTargetTable entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^ FindTargetTable(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping FindTargetTable(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IEntityType GetMetadata (Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IEntityType GetMetadata(class Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetadata (operation As DropTableOperation) As IEntityType" />
      <MemberSignature Language="F#" Value="abstract member GetMetadata : Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType&#xA;override this.GetMetadata : Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation -&gt; Microsoft.EntityFrameworkCore.Metadata.IEntityType" Usage="diffContext.GetMetadata operation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ GetMetadata(Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::IEntityType GetMetadata(Microsoft::EntityFrameworkCore::Migrations::Operations::DropTableOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceTables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt; GetSourceTables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt; GetSourceTables() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetSourceTables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceTables () As IEnumerable(Of TableMapping)" />
      <MemberSignature Language="F#" Value="abstract member GetSourceTables : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;&#xA;override this.GetSourceTables : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;" Usage="diffContext.GetSourceTables " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^&gt; ^ GetSourceTables();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetTables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt; GetTargetTables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt; GetTargetTables() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetTargetTables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTargetTables () As IEnumerable(Of TableMapping)" />
      <MemberSignature Language="F#" Value="abstract member GetTargetTables : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;&#xA;override this.GetTargetTables : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;" Usage="diffContext.GetTargetTables " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::TableMapping ^&gt; ^ GetTargetTables();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.TableMapping&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>