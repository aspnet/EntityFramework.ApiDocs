<Type Name="ReaderModificationCommandBatch" FullName="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch">
  <TypeSignature Language="C#" Value="public abstract class ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReaderModificationCommandBatch extends Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReaderModificationCommandBatch&#xA;Inherits ModificationCommandBatch" />
  <TypeSignature Language="F#" Value="type ReaderModificationCommandBatch = class&#xA;    inherit ModificationCommandBatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReaderModificationCommandBatch abstract : Microsoft::EntityFrameworkCore::Update::ModificationCommandBatch" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class ReaderModificationCommandBatch abstract : Microsoft::EntityFrameworkCore::Update::ModificationCommandBatch" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ReaderModificationCommandBatch abstract : Microsoft::EntityFrameworkCore::Update::ModificationCommandBatch" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    A base class for <see cref="T:Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch" /> implementations that make use
                    of a data reader.
                </para>
      <para>
                    This type is typically used by database providers; it is generally not used in application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReaderModificationCommandBatch (Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator updateSqlGenerator, Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory valueBufferFactoryFactory);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory commandBuilderFactory, class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper sqlGenerationHelper, class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator updateSqlGenerator, class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory valueBufferFactoryFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator,Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (commandBuilderFactory As IRelationalCommandBuilderFactory, sqlGenerationHelper As ISqlGenerationHelper, updateSqlGenerator As IUpdateSqlGenerator, valueBufferFactoryFactory As IRelationalValueBufferFactoryFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory * Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper * Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator * Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory -&gt; Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" Usage="new Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch (commandBuilderFactory, sqlGenerationHelper, updateSqlGenerator, valueBufferFactoryFactory)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReaderModificationCommandBatch(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ updateSqlGenerator, Microsoft::EntityFrameworkCore::Storage::IRelationalValueBufferFactoryFactory ^ valueBufferFactoryFactory);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ReaderModificationCommandBatch(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory ^ commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ sqlGenerationHelper, Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ updateSqlGenerator, Microsoft::EntityFrameworkCore::Storage::IRelationalValueBufferFactoryFactory ^ valueBufferFactoryFactory);" />
      <MemberSignature Language="C++ WINRT" Value=" ReaderModificationCommandBatch(Microsoft::EntityFrameworkCore::Storage::IRelationalCommandBuilderFactory const &amp; commandBuilderFactory, Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper const &amp; sqlGenerationHelper, Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator const &amp; updateSqlGenerator, Microsoft::EntityFrameworkCore::Storage::IRelationalValueBufferFactoryFactory const &amp; valueBufferFactoryFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandBuilderFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory" />
        <Parameter Name="sqlGenerationHelper" Type="Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" />
        <Parameter Name="updateSqlGenerator" Type="Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" />
        <Parameter Name="valueBufferFactoryFactory" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />
      </Parameters>
      <Docs>
        <param name="commandBuilderFactory"> The builder to build commands. </param>
        <param name="sqlGenerationHelper"> A helper for SQL generation. </param>
        <param name="updateSqlGenerator"> A SQL generator for insert, update, and delete commands. </param>
        <param name="valueBufferFactoryFactory">
                A factory for creating factories for creating <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" />s to be used when reading from the data reader.
            </param>
        <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public override bool AddCommand (Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddCommand(class Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.AddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)" />
      <MemberSignature Language="F#" Value="override this.AddCommand : Microsoft.EntityFrameworkCore.Update.ModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.AddCommand modificationCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AddCommand(Microsoft::EntityFrameworkCore::Update::ModificationCommand ^ modificationCommand);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool AddCommand(Microsoft::EntityFrameworkCore::Update::ModificationCommand const &amp; modificationCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" />
      </Parameters>
      <Docs>
        <param name="modificationCommand"> The command to add. </param>
        <summary>
                Adds the given insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" /> to the batch.
            </summary>
        <returns>
          <c>True</c> if the command was successfully added; <c>false</c> if there was no
                room in the current batch to add the command and it must instead be added to a new batch.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedCommandText">
      <MemberSignature Language="C#" Value="protected virtual System.Text.StringBuilder CachedCommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CachedCommandText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property CachedCommandText As StringBuilder" />
      <MemberSignature Language="F#" Value="member this.CachedCommandText : System.Text.StringBuilder with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::StringBuilder ^ CachedCommandText { System::Text::StringBuilder ^ get(); void set(System::Text::StringBuilder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the cached command text for the commands in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddCommand">
      <MemberSignature Language="C#" Value="protected abstract bool CanAddCommand (Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanAddCommand(class Microsoft.EntityFrameworkCore.Update.ModificationCommand modificationCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CanAddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)" />
      <MemberSignature Language="F#" Value="abstract member CanAddCommand : Microsoft.EntityFrameworkCore.Update.ModificationCommand -&gt; bool" Usage="readerModificationCommandBatch.CanAddCommand modificationCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanAddCommand(Microsoft::EntityFrameworkCore::Update::ModificationCommand ^ modificationCommand);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract bool CanAddCommand(Microsoft::EntityFrameworkCore::Update::ModificationCommand const &amp; modificationCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommand" Type="Microsoft.EntityFrameworkCore.Update.ModificationCommand" />
      </Parameters>
      <Docs>
        <param name="modificationCommand"> The command to potentially add. </param>
        <summary>
                Checks whether or not a new command can be added to the batch.
            </summary>
        <returns>
          <c>True</c> if the command can be added; <c>false</c> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandResultSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; CommandResultSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt; CommandResultSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CommandResultSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CommandResultSet As IList(Of ResultSetMapping)" />
      <MemberSignature Language="F#" Value="member this.CommandResultSet : System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CommandResultSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Generic::IList&lt;Microsoft::EntityFrameworkCore::Update::ResultSetMapping&gt; ^ CommandResultSet { System::Collections::Generic::IList&lt;Microsoft::EntityFrameworkCore::Update::ResultSetMapping&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.EntityFrameworkCore.Update.ResultSetMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.ResultSetMapping" />s for each command in <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="protected abstract void Consume (Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Consume(class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Consume(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Consume (reader As RelationalDataReader)" />
      <MemberSignature Language="F#" Value="abstract member Consume : Microsoft.EntityFrameworkCore.Storage.RelationalDataReader -&gt; unit" Usage="readerModificationCommandBatch.Consume reader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Consume(Microsoft::EntityFrameworkCore::Storage::RelationalDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"> The data reader. </param>
        <summary>
                Consumes the data reader created by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consume">
      <MemberSignature Language="C#" Value="protected abstract void Consume (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Consume(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Consume(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Consume (reader As DbDataReader)" />
      <MemberSignature Language="F#" Value="abstract member Consume : System.Data.Common.DbDataReader -&gt; unit" Usage="readerModificationCommandBatch.Consume reader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Consume(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task ConsumeAsync (Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConsumeAsync(class Microsoft.EntityFrameworkCore.Storage.RelationalDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ConsumeAsync(Microsoft.EntityFrameworkCore.Storage.RelationalDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ConsumeAsync : Microsoft.EntityFrameworkCore.Storage.RelationalDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ConsumeAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader"> The data reader. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Consumes the data reader created by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsumeAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task ConsumeAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task ConsumeAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ConsumeAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ConsumeAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ConsumeAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoreCommand">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.RawSqlCommand CreateStoreCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.RawSqlCommand CreateStoreCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateStoreCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateStoreCommand () As RawSqlCommand" />
      <MemberSignature Language="F#" Value="abstract member CreateStoreCommand : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand&#xA;override this.CreateStoreCommand : unit -&gt; Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" Usage="readerModificationCommandBatch.CreateStoreCommand " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::RawSqlCommand ^ CreateStoreCommand();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Storage::RawSqlCommand CreateStoreCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RawSqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Generates a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" /> for the batch.
            </summary>
        <returns> The command. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValueBufferFactory">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; columnModifications);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory CreateValueBufferFactory(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; columnModifications) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateValueBufferFactory(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.ColumnModification})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateValueBufferFactory (columnModifications As IReadOnlyList(Of ColumnModification)) As IRelationalValueBufferFactory" />
      <MemberSignature Language="F#" Value="abstract member CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory&#xA;override this.CreateValueBufferFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt; -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" Usage="readerModificationCommandBatch.CreateValueBufferFactory columnModifications" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Storage::IRelationalValueBufferFactory ^ CreateValueBufferFactory(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Update::ColumnModification ^&gt; ^ columnModifications);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnModifications" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ColumnModification&gt;" />
      </Parameters>
      <Docs>
        <param name="columnModifications">
                The list of <see cref="T:Microsoft.EntityFrameworkCore.Update.ColumnModification" />s for all the columns
                being modified such that a ValueBuffer with appropriate slots can be created.
            </param>
        <summary>
                Creates the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> that will be used for creating a
                <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> to consume the data reader.
            </summary>
        <returns> The factory. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override void Execute (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Execute(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Execute (connection As IRelationalConnection)" />
      <MemberSignature Language="F#" Value="override this.Execute : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; unit" Usage="readerModificationCommandBatch.Execute connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Execute(Microsoft::EntityFrameworkCore::Storage::IRelationalConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to the database to update. </param>
        <summary>
                Executes the command generated by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateStoreCommand" /> against a
                database using the given connection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ExecuteAsync (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ExecuteAsync(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection connection, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ExecuteAsync : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="readerModificationCommandBatch.ExecuteAsync (connection, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch/&lt;ExecuteAsync&gt;d__32))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connection"> The connection to the database to update. </param>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
        <summary>
                Executes the command generated by <see cref="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CreateStoreCommand" /> against a
                database using the given connection.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommandText">
      <MemberSignature Language="C#" Value="protected virtual string GetCommandText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCommandText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.GetCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCommandText () As String" />
      <MemberSignature Language="F#" Value="abstract member GetCommandText : unit -&gt; string&#xA;override this.GetCommandText : unit -&gt; string" Usage="readerModificationCommandBatch.GetCommandText " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCommandText();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Platform::String ^ GetCommandText();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual std::wstring GetCommandText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the command text for all the commands in the current batch and also caches it
                on <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.CachedCommandText" />.
            </summary>
        <returns> The command text. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterCount">
      <MemberSignature Language="C#" Value="protected virtual int GetParameterCount ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetParameterCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.GetParameterCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetParameterCount () As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetParameterCount : unit -&gt; int&#xA;override this.GetParameterCount : unit -&gt; int" Usage="readerModificationCommandBatch.GetParameterCount " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetParameterCount();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual int GetParameterCount();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual int GetParameterCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the total number of parameters needed for the batch.
            </summary>
        <returns> The total parameter count. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandTextValid">
      <MemberSignature Language="C#" Value="protected abstract bool IsCommandTextValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsCommandTextValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.IsCommandTextValid" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsCommandTextValid () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsCommandTextValid : unit -&gt; bool" Usage="readerModificationCommandBatch.IsCommandTextValid " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsCommandTextValid();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract bool IsCommandTextValid();" />
      <MemberSignature Language="C++ WINRT" Value=" abstract bool IsCommandTextValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Checks whether or not the command text is valid.
            </summary>
        <returns>
          <c>True</c> if the command text is valid; <c>false</c> otherwise. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastCachedCommandIndex">
      <MemberSignature Language="C#" Value="protected virtual int LastCachedCommandIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastCachedCommandIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.LastCachedCommandIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property LastCachedCommandIndex As Integer" />
      <MemberSignature Language="F#" Value="member this.LastCachedCommandIndex : int with get, set" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.LastCachedCommandIndex" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int LastCachedCommandIndex { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property int LastCachedCommandIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The ordinal of the last command for which command text was built.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommands">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommands" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModificationCommands As IReadOnlyList(Of ModificationCommand)" />
      <MemberSignature Language="F#" Value="member this.ModificationCommands : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ ModificationCommands { System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The list of conceptual insert/update/delete <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" />s in the batch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandText">
      <MemberSignature Language="C#" Value="protected virtual void ResetCommandText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ResetCommandText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ResetCommandText" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ResetCommandText ()" />
      <MemberSignature Language="F#" Value="abstract member ResetCommandText : unit -&gt; unit&#xA;override this.ResetCommandText : unit -&gt; unit" Usage="readerModificationCommandBatch.ResetCommandText " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ResetCommandText();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ResetCommandText();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ResetCommandText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Resets the builder to start building a new batch.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlGenerationHelper">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper SqlGenerationHelper" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlGenerationHelper" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SqlGenerationHelper As ISqlGenerationHelper" />
      <MemberSignature Language="F#" Value="member this.SqlGenerationHelper : Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.SqlGenerationHelper" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ SqlGenerationHelper { Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ SqlGenerationHelper { Microsoft::EntityFrameworkCore::Storage::ISqlGenerationHelper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A helper for SQL generation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCachedCommandText">
      <MemberSignature Language="C#" Value="protected virtual void UpdateCachedCommandText (int commandPosition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateCachedCommandText(int32 commandPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateCachedCommandText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateCachedCommandText (commandPosition As Integer)" />
      <MemberSignature Language="F#" Value="abstract member UpdateCachedCommandText : int -&gt; unit&#xA;override this.UpdateCachedCommandText : int -&gt; unit" Usage="readerModificationCommandBatch.UpdateCachedCommandText commandPosition" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateCachedCommandText(int commandPosition);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void UpdateCachedCommandText(int commandPosition);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void UpdateCachedCommandText(int commandPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandPosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandPosition"> The position of the command to generate command text for. </param>
        <summary>
                Updates the command text for the command at the given position in the
                <see cref="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ModificationCommands" /> list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSqlGenerator">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator UpdateSqlGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator UpdateSqlGenerator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateSqlGenerator" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UpdateSqlGenerator As IUpdateSqlGenerator" />
      <MemberSignature Language="F#" Value="member this.UpdateSqlGenerator : Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" Usage="Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.UpdateSqlGenerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ UpdateSqlGenerator { Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual property Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ UpdateSqlGenerator { Microsoft::EntityFrameworkCore::Update::IUpdateSqlGenerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A SQL generator for insert, update, and delete commands.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>