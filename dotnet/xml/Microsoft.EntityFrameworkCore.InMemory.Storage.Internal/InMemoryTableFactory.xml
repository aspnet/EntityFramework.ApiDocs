<Type Name="InMemoryTableFactory" FullName="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory">
  <TypeSignature Language="C#" Value="public class InMemoryTableFactory : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase, Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryTableFactory extends Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase implements class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryTableFactory&#xA;Inherits IdentityMapFactoryFactoryBase&#xA;Implements IInMemoryTableFactory" />
  <TypeSignature Language="F#" Value="type InMemoryTableFactory = class&#xA;    inherit IdentityMapFactoryFactoryBase&#xA;    interface IInMemoryTableFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemoryTableFactory : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IdentityMapFactoryFactoryBase, Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InMemoryTableFactory : Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IdentityMapFactoryFactoryBase, Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryTableFactory (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggingOptions As ILoggingOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory" Usage="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory loggingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryTableFactory(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryTableFactory(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryTableFactory(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions const &amp; loggingOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
      </Parameters>
      <Docs>
        <param name="loggingOptions">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTable Create (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTable Create(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryTableFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (entityType As IEntityType) As IInMemoryTable" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTable&#xA;override this.Create : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTable" Usage="inMemoryTableFactory.Create entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTable ^ Create(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTable ^ Create(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTable Create(Microsoft::EntityFrameworkCore::Metadata::IEntityType const &amp; entityType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>