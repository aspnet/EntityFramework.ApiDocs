<Type Name="InMemoryStoreCache" FullName="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache">
  <TypeSignature Language="C#" Value="public class InMemoryStoreCache : Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryStoreCache extends System.Object implements class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryStoreCache&#xA;Implements IInMemoryStoreCache" />
  <TypeSignature Language="F#" Value="type InMemoryStoreCache = class&#xA;    interface IInMemoryStoreCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemoryStoreCache : Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStoreCache" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InMemoryStoreCache : Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStoreCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryStoreCache (Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory tableFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory tableFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache.#ctor(Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableFactory As IInMemoryTableFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache : Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache" Usage="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache tableFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory ^ tableFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory ^ tableFactory);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory const &amp; tableFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the constructor that also accepts options.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tableFactory" Type="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory" />
      </Parameters>
      <Docs>
        <param name="tableFactory">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryStoreCache (Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory tableFactory, Microsoft.EntityFrameworkCore.InMemory.Infrastructure.Internal.IInMemorySingletonOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory tableFactory, class Microsoft.EntityFrameworkCore.InMemory.Infrastructure.Internal.IInMemorySingletonOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache.#ctor(Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory,Microsoft.EntityFrameworkCore.InMemory.Infrastructure.Internal.IInMemorySingletonOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableFactory As IInMemoryTableFactory, options As IInMemorySingletonOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache : Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory * Microsoft.EntityFrameworkCore.InMemory.Infrastructure.Internal.IInMemorySingletonOptions -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache" Usage="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache (tableFactory, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory ^ tableFactory, Microsoft::EntityFrameworkCore::InMemory::Infrastructure::Internal::IInMemorySingletonOptions ^ options);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory ^ tableFactory, Microsoft::EntityFrameworkCore::InMemory::Infrastructure::Internal::IInMemorySingletonOptions ^ options);" />
      <MemberSignature Language="C++ WINRT" Value=" InMemoryStoreCache(Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryTableFactory const &amp; tableFactory, Microsoft::EntityFrameworkCore::InMemory::Infrastructure::Internal::IInMemorySingletonOptions const &amp; options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableFactory" Type="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryTableFactory" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.InMemory.Infrastructure.Internal.IInMemorySingletonOptions" />
      </Parameters>
      <Docs>
        <param name="tableFactory">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore GetStore (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore GetStore(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryStoreCache.GetStore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStore (name As String) As IInMemoryStore" />
      <MemberSignature Language="F#" Value="abstract member GetStore : string -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore&#xA;override this.GetStore : string -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore" Usage="inMemoryStoreCache.GetStore name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ GetStore(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ GetStore(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore GetStore(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache.GetStore(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>