<Type Name="InMemoryDatabase" FullName="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase">
  <TypeSignature Language="C#" Value="public class InMemoryDatabase : Microsoft.EntityFrameworkCore.Storage.Database, Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemoryDatabase extends Microsoft.EntityFrameworkCore.Storage.Database implements class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase, class Microsoft.EntityFrameworkCore.Storage.IDatabase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemoryDatabase&#xA;Inherits Database&#xA;Implements IInMemoryDatabase" />
  <TypeSignature Language="F#" Value="type InMemoryDatabase = class&#xA;    inherit Database&#xA;    interface IInMemoryDatabase&#xA;    interface IDatabase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemoryDatabase : Microsoft::EntityFrameworkCore::Storage::Database, Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryDatabase" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class InMemoryDatabase : Microsoft::EntityFrameworkCore::Storage::Database, Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryDatabase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.Database</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemoryDatabase (Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache storeCache, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies dependencies, class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache storeCache, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.#ctor(Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies,Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As DatabaseDependencies, storeCache As IInMemoryStoreCache, options As IDbContextOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase : Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies * Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; -&gt; Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase" Usage="new Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase (dependencies, storeCache, options, updateLogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemoryDatabase(Microsoft::EntityFrameworkCore::Storage::DatabaseDependencies ^ dependencies, Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStoreCache ^ storeCache, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options, Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ updateLogger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.DatabaseDependencies" />
        <Parameter Name="storeCache" Type="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStoreCache" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="storeCache">To be added.</param>
        <param name="options">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileAsyncQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt; CompileAsyncQuery&lt;TResult&gt; (Remotion.Linq.QueryModel queryModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Func`2&lt;class Microsoft.EntityFrameworkCore.Query.QueryContext, class System.Collections.Generic.IAsyncEnumerable`1&lt;!!TResult&gt;&gt; CompileAsyncQuery&lt;TResult&gt;(class Remotion.Linq.QueryModel queryModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.CompileAsyncQuery``1(Remotion.Linq.QueryModel)" />
      <MemberSignature Language="F#" Value="override this.CompileAsyncQuery : Remotion.Linq.QueryModel -&gt; Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext, System.Collections.Generic.IAsyncEnumerable&lt;'Result&gt;&gt;" Usage="inMemoryDatabase.CompileAsyncQuery queryModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override Func&lt;Microsoft::EntityFrameworkCore::Query::QueryContext ^, System::Collections::Generic::IAsyncEnumerable&lt;TResult&gt; ^&gt; ^ CompileAsyncQuery(Remotion::Linq::QueryModel ^ queryModel);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IDatabase.CompileAsyncQuery``1(Remotion.Linq.QueryModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.Query.QueryContext,System.Collections.Generic.IAsyncEnumerable&lt;TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="queryModel" Type="Remotion.Linq.QueryModel" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="queryModel">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDatabaseCreated">
      <MemberSignature Language="C#" Value="public virtual bool EnsureDatabaseCreated (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies stateManagerDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnsureDatabaseCreated(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies stateManagerDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies)" />
      <MemberSignature Language="F#" Value="abstract member EnsureDatabaseCreated : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies -&gt; bool&#xA;override this.EnsureDatabaseCreated : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies -&gt; bool" Usage="inMemoryDatabase.EnsureDatabaseCreated stateManagerDependencies" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EnsureDatabaseCreated(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ stateManagerDependencies);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool EnsureDatabaseCreated(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies ^ stateManagerDependencies);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool EnsureDatabaseCreated(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::StateManagerDependencies const &amp; stateManagerDependencies);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.EnsureDatabaseCreated(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManagerDependencies" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManagerDependencies" />
      </Parameters>
      <Docs>
        <param name="stateManagerDependencies">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public override int SaveChanges (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 SaveChanges(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SaveChanges (entries As IReadOnlyList(Of IUpdateEntry)) As Integer" />
      <MemberSignature Language="F#" Value="override this.SaveChanges : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; -&gt; int" Usage="inMemoryDatabase.SaveChanges entries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int SaveChanges(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^&gt; ^ entries);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; SaveChangesAsync (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; SaveChangesAsync(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; entries, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.SaveChangesAsync : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="inMemoryDatabase.SaveChangesAsync (entries, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Update.IUpdateEntry&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Store">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore Store { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore Store" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.Store" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Store As IInMemoryStore" />
      <MemberSignature Language="F#" Value="member this.Store : Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore" Usage="Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.InMemoryDatabase.Store" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ Store { Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ Store { Microsoft::EntityFrameworkCore::InMemory::Storage::Internal::IInMemoryStore ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryDatabase.Store</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.InMemory.Storage.Internal.IInMemoryStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>