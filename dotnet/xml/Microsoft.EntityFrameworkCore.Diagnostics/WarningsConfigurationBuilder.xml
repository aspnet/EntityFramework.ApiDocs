<Type Name="WarningsConfigurationBuilder" FullName="Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder">
  <TypeSignature Language="C#" Value="public class WarningsConfigurationBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WarningsConfigurationBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class WarningsConfigurationBuilder" />
  <TypeSignature Language="F#" Value="type WarningsConfigurationBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class WarningsConfigurationBuilder" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WarningsConfigurationBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Configures the runtime behavior of warnings generated by Entity Framework.
                    You can set a default behavior and behaviors for each warning type.
                </para>
      <para>
                    This class is used within the
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder})" />
                    API and it is not designed to be directly constructed in your application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WarningsConfigurationBuilder (Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (optionsBuilder As DbContextOptionsBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder : Microsoft.EntityFrameworkCore.DbContextOptionsBuilder -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" Usage="new Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder optionsBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WarningsConfigurationBuilder(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder ^ optionsBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" WarningsConfigurationBuilder(Microsoft::EntityFrameworkCore::DbContextOptionsBuilder const &amp; optionsBuilder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsBuilder" Type="Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
      </Parameters>
      <Docs>
        <param name="optionsBuilder"> The options builder to which the warnings configuration will be applied. </param>
        <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Default (Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Default(valuetype Microsoft.EntityFrameworkCore.WarningBehavior warningBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder.Default(Microsoft.EntityFrameworkCore.WarningBehavior)" />
      <MemberSignature Language="F#" Value="abstract member Default : Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder&#xA;override this.Default : Microsoft.EntityFrameworkCore.WarningBehavior -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" Usage="warningsConfigurationBuilder.Default warningBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfigurationBuilder ^ Default(Microsoft::EntityFrameworkCore::WarningBehavior warningBehavior);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfigurationBuilder Default(Microsoft::EntityFrameworkCore::WarningBehavior warningBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningBehavior" Type="Microsoft.EntityFrameworkCore.WarningBehavior" />
      </Parameters>
      <Docs>
        <param name="warningBehavior"> The desired behavior. </param>
        <summary>
                Sets the default behavior when a warning is generated.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Ignore (params Microsoft.Extensions.Logging.EventId[] eventIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Ignore(valuetype Microsoft.Extensions.Logging.EventId[] eventIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder.Ignore(Microsoft.Extensions.Logging.EventId[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Ignore (ParamArray eventIds As EventId()) As WarningsConfigurationBuilder" />
      <MemberSignature Language="F#" Value="abstract member Ignore : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder&#xA;override this.Ignore : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" Usage="warningsConfigurationBuilder.Ignore eventIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfigurationBuilder ^ Ignore(... cli::array &lt;Microsoft::Extensions::Logging::EventId&gt; ^ eventIds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventIds" Type="Microsoft.Extensions.Logging.EventId[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId" /> and 'RelationalEventId' for the warnings.
            </param>
        <summary>
                Causes nothing to happen when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Log (params Microsoft.Extensions.Logging.EventId[] eventIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Log(valuetype Microsoft.Extensions.Logging.EventId[] eventIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder.Log(Microsoft.Extensions.Logging.EventId[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Log (ParamArray eventIds As EventId()) As WarningsConfigurationBuilder" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder&#xA;override this.Log : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" Usage="warningsConfigurationBuilder.Log eventIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfigurationBuilder ^ Log(... cli::array &lt;Microsoft::Extensions::Logging::EventId&gt; ^ eventIds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventIds" Type="Microsoft.Extensions.Logging.EventId[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId" /> and 'RelationalEventId' for the warnings.
            </param>
        <summary>
                Causes a warning to be logged when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Throw (params Microsoft.Extensions.Logging.EventId[] eventIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder Throw(valuetype Microsoft.Extensions.Logging.EventId[] eventIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder.Throw(Microsoft.Extensions.Logging.EventId[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Throw (ParamArray eventIds As EventId()) As WarningsConfigurationBuilder" />
      <MemberSignature Language="F#" Value="abstract member Throw : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder&#xA;override this.Throw : Microsoft.Extensions.Logging.EventId[] -&gt; Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" Usage="warningsConfigurationBuilder.Throw eventIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Diagnostics::WarningsConfigurationBuilder ^ Throw(... cli::array &lt;Microsoft::Extensions::Logging::EventId&gt; ^ eventIds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventIds" Type="Microsoft.Extensions.Logging.EventId[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.CoreEventId" /> and 'RelationalEventId' for the warnings.
            </param>
        <summary>
                Causes an exception to be thrown when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>