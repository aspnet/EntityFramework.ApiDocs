<Type Name="ForeignKeyIndexConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention">
  <TypeSignature Language="C#" Value="public class ForeignKeyIndexConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ForeignKeyIndexConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class ForeignKeyIndexConvention&#xA;Implements IBaseTypeChangedConvention, IForeignKeyAddedConvention, IForeignKeyRemovedConvention, IForeignKeyUniquenessChangedConvention, IIndexAddedConvention, IIndexRemovedConvention, IIndexUniquenessChangedConvention, IKeyAddedConvention, IKeyRemovedConvention" />
  <TypeSignature Language="F#" Value="type ForeignKeyIndexConvention = class&#xA;    interface IForeignKeyAddedConvention&#xA;    interface IForeignKeyRemovedConvention&#xA;    interface IForeignKeyUniquenessChangedConvention&#xA;    interface IKeyAddedConvention&#xA;    interface IKeyRemovedConvention&#xA;    interface IBaseTypeChangedConvention&#xA;    interface IIndexAddedConvention&#xA;    interface IIndexRemovedConvention&#xA;    interface IIndexUniquenessChangedConvention" />
  <TypeSignature Language="C++ CLI" Value="public ref class ForeignKeyIndexConvention : Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IBaseTypeChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyRemovedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyUniquenessChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexRemovedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexUniquenessChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IKeyAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IKeyRemovedConvention" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ForeignKeyIndexConvention : Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IBaseTypeChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyRemovedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyUniquenessChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexRemovedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexUniquenessChangedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IKeyAddedConvention, Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IKeyRemovedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForeignKeyIndexConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ForeignKeyIndexConvention();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ForeignKeyIndexConvention();" />
      <MemberSignature Language="C++ WINRT" Value=" ForeignKeyIndexConvention();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForeignKeyIndexConvention (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Model&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As IDiagnosticsLogger(Of DbLoggerCategory.Model))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Model&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention logger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ForeignKeyIndexConvention(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Model ^&gt; ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Model&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (indexBuilder As InternalIndexBuilder) As InternalIndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Usage="foreignKeyIndexConvention.Apply indexBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (keyBuilder As InternalKeyBuilder) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="foreignKeyIndexConvention.Apply keyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ keyBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder const &amp; keyBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="foreignKeyIndexConvention.Apply relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyAddedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual bool Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType oldBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Apply (entityTypeBuilder As InternalEntityTypeBuilder, oldBaseType As EntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool" Usage="foreignKeyIndexConvention.Apply (entityTypeBuilder, oldBaseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ oldBaseType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; oldBaseType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="oldBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit" Usage="foreignKeyIndexConvention.Apply (entityTypeBuilder, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::ForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::ForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Index index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Index index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit" Usage="foreignKeyIndexConvention.Apply (entityTypeBuilder, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Index ^ index);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Index const &amp; index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Index" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="F#" Value="abstract member Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.Apply : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="foreignKeyIndexConvention.Apply (entityTypeBuilder, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key ^ key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key const &amp; key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreIndexedBy">
      <MemberSignature Language="C#" Value="protected virtual bool AreIndexedBy (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, bool unique, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; existingIndexProperties, bool existingIndexUniqueness);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AreIndexedBy(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, bool unique, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; existingIndexProperties, bool existingIndexUniqueness) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.AreIndexedBy(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AreIndexedBy (properties As IReadOnlyList(Of Property), unique As Boolean, existingIndexProperties As IReadOnlyList(Of Property), existingIndexUniqueness As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AreIndexedBy : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool -&gt; bool&#xA;override this.AreIndexedBy : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool -&gt; bool" Usage="foreignKeyIndexConvention.AreIndexedBy (properties, unique, existingIndexProperties, existingIndexUniqueness)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AreIndexedBy(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::Property ^&gt; ^ properties, bool unique, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::Property ^&gt; ^ existingIndexProperties, bool existingIndexUniqueness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="unique" Type="System.Boolean" />
        <Parameter Name="existingIndexProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="existingIndexUniqueness" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="unique">To be added.</param>
        <param name="existingIndexProperties">To be added.</param>
        <param name="existingIndexUniqueness">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Internal.Index CreateIndex (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, bool unique, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.Index CreateIndex(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; properties, bool unique, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.CreateIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateIndex (properties As IReadOnlyList(Of Property), unique As Boolean, entityTypeBuilder As InternalEntityTypeBuilder) As Index" />
      <MemberSignature Language="F#" Value="abstract member CreateIndex : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Index&#xA;override this.CreateIndex : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * bool * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.Index" Usage="foreignKeyIndexConvention.CreateIndex (properties, unique, entityTypeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::Index ^ CreateIndex(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::Internal::Property ^&gt; ^ properties, bool unique, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.Index</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" />
        <Parameter Name="unique" Type="System.Boolean" />
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
      </Parameters>
      <Docs>
        <param name="properties">To be added.</param>
        <param name="unique">To be added.</param>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder IForeignKeyUniquenessChangedConvention.Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IForeignKeyUniquenessChangedConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Function Apply (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder Implements IForeignKeyUniquenessChangedConvention.Apply" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder) = Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyUniquenessChangedConvention::Apply;" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply">
      <MemberSignature Language="C#" Value="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder IForeignKeyUniquenessConvention.Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IForeignKeyUniquenessConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Function Apply (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder Implements IForeignKeyUniquenessConvention.Apply" />
      <MemberSignature Language="C++ CLI" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder) = Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IForeignKeyUniquenessConvention::Apply;" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention.Apply">
      <MemberSignature Language="C#" Value="bool IIndexUniquenessChangedConvention.Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention.Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IIndexUniquenessChangedConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Function Apply (indexBuilder As InternalIndexBuilder) As Boolean Implements IIndexUniquenessChangedConvention.Apply" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder) = Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexUniquenessChangedConvention::Apply;" />
      <MemberSignature Language="C++ WINRT" Value="bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply">
      <MemberSignature Language="C#" Value="bool IIndexUniquenessConvention.Apply (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IIndexUniquenessConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Function Apply (indexBuilder As InternalIndexBuilder) As Boolean Implements IIndexUniquenessConvention.Apply" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder) = Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IIndexUniquenessConvention::Apply;" />
      <MemberSignature Language="C++ WINRT" Value="bool Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>