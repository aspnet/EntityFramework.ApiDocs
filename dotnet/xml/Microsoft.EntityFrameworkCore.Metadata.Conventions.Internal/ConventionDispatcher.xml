<Type Name="ConventionDispatcher" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher">
  <TypeSignature Language="C#" Value="public class ConventionDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionDispatcher" />
  <TypeSignature Language="F#" Value="type ConventionDispatcher = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConventionDispatcher" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ConventionDispatcher" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConventionDispatcher (Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher : Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher conventionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConventionDispatcher(Microsoft::EntityFrameworkCore::Metadata::Conventions::ConventionSet ^ conventionSet);" />
      <MemberSignature Language="C++ WINRT" Value=" ConventionDispatcher(Microsoft::EntityFrameworkCore::Metadata::Conventions::ConventionSet const &amp; conventionSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conventionSet" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" />
      </Parameters>
      <Docs>
        <param name="conventionSet">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBaseEntityTypeChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnBaseEntityTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnBaseEntityTypeChanged (entityTypeBuilder As InternalEntityTypeBuilder, previousBaseType As EntityType) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnBaseEntityTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnBaseEntityTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnBaseEntityTypeChanged (entityTypeBuilder, previousBaseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ OnBaseEntityTypeChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ previousBaseType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder OnBaseEntityTypeChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; previousBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="previousBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBaseEntityTypeSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnBaseEntityTypeSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnBaseEntityTypeSet (entityTypeBuilder As InternalEntityTypeBuilder, previousBaseType As EntityType) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnBaseEntityTypeSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnBaseEntityTypeSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnBaseEntityTypeSet (entityTypeBuilder, previousBaseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ OnBaseEntityTypeSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ previousBaseType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder OnBaseEntityTypeSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; previousBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="previousBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAdded (entityTypeBuilder As InternalEntityTypeBuilder) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnEntityTypeAdded entityTypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ OnEntityTypeAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder OnEntityTypeAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnEntityTypeAnnotationChanged (entityTypeBuilder, name, annotation, oldAnnotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ OnEntityTypeAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, System::String ^ name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ oldAnnotation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation OnEntityTypeAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, std::wstring const &amp; name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; oldAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAnnotationSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAnnotationSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnEntityTypeAnnotationSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnEntityTypeAnnotationSet (entityTypeBuilder, name, annotation, oldAnnotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ OnEntityTypeAnnotationSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, System::String ^ name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ oldAnnotation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation OnEntityTypeAnnotationSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, std::wstring const &amp; name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; oldAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual bool OnEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool&#xA;override this.OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool" Usage="conventionDispatcher.OnEntityTypeIgnored (modelBuilder, name, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnEntityTypeIgnored(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ modelBuilder, System::String ^ name, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeMemberIgnored (entityTypeBuilder As InternalEntityTypeBuilder, ignoredMemberName As String) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnEntityTypeMemberIgnored (entityTypeBuilder, ignoredMemberName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ OnEntityTypeMemberIgnored(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, System::String ^ ignoredMemberName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder OnEntityTypeMemberIgnored(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, std::wstring const &amp; ignoredMemberName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="ignoredMemberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="ignoredMemberName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeRemoved">
      <MemberSignature Language="C#" Value="public virtual bool OnEntityTypeRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEntityTypeRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeRemoved (modelBuilder As InternalModelBuilder, type As EntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool&#xA;override this.OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool" Usage="conventionDispatcher.OnEntityTypeRemoved (modelBuilder, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnEntityTypeRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ modelBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType ^ type);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool OnEntityTypeRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder const &amp; modelBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::EntityType const &amp; type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyAdded (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyAdded relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnForeignKeyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnForeignKeyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyOwnershipChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyOwnershipChanged relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnForeignKeyOwnershipChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnForeignKeyOwnershipChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnForeignKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForeignKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit&#xA;override this.OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit" Usage="conventionDispatcher.OnForeignKeyRemoved (entityTypeBuilder, foreignKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnForeignKeyRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::ForeignKey ^ foreignKey);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OnForeignKeyRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::ForeignKey const &amp; foreignKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyUniquenessChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyUniquenessChanged relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnForeignKeyUniquenessChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnForeignKeyUniquenessChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder OnIndexAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder OnIndexAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexAdded (indexBuilder As InternalIndexBuilder) As InternalIndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&#xA;override this.OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Usage="conventionDispatcher.OnIndexAdded indexBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ OnIndexAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder OnIndexAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnIndexAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnIndexAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnIndexAnnotationChanged (indexBuilder, name, annotation, oldAnnotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ OnIndexAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder, System::String ^ name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ oldAnnotation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation OnIndexAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder, std::wstring const &amp; name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; oldAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnIndexRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Index index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnIndexRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Index index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)" />
      <MemberSignature Language="F#" Value="abstract member OnIndexRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit&#xA;override this.OnIndexRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit" Usage="conventionDispatcher.OnIndexRemoved (entityTypeBuilder, index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnIndexRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Index ^ index);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OnIndexRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Index const &amp; index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Index" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual bool OnIndexUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnIndexUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexUniquenessChanged (indexBuilder As InternalIndexBuilder) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; bool&#xA;override this.OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; bool" Usage="conventionDispatcher.OnIndexUniquenessChanged indexBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnIndexUniquenessChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder ^ indexBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool OnIndexUniquenessChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalIndexBuilder const &amp; indexBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyAdded (keyBuilder As InternalKeyBuilder) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="conventionDispatcher.OnKeyAdded keyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ OnKeyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ keyBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder OnKeyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder const &amp; keyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="conventionDispatcher.OnKeyRemoved (entityTypeBuilder, key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnKeyRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key ^ key);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OnKeyRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key const &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnModelAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnModelAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="F#" Value="abstract member OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnModelAnnotationChanged (modelBuilder, name, annotation, oldAnnotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ OnModelAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ modelBuilder, System::String ^ name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ oldAnnotation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation OnModelAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder const &amp; modelBuilder, std::wstring const &amp; name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; oldAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelBuilt">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelBuilt (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelBuilt(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelBuilt(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelBuilt (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelBuilt : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.OnModelBuilt : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="conventionDispatcher.OnModelBuilt modelBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ OnModelBuilt(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ modelBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder OnModelBuilt(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder const &amp; modelBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelInitialized">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelInitialized (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelInitialized(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelInitialized (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="conventionDispatcher.OnModelInitialized modelBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ OnModelInitialized(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder ^ modelBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder OnModelInitialized(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalModelBuilder const &amp; modelBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnNavigationAdded (relationshipBuilder, navigation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnNavigationAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Navigation ^ navigation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnNavigationAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Navigation const &amp; navigation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.MemberInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; unit&#xA;override this.OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; unit" Usage="conventionDispatcher.OnNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, memberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnNavigationRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ sourceEntityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ targetEntityTypeBuilder, System::String ^ navigationName, System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="navigationName" Type="System.String" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; unit&#xA;override this.OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; unit" Usage="conventionDispatcher.OnNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, propertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnNavigationRemoved(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ sourceEntityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ targetEntityTypeBuilder, System::String ^ navigationName, System::Reflection::PropertyInfo ^ propertyInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="navigationName" Type="System.String" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrimaryKeyChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPrimaryKeyChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPrimaryKeyChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPrimaryKeyChanged (entityTypeBuilder As InternalEntityTypeBuilder, previousPrimaryKey As Key)" />
      <MemberSignature Language="F#" Value="abstract member OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="conventionDispatcher.OnPrimaryKeyChanged (entityTypeBuilder, previousPrimaryKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPrimaryKeyChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder ^ entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key ^ previousPrimaryKey);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void OnPrimaryKeyChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalEntityTypeBuilder const &amp; entityTypeBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key const &amp; previousPrimaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrimaryKeySet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnPrimaryKeySet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnPrimaryKeySet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeySet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrimaryKeySet (keyBuilder As InternalKeyBuilder, previousPrimaryKey As Key) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrimaryKeySet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.OnPrimaryKeySet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="conventionDispatcher.OnPrimaryKeySet (keyBuilder, previousPrimaryKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ OnPrimaryKeySet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder ^ keyBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key ^ previousPrimaryKey);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder OnPrimaryKeySet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalKeyBuilder const &amp; keyBuilder, Microsoft::EntityFrameworkCore::Metadata::Internal::Key const &amp; previousPrimaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrincipalEndChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrincipalEndChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrincipalEndChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnPrincipalEndChanged relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnPrincipalEndChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnPrincipalEndChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrincipalEndSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrincipalEndSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrincipalEndSet (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrincipalEndSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnPrincipalEndSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnPrincipalEndSet relationshipBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ OnPrincipalEndSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder ^ relationshipBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder OnPrincipalEndSet(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalRelationshipBuilder const &amp; relationshipBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyAdded (propertyBuilder As InternalPropertyBuilder) As InternalPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder&#xA;override this.OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Usage="conventionDispatcher.OnPropertyAdded propertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ OnPropertyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ propertyBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder OnPropertyAdded(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder const &amp; propertyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnPropertyAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnPropertyAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnPropertyAnnotationChanged (propertyBuilder, name, annotation, oldAnnotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ OnPropertyAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ propertyBuilder, System::String ^ name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation ^ oldAnnotation);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Infrastructure::Annotation OnPropertyAnnotationChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder const &amp; propertyBuilder, std::wstring const &amp; name, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; annotation, Microsoft::EntityFrameworkCore::Infrastructure::Annotation const &amp; oldAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyFieldChanged">
      <MemberSignature Language="C#" Value="public virtual bool OnPropertyFieldChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, System.Reflection.FieldInfo oldFieldInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPropertyFieldChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, class System.Reflection.FieldInfo oldFieldInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyFieldChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyFieldChanged (propertyBuilder As InternalPropertyBuilder, oldFieldInfo As FieldInfo) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo -&gt; bool&#xA;override this.OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo -&gt; bool" Usage="conventionDispatcher.OnPropertyFieldChanged (propertyBuilder, oldFieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnPropertyFieldChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ propertyBuilder, System::Reflection::FieldInfo ^ oldFieldInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" />
        <Parameter Name="oldFieldInfo" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="oldFieldInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyNullableChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyNullableChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyNullableChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyNullableChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyNullableChanged (propertyBuilder As InternalPropertyBuilder) As InternalPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder&#xA;override this.OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Usage="conventionDispatcher.OnPropertyNullableChanged propertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ OnPropertyNullableChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder ^ propertyBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder OnPropertyNullableChanged(Microsoft::EntityFrameworkCore::Metadata::Internal::InternalPropertyBuilder const &amp; propertyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartBatch">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch StartBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch StartBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.StartBatch" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartBatch () As IConventionBatch" />
      <MemberSignature Language="F#" Value="abstract member StartBatch : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch&#xA;override this.StartBatch : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch" Usage="conventionDispatcher.StartBatch " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::IConventionBatch ^ StartBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tracker">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker Tracker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker Tracker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.Tracker" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Tracker As MetadataTracker" />
      <MemberSignature Language="F#" Value="member this.Tracker : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.Tracker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::MetadataTracker ^ Tracker { Microsoft::EntityFrameworkCore::Metadata::Conventions::Internal::MetadataTracker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>