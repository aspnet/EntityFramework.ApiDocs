<Type Name="SharedTableEntryMap&lt;TValue&gt;" FullName="Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public class SharedTableEntryMap&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SharedTableEntryMap`1&lt;TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SharedTableEntryMap(Of TValue)" />
  <TypeSignature Language="F#" Value="type SharedTableEntryMap&lt;'Value&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class SharedTableEntryMap" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TValue&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SharedTableEntryMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SharedTableEntryMap (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; principals, System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; dependents, string name, string schema, Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryValueFactory&lt;TValue&gt; createElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; principals, class System.Collections.Generic.IReadOnlyDictionary`2&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; dependents, string name, string schema, class Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryValueFactory`1&lt;!TValue&gt; createElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.Collections.Generic.IReadOnlyDictionary{Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType}},System.String,System.String,Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryValueFactory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateManager As IStateManager, principals As IReadOnlyDictionary(Of IEntityType, IReadOnlyList(Of IEntityType)), dependents As IReadOnlyDictionary(Of IEntityType, IReadOnlyList(Of IEntityType)), name As String, schema As String, createElement As SharedTableEntryValueFactory(Of TValue))" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; * System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt; * string * string * Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryValueFactory&lt;'Value&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt;" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt; (stateManager, principals, dependents, name, schema, createElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SharedTableEntryMap(Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, System::Collections::Generic::IReadOnlyDictionary&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^&gt; ^&gt; ^ principals, System::Collections::Generic::IReadOnlyDictionary&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^, System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^&gt; ^&gt; ^ dependents, System::String ^ name, System::String ^ schema, Microsoft::EntityFrameworkCore::Update::Internal::SharedTableEntryValueFactory&lt;TValue&gt; ^ createElement);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="principals" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt;" />
        <Parameter Name="dependents" Type="System.Collections.Generic.IReadOnlyDictionary&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="createElement" Type="Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryValueFactory&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="stateManager">To be added.</param>
        <param name="principals">To be added.</param>
        <param name="dependents">To be added.</param>
        <param name="name">To be added.</param>
        <param name="schema">To be added.</param>
        <param name="createElement">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSharedTableEntryMapFactories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;ValueTuple&lt;string,string&gt;,Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;TValue&gt;&gt; CreateSharedTableEntryMapFactories (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;valuetype System.ValueTuple`2&lt;string, string&gt;, class Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory`1&lt;!TValue&gt;&gt; CreateSharedTableEntryMapFactories(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.CreateSharedTableEntryMapFactories(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSharedTableEntryMapFactories (model As IModel, stateManager As IStateManager) As Dictionary(Of ValueTuple(Of String, String), SharedTableEntryMapFactory(Of TValue))" />
      <MemberSignature Language="F#" Value="static member CreateSharedTableEntryMapFactories : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager -&gt; System.Collections.Generic.Dictionary&lt;ValueTuple&lt;string, string&gt;, Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;'Value&gt;&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt;.CreateSharedTableEntryMapFactories (model, stateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Dictionary&lt;ValueTuple&lt;System::String ^, System::String ^&gt;, Microsoft::EntityFrameworkCore::Update::Internal::SharedTableEntryMapFactory&lt;TValue&gt; ^&gt; ^ CreateSharedTableEntryMapFactories(Microsoft::EntityFrameworkCore::Metadata::IModel ^ model, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.ValueTuple&lt;System.String,System.String&gt;,Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;TValue&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="stateManager">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSharedTableEntryMapFactory">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;TValue&gt; CreateSharedTableEntryMapFactory (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, string tableName, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory`1&lt;!TValue&gt; CreateSharedTableEntryMapFactory(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; entityTypes, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager stateManager, string tableName, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.CreateSharedTableEntryMapFactory(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSharedTableEntryMapFactory (entityTypes As IReadOnlyList(Of IEntityType), stateManager As IStateManager, tableName As String, schema As String) As SharedTableEntryMapFactory(Of TValue)" />
      <MemberSignature Language="F#" Value="static member CreateSharedTableEntryMapFactory : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager * string * string -&gt; Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;'Value&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt;.CreateSharedTableEntryMapFactory (entityTypes, stateManager, tableName, schema)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::EntityFrameworkCore::Update::Internal::SharedTableEntryMapFactory&lt;TValue&gt; ^ CreateSharedTableEntryMapFactory(System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^&gt; ^ entityTypes, Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^ stateManager, System::String ^ tableName, System::String ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMapFactory&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypes" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" />
        <Parameter Name="stateManager" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager" />
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityTypes">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="tableName">To be added.</param>
        <param name="schema">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; GetDependents (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; GetDependents(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.GetDependents(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDependents (entityType As IEntityType) As IReadOnlyList(Of IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GetDependents : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&#xA;override this.GetDependents : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" Usage="sharedTableEntryMap.GetDependents entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^&gt; ^ GetDependents(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddValue">
      <MemberSignature Language="C#" Value="public virtual TValue GetOrAddValue (Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue GetOrAddValue(class Microsoft.EntityFrameworkCore.Update.IUpdateEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.GetOrAddValue(Microsoft.EntityFrameworkCore.Update.IUpdateEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrAddValue (entry As IUpdateEntry) As TValue" />
      <MemberSignature Language="F#" Value="abstract member GetOrAddValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; 'Value&#xA;override this.GetOrAddValue : Microsoft.EntityFrameworkCore.Update.IUpdateEntry -&gt; 'Value" Usage="sharedTableEntryMap.GetOrAddValue entry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TValue GetOrAddValue(Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ entry);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TValue GetOrAddValue(Microsoft::EntityFrameworkCore::Update::IUpdateEntry ^ entry);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TValue GetOrAddValue(Microsoft::EntityFrameworkCore::Update::IUpdateEntry const &amp; entry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.Update.IUpdateEntry" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrincipals">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; GetPrincipals (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt; GetPrincipals(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.GetPrincipals(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrincipals (entityType As IEntityType) As IReadOnlyList(Of IEntityType)" />
      <MemberSignature Language="F#" Value="abstract member GetPrincipals : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;&#xA;override this.GetPrincipals : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;" Usage="sharedTableEntryMap.GetPrincipals entityType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::EntityFrameworkCore::Metadata::IEntityType ^&gt; ^ GetPrincipals(Microsoft::EntityFrameworkCore::Metadata::IEntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As IEnumerable(Of TValue)" />
      <MemberSignature Language="F#" Value="member this.Values : seq&lt;'Value&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.SharedTableEntryMap&lt;'Value&gt;.Values" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>