<Type Name="CommandBatchPreparerDependencies" FullName="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies">
  <TypeSignature Language="C#" Value="public sealed class CommandBatchPreparerDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandBatchPreparerDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandBatchPreparerDependencies" />
  <TypeSignature Language="F#" Value="type CommandBatchPreparerDependencies = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandBatchPreparerDependencies sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class CommandBatchPreparerDependencies sealed" />
  <TypeSignature Language="C++ WINRT" Value="class CommandBatchPreparerDependencies sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandBatchPreparerDependencies (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger, Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory, class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory, class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer, class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource, class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager, class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (modificationCommandBatchFactory As IModificationCommandBatchFactory, parameterNameGeneratorFactory As IParameterNameGeneratorFactory, modificationCommandComparer As IComparer(Of ModificationCommand), keyValueIndexFactorySource As IKeyValueIndexFactorySource, stateManager As Func(Of IStateManager), loggingOptions As ILoggingOptions, updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update), options As IDbContextOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory * Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory * System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; * Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource * Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; * Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="new Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies (modificationCommandBatchFactory, parameterNameGeneratorFactory, modificationCommandComparer, keyValueIndexFactorySource, stateManager, loggingOptions, updateLogger, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandBatchPreparerDependencies(Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ modificationCommandBatchFactory, Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory, System::Collections::Generic::IComparer&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ modificationCommandComparer, Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ keyValueIndexFactorySource, Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ stateManager, Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions, Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ updateLogger, Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" />
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" />
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" />
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" />
        <Parameter Name="stateManager" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" />
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory">To be added.</param>
        <param name="parameterNameGeneratorFactory">To be added.</param>
        <param name="modificationCommandComparer">To be added.</param>
        <param name="keyValueIndexFactorySource">To be added.</param>
        <param name="stateManager">To be added.</param>
        <param name="loggingOptions">To be added.</param>
        <param name="updateLogger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer" />.
                </para>
          <para>
                    This API supports the Entity Framework Core infrastructure and is not intended to be used
                    directly from your code. This API may change or be removed in future releases.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValueIndexFactorySource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource KeyValueIndexFactorySource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource KeyValueIndexFactorySource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.KeyValueIndexFactorySource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValueIndexFactorySource As IKeyValueIndexFactorySource" />
      <MemberSignature Language="F#" Value="member this.KeyValueIndexFactorySource : Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.KeyValueIndexFactorySource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ KeyValueIndexFactorySource { Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ KeyValueIndexFactorySource { Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions LoggingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.LoggingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoggingOptions As ILoggingOptions" />
      <MemberSignature Language="F#" Value="member this.LoggingOptions : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.LoggingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ LoggingOptions { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ LoggingOptions { Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandBatchFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory ModificationCommandBatchFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory ModificationCommandBatchFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandBatchFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModificationCommandBatchFactory As IModificationCommandBatchFactory" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandBatchFactory : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandBatchFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ ModificationCommandBatchFactory { Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ ModificationCommandBatchFactory { Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModificationCommandComparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommandComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; ModificationCommandComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandComparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModificationCommandComparer As IComparer(Of ModificationCommand)" />
      <MemberSignature Language="F#" Value="member this.ModificationCommandComparer : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ModificationCommandComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ ModificationCommandComparer { System::Collections::Generic::IComparer&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As IDbContextOptions" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ Options { Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ Options { Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterNameGeneratorFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory ParameterNameGeneratorFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ParameterNameGeneratorFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterNameGeneratorFactory As IParameterNameGeneratorFactory" />
      <MemberSignature Language="F#" Value="member this.ParameterNameGeneratorFactory : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.ParameterNameGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ ParameterNameGeneratorFactory { Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ ParameterNameGeneratorFactory { Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateManager">
      <MemberSignature Language="C#" Value="public Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; StateManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; StateManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.StateManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StateManager As Func(Of IStateManager)" />
      <MemberSignature Language="F#" Value="member this.StateManager : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.StateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ StateManager { Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; UpdateLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; UpdateLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.UpdateLogger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)" />
      <MemberSignature Language="F#" Value="member this.UpdateLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt;" Usage="Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.UpdateLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ UpdateLogger { Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; updateLogger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Update&gt; updateLogger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Update})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (updateLogger As IDiagnosticsLogger(Of DbLoggerCategory.Update)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Update&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With updateLogger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::IDiagnosticsLogger&lt;Microsoft::EntityFrameworkCore::DbLoggerCategory::Update ^&gt; ^ updateLogger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Update&gt;" />
      </Parameters>
      <Docs>
        <param name="updateLogger"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions loggingOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (loggingOptions As ILoggingOptions) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With loggingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions ^ loggingOptions);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies With(Microsoft::EntityFrameworkCore::Diagnostics::ILoggingOptions const &amp; loggingOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggingOptions" Type="Microsoft.EntityFrameworkCore.Diagnostics.ILoggingOptions" />
      </Parameters>
      <Docs>
        <param name="loggingOptions"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (options As IDbContextOptions) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions ^ options);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies With(Microsoft::EntityFrameworkCore::Infrastructure::IDbContextOptions const &amp; options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions" />
      </Parameters>
      <Docs>
        <param name="options"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory parameterNameGeneratorFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (parameterNameGeneratorFactory As IParameterNameGeneratorFactory) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With parameterNameGeneratorFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory ^ parameterNameGeneratorFactory);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies With(Microsoft::EntityFrameworkCore::Storage::IParameterNameGeneratorFactory const &amp; parameterNameGeneratorFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterNameGeneratorFactory" Type="Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" />
      </Parameters>
      <Docs>
        <param name="parameterNameGeneratorFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory modificationCommandBatchFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (modificationCommandBatchFactory As IModificationCommandBatchFactory) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With modificationCommandBatchFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ modificationCommandBatchFactory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory ^ modificationCommandBatchFactory);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies With(Microsoft::EntityFrameworkCore::Update::IModificationCommandBatchFactory const &amp; modificationCommandBatchFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommandBatchFactory" Type="Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" />
      </Parameters>
      <Docs>
        <param name="modificationCommandBatchFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource keyValueIndexFactorySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (keyValueIndexFactorySource As IKeyValueIndexFactorySource) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With keyValueIndexFactorySource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ keyValueIndexFactorySource);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource ^ keyValueIndexFactorySource);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies With(Microsoft::EntityFrameworkCore::Update::Internal::IKeyValueIndexFactorySource const &amp; keyValueIndexFactorySource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValueIndexFactorySource" Type="Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource" />
      </Parameters>
      <Docs>
        <param name="keyValueIndexFactorySource"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class System.Collections.Generic.IComparer`1&lt;class Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; modificationCommandComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (modificationCommandComparer As IComparer(Of ModificationCommand)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With modificationCommandComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(System::Collections::Generic::IComparer&lt;Microsoft::EntityFrameworkCore::Update::ModificationCommand ^&gt; ^ modificationCommandComparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationCommandComparer" Type="System.Collections.Generic.IComparer&lt;Microsoft.EntityFrameworkCore.Update.ModificationCommand&gt;" />
      </Parameters>
      <Docs>
        <param name="modificationCommandComparer"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With (Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies With(class System.Func`1&lt;class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; stateManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies.With(System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager})" />
      <MemberSignature Language="VB.NET" Value="Public Function With (stateManager As Func(Of IStateManager)) As CommandBatchPreparerDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt; -&gt; Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies" Usage="commandBatchPreparerDependencies.With stateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::EntityFrameworkCore::Update::Internal::CommandBatchPreparerDependencies ^ With(Func&lt;Microsoft::EntityFrameworkCore::ChangeTracking::Internal::IStateManager ^&gt; ^ stateManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparerDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateManager" Type="System.Func&lt;Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager&gt;" />
      </Parameters>
      <Docs>
        <param name="stateManager"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>